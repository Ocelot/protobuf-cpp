// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_clientserver_2.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "steammessages_clientserver_2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace steam {
class CMsgClientUCMAddScreenshot_TagDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMAddScreenshot_Tag> {
} _CMsgClientUCMAddScreenshot_Tag_default_instance_;
class CMsgClientUCMAddScreenshotDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMAddScreenshot> {
} _CMsgClientUCMAddScreenshot_default_instance_;
class CMsgClientUCMAddScreenshotResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMAddScreenshotResponse> {
} _CMsgClientUCMAddScreenshotResponse_default_instance_;
class CMsgClientUCMDeleteScreenshotDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMDeleteScreenshot> {
} _CMsgClientUCMDeleteScreenshot_default_instance_;
class CMsgClientUCMDeleteScreenshotResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMDeleteScreenshotResponse> {
} _CMsgClientUCMDeleteScreenshotResponse_default_instance_;
class CMsgClientUCMPublishFileDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishFile> {
} _CMsgClientUCMPublishFile_default_instance_;
class CMsgClientUCMPublishFileResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishFileResponse> {
} _CMsgClientUCMPublishFileResponse_default_instance_;
class CMsgClientUCMUpdatePublishedFile_KeyValueTagDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMUpdatePublishedFile_KeyValueTag> {
} _CMsgClientUCMUpdatePublishedFile_KeyValueTag_default_instance_;
class CMsgClientUCMUpdatePublishedFile_AdditionalPreviewDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMUpdatePublishedFile_AdditionalPreview> {
} _CMsgClientUCMUpdatePublishedFile_AdditionalPreview_default_instance_;
class CMsgClientUCMUpdatePublishedFileDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMUpdatePublishedFile> {
} _CMsgClientUCMUpdatePublishedFile_default_instance_;
class CMsgClientUCMUpdatePublishedFileResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMUpdatePublishedFileResponse> {
} _CMsgClientUCMUpdatePublishedFileResponse_default_instance_;
class CMsgClientUCMDeletePublishedFileDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMDeletePublishedFile> {
} _CMsgClientUCMDeletePublishedFile_default_instance_;
class CMsgClientUCMDeletePublishedFileResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMDeletePublishedFileResponse> {
} _CMsgClientUCMDeletePublishedFileResponse_default_instance_;
class CMsgClientUCMEnumerateUserPublishedFilesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserPublishedFiles> {
} _CMsgClientUCMEnumerateUserPublishedFiles_default_instance_;
class CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileIdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId> {
} _CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_default_instance_;
class CMsgClientUCMEnumerateUserPublishedFilesResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserPublishedFilesResponse> {
} _CMsgClientUCMEnumerateUserPublishedFilesResponse_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFiles> {
} _CMsgClientUCMEnumerateUserSubscribedFiles_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileIdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId> {
} _CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesResponse> {
} _CMsgClientUCMEnumerateUserSubscribedFilesResponse_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates> {
} _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileIdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId> {
} _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_default_instance_;
class CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse> {
} _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_default_instance_;
class CMsgClientUCMPublishedFileSubscribedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishedFileSubscribed> {
} _CMsgClientUCMPublishedFileSubscribed_default_instance_;
class CMsgClientUCMPublishedFileUnsubscribedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishedFileUnsubscribed> {
} _CMsgClientUCMPublishedFileUnsubscribed_default_instance_;
class CMsgClientUCMPublishedFileDeletedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishedFileDeleted> {
} _CMsgClientUCMPublishedFileDeleted_default_instance_;
class CMsgClientUCMPublishedFileUpdatedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMPublishedFileUpdated> {
} _CMsgClientUCMPublishedFileUpdated_default_instance_;
class CMsgClientWorkshopItemChangesRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemChangesRequest> {
} _CMsgClientWorkshopItemChangesRequest_default_instance_;
class CMsgClientWorkshopItemChangesResponse_WorkshopItemInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo> {
} _CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_default_instance_;
class CMsgClientWorkshopItemChangesResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemChangesResponse> {
} _CMsgClientWorkshopItemChangesResponse_default_instance_;
class CMsgClientWorkshopItemInfoRequest_WorkshopItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemInfoRequest_WorkshopItem> {
} _CMsgClientWorkshopItemInfoRequest_WorkshopItem_default_instance_;
class CMsgClientWorkshopItemInfoRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemInfoRequest> {
} _CMsgClientWorkshopItemInfoRequest_default_instance_;
class CMsgClientWorkshopItemInfoResponse_WorkshopItemInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo> {
} _CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_default_instance_;
class CMsgClientWorkshopItemInfoResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientWorkshopItemInfoResponse> {
} _CMsgClientWorkshopItemInfoResponse_default_instance_;
class CMsgClientUCMGetPublishedFilesForUserDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMGetPublishedFilesForUser> {
} _CMsgClientUCMGetPublishedFilesForUser_default_instance_;
class CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileIdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId> {
} _CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_default_instance_;
class CMsgClientUCMGetPublishedFilesForUserResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMGetPublishedFilesForUserResponse> {
} _CMsgClientUCMGetPublishedFilesForUserResponse_default_instance_;
class CMsgClientUCMSetUserPublishedFileActionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMSetUserPublishedFileAction> {
} _CMsgClientUCMSetUserPublishedFileAction_default_instance_;
class CMsgClientUCMSetUserPublishedFileActionResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMSetUserPublishedFileActionResponse> {
} _CMsgClientUCMSetUserPublishedFileActionResponse_default_instance_;
class CMsgClientUCMEnumeratePublishedFilesByUserActionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumeratePublishedFilesByUserAction> {
} _CMsgClientUCMEnumeratePublishedFilesByUserAction_default_instance_;
class CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileIdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId> {
} _CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_default_instance_;
class CMsgClientUCMEnumeratePublishedFilesByUserActionResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUCMEnumeratePublishedFilesByUserActionResponse> {
} _CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_default_instance_;
class CMsgClientScreenshotsChangedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientScreenshotsChanged> {
} _CMsgClientScreenshotsChanged_default_instance_;
class CMsgClientUpdateUserGameInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUpdateUserGameInfo> {
} _CMsgClientUpdateUserGameInfo_default_instance_;
class CMsgClientRichPresenceUploadDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRichPresenceUpload> {
} _CMsgClientRichPresenceUpload_default_instance_;
class CMsgClientRichPresenceRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRichPresenceRequest> {
} _CMsgClientRichPresenceRequest_default_instance_;
class CMsgClientRichPresenceInfo_RichPresenceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRichPresenceInfo_RichPresence> {
} _CMsgClientRichPresenceInfo_RichPresence_default_instance_;
class CMsgClientRichPresenceInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRichPresenceInfo> {
} _CMsgClientRichPresenceInfo_default_instance_;
class CMsgClientCheckFileSignatureDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckFileSignature> {
} _CMsgClientCheckFileSignature_default_instance_;
class CMsgClientCheckFileSignatureResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckFileSignatureResponse> {
} _CMsgClientCheckFileSignatureResponse_default_instance_;
class CMsgClientReadMachineAuthDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientReadMachineAuth> {
} _CMsgClientReadMachineAuth_default_instance_;
class CMsgClientReadMachineAuthResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientReadMachineAuthResponse> {
} _CMsgClientReadMachineAuthResponse_default_instance_;
class CMsgClientUpdateMachineAuthDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUpdateMachineAuth> {
} _CMsgClientUpdateMachineAuth_default_instance_;
class CMsgClientUpdateMachineAuthResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUpdateMachineAuthResponse> {
} _CMsgClientUpdateMachineAuthResponse_default_instance_;
class CMsgClientRequestMachineAuthDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestMachineAuth> {
} _CMsgClientRequestMachineAuth_default_instance_;
class CMsgClientRequestMachineAuthResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestMachineAuthResponse> {
} _CMsgClientRequestMachineAuthResponse_default_instance_;
class CMsgClientRegisterKeyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRegisterKey> {
} _CMsgClientRegisterKey_default_instance_;
class CMsgClientPurchaseResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPurchaseResponse> {
} _CMsgClientPurchaseResponse_default_instance_;
class CMsgClientActivateOEMLicenseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientActivateOEMLicense> {
} _CMsgClientActivateOEMLicense_default_instance_;
class CMsgClientRegisterOEMMachineDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRegisterOEMMachine> {
} _CMsgClientRegisterOEMMachine_default_instance_;
class CMsgClientRegisterOEMMachineResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRegisterOEMMachineResponse> {
} _CMsgClientRegisterOEMMachineResponse_default_instance_;
class CMsgClientPurchaseWithMachineIDDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPurchaseWithMachineID> {
} _CMsgClientPurchaseWithMachineID_default_instance_;
class CMsgTrading_InitiateTradeRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgTrading_InitiateTradeRequest> {
} _CMsgTrading_InitiateTradeRequest_default_instance_;
class CMsgTrading_InitiateTradeResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgTrading_InitiateTradeResponse> {
} _CMsgTrading_InitiateTradeResponse_default_instance_;
class CMsgTrading_CancelTradeRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgTrading_CancelTradeRequest> {
} _CMsgTrading_CancelTradeRequest_default_instance_;
class CMsgTrading_StartSessionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgTrading_StartSession> {
} _CMsgTrading_StartSession_default_instance_;
class CMsgClientEmailChangeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientEmailChange> {
} _CMsgClientEmailChange_default_instance_;
class CMsgClientEmailChangeResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientEmailChangeResponse> {
} _CMsgClientEmailChangeResponse_default_instance_;
class CMsgClientGetCDNAuthTokenDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetCDNAuthToken> {
} _CMsgClientGetCDNAuthToken_default_instance_;
class CMsgClientGetDepotDecryptionKeyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetDepotDecryptionKey> {
} _CMsgClientGetDepotDecryptionKey_default_instance_;
class CMsgClientGetDepotDecryptionKeyResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetDepotDecryptionKeyResponse> {
} _CMsgClientGetDepotDecryptionKeyResponse_default_instance_;
class CMsgClientCheckAppBetaPasswordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckAppBetaPassword> {
} _CMsgClientCheckAppBetaPassword_default_instance_;
class CMsgClientCheckAppBetaPasswordResponse_BetaPasswordDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckAppBetaPasswordResponse_BetaPassword> {
} _CMsgClientCheckAppBetaPasswordResponse_BetaPassword_default_instance_;
class CMsgClientCheckAppBetaPasswordResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCheckAppBetaPasswordResponse> {
} _CMsgClientCheckAppBetaPasswordResponse_default_instance_;
class CMsgClientUpdateAppJobReportDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUpdateAppJobReport> {
} _CMsgClientUpdateAppJobReport_default_instance_;
class CMsgClientDPContentStatsReportDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPContentStatsReport> {
} _CMsgClientDPContentStatsReport_default_instance_;
class CMsgClientGetCDNAuthTokenResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetCDNAuthTokenResponse> {
} _CMsgClientGetCDNAuthTokenResponse_default_instance_;
class CMsgDownloadRateStatistics_StatsInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgDownloadRateStatistics_StatsInfo> {
} _CMsgDownloadRateStatistics_StatsInfo_default_instance_;
class CMsgDownloadRateStatisticsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgDownloadRateStatistics> {
} _CMsgDownloadRateStatistics_default_instance_;
class CMsgClientRequestAccountDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestAccountData> {
} _CMsgClientRequestAccountData_default_instance_;
class CMsgClientRequestAccountDataResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestAccountDataResponse> {
} _CMsgClientRequestAccountDataResponse_default_instance_;
class CMsgClientUGSGetGlobalStatsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUGSGetGlobalStats> {
} _CMsgClientUGSGetGlobalStats_default_instance_;
class CMsgClientUGSGetGlobalStatsResponse_Day_StatDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUGSGetGlobalStatsResponse_Day_Stat> {
} _CMsgClientUGSGetGlobalStatsResponse_Day_Stat_default_instance_;
class CMsgClientUGSGetGlobalStatsResponse_DayDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUGSGetGlobalStatsResponse_Day> {
} _CMsgClientUGSGetGlobalStatsResponse_Day_default_instance_;
class CMsgClientUGSGetGlobalStatsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUGSGetGlobalStatsResponse> {
} _CMsgClientUGSGetGlobalStatsResponse_default_instance_;
class CMsgGameServerData_PlayerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerData_Player> {
} _CMsgGameServerData_Player_default_instance_;
class CMsgGameServerDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerData> {
} _CMsgGameServerData_default_instance_;
class CMsgGameServerRemoveDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerRemove> {
} _CMsgGameServerRemove_default_instance_;
class CMsgClientGMSServerQueryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGMSServerQuery> {
} _CMsgClientGMSServerQuery_default_instance_;
class CMsgGMSClientServerQueryResponse_ServerDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGMSClientServerQueryResponse_Server> {
} _CMsgGMSClientServerQueryResponse_Server_default_instance_;
class CMsgGMSClientServerQueryResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGMSClientServerQueryResponse> {
} _CMsgGMSClientServerQueryResponse_default_instance_;
class CMsgGameServerOutOfDateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerOutOfDate> {
} _CMsgGameServerOutOfDate_default_instance_;
class CMsgClientRedeemGuestPassDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRedeemGuestPass> {
} _CMsgClientRedeemGuestPass_default_instance_;
class CMsgClientRedeemGuestPassResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRedeemGuestPassResponse> {
} _CMsgClientRedeemGuestPassResponse_default_instance_;
class CMsgClientGetClanActivityCountsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetClanActivityCounts> {
} _CMsgClientGetClanActivityCounts_default_instance_;
class CMsgClientGetClanActivityCountsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetClanActivityCountsResponse> {
} _CMsgClientGetClanActivityCountsResponse_default_instance_;
class CMsgClientOGSReportStringDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientOGSReportString> {
} _CMsgClientOGSReportString_default_instance_;
class CMsgClientOGSReportBugDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientOGSReportBug> {
} _CMsgClientOGSReportBug_default_instance_;
class CMsgGSAssociateWithClanDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSAssociateWithClan> {
} _CMsgGSAssociateWithClan_default_instance_;
class CMsgGSAssociateWithClanResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSAssociateWithClanResponse> {
} _CMsgGSAssociateWithClanResponse_default_instance_;
class CMsgGSComputeNewPlayerCompatibilityDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSComputeNewPlayerCompatibility> {
} _CMsgGSComputeNewPlayerCompatibility_default_instance_;
class CMsgGSComputeNewPlayerCompatibilityResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGSComputeNewPlayerCompatibilityResponse> {
} _CMsgGSComputeNewPlayerCompatibilityResponse_default_instance_;
class CMsgClientSentLogsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSentLogs> {
} _CMsgClientSentLogs_default_instance_;
class CMsgGCClientDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGCClient> {
} _CMsgGCClient_default_instance_;
class CMsgClientRequestFreeLicenseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestFreeLicense> {
} _CMsgClientRequestFreeLicense_default_instance_;
class CMsgClientRequestFreeLicenseResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestFreeLicenseResponse> {
} _CMsgClientRequestFreeLicenseResponse_default_instance_;
class CMsgDRMDownloadRequestWithCrashDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgDRMDownloadRequestWithCrashData> {
} _CMsgDRMDownloadRequestWithCrashData_default_instance_;
class CMsgDRMDownloadResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgDRMDownloadResponse> {
} _CMsgDRMDownloadResponse_default_instance_;
class CMsgDRMFinalResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgDRMFinalResult> {
} _CMsgDRMFinalResult_default_instance_;
class CMsgClientDPCheckSpecialSurveyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPCheckSpecialSurvey> {
} _CMsgClientDPCheckSpecialSurvey_default_instance_;
class CMsgClientDPCheckSpecialSurveyResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPCheckSpecialSurveyResponse> {
} _CMsgClientDPCheckSpecialSurveyResponse_default_instance_;
class CMsgClientDPSendSpecialSurveyResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPSendSpecialSurveyResponse> {
} _CMsgClientDPSendSpecialSurveyResponse_default_instance_;
class CMsgClientDPSendSpecialSurveyResponseReplyDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDPSendSpecialSurveyResponseReply> {
} _CMsgClientDPSendSpecialSurveyResponseReply_default_instance_;
class CMsgClientRequestForgottenPasswordEmailDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestForgottenPasswordEmail> {
} _CMsgClientRequestForgottenPasswordEmail_default_instance_;
class CMsgClientRequestForgottenPasswordEmailResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestForgottenPasswordEmailResponse> {
} _CMsgClientRequestForgottenPasswordEmailResponse_default_instance_;
class CMsgClientItemAnnouncementsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientItemAnnouncements> {
} _CMsgClientItemAnnouncements_default_instance_;
class CMsgClientRequestItemAnnouncementsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestItemAnnouncements> {
} _CMsgClientRequestItemAnnouncements_default_instance_;
class CMsgClientUserNotifications_NotificationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUserNotifications_Notification> {
} _CMsgClientUserNotifications_Notification_default_instance_;
class CMsgClientUserNotificationsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUserNotifications> {
} _CMsgClientUserNotifications_default_instance_;
class CMsgClientCommentNotificationsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCommentNotifications> {
} _CMsgClientCommentNotifications_default_instance_;
class CMsgClientRequestCommentNotificationsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestCommentNotifications> {
} _CMsgClientRequestCommentNotifications_default_instance_;
class CMsgClientOfflineMessageNotificationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientOfflineMessageNotification> {
} _CMsgClientOfflineMessageNotification_default_instance_;
class CMsgClientRequestOfflineMessageCountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientRequestOfflineMessageCount> {
} _CMsgClientRequestOfflineMessageCount_default_instance_;
class CMsgClientChatGetFriendMessageHistoryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientChatGetFriendMessageHistory> {
} _CMsgClientChatGetFriendMessageHistory_default_instance_;
class CMsgClientChatGetFriendMessageHistoryResponse_FriendMessageDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage> {
} _CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_default_instance_;
class CMsgClientChatGetFriendMessageHistoryResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientChatGetFriendMessageHistoryResponse> {
} _CMsgClientChatGetFriendMessageHistoryResponse_default_instance_;
class CMsgClientChatGetFriendMessageHistoryForOfflineMessagesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientChatGetFriendMessageHistoryForOfflineMessages> {
} _CMsgClientChatGetFriendMessageHistoryForOfflineMessages_default_instance_;
class CMsgClientFSGetFriendsSteamLevelsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFSGetFriendsSteamLevels> {
} _CMsgClientFSGetFriendsSteamLevels_default_instance_;
class CMsgClientFSGetFriendsSteamLevelsResponse_FriendDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFSGetFriendsSteamLevelsResponse_Friend> {
} _CMsgClientFSGetFriendsSteamLevelsResponse_Friend_default_instance_;
class CMsgClientFSGetFriendsSteamLevelsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFSGetFriendsSteamLevelsResponse> {
} _CMsgClientFSGetFriendsSteamLevelsResponse_default_instance_;
class CMsgClientEmailAddrInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientEmailAddrInfo> {
} _CMsgClientEmailAddrInfo_default_instance_;
class CMsgCREEnumeratePublishedFilesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREEnumeratePublishedFiles> {
} _CMsgCREEnumeratePublishedFiles_default_instance_;
class CMsgCREEnumeratePublishedFilesResponse_PublishedFileIdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREEnumeratePublishedFilesResponse_PublishedFileId> {
} _CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_default_instance_;
class CMsgCREEnumeratePublishedFilesResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREEnumeratePublishedFilesResponse> {
} _CMsgCREEnumeratePublishedFilesResponse_default_instance_;
class CMsgCREItemVoteSummary_PublishedFileIdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREItemVoteSummary_PublishedFileId> {
} _CMsgCREItemVoteSummary_PublishedFileId_default_instance_;
class CMsgCREItemVoteSummaryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREItemVoteSummary> {
} _CMsgCREItemVoteSummary_default_instance_;
class CMsgCREItemVoteSummaryResponse_ItemVoteSummaryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREItemVoteSummaryResponse_ItemVoteSummary> {
} _CMsgCREItemVoteSummaryResponse_ItemVoteSummary_default_instance_;
class CMsgCREItemVoteSummaryResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREItemVoteSummaryResponse> {
} _CMsgCREItemVoteSummaryResponse_default_instance_;
class CMsgCREUpdateUserPublishedItemVoteDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREUpdateUserPublishedItemVote> {
} _CMsgCREUpdateUserPublishedItemVote_default_instance_;
class CMsgCREUpdateUserPublishedItemVoteResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREUpdateUserPublishedItemVoteResponse> {
} _CMsgCREUpdateUserPublishedItemVoteResponse_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetails_PublishedFileIdDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId> {
} _CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetailsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREGetUserPublishedItemVoteDetails> {
} _CMsgCREGetUserPublishedItemVoteDetails_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetailDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail> {
} _CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_default_instance_;
class CMsgCREGetUserPublishedItemVoteDetailsResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgCREGetUserPublishedItemVoteDetailsResponse> {
} _CMsgCREGetUserPublishedItemVoteDetailsResponse_default_instance_;
class CMsgGameServerPingSample_SampleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerPingSample_Sample> {
} _CMsgGameServerPingSample_Sample_default_instance_;
class CMsgGameServerPingSampleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgGameServerPingSample> {
} _CMsgGameServerPingSample_default_instance_;
class CMsgFSGetFollowerCountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSGetFollowerCount> {
} _CMsgFSGetFollowerCount_default_instance_;
class CMsgFSGetFollowerCountResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSGetFollowerCountResponse> {
} _CMsgFSGetFollowerCountResponse_default_instance_;
class CMsgFSGetIsFollowingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSGetIsFollowing> {
} _CMsgFSGetIsFollowing_default_instance_;
class CMsgFSGetIsFollowingResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSGetIsFollowingResponse> {
} _CMsgFSGetIsFollowingResponse_default_instance_;
class CMsgFSEnumerateFollowingListDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSEnumerateFollowingList> {
} _CMsgFSEnumerateFollowingList_default_instance_;
class CMsgFSEnumerateFollowingListResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgFSEnumerateFollowingListResponse> {
} _CMsgFSEnumerateFollowingListResponse_default_instance_;
class CMsgDPGetNumberOfCurrentPlayersDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgDPGetNumberOfCurrentPlayers> {
} _CMsgDPGetNumberOfCurrentPlayers_default_instance_;
class CMsgDPGetNumberOfCurrentPlayersResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgDPGetNumberOfCurrentPlayersResponse> {
} _CMsgDPGetNumberOfCurrentPlayersResponse_default_instance_;
class CMsgClientFriendUserStatusPublishedDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientFriendUserStatusPublished> {
} _CMsgClientFriendUserStatusPublished_default_instance_;
class CMsgClientServiceMethodDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceMethod> {
} _CMsgClientServiceMethod_default_instance_;
class CMsgClientServiceMethodResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceMethodResponse> {
} _CMsgClientServiceMethodResponse_default_instance_;
class CMsgClientUIModeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUIMode> {
} _CMsgClientUIMode_default_instance_;
class CMsgClientVanityURLChangedNotificationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientVanityURLChangedNotification> {
} _CMsgClientVanityURLChangedNotification_default_instance_;
class CMsgClientAuthorizeLocalDeviceRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAuthorizeLocalDeviceRequest> {
} _CMsgClientAuthorizeLocalDeviceRequest_default_instance_;
class CMsgClientAuthorizeLocalDeviceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAuthorizeLocalDevice> {
} _CMsgClientAuthorizeLocalDevice_default_instance_;
class CMsgClientAuthorizeLocalDeviceNotificationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientAuthorizeLocalDeviceNotification> {
} _CMsgClientAuthorizeLocalDeviceNotification_default_instance_;
class CMsgClientDeauthorizeDeviceRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDeauthorizeDeviceRequest> {
} _CMsgClientDeauthorizeDeviceRequest_default_instance_;
class CMsgClientDeauthorizeDeviceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientDeauthorizeDevice> {
} _CMsgClientDeauthorizeDevice_default_instance_;
class CMsgClientUseLocalDeviceAuthorizations_DeviceTokenDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUseLocalDeviceAuthorizations_DeviceToken> {
} _CMsgClientUseLocalDeviceAuthorizations_DeviceToken_default_instance_;
class CMsgClientUseLocalDeviceAuthorizationsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientUseLocalDeviceAuthorizations> {
} _CMsgClientUseLocalDeviceAuthorizations_default_instance_;
class CMsgClientGetAuthorizedDevicesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetAuthorizedDevices> {
} _CMsgClientGetAuthorizedDevices_default_instance_;
class CMsgClientGetAuthorizedDevicesResponse_AuthorizedDeviceDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice> {
} _CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_default_instance_;
class CMsgClientGetAuthorizedDevicesResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientGetAuthorizedDevicesResponse> {
} _CMsgClientGetAuthorizedDevicesResponse_default_instance_;
class CMsgClientSharedLibraryLockStatus_LockedLibraryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSharedLibraryLockStatus_LockedLibrary> {
} _CMsgClientSharedLibraryLockStatus_LockedLibrary_default_instance_;
class CMsgClientSharedLibraryLockStatusDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSharedLibraryLockStatus> {
} _CMsgClientSharedLibraryLockStatus_default_instance_;
class CMsgClientSharedLibraryStopPlaying_StopAppDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSharedLibraryStopPlaying_StopApp> {
} _CMsgClientSharedLibraryStopPlaying_StopApp_default_instance_;
class CMsgClientSharedLibraryStopPlayingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientSharedLibraryStopPlaying> {
} _CMsgClientSharedLibraryStopPlaying_default_instance_;
class CMsgClientServiceCallDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceCall> {
} _CMsgClientServiceCall_default_instance_;
class CMsgClientServiceModuleDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceModule> {
} _CMsgClientServiceModule_default_instance_;
class CMsgClientServiceCallResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientServiceCallResponse> {
} _CMsgClientServiceCallResponse_default_instance_;
class CMsgAMUnlockStreamingDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMUnlockStreaming> {
} _CMsgAMUnlockStreaming_default_instance_;
class CMsgAMUnlockStreamingResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgAMUnlockStreamingResponse> {
} _CMsgAMUnlockStreamingResponse_default_instance_;
class CMsgClientPlayingSessionStateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientPlayingSessionState> {
} _CMsgClientPlayingSessionState_default_instance_;
class CMsgClientKickPlayingSessionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientKickPlayingSession> {
} _CMsgClientKickPlayingSession_default_instance_;
class CMsgClientCreateAccountDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCreateAccount> {
} _CMsgClientCreateAccount_default_instance_;
class CMsgClientCreateAccountResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientCreateAccountResponse> {
} _CMsgClientCreateAccountResponse_default_instance_;
class CMsgClientVoiceCallPreAuthorizeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientVoiceCallPreAuthorize> {
} _CMsgClientVoiceCallPreAuthorize_default_instance_;
class CMsgClientVoiceCallPreAuthorizeResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMsgClientVoiceCallPreAuthorizeResponse> {
} _CMsgClientVoiceCallPreAuthorizeResponse_default_instance_;

namespace protobuf_steammessages_5fclientserver_5f2_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[183];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot_Tag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot_Tag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot_Tag, tag_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot_Tag, tag_value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, thumbname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, vr_filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, rtime32_created_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, permissions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, caption_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, shortcut_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, tagged_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, spoiler_tag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshot, tagged_publishedfileid_),
  5,
  0,
  1,
  4,
  6,
  7,
  8,
  9,
  2,
  3,
  ~0u,
  ~0u,
  10,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshotResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshotResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMAddScreenshotResponse, screenshotid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMDeleteScreenshot, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMDeleteScreenshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMDeleteScreenshot, screenshotid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMDeleteScreenshotResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMDeleteScreenshotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMDeleteScreenshotResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, preview_file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, consumer_app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, workshop_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, visibility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, file_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, video_provider_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, video_account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, video_identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFile, in_progress_),
  7,
  0,
  1,
  8,
  2,
  3,
  ~0u,
  11,
  9,
  10,
  4,
  13,
  5,
  6,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFileResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFileResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFileResponse, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishFileResponse, needs_workshop_legal_agreement_acceptance_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile_KeyValueTag, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile_KeyValueTag, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile_KeyValueTag, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile_KeyValueTag, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile_AdditionalPreview, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile_AdditionalPreview, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile_AdditionalPreview, original_file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile_AdditionalPreview, internal_file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile_AdditionalPreview, videoid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile_AdditionalPreview, preview_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile_AdditionalPreview, update_index_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, preview_file_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, visibility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, update_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, update_preview_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, update_title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, update_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, update_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, update_visibility_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, change_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, update_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, update_content_manifest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, content_manifest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, update_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, removed_kvtags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, kvtags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, previews_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, previews_to_remove_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFile, clear_in_progress_),
  8,
  7,
  0,
  1,
  2,
  3,
  ~0u,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  4,
  16,
  5,
  17,
  18,
  6,
  20,
  19,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  21,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFileResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFileResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMUpdatePublishedFileResponse, needs_workshop_legal_agreement_acceptance_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMDeletePublishedFile, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMDeletePublishedFile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMDeletePublishedFile, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMDeletePublishedFile, app_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMDeletePublishedFileResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMDeletePublishedFileResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMDeletePublishedFileResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserPublishedFiles, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserPublishedFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserPublishedFiles, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserPublishedFiles, start_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserPublishedFiles, sort_order_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId, published_file_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserPublishedFilesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserPublishedFilesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserPublishedFilesResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserPublishedFilesResponse, published_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserPublishedFilesResponse, total_results_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFiles, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFiles, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFiles, start_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFiles, list_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFiles, matching_file_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFiles, count_),
  0,
  1,
  3,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId, rtime32_subscribed_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesResponse, subscribed_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesResponse, total_results_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, start_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates, start_time_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, rtime32_subscribed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, file_hcontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, rtime32_last_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId, is_depot_content_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, subscribed_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse, total_results_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileSubscribed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileSubscribed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileSubscribed, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileSubscribed, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileSubscribed, file_hcontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileSubscribed, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileSubscribed, rtime_subscribed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileSubscribed, is_depot_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileSubscribed, rtime_updated_),
  0,
  2,
  1,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileUnsubscribed, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileUnsubscribed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileUnsubscribed, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileUnsubscribed, app_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileDeleted, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileDeleted, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileDeleted, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileDeleted, app_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileUpdated, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileUpdated, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileUpdated, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileUpdated, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileUpdated, time_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileUpdated, hcontent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileUpdated, file_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMPublishedFileUpdated, is_depot_content_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesRequest, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesRequest, last_time_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesRequest, num_items_needed_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, time_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo, manifest_id_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesResponse, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemChangesResponse, workshop_items_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoRequest_WorkshopItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoRequest_WorkshopItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoRequest_WorkshopItem, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoRequest_WorkshopItem, time_updated_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoRequest, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoRequest, last_time_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoRequest, workshop_items_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, time_updated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, manifest_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo, is_legacy_),
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoResponse, update_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoResponse, workshop_items_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientWorkshopItemInfoResponse, private_items_),
  1,
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUser, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUser, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUser, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUser, creator_steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUser, required_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUser, excluded_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUser, start_index_),
  1,
  0,
  ~0u,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId, published_file_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUserResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUserResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUserResponse, published_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMGetPublishedFilesForUserResponse, total_results_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMSetUserPublishedFileAction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMSetUserPublishedFileAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMSetUserPublishedFileAction, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMSetUserPublishedFileAction, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMSetUserPublishedFileAction, action_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMSetUserPublishedFileActionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMSetUserPublishedFileActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMSetUserPublishedFileActionResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserAction, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserAction, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserAction, start_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserAction, action_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId, rtime_time_stamp_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, published_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse, total_results_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientScreenshotsChanged, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientScreenshotsChanged, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateUserGameInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateUserGameInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateUserGameInfo, steamid_idgs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateUserGameInfo, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateUserGameInfo, game_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateUserGameInfo, game_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateUserGameInfo, token_),
  1,
  2,
  3,
  4,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRichPresenceUpload, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRichPresenceUpload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRichPresenceUpload, rich_presence_kv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRichPresenceUpload, steamid_broadcast_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRichPresenceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRichPresenceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRichPresenceRequest, steamid_request_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRichPresenceInfo_RichPresence, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRichPresenceInfo_RichPresence, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRichPresenceInfo_RichPresence, steamid_user_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRichPresenceInfo_RichPresence, rich_presence_kv_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRichPresenceInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRichPresenceInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRichPresenceInfo, rich_presence_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignature, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignature, app_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignatureResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignatureResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignatureResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignatureResponse, pid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignatureResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignatureResponse, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignatureResponse, esignatureresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignatureResponse, sha_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignatureResponse, signatureheader_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignatureResponse, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignatureResponse, getlasterror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckFileSignatureResponse, evalvesignaturecheckdetail_),
  3,
  4,
  5,
  0,
  6,
  1,
  2,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuth, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuth, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuth, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuth, cubtoread_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuthResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuthResponse, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuthResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuthResponse, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuthResponse, sha_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuthResponse, getlasterror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuthResponse, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuthResponse, cubread_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuthResponse, bytes_read_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientReadMachineAuthResponse, filename_sentry_),
  0,
  4,
  5,
  1,
  6,
  7,
  8,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuth, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuth, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuth, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuth, cubtowrite_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuth, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuth, otp_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuth, otp_identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuth, otp_sharedsecret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuth, otp_timedrift_),
  0,
  4,
  5,
  1,
  6,
  2,
  3,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuthResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuthResponse, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuthResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuthResponse, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuthResponse, sha_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuthResponse, getlasterror_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuthResponse, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuthResponse, cubwrote_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuthResponse, otp_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuthResponse, otp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateMachineAuthResponse, otp_identifier_),
  0,
  3,
  4,
  1,
  5,
  6,
  7,
  8,
  9,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuth, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuth, filename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuth, eresult_sentryfile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuth, filesize_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuth, sha_sentryfile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuth, lock_account_action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuth, otp_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuth, otp_identifier_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuth, otp_sharedsecret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuth, otp_value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuth, machine_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuth, machine_name_userchosen_),
  0,
  6,
  7,
  1,
  8,
  9,
  2,
  3,
  10,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuthResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuthResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestMachineAuthResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRegisterKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRegisterKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRegisterKey, key_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientPurchaseResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientPurchaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientPurchaseResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientPurchaseResponse, purchase_result_details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientPurchaseResponse, purchase_receipt_info_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientActivateOEMLicense, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientActivateOEMLicense, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientActivateOEMLicense, bios_manufacturer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientActivateOEMLicense, bios_serialnumber_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientActivateOEMLicense, license_file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientActivateOEMLicense, mainboard_manufacturer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientActivateOEMLicense, mainboard_product_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientActivateOEMLicense, mainboard_serialnumber_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRegisterOEMMachine, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRegisterOEMMachine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRegisterOEMMachine, oem_register_file_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRegisterOEMMachineResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRegisterOEMMachineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRegisterOEMMachineResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientPurchaseWithMachineID, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientPurchaseWithMachineID, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientPurchaseWithMachineID, package_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientPurchaseWithMachineID, machine_info_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeRequest, trade_request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeRequest, other_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeRequest, other_name_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeResponse, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeResponse, trade_request_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeResponse, other_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeResponse, steamguard_required_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeResponse, new_device_cooldown_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeResponse, default_password_reset_probation_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeResponse, password_reset_probation_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeResponse, default_email_change_probation_days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_InitiateTradeResponse, email_change_probation_days_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_CancelTradeRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_CancelTradeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_CancelTradeRequest, other_steamid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_StartSession, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_StartSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgTrading_StartSession, other_steamid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailChange, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailChange, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailChange, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailChange, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailChange, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailChange, final_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailChange, newmethod_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailChange, twofactor_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailChange, sms_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailChange, client_supports_sms_),
  0,
  1,
  2,
  5,
  6,
  3,
  4,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailChangeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailChangeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailChangeResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailChangeResponse, requires_sms_code_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetCDNAuthToken, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetCDNAuthToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetCDNAuthToken, depot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetCDNAuthToken, host_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetCDNAuthToken, app_id_),
  1,
  0,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetDepotDecryptionKey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetDepotDecryptionKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetDepotDecryptionKey, depot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetDepotDecryptionKey, app_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetDepotDecryptionKeyResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetDepotDecryptionKeyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetDepotDecryptionKeyResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetDepotDecryptionKeyResponse, depot_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetDepotDecryptionKeyResponse, depot_encryption_key_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckAppBetaPassword, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckAppBetaPassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckAppBetaPassword, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckAppBetaPassword, betapassword_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckAppBetaPasswordResponse_BetaPassword, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckAppBetaPasswordResponse_BetaPassword, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckAppBetaPasswordResponse_BetaPassword, betaname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckAppBetaPasswordResponse_BetaPassword, betapassword_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckAppBetaPasswordResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckAppBetaPasswordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckAppBetaPasswordResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCheckAppBetaPasswordResponse, betapasswords_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, depot_ids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, app_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, job_app_error_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, error_details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, job_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, files_validation_failed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, job_bytes_downloaded_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, job_bytes_staged_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, bytes_comitted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, start_app_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, stats_machine_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, branch_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, total_bytes_downloaded_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, total_bytes_staged_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, total_bytes_restored_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, is_borrowed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, is_free_weekend_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUpdateAppJobReport, total_bytes_legacy_),
  2,
  ~0u,
  3,
  4,
  0,
  5,
  8,
  6,
  7,
  10,
  9,
  11,
  1,
  12,
  13,
  14,
  16,
  17,
  15,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPContentStatsReport, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPContentStatsReport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPContentStatsReport, stats_machine_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPContentStatsReport, country_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPContentStatsReport, os_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPContentStatsReport, language_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPContentStatsReport, num_install_folders_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPContentStatsReport, num_installed_games_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPContentStatsReport, size_installed_games_),
  1,
  0,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetCDNAuthTokenResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetCDNAuthTokenResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetCDNAuthTokenResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetCDNAuthTokenResponse, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetCDNAuthTokenResponse, expiration_time_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDownloadRateStatistics_StatsInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDownloadRateStatistics_StatsInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDownloadRateStatistics_StatsInfo, source_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDownloadRateStatistics_StatsInfo, source_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDownloadRateStatistics_StatsInfo, seconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDownloadRateStatistics_StatsInfo, bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDownloadRateStatistics_StatsInfo, host_name_),
  1,
  2,
  4,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDownloadRateStatistics, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDownloadRateStatistics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDownloadRateStatistics, cell_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDownloadRateStatistics, stats_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestAccountData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestAccountData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestAccountData, account_or_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestAccountData, action_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestAccountDataResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestAccountDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestAccountDataResponse, action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestAccountDataResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestAccountDataResponse, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestAccountDataResponse, ct_matches_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestAccountDataResponse, account_name_suggestion1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestAccountDataResponse, account_name_suggestion2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestAccountDataResponse, account_name_suggestion3_),
  4,
  5,
  0,
  6,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStats, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStats, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStats, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStats, history_days_requested_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStats, time_last_requested_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStats, first_day_cached_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStats, days_cached_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStatsResponse_Day_Stat, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStatsResponse_Day_Stat, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStatsResponse_Day_Stat, stat_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStatsResponse_Day_Stat, data_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStatsResponse_Day, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStatsResponse_Day, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStatsResponse_Day, day_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStatsResponse_Day, stats_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStatsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStatsResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStatsResponse, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStatsResponse, day_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUGSGetGlobalStatsResponse, days_),
  2,
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData_Player, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData_Player, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData_Player, steam_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, steam_id_gs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, query_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, game_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, sourcetv_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, gamedir_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, product_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, max_players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, bot_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, secure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, dedicated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, os_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, game_data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, game_data_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, game_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerData, map_),
  9,
  10,
  11,
  12,
  13,
  8,
  14,
  0,
  1,
  2,
  3,
  ~0u,
  15,
  16,
  17,
  18,
  19,
  4,
  5,
  20,
  6,
  7,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerRemove, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerRemove, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerRemove, steam_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerRemove, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerRemove, query_port_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGMSServerQuery, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGMSServerQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGMSServerQuery, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGMSServerQuery, geo_location_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGMSServerQuery, region_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGMSServerQuery, filter_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGMSServerQuery, max_servers_),
  1,
  2,
  3,
  0,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGMSClientServerQueryResponse_Server, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGMSClientServerQueryResponse_Server, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGMSClientServerQueryResponse_Server, server_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGMSClientServerQueryResponse_Server, server_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGMSClientServerQueryResponse_Server, auth_players_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGMSClientServerQueryResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGMSClientServerQueryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGMSClientServerQueryResponse, servers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGMSClientServerQueryResponse, error_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerOutOfDate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerOutOfDate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerOutOfDate, steam_id_gs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerOutOfDate, reject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerOutOfDate, message_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRedeemGuestPass, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRedeemGuestPass, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRedeemGuestPass, guest_pass_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRedeemGuestPassResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRedeemGuestPassResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRedeemGuestPassResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRedeemGuestPassResponse, package_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRedeemGuestPassResponse, must_own_appid_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetClanActivityCounts, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetClanActivityCounts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetClanActivityCounts, steamid_clans_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetClanActivityCountsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetClanActivityCountsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetClanActivityCountsResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOGSReportString, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOGSReportString, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOGSReportString, accumulated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOGSReportString, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOGSReportString, severity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOGSReportString, formatter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOGSReportString, varargs_),
  3,
  2,
  4,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOGSReportBug, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOGSReportBug, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOGSReportBug, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOGSReportBug, bugtext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOGSReportBug, screenshot_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSAssociateWithClan, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSAssociateWithClan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSAssociateWithClan, steam_id_clan_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSAssociateWithClanResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSAssociateWithClanResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSAssociateWithClanResponse, steam_id_clan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSAssociateWithClanResponse, eresult_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSComputeNewPlayerCompatibility, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSComputeNewPlayerCompatibility, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSComputeNewPlayerCompatibility, steam_id_candidate_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSComputeNewPlayerCompatibilityResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSComputeNewPlayerCompatibilityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSComputeNewPlayerCompatibilityResponse, steam_id_candidate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSComputeNewPlayerCompatibilityResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSComputeNewPlayerCompatibilityResponse, is_clan_member_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSComputeNewPlayerCompatibilityResponse, ct_dont_like_you_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSComputeNewPlayerCompatibilityResponse, ct_you_dont_like_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGSComputeNewPlayerCompatibilityResponse, ct_clanmembers_dont_like_you_),
  0,
  5,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSentLogs, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSentLogs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCClient, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCClient, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCClient, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCClient, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCClient, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCClient, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGCClient, gcname_),
  2,
  3,
  0,
  4,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestFreeLicense, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestFreeLicense, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestFreeLicense, appids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestFreeLicenseResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestFreeLicenseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestFreeLicenseResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestFreeLicenseResponse, granted_packageids_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestFreeLicenseResponse, granted_appids_),
  0,
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadRequestWithCrashData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadRequestWithCrashData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadRequestWithCrashData, download_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadRequestWithCrashData, download_types_known_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadRequestWithCrashData, guid_drm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadRequestWithCrashData, guid_split_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadRequestWithCrashData, guid_merge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadRequestWithCrashData, module_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadRequestWithCrashData, module_path_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadRequestWithCrashData, crash_data_),
  6,
  7,
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadResponse, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadResponse, blob_download_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadResponse, merge_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadResponse, download_file_dfs_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadResponse, download_file_dfs_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadResponse, download_file_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMDownloadResponse, module_path_),
  7,
  3,
  4,
  0,
  5,
  6,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMFinalResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMFinalResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMFinalResult, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMFinalResult, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMFinalResult, blob_download_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMFinalResult, error_detail_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMFinalResult, merge_guid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMFinalResult, download_file_dfs_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMFinalResult, download_file_dfs_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDRMFinalResult, download_file_url_),
  7,
  2,
  3,
  4,
  0,
  5,
  6,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPCheckSpecialSurvey, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPCheckSpecialSurvey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPCheckSpecialSurvey, survey_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPCheckSpecialSurveyResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPCheckSpecialSurveyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPCheckSpecialSurveyResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPCheckSpecialSurveyResponse, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPCheckSpecialSurveyResponse, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPCheckSpecialSurveyResponse, custom_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPCheckSpecialSurveyResponse, include_software_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPCheckSpecialSurveyResponse, token_),
  5,
  3,
  0,
  1,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPSendSpecialSurveyResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPSendSpecialSurveyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPSendSpecialSurveyResponse, survey_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPSendSpecialSurveyResponse, data_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPSendSpecialSurveyResponseReply, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPSendSpecialSurveyResponseReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPSendSpecialSurveyResponseReply, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDPSendSpecialSurveyResponseReply, token_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestForgottenPasswordEmail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestForgottenPasswordEmail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestForgottenPasswordEmail, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestForgottenPasswordEmail, password_tried_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestForgottenPasswordEmailResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestForgottenPasswordEmailResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestForgottenPasswordEmailResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestForgottenPasswordEmailResponse, use_secret_question_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientItemAnnouncements, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientItemAnnouncements, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientItemAnnouncements, count_new_items_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestItemAnnouncements, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestItemAnnouncements, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUserNotifications_Notification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUserNotifications_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUserNotifications_Notification, user_notification_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUserNotifications_Notification, count_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUserNotifications, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUserNotifications, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUserNotifications, notifications_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCommentNotifications, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCommentNotifications, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCommentNotifications, count_new_comments_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCommentNotifications, count_new_comments_owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCommentNotifications, count_new_comments_subscriptions_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestCommentNotifications, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestCommentNotifications, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOfflineMessageNotification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOfflineMessageNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOfflineMessageNotification, offline_messages_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientOfflineMessageNotification, friends_with_offline_messages_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestOfflineMessageCount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientRequestOfflineMessageCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistory, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistory, steamid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage, unread_),
  1,
  2,
  0,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistoryResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistoryResponse, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistoryResponse, success_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistoryResponse, messages_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistoryForOfflineMessages, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientChatGetFriendMessageHistoryForOfflineMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFSGetFriendsSteamLevels, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFSGetFriendsSteamLevels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFSGetFriendsSteamLevels, accountids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFSGetFriendsSteamLevelsResponse_Friend, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFSGetFriendsSteamLevelsResponse_Friend, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFSGetFriendsSteamLevelsResponse_Friend, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFSGetFriendsSteamLevelsResponse_Friend, level_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFSGetFriendsSteamLevelsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFSGetFriendsSteamLevelsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFSGetFriendsSteamLevelsResponse, friends_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailAddrInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailAddrInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailAddrInfo, email_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailAddrInfo, email_is_validated_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailAddrInfo, email_validation_changed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailAddrInfo, credential_change_requires_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailAddrInfo, password_or_secretqa_change_requires_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientEmailAddrInfo, remind_user_about_email_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFiles, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFiles, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFiles, query_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFiles, start_index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFiles, days_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFiles, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFiles, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFiles, user_tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFiles, matching_file_type_),
  0,
  1,
  2,
  3,
  4,
  ~0u,
  ~0u,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, votes_for_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, votes_against_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, reports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId, score_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFilesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFilesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFilesResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFilesResponse, published_files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREEnumeratePublishedFilesResponse, total_results_),
  1,
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummary_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummary_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummary_PublishedFileId, published_file_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummary, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummary, published_file_ids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummaryResponse_ItemVoteSummary, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummaryResponse_ItemVoteSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummaryResponse_ItemVoteSummary, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummaryResponse_ItemVoteSummary, votes_for_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummaryResponse_ItemVoteSummary, votes_against_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummaryResponse_ItemVoteSummary, reports_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummaryResponse_ItemVoteSummary, score_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummaryResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummaryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummaryResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREItemVoteSummaryResponse, item_vote_summaries_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREUpdateUserPublishedItemVote, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREUpdateUserPublishedItemVote, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREUpdateUserPublishedItemVote, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREUpdateUserPublishedItemVote, vote_up_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREUpdateUserPublishedItemVoteResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREUpdateUserPublishedItemVoteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREUpdateUserPublishedItemVoteResponse, eresult_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId, published_file_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREGetUserPublishedItemVoteDetails, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREGetUserPublishedItemVoteDetails, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREGetUserPublishedItemVoteDetails, published_file_ids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail, published_file_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail, vote_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREGetUserPublishedItemVoteDetailsResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREGetUserPublishedItemVoteDetailsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREGetUserPublishedItemVoteDetailsResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgCREGetUserPublishedItemVoteDetailsResponse, user_item_vote_details_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerPingSample_Sample, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerPingSample_Sample, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerPingSample_Sample, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerPingSample_Sample, avg_ping_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerPingSample_Sample, stddev_ping_ms_x10_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerPingSample, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerPingSample, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerPingSample, my_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerPingSample, gs_app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgGameServerPingSample, gs_samples_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSGetFollowerCount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSGetFollowerCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSGetFollowerCount, steam_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSGetFollowerCountResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSGetFollowerCountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSGetFollowerCountResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSGetFollowerCountResponse, count_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSGetIsFollowing, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSGetIsFollowing, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSGetIsFollowing, steam_id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSGetIsFollowingResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSGetIsFollowingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSGetIsFollowingResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSGetIsFollowingResponse, is_following_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSEnumerateFollowingList, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSEnumerateFollowingList, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSEnumerateFollowingList, start_index_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSEnumerateFollowingListResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSEnumerateFollowingListResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSEnumerateFollowingListResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSEnumerateFollowingListResponse, total_results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgFSEnumerateFollowingListResponse, steam_ids_),
  1,
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPGetNumberOfCurrentPlayers, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPGetNumberOfCurrentPlayers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPGetNumberOfCurrentPlayers, appid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPGetNumberOfCurrentPlayersResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPGetNumberOfCurrentPlayersResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPGetNumberOfCurrentPlayersResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgDPGetNumberOfCurrentPlayersResponse, player_count_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFriendUserStatusPublished, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFriendUserStatusPublished, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFriendUserStatusPublished, friend_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFriendUserStatusPublished, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientFriendUserStatusPublished, status_text_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceMethod, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceMethod, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceMethod, method_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceMethod, serialized_method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceMethod, is_notification_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceMethodResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceMethodResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceMethodResponse, method_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceMethodResponse, serialized_method_response_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUIMode, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUIMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUIMode, uimode_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVanityURLChangedNotification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVanityURLChangedNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVanityURLChangedNotification, vanity_url_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDeviceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDeviceRequest, device_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDeviceRequest, owner_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDeviceRequest, local_device_token_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDevice, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDevice, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDevice, owner_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDevice, authed_device_token_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDeviceNotification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDeviceNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDeviceNotification, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDeviceNotification, owner_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientAuthorizeLocalDeviceNotification, local_device_token_),
  2,
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDeauthorizeDeviceRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDeauthorizeDeviceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDeauthorizeDeviceRequest, deauthorization_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDeauthorizeDeviceRequest, deauthorization_device_token_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDeauthorizeDevice, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDeauthorizeDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDeauthorizeDevice, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientDeauthorizeDevice, deauthorization_account_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUseLocalDeviceAuthorizations_DeviceToken, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUseLocalDeviceAuthorizations_DeviceToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUseLocalDeviceAuthorizations_DeviceToken, owner_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUseLocalDeviceAuthorizations_DeviceToken, token_id_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUseLocalDeviceAuthorizations, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUseLocalDeviceAuthorizations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUseLocalDeviceAuthorizations, authorization_account_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientUseLocalDeviceAuthorizations, device_tokens_),
  ~0u,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetAuthorizedDevices, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetAuthorizedDevices, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, auth_device_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, device_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, last_access_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, borrower_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, is_pending_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice, app_played_),
  1,
  0,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetAuthorizedDevicesResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetAuthorizedDevicesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetAuthorizedDevicesResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientGetAuthorizedDevicesResponse, authorized_device_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryLockStatus_LockedLibrary, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryLockStatus_LockedLibrary, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryLockStatus_LockedLibrary, owner_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryLockStatus_LockedLibrary, locked_by_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryLockStatus, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryLockStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryLockStatus, locked_library_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryLockStatus, own_library_locked_by_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryStopPlaying_StopApp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryStopPlaying_StopApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryStopPlaying_StopApp, app_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryStopPlaying_StopApp, owner_id_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryStopPlaying, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryStopPlaying, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryStopPlaying, seconds_left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientSharedLibraryStopPlaying, stop_apps_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCall, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCall, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCall, sysid_routing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCall, call_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCall, module_crc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCall, module_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCall, function_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCall, cub_output_max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCall, flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCall, callparameter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCall, ping_only_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCall, max_outstanding_calls_),
  0,
  3,
  4,
  1,
  5,
  6,
  7,
  2,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceModule, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceModule, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceModule, module_crc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceModule, module_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceModule, module_content_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, sysid_routing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, call_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, module_crc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, module_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, ecallresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, result_content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, os_version_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, system_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, load_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, exception_record_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, portable_os_version_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, portable_system_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, was_converted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, internal_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, current_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, last_call_handle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, last_call_module_crc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, last_call_sysid_routing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, last_ecallresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, last_callissue_delta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientServiceCallResponse, last_callcomplete_delta_),
  0,
  9,
  10,
  1,
  12,
  2,
  3,
  4,
  11,
  5,
  6,
  7,
  13,
  14,
  15,
  16,
  17,
  8,
  18,
  19,
  20,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMUnlockStreaming, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMUnlockStreaming, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMUnlockStreamingResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMUnlockStreamingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMUnlockStreamingResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgAMUnlockStreamingResponse, encryption_key_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientPlayingSessionState, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientPlayingSessionState, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientPlayingSessionState, playing_blocked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientPlayingSessionState, playing_app_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientKickPlayingSession, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientKickPlayingSession, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientKickPlayingSession, only_stop_game_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCreateAccount, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCreateAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCreateAccount, account_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCreateAccount, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCreateAccount, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCreateAccount, launcher_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCreateAccount, language_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCreateAccountResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCreateAccountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCreateAccountResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientCreateAccountResponse, steamid_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVoiceCallPreAuthorize, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVoiceCallPreAuthorize, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVoiceCallPreAuthorize, caller_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVoiceCallPreAuthorize, receiver_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVoiceCallPreAuthorize, caller_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVoiceCallPreAuthorize, hangup_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVoiceCallPreAuthorizeResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVoiceCallPreAuthorizeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVoiceCallPreAuthorizeResponse, caller_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVoiceCallPreAuthorizeResponse, receiver_steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVoiceCallPreAuthorizeResponse, eresult_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMsgClientVoiceCallPreAuthorizeResponse, caller_id_),
  0,
  1,
  3,
  2,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(CMsgClientUCMAddScreenshot_Tag)},
  { 9, 28, sizeof(CMsgClientUCMAddScreenshot)},
  { 42, 49, sizeof(CMsgClientUCMAddScreenshotResponse)},
  { 51, 57, sizeof(CMsgClientUCMDeleteScreenshot)},
  { 58, 64, sizeof(CMsgClientUCMDeleteScreenshotResponse)},
  { 65, 85, sizeof(CMsgClientUCMPublishFile)},
  { 100, 108, sizeof(CMsgClientUCMPublishFileResponse)},
  { 111, 118, sizeof(CMsgClientUCMUpdatePublishedFile_KeyValueTag)},
  { 120, 130, sizeof(CMsgClientUCMUpdatePublishedFile_AdditionalPreview)},
  { 135, 167, sizeof(CMsgClientUCMUpdatePublishedFile)},
  { 194, 201, sizeof(CMsgClientUCMUpdatePublishedFileResponse)},
  { 203, 210, sizeof(CMsgClientUCMDeletePublishedFile)},
  { 212, 218, sizeof(CMsgClientUCMDeletePublishedFileResponse)},
  { 219, 227, sizeof(CMsgClientUCMEnumerateUserPublishedFiles)},
  { 230, 236, sizeof(CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId)},
  { 237, 245, sizeof(CMsgClientUCMEnumerateUserPublishedFilesResponse)},
  { 248, 258, sizeof(CMsgClientUCMEnumerateUserSubscribedFiles)},
  { 263, 270, sizeof(CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId)},
  { 272, 280, sizeof(CMsgClientUCMEnumerateUserSubscribedFilesResponse)},
  { 283, 291, sizeof(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)},
  { 294, 306, sizeof(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId)},
  { 313, 321, sizeof(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)},
  { 324, 336, sizeof(CMsgClientUCMPublishedFileSubscribed)},
  { 343, 350, sizeof(CMsgClientUCMPublishedFileUnsubscribed)},
  { 352, 359, sizeof(CMsgClientUCMPublishedFileDeleted)},
  { 361, 372, sizeof(CMsgClientUCMPublishedFileUpdated)},
  { 378, 386, sizeof(CMsgClientWorkshopItemChangesRequest)},
  { 389, 397, sizeof(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo)},
  { 400, 408, sizeof(CMsgClientWorkshopItemChangesResponse)},
  { 411, 418, sizeof(CMsgClientWorkshopItemInfoRequest_WorkshopItem)},
  { 420, 428, sizeof(CMsgClientWorkshopItemInfoRequest)},
  { 431, 440, sizeof(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo)},
  { 444, 453, sizeof(CMsgClientWorkshopItemInfoResponse)},
  { 457, 467, sizeof(CMsgClientUCMGetPublishedFilesForUser)},
  { 472, 478, sizeof(CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId)},
  { 479, 487, sizeof(CMsgClientUCMGetPublishedFilesForUserResponse)},
  { 490, 498, sizeof(CMsgClientUCMSetUserPublishedFileAction)},
  { 501, 507, sizeof(CMsgClientUCMSetUserPublishedFileActionResponse)},
  { 508, 516, sizeof(CMsgClientUCMEnumeratePublishedFilesByUserAction)},
  { 519, 526, sizeof(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId)},
  { 528, 536, sizeof(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)},
  { 539, 544, sizeof(CMsgClientScreenshotsChanged)},
  { 544, 554, sizeof(CMsgClientUpdateUserGameInfo)},
  { 559, 566, sizeof(CMsgClientRichPresenceUpload)},
  { 568, 574, sizeof(CMsgClientRichPresenceRequest)},
  { 575, 582, sizeof(CMsgClientRichPresenceInfo_RichPresence)},
  { 584, 590, sizeof(CMsgClientRichPresenceInfo)},
  { 591, 597, sizeof(CMsgClientCheckFileSignature)},
  { 598, 613, sizeof(CMsgClientCheckFileSignatureResponse)},
  { 623, 631, sizeof(CMsgClientReadMachineAuth)},
  { 634, 648, sizeof(CMsgClientReadMachineAuthResponse)},
  { 657, 670, sizeof(CMsgClientUpdateMachineAuth)},
  { 678, 693, sizeof(CMsgClientUpdateMachineAuthResponse)},
  { 703, 719, sizeof(CMsgClientRequestMachineAuth)},
  { 730, 736, sizeof(CMsgClientRequestMachineAuthResponse)},
  { 737, 743, sizeof(CMsgClientRegisterKey)},
  { 744, 752, sizeof(CMsgClientPurchaseResponse)},
  { 755, 766, sizeof(CMsgClientActivateOEMLicense)},
  { 772, 778, sizeof(CMsgClientRegisterOEMMachine)},
  { 779, 785, sizeof(CMsgClientRegisterOEMMachineResponse)},
  { 786, 793, sizeof(CMsgClientPurchaseWithMachineID)},
  { 795, 803, sizeof(CMsgTrading_InitiateTradeRequest)},
  { 806, 820, sizeof(CMsgTrading_InitiateTradeResponse)},
  { 829, 835, sizeof(CMsgTrading_CancelTradeRequest)},
  { 836, 842, sizeof(CMsgTrading_StartSession)},
  { 843, 856, sizeof(CMsgClientEmailChange)},
  { 864, 871, sizeof(CMsgClientEmailChangeResponse)},
  { 873, 881, sizeof(CMsgClientGetCDNAuthToken)},
  { 884, 891, sizeof(CMsgClientGetDepotDecryptionKey)},
  { 893, 901, sizeof(CMsgClientGetDepotDecryptionKeyResponse)},
  { 904, 911, sizeof(CMsgClientCheckAppBetaPassword)},
  { 913, 920, sizeof(CMsgClientCheckAppBetaPasswordResponse_BetaPassword)},
  { 922, 929, sizeof(CMsgClientCheckAppBetaPasswordResponse)},
  { 931, 955, sizeof(CMsgClientUpdateAppJobReport)},
  { 974, 986, sizeof(CMsgClientDPContentStatsReport)},
  { 993, 1001, sizeof(CMsgClientGetCDNAuthTokenResponse)},
  { 1004, 1014, sizeof(CMsgDownloadRateStatistics_StatsInfo)},
  { 1019, 1026, sizeof(CMsgDownloadRateStatistics)},
  { 1028, 1035, sizeof(CMsgClientRequestAccountData)},
  { 1037, 1049, sizeof(CMsgClientRequestAccountDataResponse)},
  { 1056, 1066, sizeof(CMsgClientUGSGetGlobalStats)},
  { 1071, 1078, sizeof(CMsgClientUGSGetGlobalStatsResponse_Day_Stat)},
  { 1080, 1087, sizeof(CMsgClientUGSGetGlobalStatsResponse_Day)},
  { 1089, 1098, sizeof(CMsgClientUGSGetGlobalStatsResponse)},
  { 1102, 1108, sizeof(CMsgGameServerData_Player)},
  { 1109, 1136, sizeof(CMsgGameServerData)},
  { 1158, 1166, sizeof(CMsgGameServerRemove)},
  { 1169, 1179, sizeof(CMsgClientGMSServerQuery)},
  { 1184, 1192, sizeof(CMsgGMSClientServerQueryResponse_Server)},
  { 1195, 1202, sizeof(CMsgGMSClientServerQueryResponse)},
  { 1204, 1212, sizeof(CMsgGameServerOutOfDate)},
  { 1215, 1221, sizeof(CMsgClientRedeemGuestPass)},
  { 1222, 1230, sizeof(CMsgClientRedeemGuestPassResponse)},
  { 1233, 1239, sizeof(CMsgClientGetClanActivityCounts)},
  { 1240, 1246, sizeof(CMsgClientGetClanActivityCountsResponse)},
  { 1247, 1257, sizeof(CMsgClientOGSReportString)},
  { 1262, 1270, sizeof(CMsgClientOGSReportBug)},
  { 1273, 1279, sizeof(CMsgGSAssociateWithClan)},
  { 1280, 1287, sizeof(CMsgGSAssociateWithClanResponse)},
  { 1289, 1295, sizeof(CMsgGSComputeNewPlayerCompatibility)},
  { 1296, 1307, sizeof(CMsgGSComputeNewPlayerCompatibilityResponse)},
  { 1313, 1318, sizeof(CMsgClientSentLogs)},
  { 1318, 1328, sizeof(CMsgGCClient)},
  { 1333, 1339, sizeof(CMsgClientRequestFreeLicense)},
  { 1340, 1348, sizeof(CMsgClientRequestFreeLicenseResponse)},
  { 1351, 1364, sizeof(CMsgDRMDownloadRequestWithCrashData)},
  { 1372, 1385, sizeof(CMsgDRMDownloadResponse)},
  { 1393, 1406, sizeof(CMsgDRMFinalResult)},
  { 1414, 1420, sizeof(CMsgClientDPCheckSpecialSurvey)},
  { 1421, 1432, sizeof(CMsgClientDPCheckSpecialSurveyResponse)},
  { 1438, 1445, sizeof(CMsgClientDPSendSpecialSurveyResponse)},
  { 1447, 1454, sizeof(CMsgClientDPSendSpecialSurveyResponseReply)},
  { 1456, 1463, sizeof(CMsgClientRequestForgottenPasswordEmail)},
  { 1465, 1472, sizeof(CMsgClientRequestForgottenPasswordEmailResponse)},
  { 1474, 1480, sizeof(CMsgClientItemAnnouncements)},
  { 1481, 1486, sizeof(CMsgClientRequestItemAnnouncements)},
  { 1486, 1493, sizeof(CMsgClientUserNotifications_Notification)},
  { 1495, 1501, sizeof(CMsgClientUserNotifications)},
  { 1502, 1510, sizeof(CMsgClientCommentNotifications)},
  { 1513, 1518, sizeof(CMsgClientRequestCommentNotifications)},
  { 1518, 1525, sizeof(CMsgClientOfflineMessageNotification)},
  { 1527, 1532, sizeof(CMsgClientRequestOfflineMessageCount)},
  { 1532, 1538, sizeof(CMsgClientChatGetFriendMessageHistory)},
  { 1539, 1548, sizeof(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage)},
  { 1552, 1560, sizeof(CMsgClientChatGetFriendMessageHistoryResponse)},
  { 1563, 1568, sizeof(CMsgClientChatGetFriendMessageHistoryForOfflineMessages)},
  { 1568, 1574, sizeof(CMsgClientFSGetFriendsSteamLevels)},
  { 1575, 1582, sizeof(CMsgClientFSGetFriendsSteamLevelsResponse_Friend)},
  { 1584, 1590, sizeof(CMsgClientFSGetFriendsSteamLevelsResponse)},
  { 1591, 1602, sizeof(CMsgClientEmailAddrInfo)},
  { 1608, 1621, sizeof(CMsgCREEnumeratePublishedFiles)},
  { 1629, 1639, sizeof(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId)},
  { 1644, 1652, sizeof(CMsgCREEnumeratePublishedFilesResponse)},
  { 1655, 1661, sizeof(CMsgCREItemVoteSummary_PublishedFileId)},
  { 1662, 1668, sizeof(CMsgCREItemVoteSummary)},
  { 1669, 1679, sizeof(CMsgCREItemVoteSummaryResponse_ItemVoteSummary)},
  { 1684, 1691, sizeof(CMsgCREItemVoteSummaryResponse)},
  { 1693, 1700, sizeof(CMsgCREUpdateUserPublishedItemVote)},
  { 1702, 1708, sizeof(CMsgCREUpdateUserPublishedItemVoteResponse)},
  { 1709, 1715, sizeof(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId)},
  { 1716, 1722, sizeof(CMsgCREGetUserPublishedItemVoteDetails)},
  { 1723, 1730, sizeof(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail)},
  { 1732, 1739, sizeof(CMsgCREGetUserPublishedItemVoteDetailsResponse)},
  { 1741, 1749, sizeof(CMsgGameServerPingSample_Sample)},
  { 1752, 1760, sizeof(CMsgGameServerPingSample)},
  { 1763, 1769, sizeof(CMsgFSGetFollowerCount)},
  { 1770, 1777, sizeof(CMsgFSGetFollowerCountResponse)},
  { 1779, 1785, sizeof(CMsgFSGetIsFollowing)},
  { 1786, 1793, sizeof(CMsgFSGetIsFollowingResponse)},
  { 1795, 1801, sizeof(CMsgFSEnumerateFollowingList)},
  { 1802, 1810, sizeof(CMsgFSEnumerateFollowingListResponse)},
  { 1813, 1819, sizeof(CMsgDPGetNumberOfCurrentPlayers)},
  { 1820, 1827, sizeof(CMsgDPGetNumberOfCurrentPlayersResponse)},
  { 1829, 1837, sizeof(CMsgClientFriendUserStatusPublished)},
  { 1840, 1848, sizeof(CMsgClientServiceMethod)},
  { 1851, 1858, sizeof(CMsgClientServiceMethodResponse)},
  { 1860, 1866, sizeof(CMsgClientUIMode)},
  { 1867, 1873, sizeof(CMsgClientVanityURLChangedNotification)},
  { 1874, 1882, sizeof(CMsgClientAuthorizeLocalDeviceRequest)},
  { 1885, 1893, sizeof(CMsgClientAuthorizeLocalDevice)},
  { 1896, 1904, sizeof(CMsgClientAuthorizeLocalDeviceNotification)},
  { 1907, 1914, sizeof(CMsgClientDeauthorizeDeviceRequest)},
  { 1916, 1923, sizeof(CMsgClientDeauthorizeDevice)},
  { 1925, 1932, sizeof(CMsgClientUseLocalDeviceAuthorizations_DeviceToken)},
  { 1934, 1941, sizeof(CMsgClientUseLocalDeviceAuthorizations)},
  { 1943, 1948, sizeof(CMsgClientGetAuthorizedDevices)},
  { 1948, 1959, sizeof(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice)},
  { 1965, 1972, sizeof(CMsgClientGetAuthorizedDevicesResponse)},
  { 1974, 1981, sizeof(CMsgClientSharedLibraryLockStatus_LockedLibrary)},
  { 1983, 1990, sizeof(CMsgClientSharedLibraryLockStatus)},
  { 1992, 1999, sizeof(CMsgClientSharedLibraryStopPlaying_StopApp)},
  { 2001, 2008, sizeof(CMsgClientSharedLibraryStopPlaying)},
  { 2010, 2025, sizeof(CMsgClientServiceCall)},
  { 2035, 2043, sizeof(CMsgClientServiceModule)},
  { 2046, 2072, sizeof(CMsgClientServiceCallResponse)},
  { 2093, 2098, sizeof(CMsgAMUnlockStreaming)},
  { 2098, 2105, sizeof(CMsgAMUnlockStreamingResponse)},
  { 2107, 2114, sizeof(CMsgClientPlayingSessionState)},
  { 2116, 2122, sizeof(CMsgClientKickPlayingSession)},
  { 2123, 2133, sizeof(CMsgClientCreateAccount)},
  { 2138, 2145, sizeof(CMsgClientCreateAccountResponse)},
  { 2147, 2156, sizeof(CMsgClientVoiceCallPreAuthorize)},
  { 2160, 2169, sizeof(CMsgClientVoiceCallPreAuthorizeResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMAddScreenshot_Tag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMAddScreenshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMAddScreenshotResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMDeleteScreenshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMDeleteScreenshotResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMPublishFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMPublishFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMUpdatePublishedFile_KeyValueTag_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMUpdatePublishedFile_AdditionalPreview_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMUpdatePublishedFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMUpdatePublishedFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMDeletePublishedFile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMDeletePublishedFileResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMEnumerateUserPublishedFiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMEnumerateUserPublishedFilesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMEnumerateUserSubscribedFiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMEnumerateUserSubscribedFilesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMPublishedFileSubscribed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMPublishedFileUnsubscribed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMPublishedFileDeleted_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMPublishedFileUpdated_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientWorkshopItemChangesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientWorkshopItemChangesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientWorkshopItemInfoRequest_WorkshopItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientWorkshopItemInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientWorkshopItemInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMGetPublishedFilesForUser_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMGetPublishedFilesForUserResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMSetUserPublishedFileAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMSetUserPublishedFileActionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMEnumeratePublishedFilesByUserAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientScreenshotsChanged_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUpdateUserGameInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRichPresenceUpload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRichPresenceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRichPresenceInfo_RichPresence_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRichPresenceInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientCheckFileSignature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientCheckFileSignatureResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientReadMachineAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientReadMachineAuthResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUpdateMachineAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUpdateMachineAuthResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRequestMachineAuth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRequestMachineAuthResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRegisterKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientPurchaseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientActivateOEMLicense_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRegisterOEMMachine_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRegisterOEMMachineResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientPurchaseWithMachineID_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgTrading_InitiateTradeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgTrading_InitiateTradeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgTrading_CancelTradeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgTrading_StartSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientEmailChange_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientEmailChangeResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientGetCDNAuthToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientGetDepotDecryptionKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientGetDepotDecryptionKeyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientCheckAppBetaPassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientCheckAppBetaPasswordResponse_BetaPassword_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientCheckAppBetaPasswordResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUpdateAppJobReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientDPContentStatsReport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientGetCDNAuthTokenResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgDownloadRateStatistics_StatsInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgDownloadRateStatistics_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRequestAccountData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRequestAccountDataResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUGSGetGlobalStats_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUGSGetGlobalStatsResponse_Day_Stat_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUGSGetGlobalStatsResponse_Day_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUGSGetGlobalStatsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGameServerData_Player_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGameServerData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGameServerRemove_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientGMSServerQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGMSClientServerQueryResponse_Server_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGMSClientServerQueryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGameServerOutOfDate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRedeemGuestPass_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRedeemGuestPassResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientGetClanActivityCounts_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientGetClanActivityCountsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientOGSReportString_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientOGSReportBug_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGSAssociateWithClan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGSAssociateWithClanResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGSComputeNewPlayerCompatibility_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGSComputeNewPlayerCompatibilityResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientSentLogs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGCClient_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRequestFreeLicense_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRequestFreeLicenseResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgDRMDownloadRequestWithCrashData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgDRMDownloadResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgDRMFinalResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientDPCheckSpecialSurvey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientDPCheckSpecialSurveyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientDPSendSpecialSurveyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientDPSendSpecialSurveyResponseReply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRequestForgottenPasswordEmail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRequestForgottenPasswordEmailResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientItemAnnouncements_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRequestItemAnnouncements_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUserNotifications_Notification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUserNotifications_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientCommentNotifications_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRequestCommentNotifications_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientOfflineMessageNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientRequestOfflineMessageCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientChatGetFriendMessageHistory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientChatGetFriendMessageHistoryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientChatGetFriendMessageHistoryForOfflineMessages_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientFSGetFriendsSteamLevels_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientFSGetFriendsSteamLevelsResponse_Friend_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientFSGetFriendsSteamLevelsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientEmailAddrInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCREEnumeratePublishedFiles_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCREEnumeratePublishedFilesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCREItemVoteSummary_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCREItemVoteSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCREItemVoteSummaryResponse_ItemVoteSummary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCREItemVoteSummaryResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCREUpdateUserPublishedItemVote_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCREUpdateUserPublishedItemVoteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCREGetUserPublishedItemVoteDetails_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgCREGetUserPublishedItemVoteDetailsResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGameServerPingSample_Sample_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgGameServerPingSample_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgFSGetFollowerCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgFSGetFollowerCountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgFSGetIsFollowing_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgFSGetIsFollowingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgFSEnumerateFollowingList_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgFSEnumerateFollowingListResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgDPGetNumberOfCurrentPlayers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgDPGetNumberOfCurrentPlayersResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientFriendUserStatusPublished_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientServiceMethod_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientServiceMethodResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUIMode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientVanityURLChangedNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientAuthorizeLocalDeviceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientAuthorizeLocalDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientAuthorizeLocalDeviceNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientDeauthorizeDeviceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientDeauthorizeDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUseLocalDeviceAuthorizations_DeviceToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientUseLocalDeviceAuthorizations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientGetAuthorizedDevices_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientGetAuthorizedDevicesResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientSharedLibraryLockStatus_LockedLibrary_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientSharedLibraryLockStatus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientSharedLibraryStopPlaying_StopApp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientSharedLibraryStopPlaying_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientServiceCall_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientServiceModule_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientServiceCallResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgAMUnlockStreaming_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgAMUnlockStreamingResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientPlayingSessionState_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientKickPlayingSession_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientCreateAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientCreateAccountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientVoiceCallPreAuthorize_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMsgClientVoiceCallPreAuthorizeResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "steammessages_clientserver_2.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 183);
}

}  // namespace

void TableStruct::Shutdown() {
  _CMsgClientUCMAddScreenshot_Tag_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CMsgClientUCMAddScreenshot_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CMsgClientUCMAddScreenshotResponse_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CMsgClientUCMDeleteScreenshot_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _CMsgClientUCMDeleteScreenshotResponse_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _CMsgClientUCMPublishFile_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _CMsgClientUCMPublishFileResponse_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _CMsgClientUCMUpdatePublishedFile_KeyValueTag_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _CMsgClientUCMUpdatePublishedFile_AdditionalPreview_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _CMsgClientUCMUpdatePublishedFile_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _CMsgClientUCMUpdatePublishedFileResponse_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _CMsgClientUCMDeletePublishedFile_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _CMsgClientUCMDeletePublishedFileResponse_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _CMsgClientUCMEnumerateUserPublishedFiles_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _CMsgClientUCMEnumerateUserPublishedFilesResponse_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _CMsgClientUCMEnumerateUserSubscribedFiles_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _CMsgClientUCMEnumerateUserSubscribedFilesResponse_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _CMsgClientUCMPublishedFileSubscribed_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _CMsgClientUCMPublishedFileUnsubscribed_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _CMsgClientUCMPublishedFileDeleted_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _CMsgClientUCMPublishedFileUpdated_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
  _CMsgClientWorkshopItemChangesRequest_default_instance_.Shutdown();
  delete file_level_metadata[26].reflection;
  _CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_default_instance_.Shutdown();
  delete file_level_metadata[27].reflection;
  _CMsgClientWorkshopItemChangesResponse_default_instance_.Shutdown();
  delete file_level_metadata[28].reflection;
  _CMsgClientWorkshopItemInfoRequest_WorkshopItem_default_instance_.Shutdown();
  delete file_level_metadata[29].reflection;
  _CMsgClientWorkshopItemInfoRequest_default_instance_.Shutdown();
  delete file_level_metadata[30].reflection;
  _CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_default_instance_.Shutdown();
  delete file_level_metadata[31].reflection;
  _CMsgClientWorkshopItemInfoResponse_default_instance_.Shutdown();
  delete file_level_metadata[32].reflection;
  _CMsgClientUCMGetPublishedFilesForUser_default_instance_.Shutdown();
  delete file_level_metadata[33].reflection;
  _CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_default_instance_.Shutdown();
  delete file_level_metadata[34].reflection;
  _CMsgClientUCMGetPublishedFilesForUserResponse_default_instance_.Shutdown();
  delete file_level_metadata[35].reflection;
  _CMsgClientUCMSetUserPublishedFileAction_default_instance_.Shutdown();
  delete file_level_metadata[36].reflection;
  _CMsgClientUCMSetUserPublishedFileActionResponse_default_instance_.Shutdown();
  delete file_level_metadata[37].reflection;
  _CMsgClientUCMEnumeratePublishedFilesByUserAction_default_instance_.Shutdown();
  delete file_level_metadata[38].reflection;
  _CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_default_instance_.Shutdown();
  delete file_level_metadata[39].reflection;
  _CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_default_instance_.Shutdown();
  delete file_level_metadata[40].reflection;
  _CMsgClientScreenshotsChanged_default_instance_.Shutdown();
  delete file_level_metadata[41].reflection;
  _CMsgClientUpdateUserGameInfo_default_instance_.Shutdown();
  delete file_level_metadata[42].reflection;
  _CMsgClientRichPresenceUpload_default_instance_.Shutdown();
  delete file_level_metadata[43].reflection;
  _CMsgClientRichPresenceRequest_default_instance_.Shutdown();
  delete file_level_metadata[44].reflection;
  _CMsgClientRichPresenceInfo_RichPresence_default_instance_.Shutdown();
  delete file_level_metadata[45].reflection;
  _CMsgClientRichPresenceInfo_default_instance_.Shutdown();
  delete file_level_metadata[46].reflection;
  _CMsgClientCheckFileSignature_default_instance_.Shutdown();
  delete file_level_metadata[47].reflection;
  _CMsgClientCheckFileSignatureResponse_default_instance_.Shutdown();
  delete file_level_metadata[48].reflection;
  _CMsgClientReadMachineAuth_default_instance_.Shutdown();
  delete file_level_metadata[49].reflection;
  _CMsgClientReadMachineAuthResponse_default_instance_.Shutdown();
  delete file_level_metadata[50].reflection;
  _CMsgClientUpdateMachineAuth_default_instance_.Shutdown();
  delete file_level_metadata[51].reflection;
  _CMsgClientUpdateMachineAuthResponse_default_instance_.Shutdown();
  delete file_level_metadata[52].reflection;
  _CMsgClientRequestMachineAuth_default_instance_.Shutdown();
  delete file_level_metadata[53].reflection;
  _CMsgClientRequestMachineAuthResponse_default_instance_.Shutdown();
  delete file_level_metadata[54].reflection;
  _CMsgClientRegisterKey_default_instance_.Shutdown();
  delete file_level_metadata[55].reflection;
  _CMsgClientPurchaseResponse_default_instance_.Shutdown();
  delete file_level_metadata[56].reflection;
  _CMsgClientActivateOEMLicense_default_instance_.Shutdown();
  delete file_level_metadata[57].reflection;
  _CMsgClientRegisterOEMMachine_default_instance_.Shutdown();
  delete file_level_metadata[58].reflection;
  _CMsgClientRegisterOEMMachineResponse_default_instance_.Shutdown();
  delete file_level_metadata[59].reflection;
  _CMsgClientPurchaseWithMachineID_default_instance_.Shutdown();
  delete file_level_metadata[60].reflection;
  _CMsgTrading_InitiateTradeRequest_default_instance_.Shutdown();
  delete file_level_metadata[61].reflection;
  _CMsgTrading_InitiateTradeResponse_default_instance_.Shutdown();
  delete file_level_metadata[62].reflection;
  _CMsgTrading_CancelTradeRequest_default_instance_.Shutdown();
  delete file_level_metadata[63].reflection;
  _CMsgTrading_StartSession_default_instance_.Shutdown();
  delete file_level_metadata[64].reflection;
  _CMsgClientEmailChange_default_instance_.Shutdown();
  delete file_level_metadata[65].reflection;
  _CMsgClientEmailChangeResponse_default_instance_.Shutdown();
  delete file_level_metadata[66].reflection;
  _CMsgClientGetCDNAuthToken_default_instance_.Shutdown();
  delete file_level_metadata[67].reflection;
  _CMsgClientGetDepotDecryptionKey_default_instance_.Shutdown();
  delete file_level_metadata[68].reflection;
  _CMsgClientGetDepotDecryptionKeyResponse_default_instance_.Shutdown();
  delete file_level_metadata[69].reflection;
  _CMsgClientCheckAppBetaPassword_default_instance_.Shutdown();
  delete file_level_metadata[70].reflection;
  _CMsgClientCheckAppBetaPasswordResponse_BetaPassword_default_instance_.Shutdown();
  delete file_level_metadata[71].reflection;
  _CMsgClientCheckAppBetaPasswordResponse_default_instance_.Shutdown();
  delete file_level_metadata[72].reflection;
  _CMsgClientUpdateAppJobReport_default_instance_.Shutdown();
  delete file_level_metadata[73].reflection;
  _CMsgClientDPContentStatsReport_default_instance_.Shutdown();
  delete file_level_metadata[74].reflection;
  _CMsgClientGetCDNAuthTokenResponse_default_instance_.Shutdown();
  delete file_level_metadata[75].reflection;
  _CMsgDownloadRateStatistics_StatsInfo_default_instance_.Shutdown();
  delete file_level_metadata[76].reflection;
  _CMsgDownloadRateStatistics_default_instance_.Shutdown();
  delete file_level_metadata[77].reflection;
  _CMsgClientRequestAccountData_default_instance_.Shutdown();
  delete file_level_metadata[78].reflection;
  _CMsgClientRequestAccountDataResponse_default_instance_.Shutdown();
  delete file_level_metadata[79].reflection;
  _CMsgClientUGSGetGlobalStats_default_instance_.Shutdown();
  delete file_level_metadata[80].reflection;
  _CMsgClientUGSGetGlobalStatsResponse_Day_Stat_default_instance_.Shutdown();
  delete file_level_metadata[81].reflection;
  _CMsgClientUGSGetGlobalStatsResponse_Day_default_instance_.Shutdown();
  delete file_level_metadata[82].reflection;
  _CMsgClientUGSGetGlobalStatsResponse_default_instance_.Shutdown();
  delete file_level_metadata[83].reflection;
  _CMsgGameServerData_Player_default_instance_.Shutdown();
  delete file_level_metadata[84].reflection;
  _CMsgGameServerData_default_instance_.Shutdown();
  delete file_level_metadata[85].reflection;
  _CMsgGameServerRemove_default_instance_.Shutdown();
  delete file_level_metadata[86].reflection;
  _CMsgClientGMSServerQuery_default_instance_.Shutdown();
  delete file_level_metadata[87].reflection;
  _CMsgGMSClientServerQueryResponse_Server_default_instance_.Shutdown();
  delete file_level_metadata[88].reflection;
  _CMsgGMSClientServerQueryResponse_default_instance_.Shutdown();
  delete file_level_metadata[89].reflection;
  _CMsgGameServerOutOfDate_default_instance_.Shutdown();
  delete file_level_metadata[90].reflection;
  _CMsgClientRedeemGuestPass_default_instance_.Shutdown();
  delete file_level_metadata[91].reflection;
  _CMsgClientRedeemGuestPassResponse_default_instance_.Shutdown();
  delete file_level_metadata[92].reflection;
  _CMsgClientGetClanActivityCounts_default_instance_.Shutdown();
  delete file_level_metadata[93].reflection;
  _CMsgClientGetClanActivityCountsResponse_default_instance_.Shutdown();
  delete file_level_metadata[94].reflection;
  _CMsgClientOGSReportString_default_instance_.Shutdown();
  delete file_level_metadata[95].reflection;
  _CMsgClientOGSReportBug_default_instance_.Shutdown();
  delete file_level_metadata[96].reflection;
  _CMsgGSAssociateWithClan_default_instance_.Shutdown();
  delete file_level_metadata[97].reflection;
  _CMsgGSAssociateWithClanResponse_default_instance_.Shutdown();
  delete file_level_metadata[98].reflection;
  _CMsgGSComputeNewPlayerCompatibility_default_instance_.Shutdown();
  delete file_level_metadata[99].reflection;
  _CMsgGSComputeNewPlayerCompatibilityResponse_default_instance_.Shutdown();
  delete file_level_metadata[100].reflection;
  _CMsgClientSentLogs_default_instance_.Shutdown();
  delete file_level_metadata[101].reflection;
  _CMsgGCClient_default_instance_.Shutdown();
  delete file_level_metadata[102].reflection;
  _CMsgClientRequestFreeLicense_default_instance_.Shutdown();
  delete file_level_metadata[103].reflection;
  _CMsgClientRequestFreeLicenseResponse_default_instance_.Shutdown();
  delete file_level_metadata[104].reflection;
  _CMsgDRMDownloadRequestWithCrashData_default_instance_.Shutdown();
  delete file_level_metadata[105].reflection;
  _CMsgDRMDownloadResponse_default_instance_.Shutdown();
  delete file_level_metadata[106].reflection;
  _CMsgDRMFinalResult_default_instance_.Shutdown();
  delete file_level_metadata[107].reflection;
  _CMsgClientDPCheckSpecialSurvey_default_instance_.Shutdown();
  delete file_level_metadata[108].reflection;
  _CMsgClientDPCheckSpecialSurveyResponse_default_instance_.Shutdown();
  delete file_level_metadata[109].reflection;
  _CMsgClientDPSendSpecialSurveyResponse_default_instance_.Shutdown();
  delete file_level_metadata[110].reflection;
  _CMsgClientDPSendSpecialSurveyResponseReply_default_instance_.Shutdown();
  delete file_level_metadata[111].reflection;
  _CMsgClientRequestForgottenPasswordEmail_default_instance_.Shutdown();
  delete file_level_metadata[112].reflection;
  _CMsgClientRequestForgottenPasswordEmailResponse_default_instance_.Shutdown();
  delete file_level_metadata[113].reflection;
  _CMsgClientItemAnnouncements_default_instance_.Shutdown();
  delete file_level_metadata[114].reflection;
  _CMsgClientRequestItemAnnouncements_default_instance_.Shutdown();
  delete file_level_metadata[115].reflection;
  _CMsgClientUserNotifications_Notification_default_instance_.Shutdown();
  delete file_level_metadata[116].reflection;
  _CMsgClientUserNotifications_default_instance_.Shutdown();
  delete file_level_metadata[117].reflection;
  _CMsgClientCommentNotifications_default_instance_.Shutdown();
  delete file_level_metadata[118].reflection;
  _CMsgClientRequestCommentNotifications_default_instance_.Shutdown();
  delete file_level_metadata[119].reflection;
  _CMsgClientOfflineMessageNotification_default_instance_.Shutdown();
  delete file_level_metadata[120].reflection;
  _CMsgClientRequestOfflineMessageCount_default_instance_.Shutdown();
  delete file_level_metadata[121].reflection;
  _CMsgClientChatGetFriendMessageHistory_default_instance_.Shutdown();
  delete file_level_metadata[122].reflection;
  _CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_default_instance_.Shutdown();
  delete file_level_metadata[123].reflection;
  _CMsgClientChatGetFriendMessageHistoryResponse_default_instance_.Shutdown();
  delete file_level_metadata[124].reflection;
  _CMsgClientChatGetFriendMessageHistoryForOfflineMessages_default_instance_.Shutdown();
  delete file_level_metadata[125].reflection;
  _CMsgClientFSGetFriendsSteamLevels_default_instance_.Shutdown();
  delete file_level_metadata[126].reflection;
  _CMsgClientFSGetFriendsSteamLevelsResponse_Friend_default_instance_.Shutdown();
  delete file_level_metadata[127].reflection;
  _CMsgClientFSGetFriendsSteamLevelsResponse_default_instance_.Shutdown();
  delete file_level_metadata[128].reflection;
  _CMsgClientEmailAddrInfo_default_instance_.Shutdown();
  delete file_level_metadata[129].reflection;
  _CMsgCREEnumeratePublishedFiles_default_instance_.Shutdown();
  delete file_level_metadata[130].reflection;
  _CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_default_instance_.Shutdown();
  delete file_level_metadata[131].reflection;
  _CMsgCREEnumeratePublishedFilesResponse_default_instance_.Shutdown();
  delete file_level_metadata[132].reflection;
  _CMsgCREItemVoteSummary_PublishedFileId_default_instance_.Shutdown();
  delete file_level_metadata[133].reflection;
  _CMsgCREItemVoteSummary_default_instance_.Shutdown();
  delete file_level_metadata[134].reflection;
  _CMsgCREItemVoteSummaryResponse_ItemVoteSummary_default_instance_.Shutdown();
  delete file_level_metadata[135].reflection;
  _CMsgCREItemVoteSummaryResponse_default_instance_.Shutdown();
  delete file_level_metadata[136].reflection;
  _CMsgCREUpdateUserPublishedItemVote_default_instance_.Shutdown();
  delete file_level_metadata[137].reflection;
  _CMsgCREUpdateUserPublishedItemVoteResponse_default_instance_.Shutdown();
  delete file_level_metadata[138].reflection;
  _CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_default_instance_.Shutdown();
  delete file_level_metadata[139].reflection;
  _CMsgCREGetUserPublishedItemVoteDetails_default_instance_.Shutdown();
  delete file_level_metadata[140].reflection;
  _CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_default_instance_.Shutdown();
  delete file_level_metadata[141].reflection;
  _CMsgCREGetUserPublishedItemVoteDetailsResponse_default_instance_.Shutdown();
  delete file_level_metadata[142].reflection;
  _CMsgGameServerPingSample_Sample_default_instance_.Shutdown();
  delete file_level_metadata[143].reflection;
  _CMsgGameServerPingSample_default_instance_.Shutdown();
  delete file_level_metadata[144].reflection;
  _CMsgFSGetFollowerCount_default_instance_.Shutdown();
  delete file_level_metadata[145].reflection;
  _CMsgFSGetFollowerCountResponse_default_instance_.Shutdown();
  delete file_level_metadata[146].reflection;
  _CMsgFSGetIsFollowing_default_instance_.Shutdown();
  delete file_level_metadata[147].reflection;
  _CMsgFSGetIsFollowingResponse_default_instance_.Shutdown();
  delete file_level_metadata[148].reflection;
  _CMsgFSEnumerateFollowingList_default_instance_.Shutdown();
  delete file_level_metadata[149].reflection;
  _CMsgFSEnumerateFollowingListResponse_default_instance_.Shutdown();
  delete file_level_metadata[150].reflection;
  _CMsgDPGetNumberOfCurrentPlayers_default_instance_.Shutdown();
  delete file_level_metadata[151].reflection;
  _CMsgDPGetNumberOfCurrentPlayersResponse_default_instance_.Shutdown();
  delete file_level_metadata[152].reflection;
  _CMsgClientFriendUserStatusPublished_default_instance_.Shutdown();
  delete file_level_metadata[153].reflection;
  _CMsgClientServiceMethod_default_instance_.Shutdown();
  delete file_level_metadata[154].reflection;
  _CMsgClientServiceMethodResponse_default_instance_.Shutdown();
  delete file_level_metadata[155].reflection;
  _CMsgClientUIMode_default_instance_.Shutdown();
  delete file_level_metadata[156].reflection;
  _CMsgClientVanityURLChangedNotification_default_instance_.Shutdown();
  delete file_level_metadata[157].reflection;
  _CMsgClientAuthorizeLocalDeviceRequest_default_instance_.Shutdown();
  delete file_level_metadata[158].reflection;
  _CMsgClientAuthorizeLocalDevice_default_instance_.Shutdown();
  delete file_level_metadata[159].reflection;
  _CMsgClientAuthorizeLocalDeviceNotification_default_instance_.Shutdown();
  delete file_level_metadata[160].reflection;
  _CMsgClientDeauthorizeDeviceRequest_default_instance_.Shutdown();
  delete file_level_metadata[161].reflection;
  _CMsgClientDeauthorizeDevice_default_instance_.Shutdown();
  delete file_level_metadata[162].reflection;
  _CMsgClientUseLocalDeviceAuthorizations_DeviceToken_default_instance_.Shutdown();
  delete file_level_metadata[163].reflection;
  _CMsgClientUseLocalDeviceAuthorizations_default_instance_.Shutdown();
  delete file_level_metadata[164].reflection;
  _CMsgClientGetAuthorizedDevices_default_instance_.Shutdown();
  delete file_level_metadata[165].reflection;
  _CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_default_instance_.Shutdown();
  delete file_level_metadata[166].reflection;
  _CMsgClientGetAuthorizedDevicesResponse_default_instance_.Shutdown();
  delete file_level_metadata[167].reflection;
  _CMsgClientSharedLibraryLockStatus_LockedLibrary_default_instance_.Shutdown();
  delete file_level_metadata[168].reflection;
  _CMsgClientSharedLibraryLockStatus_default_instance_.Shutdown();
  delete file_level_metadata[169].reflection;
  _CMsgClientSharedLibraryStopPlaying_StopApp_default_instance_.Shutdown();
  delete file_level_metadata[170].reflection;
  _CMsgClientSharedLibraryStopPlaying_default_instance_.Shutdown();
  delete file_level_metadata[171].reflection;
  _CMsgClientServiceCall_default_instance_.Shutdown();
  delete file_level_metadata[172].reflection;
  _CMsgClientServiceModule_default_instance_.Shutdown();
  delete file_level_metadata[173].reflection;
  _CMsgClientServiceCallResponse_default_instance_.Shutdown();
  delete file_level_metadata[174].reflection;
  _CMsgAMUnlockStreaming_default_instance_.Shutdown();
  delete file_level_metadata[175].reflection;
  _CMsgAMUnlockStreamingResponse_default_instance_.Shutdown();
  delete file_level_metadata[176].reflection;
  _CMsgClientPlayingSessionState_default_instance_.Shutdown();
  delete file_level_metadata[177].reflection;
  _CMsgClientKickPlayingSession_default_instance_.Shutdown();
  delete file_level_metadata[178].reflection;
  _CMsgClientCreateAccount_default_instance_.Shutdown();
  delete file_level_metadata[179].reflection;
  _CMsgClientCreateAccountResponse_default_instance_.Shutdown();
  delete file_level_metadata[180].reflection;
  _CMsgClientVoiceCallPreAuthorize_default_instance_.Shutdown();
  delete file_level_metadata[181].reflection;
  _CMsgClientVoiceCallPreAuthorizeResponse_default_instance_.Shutdown();
  delete file_level_metadata[182].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::steam::protobuf_steammessages_5fbase_2eproto::InitDefaults();
  _CMsgClientUCMAddScreenshot_Tag_default_instance_.DefaultConstruct();
  _CMsgClientUCMAddScreenshot_default_instance_.DefaultConstruct();
  _CMsgClientUCMAddScreenshotResponse_default_instance_.DefaultConstruct();
  _CMsgClientUCMDeleteScreenshot_default_instance_.DefaultConstruct();
  _CMsgClientUCMDeleteScreenshotResponse_default_instance_.DefaultConstruct();
  _CMsgClientUCMPublishFile_default_instance_.DefaultConstruct();
  _CMsgClientUCMPublishFileResponse_default_instance_.DefaultConstruct();
  _CMsgClientUCMUpdatePublishedFile_KeyValueTag_default_instance_.DefaultConstruct();
  _CMsgClientUCMUpdatePublishedFile_AdditionalPreview_default_instance_.DefaultConstruct();
  _CMsgClientUCMUpdatePublishedFile_default_instance_.DefaultConstruct();
  _CMsgClientUCMUpdatePublishedFileResponse_default_instance_.DefaultConstruct();
  _CMsgClientUCMDeletePublishedFile_default_instance_.DefaultConstruct();
  _CMsgClientUCMDeletePublishedFileResponse_default_instance_.DefaultConstruct();
  _CMsgClientUCMEnumerateUserPublishedFiles_default_instance_.DefaultConstruct();
  _CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId_default_instance_.DefaultConstruct();
  _CMsgClientUCMEnumerateUserPublishedFilesResponse_default_instance_.DefaultConstruct();
  _CMsgClientUCMEnumerateUserSubscribedFiles_default_instance_.DefaultConstruct();
  _CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId_default_instance_.DefaultConstruct();
  _CMsgClientUCMEnumerateUserSubscribedFilesResponse_default_instance_.DefaultConstruct();
  _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates_default_instance_.DefaultConstruct();
  _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId_default_instance_.DefaultConstruct();
  _CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_default_instance_.DefaultConstruct();
  _CMsgClientUCMPublishedFileSubscribed_default_instance_.DefaultConstruct();
  _CMsgClientUCMPublishedFileUnsubscribed_default_instance_.DefaultConstruct();
  _CMsgClientUCMPublishedFileDeleted_default_instance_.DefaultConstruct();
  _CMsgClientUCMPublishedFileUpdated_default_instance_.DefaultConstruct();
  _CMsgClientWorkshopItemChangesRequest_default_instance_.DefaultConstruct();
  _CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo_default_instance_.DefaultConstruct();
  _CMsgClientWorkshopItemChangesResponse_default_instance_.DefaultConstruct();
  _CMsgClientWorkshopItemInfoRequest_WorkshopItem_default_instance_.DefaultConstruct();
  _CMsgClientWorkshopItemInfoRequest_default_instance_.DefaultConstruct();
  _CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo_default_instance_.DefaultConstruct();
  _CMsgClientWorkshopItemInfoResponse_default_instance_.DefaultConstruct();
  _CMsgClientUCMGetPublishedFilesForUser_default_instance_.DefaultConstruct();
  _CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId_default_instance_.DefaultConstruct();
  _CMsgClientUCMGetPublishedFilesForUserResponse_default_instance_.DefaultConstruct();
  _CMsgClientUCMSetUserPublishedFileAction_default_instance_.DefaultConstruct();
  _CMsgClientUCMSetUserPublishedFileActionResponse_default_instance_.DefaultConstruct();
  _CMsgClientUCMEnumeratePublishedFilesByUserAction_default_instance_.DefaultConstruct();
  _CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId_default_instance_.DefaultConstruct();
  _CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_default_instance_.DefaultConstruct();
  _CMsgClientScreenshotsChanged_default_instance_.DefaultConstruct();
  _CMsgClientUpdateUserGameInfo_default_instance_.DefaultConstruct();
  _CMsgClientRichPresenceUpload_default_instance_.DefaultConstruct();
  _CMsgClientRichPresenceRequest_default_instance_.DefaultConstruct();
  _CMsgClientRichPresenceInfo_RichPresence_default_instance_.DefaultConstruct();
  _CMsgClientRichPresenceInfo_default_instance_.DefaultConstruct();
  _CMsgClientCheckFileSignature_default_instance_.DefaultConstruct();
  _CMsgClientCheckFileSignatureResponse_default_instance_.DefaultConstruct();
  _CMsgClientReadMachineAuth_default_instance_.DefaultConstruct();
  _CMsgClientReadMachineAuthResponse_default_instance_.DefaultConstruct();
  _CMsgClientUpdateMachineAuth_default_instance_.DefaultConstruct();
  _CMsgClientUpdateMachineAuthResponse_default_instance_.DefaultConstruct();
  _CMsgClientRequestMachineAuth_default_instance_.DefaultConstruct();
  _CMsgClientRequestMachineAuthResponse_default_instance_.DefaultConstruct();
  _CMsgClientRegisterKey_default_instance_.DefaultConstruct();
  _CMsgClientPurchaseResponse_default_instance_.DefaultConstruct();
  _CMsgClientActivateOEMLicense_default_instance_.DefaultConstruct();
  _CMsgClientRegisterOEMMachine_default_instance_.DefaultConstruct();
  _CMsgClientRegisterOEMMachineResponse_default_instance_.DefaultConstruct();
  _CMsgClientPurchaseWithMachineID_default_instance_.DefaultConstruct();
  _CMsgTrading_InitiateTradeRequest_default_instance_.DefaultConstruct();
  _CMsgTrading_InitiateTradeResponse_default_instance_.DefaultConstruct();
  _CMsgTrading_CancelTradeRequest_default_instance_.DefaultConstruct();
  _CMsgTrading_StartSession_default_instance_.DefaultConstruct();
  _CMsgClientEmailChange_default_instance_.DefaultConstruct();
  _CMsgClientEmailChangeResponse_default_instance_.DefaultConstruct();
  _CMsgClientGetCDNAuthToken_default_instance_.DefaultConstruct();
  _CMsgClientGetDepotDecryptionKey_default_instance_.DefaultConstruct();
  _CMsgClientGetDepotDecryptionKeyResponse_default_instance_.DefaultConstruct();
  _CMsgClientCheckAppBetaPassword_default_instance_.DefaultConstruct();
  _CMsgClientCheckAppBetaPasswordResponse_BetaPassword_default_instance_.DefaultConstruct();
  _CMsgClientCheckAppBetaPasswordResponse_default_instance_.DefaultConstruct();
  _CMsgClientUpdateAppJobReport_default_instance_.DefaultConstruct();
  _CMsgClientDPContentStatsReport_default_instance_.DefaultConstruct();
  _CMsgClientGetCDNAuthTokenResponse_default_instance_.DefaultConstruct();
  _CMsgDownloadRateStatistics_StatsInfo_default_instance_.DefaultConstruct();
  _CMsgDownloadRateStatistics_default_instance_.DefaultConstruct();
  _CMsgClientRequestAccountData_default_instance_.DefaultConstruct();
  _CMsgClientRequestAccountDataResponse_default_instance_.DefaultConstruct();
  _CMsgClientUGSGetGlobalStats_default_instance_.DefaultConstruct();
  _CMsgClientUGSGetGlobalStatsResponse_Day_Stat_default_instance_.DefaultConstruct();
  _CMsgClientUGSGetGlobalStatsResponse_Day_default_instance_.DefaultConstruct();
  _CMsgClientUGSGetGlobalStatsResponse_default_instance_.DefaultConstruct();
  _CMsgGameServerData_Player_default_instance_.DefaultConstruct();
  _CMsgGameServerData_default_instance_.DefaultConstruct();
  _CMsgGameServerRemove_default_instance_.DefaultConstruct();
  _CMsgClientGMSServerQuery_default_instance_.DefaultConstruct();
  _CMsgGMSClientServerQueryResponse_Server_default_instance_.DefaultConstruct();
  _CMsgGMSClientServerQueryResponse_default_instance_.DefaultConstruct();
  _CMsgGameServerOutOfDate_default_instance_.DefaultConstruct();
  _CMsgClientRedeemGuestPass_default_instance_.DefaultConstruct();
  _CMsgClientRedeemGuestPassResponse_default_instance_.DefaultConstruct();
  _CMsgClientGetClanActivityCounts_default_instance_.DefaultConstruct();
  _CMsgClientGetClanActivityCountsResponse_default_instance_.DefaultConstruct();
  _CMsgClientOGSReportString_default_instance_.DefaultConstruct();
  _CMsgClientOGSReportBug_default_instance_.DefaultConstruct();
  _CMsgGSAssociateWithClan_default_instance_.DefaultConstruct();
  _CMsgGSAssociateWithClanResponse_default_instance_.DefaultConstruct();
  _CMsgGSComputeNewPlayerCompatibility_default_instance_.DefaultConstruct();
  _CMsgGSComputeNewPlayerCompatibilityResponse_default_instance_.DefaultConstruct();
  _CMsgClientSentLogs_default_instance_.DefaultConstruct();
  _CMsgGCClient_default_instance_.DefaultConstruct();
  _CMsgClientRequestFreeLicense_default_instance_.DefaultConstruct();
  _CMsgClientRequestFreeLicenseResponse_default_instance_.DefaultConstruct();
  _CMsgDRMDownloadRequestWithCrashData_default_instance_.DefaultConstruct();
  _CMsgDRMDownloadResponse_default_instance_.DefaultConstruct();
  _CMsgDRMFinalResult_default_instance_.DefaultConstruct();
  _CMsgClientDPCheckSpecialSurvey_default_instance_.DefaultConstruct();
  _CMsgClientDPCheckSpecialSurveyResponse_default_instance_.DefaultConstruct();
  _CMsgClientDPSendSpecialSurveyResponse_default_instance_.DefaultConstruct();
  _CMsgClientDPSendSpecialSurveyResponseReply_default_instance_.DefaultConstruct();
  _CMsgClientRequestForgottenPasswordEmail_default_instance_.DefaultConstruct();
  _CMsgClientRequestForgottenPasswordEmailResponse_default_instance_.DefaultConstruct();
  _CMsgClientItemAnnouncements_default_instance_.DefaultConstruct();
  _CMsgClientRequestItemAnnouncements_default_instance_.DefaultConstruct();
  _CMsgClientUserNotifications_Notification_default_instance_.DefaultConstruct();
  _CMsgClientUserNotifications_default_instance_.DefaultConstruct();
  _CMsgClientCommentNotifications_default_instance_.DefaultConstruct();
  _CMsgClientRequestCommentNotifications_default_instance_.DefaultConstruct();
  _CMsgClientOfflineMessageNotification_default_instance_.DefaultConstruct();
  _CMsgClientRequestOfflineMessageCount_default_instance_.DefaultConstruct();
  _CMsgClientChatGetFriendMessageHistory_default_instance_.DefaultConstruct();
  _CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage_default_instance_.DefaultConstruct();
  _CMsgClientChatGetFriendMessageHistoryResponse_default_instance_.DefaultConstruct();
  _CMsgClientChatGetFriendMessageHistoryForOfflineMessages_default_instance_.DefaultConstruct();
  _CMsgClientFSGetFriendsSteamLevels_default_instance_.DefaultConstruct();
  _CMsgClientFSGetFriendsSteamLevelsResponse_Friend_default_instance_.DefaultConstruct();
  _CMsgClientFSGetFriendsSteamLevelsResponse_default_instance_.DefaultConstruct();
  _CMsgClientEmailAddrInfo_default_instance_.DefaultConstruct();
  _CMsgCREEnumeratePublishedFiles_default_instance_.DefaultConstruct();
  _CMsgCREEnumeratePublishedFilesResponse_PublishedFileId_default_instance_.DefaultConstruct();
  _CMsgCREEnumeratePublishedFilesResponse_default_instance_.DefaultConstruct();
  _CMsgCREItemVoteSummary_PublishedFileId_default_instance_.DefaultConstruct();
  _CMsgCREItemVoteSummary_default_instance_.DefaultConstruct();
  _CMsgCREItemVoteSummaryResponse_ItemVoteSummary_default_instance_.DefaultConstruct();
  _CMsgCREItemVoteSummaryResponse_default_instance_.DefaultConstruct();
  _CMsgCREUpdateUserPublishedItemVote_default_instance_.DefaultConstruct();
  _CMsgCREUpdateUserPublishedItemVoteResponse_default_instance_.DefaultConstruct();
  _CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId_default_instance_.DefaultConstruct();
  _CMsgCREGetUserPublishedItemVoteDetails_default_instance_.DefaultConstruct();
  _CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail_default_instance_.DefaultConstruct();
  _CMsgCREGetUserPublishedItemVoteDetailsResponse_default_instance_.DefaultConstruct();
  _CMsgGameServerPingSample_Sample_default_instance_.DefaultConstruct();
  _CMsgGameServerPingSample_default_instance_.DefaultConstruct();
  _CMsgFSGetFollowerCount_default_instance_.DefaultConstruct();
  _CMsgFSGetFollowerCountResponse_default_instance_.DefaultConstruct();
  _CMsgFSGetIsFollowing_default_instance_.DefaultConstruct();
  _CMsgFSGetIsFollowingResponse_default_instance_.DefaultConstruct();
  _CMsgFSEnumerateFollowingList_default_instance_.DefaultConstruct();
  _CMsgFSEnumerateFollowingListResponse_default_instance_.DefaultConstruct();
  _CMsgDPGetNumberOfCurrentPlayers_default_instance_.DefaultConstruct();
  _CMsgDPGetNumberOfCurrentPlayersResponse_default_instance_.DefaultConstruct();
  _CMsgClientFriendUserStatusPublished_default_instance_.DefaultConstruct();
  _CMsgClientServiceMethod_default_instance_.DefaultConstruct();
  _CMsgClientServiceMethodResponse_default_instance_.DefaultConstruct();
  _CMsgClientUIMode_default_instance_.DefaultConstruct();
  _CMsgClientVanityURLChangedNotification_default_instance_.DefaultConstruct();
  _CMsgClientAuthorizeLocalDeviceRequest_default_instance_.DefaultConstruct();
  _CMsgClientAuthorizeLocalDevice_default_instance_.DefaultConstruct();
  _CMsgClientAuthorizeLocalDeviceNotification_default_instance_.DefaultConstruct();
  _CMsgClientDeauthorizeDeviceRequest_default_instance_.DefaultConstruct();
  _CMsgClientDeauthorizeDevice_default_instance_.DefaultConstruct();
  _CMsgClientUseLocalDeviceAuthorizations_DeviceToken_default_instance_.DefaultConstruct();
  _CMsgClientUseLocalDeviceAuthorizations_default_instance_.DefaultConstruct();
  _CMsgClientGetAuthorizedDevices_default_instance_.DefaultConstruct();
  _CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice_default_instance_.DefaultConstruct();
  _CMsgClientGetAuthorizedDevicesResponse_default_instance_.DefaultConstruct();
  _CMsgClientSharedLibraryLockStatus_LockedLibrary_default_instance_.DefaultConstruct();
  _CMsgClientSharedLibraryLockStatus_default_instance_.DefaultConstruct();
  _CMsgClientSharedLibraryStopPlaying_StopApp_default_instance_.DefaultConstruct();
  _CMsgClientSharedLibraryStopPlaying_default_instance_.DefaultConstruct();
  _CMsgClientServiceCall_default_instance_.DefaultConstruct();
  _CMsgClientServiceModule_default_instance_.DefaultConstruct();
  _CMsgClientServiceCallResponse_default_instance_.DefaultConstruct();
  _CMsgAMUnlockStreaming_default_instance_.DefaultConstruct();
  _CMsgAMUnlockStreamingResponse_default_instance_.DefaultConstruct();
  _CMsgClientPlayingSessionState_default_instance_.DefaultConstruct();
  _CMsgClientKickPlayingSession_default_instance_.DefaultConstruct();
  _CMsgClientCreateAccount_default_instance_.DefaultConstruct();
  _CMsgClientCreateAccountResponse_default_instance_.DefaultConstruct();
  _CMsgClientVoiceCallPreAuthorize_default_instance_.DefaultConstruct();
  _CMsgClientVoiceCallPreAuthorizeResponse_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\"steammessages_clientserver_2.proto\022\013pr"
      "oto.steam\032\030steammessages_base.proto\"\215\003\n\032"
      "CMsgClientUCMAddScreenshot\022\r\n\005appid\030\001 \001("
      "\r\022\020\n\010filename\030\002 \001(\t\022\021\n\tthumbname\030\003 \001(\t\022\023"
      "\n\013vr_filename\030\016 \001(\t\022\027\n\017rtime32_created\030\004"
      " \001(\007\022\r\n\005width\030\005 \001(\r\022\016\n\006height\030\006 \001(\r\022\023\n\013p"
      "ermissions\030\007 \001(\r\022\017\n\007caption\030\010 \001(\t\022\025\n\rsho"
      "rtcut_name\030\t \001(\t\0228\n\003tag\030\n \003(\0132+.proto.st"
      "eam.CMsgClientUCMAddScreenshot.Tag\022\026\n\016ta"
      "gged_steamid\030\013 \003(\006\022\023\n\013spoiler_tag\030\014 \001(\010\022"
      "\036\n\026tagged_publishedfileid\030\r \003(\004\032*\n\003Tag\022\020"
      "\n\010tag_name\030\001 \001(\t\022\021\n\ttag_value\030\002 \001(\t\"d\n\"C"
      "MsgClientUCMAddScreenshotResponse\022\022\n\007ere"
      "sult\030\001 \001(\005:\0012\022*\n\014screenshotid\030\002 \001(\006:\024184"
      "46744073709551615\"K\n\035CMsgClientUCMDelete"
      "Screenshot\022*\n\014screenshotid\030\001 \001(\006:\024184467"
      "44073709551615\";\n%CMsgClientUCMDeleteScr"
      "eenshotResponse\022\022\n\007eresult\030\001 \001(\005:\0012\"\321\002\n\030"
      "CMsgClientUCMPublishFile\022\016\n\006app_id\030\001 \001(\r"
      "\022\021\n\tfile_name\030\002 \001(\t\022\031\n\021preview_file_name"
      "\030\003 \001(\t\022\027\n\017consumer_app_id\030\004 \001(\r\022\r\n\005title"
      "\030\005 \001(\t\022\023\n\013description\030\006 \001(\t\022\014\n\004tags\030\010 \003("
      "\t\022\025\n\rworkshop_file\030\t \001(\010\022\022\n\nvisibility\030\n"
      " \001(\005\022\021\n\tfile_type\030\013 \001(\r\022\013\n\003url\030\014 \001(\t\022\026\n\016"
      "video_provider\030\r \001(\r\022\032\n\022video_account_na"
      "me\030\016 \001(\t\022\030\n\020video_identifier\030\017 \001(\t\022\023\n\013in"
      "_progress\030\020 \001(\010\"\241\001\n CMsgClientUCMPublish"
      "FileResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022/\n\021publ"
      "ished_file_id\030\002 \001(\006:\0241844674407370955161"
      "5\0228\n)needs_workshop_legal_agreement_acce"
      "ptance\030\003 \001(\010:\005false\"\264\007\n CMsgClientUCMUpd"
      "atePublishedFile\022\016\n\006app_id\030\001 \001(\r\022\031\n\021publ"
      "ished_file_id\030\002 \001(\006\022\021\n\tfile_name\030\003 \001(\t\022\031"
      "\n\021preview_file_name\030\004 \001(\t\022\r\n\005title\030\005 \001(\t"
      "\022\023\n\013description\030\006 \001(\t\022\014\n\004tags\030\007 \003(\t\022\022\n\nv"
      "isibility\030\010 \001(\005\022\023\n\013update_file\030\t \001(\010\022\033\n\023"
      "update_preview_file\030\n \001(\010\022\024\n\014update_titl"
      "e\030\013 \001(\010\022\032\n\022update_description\030\014 \001(\010\022\023\n\013u"
      "pdate_tags\030\r \001(\010\022\031\n\021update_visibility\030\016 "
      "\001(\010\022\032\n\022change_description\030\017 \001(\t\022\022\n\nupdat"
      "e_url\030\020 \001(\010\022\013\n\003url\030\021 \001(\t\022\037\n\027update_conte"
      "nt_manifest\030\022 \001(\010\022\030\n\020content_manifest\030\023 "
      "\001(\006\022\020\n\010metadata\030\024 \001(\t\022\027\n\017update_metadata"
      "\030\025 \001(\010\022\023\n\010language\030\026 \001(\005:\0010\022\026\n\016removed_k"
      "vtags\030\027 \003(\t\022I\n\006kvtags\030\030 \003(\01329.proto.stea"
      "m.CMsgClientUCMUpdatePublishedFile.KeyVa"
      "lueTag\022Q\n\010previews\030\031 \003(\0132\?.proto.steam.C"
      "MsgClientUCMUpdatePublishedFile.Addition"
      "alPreview\022\032\n\022previews_to_remove\030\032 \003(\005\022\031\n"
      "\021clear_in_progress\030\033 \001(\010\032)\n\013KeyValueTag\022"
      "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t\032\214\001\n\021Addition"
      "alPreview\022\032\n\022original_file_name\030\001 \001(\t\022\032\n"
      "\022internal_file_name\030\002 \001(\t\022\017\n\007videoid\030\003 \001"
      "(\t\022\024\n\014preview_type\030\004 \001(\r\022\030\n\014update_index"
      "\030\005 \001(\005:\002-1\"x\n(CMsgClientUCMUpdatePublish"
      "edFileResponse\022\022\n\007eresult\030\001 \001(\005:\0012\0228\n)ne"
      "eds_workshop_legal_agreement_acceptance\030"
      "\002 \001(\010:\005false\"M\n CMsgClientUCMDeletePubli"
      "shedFile\022\031\n\021published_file_id\030\001 \001(\006\022\016\n\006a"
      "pp_id\030\002 \001(\r\">\n(CMsgClientUCMDeletePublis"
      "hedFileResponse\022\022\n\007eresult\030\001 \001(\005:\0012\"c\n(C"
      "MsgClientUCMEnumerateUserPublishedFiles\022"
      "\016\n\006app_id\030\001 \001(\r\022\023\n\013start_index\030\002 \001(\r\022\022\n\n"
      "sort_order\030\003 \001(\r\"\363\001\n0CMsgClientUCMEnumer"
      "ateUserPublishedFilesResponse\022\022\n\007eresult"
      "\030\001 \001(\005:\0012\022f\n\017published_files\030\002 \003(\0132M.pro"
      "to.steam.CMsgClientUCMEnumerateUserPubli"
      "shedFilesResponse.PublishedFileId\022\025\n\rtot"
      "al_results\030\003 \001(\r\032,\n\017PublishedFileId\022\031\n\021p"
      "ublished_file_id\030\001 \001(\006\"\230\001\n)CMsgClientUCM"
      "EnumerateUserSubscribedFiles\022\016\n\006app_id\030\001"
      " \001(\r\022\023\n\013start_index\030\002 \001(\r\022\024\n\tlist_type\030\003"
      " \001(\r:\0011\022\035\n\022matching_file_type\030\004 \001(\r:\0010\022\021"
      "\n\005count\030\005 \001(\r:\00250\"\225\002\n1CMsgClientUCMEnume"
      "rateUserSubscribedFilesResponse\022\022\n\007eresu"
      "lt\030\001 \001(\005:\0012\022h\n\020subscribed_files\030\002 \003(\0132N."
      "proto.steam.CMsgClientUCMEnumerateUserSu"
      "bscribedFilesResponse.PublishedFileId\022\025\n"
      "\rtotal_results\030\003 \001(\r\032K\n\017PublishedFileId\022"
      "\031\n\021published_file_id\030\001 \001(\006\022\035\n\022rtime32_su"
      "bscribed\030\002 \001(\007:\0010\"o\n4CMsgClientUCMEnumer"
      "ateUserSubscribedFilesWithUpdates\022\016\n\006app"
      "_id\030\001 \001(\r\022\023\n\013start_index\030\002 \001(\r\022\022\n\nstart_"
      "time\030\003 \001(\007\"\235\003\n<CMsgClientUCMEnumerateUse"
      "rSubscribedFilesWithUpdatesResponse\022\022\n\007e"
      "result\030\001 \001(\005:\0012\022s\n\020subscribed_files\030\002 \003("
      "\0132Y.proto.steam.CMsgClientUCMEnumerateUs"
      "erSubscribedFilesWithUpdatesResponse.Pub"
      "lishedFileId\022\025\n\rtotal_results\030\003 \001(\r\032\274\001\n\017"
      "PublishedFileId\022\031\n\021published_file_id\030\001 \001"
      "(\006\022\035\n\022rtime32_subscribed\030\002 \001(\007:\0010\022\r\n\005app"
      "id\030\003 \001(\r\022\025\n\rfile_hcontent\030\004 \001(\006\022\021\n\tfile_"
      "size\030\005 \001(\r\022\034\n\024rtime32_last_updated\030\006 \001(\007"
      "\022\030\n\020is_depot_content\030\007 \001(\010\"\306\001\n$CMsgClien"
      "tUCMPublishedFileSubscribed\022\031\n\021published"
      "_file_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\022\025\n\rfile_h"
      "content\030\003 \001(\006\022\021\n\tfile_size\030\004 \001(\r\022\030\n\020rtim"
      "e_subscribed\030\005 \001(\r\022\030\n\020is_depot_content\030\006"
      " \001(\010\022\025\n\rrtime_updated\030\007 \001(\r\"S\n&CMsgClien"
      "tUCMPublishedFileUnsubscribed\022\031\n\021publish"
      "ed_file_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\"N\n!CMsg"
      "ClientUCMPublishedFileDeleted\022\031\n\021publish"
      "ed_file_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\"\243\001\n!CMs"
      "gClientUCMPublishedFileUpdated\022\031\n\021publis"
      "hed_file_id\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\022\024\n\014tim"
      "e_updated\030\003 \001(\r\022\020\n\010hcontent\030\004 \001(\006\022\021\n\tfil"
      "e_size\030\005 \001(\007\022\030\n\020is_depot_content\030\006 \001(\010\"k"
      "\n$CMsgClientWorkshopItemChangesRequest\022\016"
      "\n\006app_id\030\001 \001(\r\022\031\n\021last_time_updated\030\002 \001("
      "\r\022\030\n\020num_items_needed\030\003 \001(\r\"\207\002\n%CMsgClie"
      "ntWorkshopItemChangesResponse\022\022\n\007eresult"
      "\030\001 \001(\005:\0012\022\023\n\013update_time\030\002 \001(\r\022[\n\016worksh"
      "op_items\030\005 \003(\0132C.proto.steam.CMsgClientW"
      "orkshopItemChangesResponse.WorkshopItemI"
      "nfo\032X\n\020WorkshopItemInfo\022\031\n\021published_fil"
      "e_id\030\001 \001(\006\022\024\n\014time_updated\030\002 \001(\r\022\023\n\013mani"
      "fest_id\030\003 \001(\006\"\344\001\n!CMsgClientWorkshopItem"
      "InfoRequest\022\016\n\006app_id\030\001 \001(\r\022\031\n\021last_time"
      "_updated\030\002 \001(\r\022S\n\016workshop_items\030\003 \003(\0132;"
      ".proto.steam.CMsgClientWorkshopItemInfoR"
      "equest.WorkshopItem\032\?\n\014WorkshopItem\022\031\n\021p"
      "ublished_file_id\030\001 \001(\006\022\024\n\014time_updated\030\002"
      " \001(\r\"\253\002\n\"CMsgClientWorkshopItemInfoRespo"
      "nse\022\022\n\007eresult\030\001 \001(\005:\0012\022\023\n\013update_time\030\002"
      " \001(\r\022X\n\016workshop_items\030\003 \003(\0132@.proto.ste"
      "am.CMsgClientWorkshopItemInfoResponse.Wo"
      "rkshopItemInfo\022\025\n\rprivate_items\030\004 \003(\006\032k\n"
      "\020WorkshopItemInfo\022\031\n\021published_file_id\030\001"
      " \001(\006\022\024\n\014time_updated\030\002 \001(\r\022\023\n\013manifest_i"
      "d\030\003 \001(\006\022\021\n\tis_legacy\030\004 \001(\010\"\224\001\n%CMsgClien"
      "tUCMGetPublishedFilesForUser\022\016\n\006app_id\030\001"
      " \001(\r\022\030\n\020creator_steam_id\030\002 \001(\006\022\025\n\rrequir"
      "ed_tags\030\003 \003(\t\022\025\n\rexcluded_tags\030\004 \003(\t\022\023\n\013"
      "start_index\030\005 \001(\r\"\355\001\n-CMsgClientUCMGetPu"
      "blishedFilesForUserResponse\022\022\n\007eresult\030\001"
      " \001(\005:\0012\022c\n\017published_files\030\002 \003(\0132J.proto"
      ".steam.CMsgClientUCMGetPublishedFilesFor"
      "UserResponse.PublishedFileId\022\025\n\rtotal_re"
      "sults\030\003 \001(\r\032,\n\017PublishedFileId\022\031\n\021publis"
      "hed_file_id\030\001 \001(\006\"d\n\'CMsgClientUCMSetUse"
      "rPublishedFileAction\022\031\n\021published_file_i"
      "d\030\001 \001(\006\022\016\n\006app_id\030\002 \001(\r\022\016\n\006action\030\003 \001(\005\""
      "E\n/CMsgClientUCMSetUserPublishedFileActi"
      "onResponse\022\022\n\007eresult\030\001 \001(\005:\0012\"g\n0CMsgCl"
      "ientUCMEnumeratePublishedFilesByUserActi"
      "on\022\016\n\006app_id\030\001 \001(\r\022\023\n\013start_index\030\002 \001(\r\022"
      "\016\n\006action\030\003 \001(\005\"\240\002\n8CMsgClientUCMEnumera"
      "tePublishedFilesByUserActionResponse\022\022\n\007"
      "eresult\030\001 \001(\005:\0012\022n\n\017published_files\030\002 \003("
      "\0132U.proto.steam.CMsgClientUCMEnumeratePu"
      "blishedFilesByUserActionResponse.Publish"
      "edFileId\022\025\n\rtotal_results\030\003 \001(\r\032I\n\017Publi"
      "shedFileId\022\031\n\021published_file_id\030\001 \001(\006\022\033\n"
      "\020rtime_time_stamp\030\002 \001(\007:\0010\"\036\n\034CMsgClient"
      "ScreenshotsChanged\"w\n\034CMsgClientUpdateUs"
      "erGameInfo\022\024\n\014steamid_idgs\030\001 \001(\006\022\016\n\006game"
      "id\030\002 \001(\006\022\017\n\007game_ip\030\003 \001(\r\022\021\n\tgame_port\030\004"
      " \001(\r\022\r\n\005token\030\005 \001(\014\"S\n\034CMsgClientRichPre"
      "senceUpload\022\030\n\020rich_presence_kv\030\001 \001(\014\022\031\n"
      "\021steamid_broadcast\030\002 \003(\006\"8\n\035CMsgClientRi"
      "chPresenceRequest\022\027\n\017steamid_request\030\001 \003"
      "(\006\"\251\001\n\032CMsgClientRichPresenceInfo\022K\n\rric"
      "h_presence\030\001 \003(\01324.proto.steam.CMsgClien"
      "tRichPresenceInfo.RichPresence\032>\n\014RichPr"
      "esence\022\024\n\014steamid_user\030\001 \001(\006\022\030\n\020rich_pre"
      "sence_kv\030\002 \001(\014\".\n\034CMsgClientCheckFileSig"
      "nature\022\016\n\006app_id\030\001 \001(\r\"\367\001\n$CMsgClientChe"
      "ckFileSignatureResponse\022\016\n\006app_id\030\001 \001(\r\022"
      "\013\n\003pid\030\002 \001(\r\022\017\n\007eresult\030\003 \001(\r\022\020\n\010filenam"
      "e\030\004 \001(\t\022\030\n\020esignatureresult\030\005 \001(\r\022\020\n\010sha"
      "_file\030\006 \001(\014\022\027\n\017signatureheader\030\007 \001(\014\022\020\n\010"
      "filesize\030\010 \001(\r\022\024\n\014getlasterror\030\t \001(\r\022\"\n\032"
      "evalvesignaturecheckdetail\030\n \001(\r\"P\n\031CMsg"
      "ClientReadMachineAuth\022\020\n\010filename\030\001 \001(\t\022"
      "\016\n\006offset\030\002 \001(\r\022\021\n\tcubtoread\030\003 \001(\r\"\316\001\n!C"
      "MsgClientReadMachineAuthResponse\022\020\n\010file"
      "name\030\001 \001(\t\022\017\n\007eresult\030\002 \001(\r\022\020\n\010filesize\030"
      "\003 \001(\r\022\020\n\010sha_file\030\004 \001(\014\022\024\n\014getlasterror\030"
      "\005 \001(\r\022\016\n\006offset\030\006 \001(\r\022\017\n\007cubread\030\007 \001(\r\022\022"
      "\n\nbytes_read\030\010 \001(\014\022\027\n\017filename_sentry\030\t "
      "\001(\t\"\275\001\n\033CMsgClientUpdateMachineAuth\022\020\n\010f"
      "ilename\030\001 \001(\t\022\016\n\006offset\030\002 \001(\r\022\022\n\ncubtowr"
      "ite\030\003 \001(\r\022\r\n\005bytes\030\004 \001(\014\022\020\n\010otp_type\030\005 \001"
      "(\r\022\026\n\016otp_identifier\030\006 \001(\t\022\030\n\020otp_shared"
      "secret\030\007 \001(\014\022\025\n\rotp_timedrift\030\010 \001(\r\"\341\001\n#"
      "CMsgClientUpdateMachineAuthResponse\022\020\n\010f"
      "ilename\030\001 \001(\t\022\017\n\007eresult\030\002 \001(\r\022\020\n\010filesi"
      "ze\030\003 \001(\r\022\020\n\010sha_file\030\004 \001(\014\022\024\n\014getlasterr"
      "or\030\005 \001(\r\022\016\n\006offset\030\006 \001(\r\022\020\n\010cubwrote\030\007 \001"
      "(\r\022\020\n\010otp_type\030\010 \001(\005\022\021\n\totp_value\030\t \001(\r\022"
      "\026\n\016otp_identifier\030\n \001(\t\"\241\002\n\034CMsgClientRe"
      "questMachineAuth\022\020\n\010filename\030\001 \001(\t\022\032\n\022er"
      "esult_sentryfile\030\002 \001(\r\022\020\n\010filesize\030\003 \001(\r"
      "\022\026\n\016sha_sentryfile\030\004 \001(\014\022\033\n\023lock_account"
      "_action\030\006 \001(\005\022\020\n\010otp_type\030\007 \001(\r\022\026\n\016otp_i"
      "dentifier\030\010 \001(\t\022\030\n\020otp_sharedsecret\030\t \001("
      "\014\022\021\n\totp_value\030\n \001(\r\022\024\n\014machine_name\030\013 \001"
      "(\t\022\037\n\027machine_name_userchosen\030\014 \001(\t\"7\n$C"
      "MsgClientRequestMachineAuthResponse\022\017\n\007e"
      "result\030\001 \001(\r\"$\n\025CMsgClientRegisterKey\022\013\n"
      "\003key\030\001 \001(\t\"p\n\032CMsgClientPurchaseResponse"
      "\022\022\n\007eresult\030\001 \001(\005:\0012\022\037\n\027purchase_result_"
      "details\030\002 \001(\005\022\035\n\025purchase_receipt_info\030\003"
      " \001(\014\"\305\001\n\034CMsgClientActivateOEMLicense\022\031\n"
      "\021bios_manufacturer\030\001 \001(\t\022\031\n\021bios_serialn"
      "umber\030\002 \001(\t\022\024\n\014license_file\030\003 \001(\014\022\036\n\026mai"
      "nboard_manufacturer\030\004 \001(\t\022\031\n\021mainboard_p"
      "roduct\030\005 \001(\t\022\036\n\026mainboard_serialnumber\030\006"
      " \001(\t\"9\n\034CMsgClientRegisterOEMMachine\022\031\n\021"
      "oem_register_file\030\001 \001(\014\"7\n$CMsgClientReg"
      "isterOEMMachineResponse\022\017\n\007eresult\030\001 \001(\r"
      "\"K\n\037CMsgClientPurchaseWithMachineID\022\022\n\np"
      "ackage_id\030\001 \001(\r\022\024\n\014machine_info\030\002 \001(\014\"g\n"
      " CMsgTrading_InitiateTradeRequest\022\030\n\020tra"
      "de_request_id\030\001 \001(\r\022\025\n\rother_steamid\030\002 \001"
      "(\004\022\022\n\nother_name\030\003 \001(\t\"\322\002\n!CMsgTrading_I"
      "nitiateTradeResponse\022\020\n\010response\030\001 \001(\r\022\030"
      "\n\020trade_request_id\030\002 \001(\r\022\025\n\rother_steami"
      "d\030\003 \001(\004\022 \n\030steamguard_required_days\030\004 \001("
      "\r\022 \n\030new_device_cooldown_days\030\005 \001(\r\022-\n%d"
      "efault_password_reset_probation_days\030\006 \001"
      "(\r\022%\n\035password_reset_probation_days\030\007 \001("
      "\r\022+\n#default_email_change_probation_days"
      "\030\010 \001(\r\022#\n\033email_change_probation_days\030\t "
      "\001(\r\"7\n\036CMsgTrading_CancelTradeRequest\022\025\n"
      "\rother_steamid\030\001 \001(\004\"1\n\030CMsgTrading_Star"
      "tSession\022\025\n\rother_steamid\030\001 \001(\004\"\257\001\n\025CMsg"
      "ClientEmailChange\022\020\n\010password\030\001 \001(\t\022\r\n\005e"
      "mail\030\002 \001(\t\022\014\n\004code\030\003 \001(\t\022\r\n\005final\030\004 \001(\010\022"
      "\021\n\tnewmethod\030\005 \001(\010\022\026\n\016twofactor_code\030\006 \001"
      "(\t\022\020\n\010sms_code\030\007 \001(\t\022\033\n\023client_supports_"
      "sms\030\010 \001(\010\"N\n\035CMsgClientEmailChangeRespon"
      "se\022\022\n\007eresult\030\001 \001(\005:\0012\022\031\n\021requires_sms_c"
      "ode\030\002 \001(\010\"P\n\031CMsgClientGetCDNAuthToken\022\020"
      "\n\010depot_id\030\001 \001(\r\022\021\n\thost_name\030\002 \001(\t\022\016\n\006a"
      "pp_id\030\003 \001(\r\"C\n\037CMsgClientGetDepotDecrypt"
      "ionKey\022\020\n\010depot_id\030\001 \001(\r\022\016\n\006app_id\030\002 \001(\r"
      "\"m\n\'CMsgClientGetDepotDecryptionKeyRespo"
      "nse\022\022\n\007eresult\030\001 \001(\005:\0012\022\020\n\010depot_id\030\002 \001("
      "\r\022\034\n\024depot_encryption_key\030\003 \001(\014\"F\n\036CMsgC"
      "lientCheckAppBetaPassword\022\016\n\006app_id\030\001 \001("
      "\r\022\024\n\014betapassword\030\002 \001(\t\"\315\001\n&CMsgClientCh"
      "eckAppBetaPasswordResponse\022\022\n\007eresult\030\001 "
      "\001(\005:\0012\022W\n\rbetapasswords\030\004 \003(\0132@.proto.st"
      "eam.CMsgClientCheckAppBetaPasswordRespon"
      "se.BetaPassword\0326\n\014BetaPassword\022\020\n\010betan"
      "ame\030\001 \001(\t\022\024\n\014betapassword\030\002 \001(\t\"\365\003\n\034CMsg"
      "ClientUpdateAppJobReport\022\016\n\006app_id\030\001 \001(\r"
      "\022\021\n\tdepot_ids\030\002 \003(\r\022\021\n\tapp_state\030\003 \001(\r\022\025"
      "\n\rjob_app_error\030\004 \001(\r\022\025\n\rerror_details\030\005"
      " \001(\t\022\024\n\014job_duration\030\006 \001(\r\022\037\n\027files_vali"
      "dation_failed\030\007 \001(\r\022\034\n\024job_bytes_downloa"
      "ded\030\010 \001(\004\022\030\n\020job_bytes_staged\030\t \001(\004\022\026\n\016b"
      "ytes_comitted\030\n \001(\004\022\027\n\017start_app_state\030\013"
      " \001(\r\022\030\n\020stats_machine_id\030\014 \001(\006\022\023\n\013branch"
      "_name\030\r \001(\t\022\036\n\026total_bytes_downloaded\030\016 "
      "\001(\004\022\032\n\022total_bytes_staged\030\017 \001(\004\022\034\n\024total"
      "_bytes_restored\030\020 \001(\004\022\023\n\013is_borrowed\030\021 \001"
      "(\010\022\027\n\017is_free_weekend\030\022 \001(\010\022\032\n\022total_byt"
      "es_legacy\030\023 \001(\004\"\313\001\n\036CMsgClientDPContentS"
      "tatsReport\022\030\n\020stats_machine_id\030\001 \001(\006\022\024\n\014"
      "country_code\030\002 \001(\t\022\017\n\007os_type\030\003 \001(\005\022\020\n\010l"
      "anguage\030\004 \001(\005\022\033\n\023num_install_folders\030\005 \001"
      "(\r\022\033\n\023num_installed_games\030\006 \001(\r\022\034\n\024size_"
      "installed_games\030\007 \001(\004\"_\n!CMsgClientGetCD"
      "NAuthTokenResponse\022\022\n\007eresult\030\001 \001(\r:\0012\022\r"
      "\n\005token\030\002 \001(\t\022\027\n\017expiration_time\030\003 \001(\r\"\327"
      "\001\n\032CMsgDownloadRateStatistics\022\017\n\007cell_id"
      "\030\001 \001(\r\022@\n\005stats\030\002 \003(\01321.proto.steam.CMsg"
      "DownloadRateStatistics.StatsInfo\032f\n\tStat"
      "sInfo\022\023\n\013source_type\030\001 \001(\r\022\021\n\tsource_id\030"
      "\002 \001(\r\022\017\n\007seconds\030\003 \001(\r\022\r\n\005bytes\030\004 \001(\004\022\021\n"
      "\thost_name\030\005 \001(\t\"H\n\034CMsgClientRequestAcc"
      "ountData\022\030\n\020account_or_email\030\001 \001(\t\022\016\n\006ac"
      "tion\030\002 \001(\r\"\327\001\n$CMsgClientRequestAccountD"
      "ataResponse\022\016\n\006action\030\001 \001(\r\022\017\n\007eresult\030\002"
      " \001(\r\022\024\n\014account_name\030\003 \001(\t\022\022\n\nct_matches"
      "\030\004 \001(\r\022 \n\030account_name_suggestion1\030\005 \001(\t"
      "\022 \n\030account_name_suggestion2\030\006 \001(\t\022 \n\030ac"
      "count_name_suggestion3\030\007 \001(\t\"\231\001\n\033CMsgCli"
      "entUGSGetGlobalStats\022\016\n\006gameid\030\001 \001(\004\022\036\n\026"
      "history_days_requested\030\002 \001(\r\022\033\n\023time_las"
      "t_requested\030\003 \001(\007\022\030\n\020first_day_cached\030\004 "
      "\001(\r\022\023\n\013days_cached\030\005 \001(\r\"\256\002\n#CMsgClientU"
      "GSGetGlobalStatsResponse\022\022\n\007eresult\030\001 \001("
      "\005:\0012\022\021\n\ttimestamp\030\002 \001(\007\022\023\n\013day_current\030\003"
      " \001(\005\022B\n\004days\030\004 \003(\01324.proto.steam.CMsgCli"
      "entUGSGetGlobalStatsResponse.Day\032\206\001\n\003Day"
      "\022\016\n\006day_id\030\001 \001(\r\022H\n\005stats\030\002 \003(\01329.proto."
      "steam.CMsgClientUGSGetGlobalStatsRespons"
      "e.Day.Stat\032%\n\004Stat\022\017\n\007stat_id\030\001 \001(\005\022\014\n\004d"
      "ata\030\002 \001(\003\"\340\003\n\022CMsgGameServerData\022\023\n\013stea"
      "m_id_gs\030\001 \001(\006\022\n\n\002ip\030\002 \001(\r\022\022\n\nquery_port\030"
      "\003 \001(\r\022\021\n\tgame_port\030\004 \001(\r\022\025\n\rsourcetv_por"
      "t\030\005 \001(\r\022\014\n\004name\030\026 \001(\t\022\016\n\006app_id\030\006 \001(\r\022\017\n"
      "\007gamedir\030\007 \001(\t\022\017\n\007version\030\010 \001(\t\022\017\n\007produ"
      "ct\030\t \001(\t\022\016\n\006region\030\n \001(\t\0227\n\007players\030\013 \003("
      "\0132&.proto.steam.CMsgGameServerData.Playe"
      "r\022\023\n\013max_players\030\014 \001(\r\022\021\n\tbot_count\030\r \001("
      "\r\022\020\n\010password\030\016 \001(\010\022\016\n\006secure\030\017 \001(\010\022\021\n\td"
      "edicated\030\020 \001(\010\022\n\n\002os\030\021 \001(\t\022\021\n\tgame_data\030"
      "\022 \001(\t\022\031\n\021game_data_version\030\023 \001(\r\022\021\n\tgame"
      "_type\030\024 \001(\t\022\013\n\003map\030\025 \001(\t\032\032\n\006Player\022\020\n\010st"
      "eam_id\030\001 \001(\006\"H\n\024CMsgGameServerRemove\022\020\n\010"
      "steam_id\030\001 \001(\006\022\n\n\002ip\030\002 \001(\r\022\022\n\nquery_port"
      "\030\003 \001(\r\"\202\001\n\030CMsgClientGMSServerQuery\022\016\n\006a"
      "pp_id\030\001 \001(\r\022\027\n\017geo_location_ip\030\002 \001(\r\022\023\n\013"
      "region_code\030\003 \001(\r\022\023\n\013filter_text\030\004 \001(\t\022\023"
      "\n\013max_servers\030\005 \001(\r\"\300\001\n CMsgGMSClientSer"
      "verQueryResponse\022E\n\007servers\030\001 \003(\01324.prot"
      "o.steam.CMsgGMSClientServerQueryResponse"
      ".Server\022\r\n\005error\030\002 \001(\t\032F\n\006Server\022\021\n\tserv"
      "er_ip\030\001 \001(\r\022\023\n\013server_port\030\002 \001(\r\022\024\n\014auth"
      "_players\030\003 \001(\r\"O\n\027CMsgGameServerOutOfDat"
      "e\022\023\n\013steam_id_gs\030\001 \001(\006\022\016\n\006reject\030\002 \001(\010\022\017"
      "\n\007message\030\003 \001(\t\"2\n\031CMsgClientRedeemGuest"
      "Pass\022\025\n\rguest_pass_id\030\001 \001(\006\"c\n!CMsgClien"
      "tRedeemGuestPassResponse\022\022\n\007eresult\030\001 \001("
      "\r:\0012\022\022\n\npackage_id\030\002 \001(\r\022\026\n\016must_own_app"
      "id\030\003 \001(\r\"8\n\037CMsgClientGetClanActivityCou"
      "nts\022\025\n\rsteamid_clans\030\001 \003(\004\"=\n\'CMsgClient"
      "GetClanActivityCountsResponse\022\022\n\007eresult"
      "\030\001 \001(\r:\0012\"y\n\031CMsgClientOGSReportString\022\023"
      "\n\013accumulated\030\001 \001(\010\022\021\n\tsessionid\030\002 \001(\004\022\020"
      "\n\010severity\030\003 \001(\005\022\021\n\tformatter\030\004 \001(\t\022\017\n\007v"
      "arargs\030\005 \001(\014\"P\n\026CMsgClientOGSReportBug\022\021"
      "\n\tsessionid\030\001 \001(\004\022\017\n\007bugtext\030\002 \001(\t\022\022\n\nsc"
      "reenshot\030\003 \001(\014\"0\n\027CMsgGSAssociateWithCla"
      "n\022\025\n\rsteam_id_clan\030\001 \001(\006\"L\n\037CMsgGSAssoci"
      "ateWithClanResponse\022\025\n\rsteam_id_clan\030\001 \001"
      "(\006\022\022\n\007eresult\030\002 \001(\r:\0012\"A\n#CMsgGSComputeN"
      "ewPlayerCompatibility\022\032\n\022steam_id_candid"
      "ate\030\001 \001(\006\"\317\001\n+CMsgGSComputeNewPlayerComp"
      "atibilityResponse\022\032\n\022steam_id_candidate\030"
      "\001 \001(\006\022\022\n\007eresult\030\002 \001(\r:\0012\022\026\n\016is_clan_mem"
      "ber\030\003 \001(\010\022\030\n\020ct_dont_like_you\030\004 \001(\005\022\030\n\020c"
      "t_you_dont_like\030\005 \001(\005\022$\n\034ct_clanmembers_"
      "dont_like_you\030\006 \001(\005\"\024\n\022CMsgClientSentLog"
      "s\"`\n\014CMsgGCClient\022\r\n\005appid\030\001 \001(\r\022\017\n\007msgt"
      "ype\030\002 \001(\r\022\017\n\007payload\030\003 \001(\014\022\017\n\007steamid\030\004 "
      "\001(\006\022\016\n\006gcname\030\005 \001(\t\".\n\034CMsgClientRequest"
      "FreeLicense\022\016\n\006appids\030\002 \003(\r\"n\n$CMsgClien"
      "tRequestFreeLicenseResponse\022\022\n\007eresult\030\001"
      " \001(\r:\0012\022\032\n\022granted_packageids\030\002 \003(\r\022\026\n\016g"
      "ranted_appids\030\003 \003(\r\"\323\001\n#CMsgDRMDownloadR"
      "equestWithCrashData\022\026\n\016download_flags\030\001 "
      "\001(\r\022\034\n\024download_types_known\030\002 \001(\r\022\020\n\010gui"
      "d_drm\030\003 \001(\014\022\022\n\nguid_split\030\004 \001(\014\022\022\n\nguid_"
      "merge\030\005 \001(\014\022\023\n\013module_name\030\006 \001(\t\022\023\n\013modu"
      "le_path\030\007 \001(\t\022\022\n\ncrash_data\030\010 \001(\014\"\333\001\n\027CM"
      "sgDRMDownloadResponse\022\022\n\007eresult\030\001 \001(\r:\001"
      "2\022\016\n\006app_id\030\002 \001(\r\022\032\n\022blob_download_type\030"
      "\003 \001(\r\022\022\n\nmerge_guid\030\004 \001(\014\022\034\n\024download_fi"
      "le_dfs_ip\030\005 \001(\r\022\036\n\026download_file_dfs_por"
      "t\030\006 \001(\r\022\031\n\021download_file_url\030\007 \001(\t\022\023\n\013mo"
      "dule_path\030\010 \001(\t\"\327\001\n\022CMsgDRMFinalResult\022\022"
      "\n\007eResult\030\001 \001(\r:\0012\022\016\n\006app_id\030\002 \001(\r\022\032\n\022bl"
      "ob_download_type\030\003 \001(\r\022\024\n\014error_detail\030\004"
      " \001(\r\022\022\n\nmerge_guid\030\005 \001(\014\022\034\n\024download_fil"
      "e_dfs_ip\030\006 \001(\r\022\036\n\026download_file_dfs_port"
      "\030\007 \001(\r\022\031\n\021download_file_url\030\010 \001(\t\"3\n\036CMs"
      "gClientDPCheckSpecialSurvey\022\021\n\tsurvey_id"
      "\030\001 \001(\r\"\226\001\n&CMsgClientDPCheckSpecialSurve"
      "yResponse\022\022\n\007eResult\030\001 \001(\r:\0012\022\r\n\005state\030\002"
      " \001(\r\022\014\n\004name\030\003 \001(\t\022\022\n\ncustom_url\030\004 \001(\t\022\030"
      "\n\020include_software\030\005 \001(\010\022\r\n\005token\030\006 \001(\014\""
      "H\n%CMsgClientDPSendSpecialSurveyResponse"
      "\022\021\n\tsurvey_id\030\001 \001(\r\022\014\n\004data\030\002 \001(\014\"O\n*CMs"
      "gClientDPSendSpecialSurveyResponseReply\022"
      "\022\n\007eResult\030\001 \001(\r:\0012\022\r\n\005token\030\002 \001(\014\"W\n\'CM"
      "sgClientRequestForgottenPasswordEmail\022\024\n"
      "\014account_name\030\001 \001(\t\022\026\n\016password_tried\030\002 "
      "\001(\t\"_\n/CMsgClientRequestForgottenPasswor"
      "dEmailResponse\022\017\n\007eResult\030\001 \001(\r\022\033\n\023use_s"
      "ecret_question\030\002 \001(\010\"6\n\033CMsgClientItemAn"
      "nouncements\022\027\n\017count_new_items\030\001 \001(\r\"$\n\""
      "CMsgClientRequestItemAnnouncements\"\252\001\n\033C"
      "MsgClientUserNotifications\022L\n\rnotificati"
      "ons\030\001 \003(\01325.proto.steam.CMsgClientUserNo"
      "tifications.Notification\032=\n\014Notification"
      "\022\036\n\026user_notification_type\030\001 \001(\r\022\r\n\005coun"
      "t\030\002 \001(\r\"\210\001\n\036CMsgClientCommentNotificatio"
      "ns\022\032\n\022count_new_comments\030\001 \001(\r\022 \n\030count_"
      "new_comments_owner\030\002 \001(\r\022(\n count_new_co"
      "mments_subscriptions\030\003 \001(\r\"\'\n%CMsgClient"
      "RequestCommentNotifications\"g\n$CMsgClien"
      "tOfflineMessageNotification\022\030\n\020offline_m"
      "essages\030\001 \001(\r\022%\n\035friends_with_offline_me"
      "ssages\030\002 \003(\r\"&\n$CMsgClientRequestOffline"
      "MessageCount\"8\n%CMsgClientChatGetFriendM"
      "essageHistory\022\017\n\007steamid\030\001 \001(\006\"\205\002\n-CMsgC"
      "lientChatGetFriendMessageHistoryResponse"
      "\022\017\n\007steamid\030\001 \001(\006\022\017\n\007success\030\002 \001(\r\022Z\n\010me"
      "ssages\030\003 \003(\0132H.proto.steam.CMsgClientCha"
      "tGetFriendMessageHistoryResponse.FriendM"
      "essage\032V\n\rFriendMessage\022\021\n\taccountid\030\001 \001"
      "(\r\022\021\n\ttimestamp\030\002 \001(\r\022\017\n\007message\030\003 \001(\t\022\016"
      "\n\006unread\030\004 \001(\010\"9\n7CMsgClientChatGetFrien"
      "dMessageHistoryForOfflineMessages\"7\n!CMs"
      "gClientFSGetFriendsSteamLevels\022\022\n\naccoun"
      "tids\030\001 \003(\r\"\247\001\n)CMsgClientFSGetFriendsSte"
      "amLevelsResponse\022N\n\007friends\030\001 \003(\0132=.prot"
      "o.steam.CMsgClientFSGetFriendsSteamLevel"
      "sResponse.Friend\032*\n\006Friend\022\021\n\taccountid\030"
      "\001 \001(\r\022\r\n\005level\030\002 \001(\r\"\353\001\n\027CMsgClientEmail"
      "AddrInfo\022\025\n\remail_address\030\001 \001(\t\022\032\n\022email"
      "_is_validated\030\002 \001(\010\022 \n\030email_validation_"
      "changed\030\003 \001(\010\022\'\n\037credential_change_requi"
      "res_code\030\004 \001(\010\0221\n)password_or_secretqa_c"
      "hange_requires_code\030\005 \001(\010\022\037\n\027remind_user"
      "_about_email\030\006 \001(\010\"\267\001\n\036CMsgCREEnumerateP"
      "ublishedFiles\022\016\n\006app_id\030\001 \001(\r\022\022\n\nquery_t"
      "ype\030\002 \001(\005\022\023\n\013start_index\030\003 \001(\r\022\014\n\004days\030\004"
      " \001(\r\022\r\n\005count\030\005 \001(\r\022\014\n\004tags\030\006 \003(\t\022\021\n\tuse"
      "r_tags\030\007 \003(\t\022\036\n\022matching_file_type\030\010 \001(\r"
      ":\00213\"\251\002\n&CMsgCREEnumeratePublishedFilesR"
      "esponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\\\n\017published"
      "_files\030\002 \003(\0132C.proto.steam.CMsgCREEnumer"
      "atePublishedFilesResponse.PublishedFileI"
      "d\022\025\n\rtotal_results\030\003 \001(\r\032v\n\017PublishedFil"
      "eId\022\031\n\021published_file_id\030\001 \001(\006\022\021\n\tvotes_"
      "for\030\002 \001(\005\022\025\n\rvotes_against\030\003 \001(\005\022\017\n\007repo"
      "rts\030\004 \001(\005\022\r\n\005score\030\005 \001(\002\"\227\001\n\026CMsgCREItem"
      "VoteSummary\022O\n\022published_file_ids\030\001 \003(\0132"
      "3.proto.steam.CMsgCREItemVoteSummary.Pub"
      "lishedFileId\032,\n\017PublishedFileId\022\031\n\021publi"
      "shed_file_id\030\001 \001(\006\"\206\002\n\036CMsgCREItemVoteSu"
      "mmaryResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022X\n\023ite"
      "m_vote_summaries\030\002 \003(\0132;.proto.steam.CMs"
      "gCREItemVoteSummaryResponse.ItemVoteSumm"
      "ary\032v\n\017ItemVoteSummary\022\031\n\021published_file"
      "_id\030\001 \001(\006\022\021\n\tvotes_for\030\002 \001(\005\022\025\n\rvotes_ag"
      "ainst\030\003 \001(\005\022\017\n\007reports\030\004 \001(\005\022\r\n\005score\030\005 "
      "\001(\002\"P\n\"CMsgCREUpdateUserPublishedItemVot"
      "e\022\031\n\021published_file_id\030\001 \001(\006\022\017\n\007vote_up\030"
      "\002 \001(\010\"@\n*CMsgCREUpdateUserPublishedItemV"
      "oteResponse\022\022\n\007eresult\030\001 \001(\005:\0012\"\267\001\n&CMsg"
      "CREGetUserPublishedItemVoteDetails\022_\n\022pu"
      "blished_file_ids\030\001 \003(\0132C.proto.steam.CMs"
      "gCREGetUserPublishedItemVoteDetails.Publ"
      "ishedFileId\032,\n\017PublishedFileId\022\031\n\021publis"
      "hed_file_id\030\001 \001(\006\"\366\001\n.CMsgCREGetUserPubl"
      "ishedItemVoteDetailsResponse\022\022\n\007eresult\030"
      "\001 \001(\005:\0012\022n\n\026user_item_vote_details\030\002 \003(\013"
      "2N.proto.steam.CMsgCREGetUserPublishedIt"
      "emVoteDetailsResponse.UserItemVoteDetail"
      "\032@\n\022UserItemVoteDetail\022\031\n\021published_file"
      "_id\030\001 \001(\006\022\017\n\004vote\030\002 \001(\005:\0010\"\305\001\n\030CMsgGameS"
      "erverPingSample\022\r\n\005my_ip\030\001 \001(\007\022\021\n\tgs_app"
      "_id\030\002 \001(\005\022@\n\ngs_samples\030\003 \003(\0132,.proto.st"
      "eam.CMsgGameServerPingSample.Sample\032E\n\006S"
      "ample\022\n\n\002ip\030\001 \001(\007\022\023\n\013avg_ping_ms\030\002 \001(\r\022\032"
      "\n\022stddev_ping_ms_x10\030\003 \001(\r\"*\n\026CMsgFSGetF"
      "ollowerCount\022\020\n\010steam_id\030\001 \001(\006\"F\n\036CMsgFS"
      "GetFollowerCountResponse\022\022\n\007eresult\030\001 \001("
      "\005:\0012\022\020\n\005count\030\002 \001(\005:\0010\"(\n\024CMsgFSGetIsFol"
      "lowing\022\020\n\010steam_id\030\001 \001(\006\"O\n\034CMsgFSGetIsF"
      "ollowingResponse\022\022\n\007eresult\030\001 \001(\005:\0012\022\033\n\014"
      "is_following\030\002 \001(\010:\005false\"3\n\034CMsgFSEnume"
      "rateFollowingList\022\023\n\013start_index\030\001 \001(\r\"d"
      "\n$CMsgFSEnumerateFollowingListResponse\022\022"
      "\n\007eresult\030\001 \001(\005:\0012\022\025\n\rtotal_results\030\002 \001("
      "\005\022\021\n\tsteam_ids\030\003 \003(\006\"0\n\037CMsgDPGetNumberO"
      "fCurrentPlayers\022\r\n\005appid\030\001 \001(\r\"S\n\'CMsgDP"
      "GetNumberOfCurrentPlayersResponse\022\022\n\007ere"
      "sult\030\001 \001(\005:\0012\022\024\n\014player_count\030\002 \001(\005\"a\n#C"
      "MsgClientFriendUserStatusPublished\022\026\n\016fr"
      "iend_steamid\030\001 \001(\006\022\r\n\005appid\030\002 \001(\r\022\023\n\013sta"
      "tus_text\030\003 \001(\t\"b\n\027CMsgClientServiceMetho"
      "d\022\023\n\013method_name\030\001 \001(\t\022\031\n\021serialized_met"
      "hod\030\002 \001(\014\022\027\n\017is_notification\030\003 \001(\010\"Z\n\037CM"
      "sgClientServiceMethodResponse\022\023\n\013method_"
      "name\030\001 \001(\t\022\"\n\032serialized_method_response"
      "\030\002 \001(\014\"\"\n\020CMsgClientUIMode\022\016\n\006uimode\030\001 \001"
      "(\r\"<\n&CMsgClientVanityURLChangedNotifica"
      "tion\022\022\n\nvanity_url\030\001 \001(\t\"y\n%CMsgClientAu"
      "thorizeLocalDeviceRequest\022\032\n\022device_desc"
      "ription\030\001 \001(\t\022\030\n\020owner_account_id\030\002 \001(\r\022"
      "\032\n\022local_device_token\030\003 \001(\004\"k\n\036CMsgClien"
      "tAuthorizeLocalDevice\022\022\n\007eresult\030\001 \001(\005:\001"
      "2\022\030\n\020owner_account_id\030\002 \001(\r\022\033\n\023authed_de"
      "vice_token\030\003 \001(\004\"v\n*CMsgClientAuthorizeL"
      "ocalDeviceNotification\022\022\n\007eresult\030\001 \001(\005:"
      "\0012\022\030\n\020owner_account_id\030\002 \001(\r\022\032\n\022local_de"
      "vice_token\030\003 \001(\004\"n\n\"CMsgClientDeauthoriz"
      "eDeviceRequest\022\"\n\032deauthorization_accoun"
      "t_id\030\001 \001(\r\022$\n\034deauthorization_device_tok"
      "en\030\002 \001(\004\"U\n\033CMsgClientDeauthorizeDevice\022"
      "\022\n\007eresult\030\001 \001(\005:\0012\022\"\n\032deauthorization_a"
      "ccount_id\030\002 \001(\r\"\335\001\n&CMsgClientUseLocalDe"
      "viceAuthorizations\022 \n\030authorization_acco"
      "unt_id\030\001 \003(\r\022V\n\rdevice_tokens\030\002 \003(\0132\?.pr"
      "oto.steam.CMsgClientUseLocalDeviceAuthor"
      "izations.DeviceToken\0329\n\013DeviceToken\022\030\n\020o"
      "wner_account_id\030\001 \001(\r\022\020\n\010token_id\030\002 \001(\004\""
      " \n\036CMsgClientGetAuthorizedDevices\"\271\002\n&CM"
      "sgClientGetAuthorizedDevicesResponse\022\022\n\007"
      "eresult\030\001 \001(\005:\0012\022_\n\021authorized_device\030\002 "
      "\003(\0132D.proto.steam.CMsgClientGetAuthorize"
      "dDevicesResponse.AuthorizedDevice\032\231\001\n\020Au"
      "thorizedDevice\022\031\n\021auth_device_token\030\001 \001("
      "\004\022\023\n\013device_name\030\002 \001(\t\022\030\n\020last_access_ti"
      "me\030\003 \001(\r\022\023\n\013borrower_id\030\004 \001(\r\022\022\n\nis_pend"
      "ing\030\005 \001(\010\022\022\n\napp_played\030\006 \001(\r\"\316\001\n!CMsgCl"
      "ientSharedLibraryLockStatus\022T\n\016locked_li"
      "brary\030\001 \003(\0132<.proto.steam.CMsgClientShar"
      "edLibraryLockStatus.LockedLibrary\022\035\n\025own"
      "_library_locked_by\030\002 \001(\r\0324\n\rLockedLibrar"
      "y\022\020\n\010owner_id\030\001 \001(\r\022\021\n\tlocked_by\030\002 \001(\r\"\263"
      "\001\n\"CMsgClientSharedLibraryStopPlaying\022\024\n"
      "\014seconds_left\030\001 \001(\005\022J\n\tstop_apps\030\002 \003(\01327"
      ".proto.steam.CMsgClientSharedLibraryStop"
      "Playing.StopApp\032+\n\007StopApp\022\016\n\006app_id\030\001 \001"
      "(\r\022\020\n\010owner_id\030\002 \001(\r\"\361\001\n\025CMsgClientServi"
      "ceCall\022\025\n\rsysid_routing\030\001 \001(\014\022\023\n\013call_ha"
      "ndle\030\002 \001(\r\022\022\n\nmodule_crc\030\003 \001(\r\022\023\n\013module"
      "_hash\030\004 \001(\014\022\023\n\013function_id\030\005 \001(\r\022\026\n\016cub_"
      "output_max\030\006 \001(\r\022\r\n\005flags\030\007 \001(\r\022\025\n\rcallp"
      "arameter\030\010 \001(\014\022\021\n\tping_only\030\t \001(\010\022\035\n\025max"
      "_outstanding_calls\030\n \001(\r\"Z\n\027CMsgClientSe"
      "rviceModule\022\022\n\nmodule_crc\030\001 \001(\r\022\023\n\013modul"
      "e_hash\030\002 \001(\014\022\026\n\016module_content\030\003 \001(\014\"\270\004\n"
      "\035CMsgClientServiceCallResponse\022\025\n\rsysid_"
      "routing\030\001 \001(\014\022\023\n\013call_handle\030\002 \001(\r\022\022\n\nmo"
      "dule_crc\030\003 \001(\r\022\023\n\013module_hash\030\004 \001(\014\022\023\n\013e"
      "callresult\030\005 \001(\r\022\026\n\016result_content\030\006 \001(\014"
      "\022\027\n\017os_version_info\030\007 \001(\014\022\023\n\013system_info"
      "\030\010 \001(\014\022\024\n\014load_address\030\t \001(\006\022\030\n\020exceptio"
      "n_record\030\n \001(\014\022 \n\030portable_os_version_in"
      "fo\030\013 \001(\014\022\034\n\024portable_system_info\030\014 \001(\014\022\025"
      "\n\rwas_converted\030\r \001(\010\022\027\n\017internal_result"
      "\030\016 \001(\r\022\025\n\rcurrent_count\030\017 \001(\r\022\030\n\020last_ca"
      "ll_handle\030\020 \001(\r\022\034\n\024last_call_module_crc\030"
      "\021 \001(\r\022\037\n\027last_call_sysid_routing\030\022 \001(\014\022\030"
      "\n\020last_ecallresult\030\023 \001(\r\022\034\n\024last_calliss"
      "ue_delta\030\024 \001(\r\022\037\n\027last_callcomplete_delt"
      "a\030\025 \001(\r\"\027\n\025CMsgAMUnlockStreaming\"K\n\035CMsg"
      "AMUnlockStreamingResponse\022\022\n\007eresult\030\001 \001"
      "(\005:\0012\022\026\n\016encryption_key\030\002 \001(\014\"M\n\035CMsgCli"
      "entPlayingSessionState\022\027\n\017playing_blocke"
      "d\030\002 \001(\010\022\023\n\013playing_app\030\003 \001(\r\"6\n\034CMsgClie"
      "ntKickPlayingSession\022\026\n\016only_stop_game\030\001"
      " \001(\010\"t\n\027CMsgClientCreateAccount\022\024\n\014accou"
      "nt_name\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\022\r\n\005email"
      "\030\003 \001(\t\022\020\n\010launcher\030\006 \001(\r\022\020\n\010language\030\007 \001"
      "(\r\"F\n\037CMsgClientCreateAccountResponse\022\022\n"
      "\007eresult\030\001 \001(\005:\0012\022\017\n\007steamid\030\002 \001(\006\"v\n\037CM"
      "sgClientVoiceCallPreAuthorize\022\026\n\016caller_"
      "steamid\030\001 \001(\006\022\030\n\020receiver_steamid\030\002 \001(\006\022"
      "\021\n\tcaller_id\030\003 \001(\005\022\016\n\006hangup\030\004 \001(\010\"\202\001\n\'C"
      "MsgClientVoiceCallPreAuthorizeResponse\022\026"
      "\n\016caller_steamid\030\001 \001(\006\022\030\n\020receiver_steam"
      "id\030\002 \001(\006\022\022\n\007eresult\030\003 \001(\005:\0012\022\021\n\tcaller_i"
      "d\030\004 \001(\005B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 22134);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_clientserver_2.proto", &protobuf_RegisterTypes);
  ::proto::steam::protobuf_steammessages_5fbase_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_steammessages_5fclientserver_5f2_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMAddScreenshot_Tag::kTagNameFieldNumber;
const int CMsgClientUCMAddScreenshot_Tag::kTagValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMAddScreenshot_Tag::CMsgClientUCMAddScreenshot_Tag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMAddScreenshot.Tag)
}
CMsgClientUCMAddScreenshot_Tag::CMsgClientUCMAddScreenshot_Tag(const CMsgClientUCMAddScreenshot_Tag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag_name()) {
    tag_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_name_);
  }
  tag_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_tag_value()) {
    tag_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_value_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMAddScreenshot.Tag)
}

void CMsgClientUCMAddScreenshot_Tag::SharedCtor() {
  _cached_size_ = 0;
  tag_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientUCMAddScreenshot_Tag::~CMsgClientUCMAddScreenshot_Tag() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  SharedDtor();
}

void CMsgClientUCMAddScreenshot_Tag::SharedDtor() {
  tag_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  tag_value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMAddScreenshot_Tag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMAddScreenshot_Tag::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMAddScreenshot_Tag& CMsgClientUCMAddScreenshot_Tag::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMAddScreenshot_Tag* CMsgClientUCMAddScreenshot_Tag::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMAddScreenshot_Tag* n = new CMsgClientUCMAddScreenshot_Tag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMAddScreenshot_Tag::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_tag_name()) {
      GOOGLE_DCHECK(!tag_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tag_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_tag_value()) {
      GOOGLE_DCHECK(!tag_value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*tag_value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMAddScreenshot_Tag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string tag_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag_name().data(), this->tag_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string tag_value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_tag_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tag_value().data(), this->tag_value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  return false;
#undef DO_
}

void CMsgClientUCMAddScreenshot_Tag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tag_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag_name().data(), this->tag_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->tag_name(), output);
  }

  // optional string tag_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag_value().data(), this->tag_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->tag_value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMAddScreenshot.Tag)
}

::google::protobuf::uint8* CMsgClientUCMAddScreenshot_Tag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string tag_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag_name().data(), this->tag_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->tag_name(), target);
  }

  // optional string tag_value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tag_value().data(), this->tag_value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->tag_value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  return target;
}

size_t CMsgClientUCMAddScreenshot_Tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string tag_name = 1;
    if (has_tag_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag_name());
    }

    // optional string tag_value = 2;
    if (has_tag_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->tag_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMAddScreenshot_Tag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMAddScreenshot_Tag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMAddScreenshot_Tag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMAddScreenshot.Tag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMAddScreenshot.Tag)
    MergeFrom(*source);
  }
}

void CMsgClientUCMAddScreenshot_Tag::MergeFrom(const CMsgClientUCMAddScreenshot_Tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_tag_name();
      tag_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_tag_value();
      tag_value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.tag_value_);
    }
  }
}

void CMsgClientUCMAddScreenshot_Tag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMAddScreenshot_Tag::CopyFrom(const CMsgClientUCMAddScreenshot_Tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMAddScreenshot.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMAddScreenshot_Tag::IsInitialized() const {
  return true;
}

void CMsgClientUCMAddScreenshot_Tag::Swap(CMsgClientUCMAddScreenshot_Tag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMAddScreenshot_Tag::InternalSwap(CMsgClientUCMAddScreenshot_Tag* other) {
  tag_name_.Swap(&other->tag_name_);
  tag_value_.Swap(&other->tag_value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMAddScreenshot_Tag::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMAddScreenshot_Tag

// optional string tag_name = 1;
bool CMsgClientUCMAddScreenshot_Tag::has_tag_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMAddScreenshot_Tag::set_has_tag_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMAddScreenshot_Tag::clear_has_tag_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMAddScreenshot_Tag::clear_tag_name() {
  tag_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag_name();
}
const ::std::string& CMsgClientUCMAddScreenshot_Tag::tag_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name)
  return tag_name_.GetNoArena();
}
void CMsgClientUCMAddScreenshot_Tag::set_tag_name(const ::std::string& value) {
  set_has_tag_name();
  tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name)
}
#if LANG_CXX11
void CMsgClientUCMAddScreenshot_Tag::set_tag_name(::std::string&& value) {
  set_has_tag_name();
  tag_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name)
}
#endif
void CMsgClientUCMAddScreenshot_Tag::set_tag_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag_name();
  tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name)
}
void CMsgClientUCMAddScreenshot_Tag::set_tag_name(const char* value, size_t size) {
  set_has_tag_name();
  tag_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name)
}
::std::string* CMsgClientUCMAddScreenshot_Tag::mutable_tag_name() {
  set_has_tag_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name)
  return tag_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMAddScreenshot_Tag::release_tag_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name)
  clear_has_tag_name();
  return tag_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMAddScreenshot_Tag::set_allocated_tag_name(::std::string* tag_name) {
  if (tag_name != NULL) {
    set_has_tag_name();
  } else {
    clear_has_tag_name();
  }
  tag_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_name)
}

// optional string tag_value = 2;
bool CMsgClientUCMAddScreenshot_Tag::has_tag_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMAddScreenshot_Tag::set_has_tag_value() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMAddScreenshot_Tag::clear_has_tag_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMAddScreenshot_Tag::clear_tag_value() {
  tag_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_tag_value();
}
const ::std::string& CMsgClientUCMAddScreenshot_Tag::tag_value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value)
  return tag_value_.GetNoArena();
}
void CMsgClientUCMAddScreenshot_Tag::set_tag_value(const ::std::string& value) {
  set_has_tag_value();
  tag_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value)
}
#if LANG_CXX11
void CMsgClientUCMAddScreenshot_Tag::set_tag_value(::std::string&& value) {
  set_has_tag_value();
  tag_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value)
}
#endif
void CMsgClientUCMAddScreenshot_Tag::set_tag_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_tag_value();
  tag_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value)
}
void CMsgClientUCMAddScreenshot_Tag::set_tag_value(const char* value, size_t size) {
  set_has_tag_value();
  tag_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value)
}
::std::string* CMsgClientUCMAddScreenshot_Tag::mutable_tag_value() {
  set_has_tag_value();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value)
  return tag_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMAddScreenshot_Tag::release_tag_value() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value)
  clear_has_tag_value();
  return tag_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMAddScreenshot_Tag::set_allocated_tag_value(::std::string* tag_value) {
  if (tag_value != NULL) {
    set_has_tag_value();
  } else {
    clear_has_tag_value();
  }
  tag_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tag_value);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMAddScreenshot.Tag.tag_value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMAddScreenshot::kAppidFieldNumber;
const int CMsgClientUCMAddScreenshot::kFilenameFieldNumber;
const int CMsgClientUCMAddScreenshot::kThumbnameFieldNumber;
const int CMsgClientUCMAddScreenshot::kVrFilenameFieldNumber;
const int CMsgClientUCMAddScreenshot::kRtime32CreatedFieldNumber;
const int CMsgClientUCMAddScreenshot::kWidthFieldNumber;
const int CMsgClientUCMAddScreenshot::kHeightFieldNumber;
const int CMsgClientUCMAddScreenshot::kPermissionsFieldNumber;
const int CMsgClientUCMAddScreenshot::kCaptionFieldNumber;
const int CMsgClientUCMAddScreenshot::kShortcutNameFieldNumber;
const int CMsgClientUCMAddScreenshot::kTagFieldNumber;
const int CMsgClientUCMAddScreenshot::kTaggedSteamidFieldNumber;
const int CMsgClientUCMAddScreenshot::kSpoilerTagFieldNumber;
const int CMsgClientUCMAddScreenshot::kTaggedPublishedfileidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMAddScreenshot::CMsgClientUCMAddScreenshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMAddScreenshot)
}
CMsgClientUCMAddScreenshot::CMsgClientUCMAddScreenshot(const CMsgClientUCMAddScreenshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tag_(from.tag_),
      tagged_steamid_(from.tagged_steamid_),
      tagged_publishedfileid_(from.tagged_publishedfileid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  thumbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_thumbname()) {
    thumbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbname_);
  }
  caption_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_caption()) {
    caption_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.caption_);
  }
  shortcut_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_shortcut_name()) {
    shortcut_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shortcut_name_);
  }
  vr_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vr_filename()) {
    vr_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vr_filename_);
  }
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&spoiler_tag_) -
    reinterpret_cast<char*>(&appid_) + sizeof(spoiler_tag_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMAddScreenshot)
}

void CMsgClientUCMAddScreenshot::SharedCtor() {
  _cached_size_ = 0;
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  caption_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shortcut_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vr_filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, reinterpret_cast<char*>(&spoiler_tag_) -
    reinterpret_cast<char*>(&appid_) + sizeof(spoiler_tag_));
}

CMsgClientUCMAddScreenshot::~CMsgClientUCMAddScreenshot() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMAddScreenshot)
  SharedDtor();
}

void CMsgClientUCMAddScreenshot::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumbname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  caption_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  shortcut_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vr_filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMAddScreenshot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMAddScreenshot::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMAddScreenshot& CMsgClientUCMAddScreenshot::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMAddScreenshot* CMsgClientUCMAddScreenshot::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMAddScreenshot* n = new CMsgClientUCMAddScreenshot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMAddScreenshot::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMAddScreenshot)
  tag_.Clear();
  tagged_steamid_.Clear();
  tagged_publishedfileid_.Clear();
  if (_has_bits_[0 / 32] & 31u) {
    if (has_filename()) {
      GOOGLE_DCHECK(!filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*filename_.UnsafeRawStringPointer())->clear();
    }
    if (has_thumbname()) {
      GOOGLE_DCHECK(!thumbname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*thumbname_.UnsafeRawStringPointer())->clear();
    }
    if (has_caption()) {
      GOOGLE_DCHECK(!caption_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*caption_.UnsafeRawStringPointer())->clear();
    }
    if (has_shortcut_name()) {
      GOOGLE_DCHECK(!shortcut_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*shortcut_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_vr_filename()) {
      GOOGLE_DCHECK(!vr_filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*vr_filename_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 224u) {
    ::memset(&appid_, 0, reinterpret_cast<char*>(&width_) -
      reinterpret_cast<char*>(&appid_) + sizeof(width_));
  }
  if (_has_bits_[8 / 32] & 1792u) {
    ::memset(&height_, 0, reinterpret_cast<char*>(&spoiler_tag_) -
      reinterpret_cast<char*>(&height_) + sizeof(spoiler_tag_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMAddScreenshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMAddScreenshot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMAddScreenshot.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string thumbname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumbname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->thumbname().data(), this->thumbname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMAddScreenshot.thumbname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime32_created = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u)) {
          set_has_rtime32_created();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime32_created_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 width = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_width();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 height = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_height();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 permissions = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_permissions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &permissions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string caption = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_caption()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->caption().data(), this->caption().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMAddScreenshot.caption");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string shortcut_name = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_shortcut_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->shortcut_name().data(), this->shortcut_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMAddScreenshot.shortcut_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMAddScreenshot.Tag tag = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_tag()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 tagged_steamid = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(89u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 89u, input, this->mutable_tagged_steamid())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(90u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_tagged_steamid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool spoiler_tag = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_spoiler_tag();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &spoiler_tag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 tagged_publishedfileid = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 104u, input, this->mutable_tagged_publishedfileid())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(106u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_tagged_publishedfileid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string vr_filename = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vr_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vr_filename().data(), this->vr_filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMAddScreenshot.vr_filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMAddScreenshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMAddScreenshot)
  return false;
#undef DO_
}

void CMsgClientUCMAddScreenshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMAddScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional string filename = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->filename(), output);
  }

  // optional string thumbname = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->thumbname().data(), this->thumbname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.thumbname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->thumbname(), output);
  }

  // optional fixed32 rtime32_created = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->rtime32_created(), output);
  }

  // optional uint32 width = 5;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->width(), output);
  }

  // optional uint32 height = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->height(), output);
  }

  // optional uint32 permissions = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->permissions(), output);
  }

  // optional string caption = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->caption().data(), this->caption().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.caption");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->caption(), output);
  }

  // optional string shortcut_name = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shortcut_name().data(), this->shortcut_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.shortcut_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->shortcut_name(), output);
  }

  // repeated .proto.steam.CMsgClientUCMAddScreenshot.Tag tag = 10;
  for (unsigned int i = 0, n = this->tag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->tag(i), output);
  }

  // repeated fixed64 tagged_steamid = 11;
  for (int i = 0, n = this->tagged_steamid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      11, this->tagged_steamid(i), output);
  }

  // optional bool spoiler_tag = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->spoiler_tag(), output);
  }

  // repeated uint64 tagged_publishedfileid = 13;
  for (int i = 0, n = this->tagged_publishedfileid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      13, this->tagged_publishedfileid(i), output);
  }

  // optional string vr_filename = 14;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vr_filename().data(), this->vr_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.vr_filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->vr_filename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMAddScreenshot)
}

::google::protobuf::uint8* CMsgClientUCMAddScreenshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMAddScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional string filename = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->filename(), target);
  }

  // optional string thumbname = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->thumbname().data(), this->thumbname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.thumbname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->thumbname(), target);
  }

  // optional fixed32 rtime32_created = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->rtime32_created(), target);
  }

  // optional uint32 width = 5;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->width(), target);
  }

  // optional uint32 height = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->height(), target);
  }

  // optional uint32 permissions = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->permissions(), target);
  }

  // optional string caption = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->caption().data(), this->caption().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.caption");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->caption(), target);
  }

  // optional string shortcut_name = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->shortcut_name().data(), this->shortcut_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.shortcut_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->shortcut_name(), target);
  }

  // repeated .proto.steam.CMsgClientUCMAddScreenshot.Tag tag = 10;
  for (unsigned int i = 0, n = this->tag_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->tag(i), deterministic, target);
  }

  // repeated fixed64 tagged_steamid = 11;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(11, this->tagged_steamid_, target);

  // optional bool spoiler_tag = 12;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->spoiler_tag(), target);
  }

  // repeated uint64 tagged_publishedfileid = 13;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(13, this->tagged_publishedfileid_, target);

  // optional string vr_filename = 14;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vr_filename().data(), this->vr_filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMAddScreenshot.vr_filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->vr_filename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMAddScreenshot)
  return target;
}

size_t CMsgClientUCMAddScreenshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMAddScreenshot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientUCMAddScreenshot.Tag tag = 10;
  {
    unsigned int count = this->tag_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->tag(i));
    }
  }

  // repeated fixed64 tagged_steamid = 11;
  {
    unsigned int count = this->tagged_steamid_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->tagged_steamid_size());
    total_size += data_size;
  }

  // repeated uint64 tagged_publishedfileid = 13;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->tagged_publishedfileid_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->tagged_publishedfileid_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string filename = 2;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional string thumbname = 3;
    if (has_thumbname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->thumbname());
    }

    // optional string caption = 8;
    if (has_caption()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->caption());
    }

    // optional string shortcut_name = 9;
    if (has_shortcut_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->shortcut_name());
    }

    // optional string vr_filename = 14;
    if (has_vr_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vr_filename());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional fixed32 rtime32_created = 4;
    if (has_rtime32_created()) {
      total_size += 1 + 4;
    }

    // optional uint32 width = 5;
    if (has_width()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->width());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional uint32 height = 6;
    if (has_height()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->height());
    }

    // optional uint32 permissions = 7;
    if (has_permissions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->permissions());
    }

    // optional bool spoiler_tag = 12;
    if (has_spoiler_tag()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMAddScreenshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMAddScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMAddScreenshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMAddScreenshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMAddScreenshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMAddScreenshot)
    MergeFrom(*source);
  }
}

void CMsgClientUCMAddScreenshot::MergeFrom(const CMsgClientUCMAddScreenshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMAddScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tag_.MergeFrom(from.tag_);
  tagged_steamid_.MergeFrom(from.tagged_steamid_);
  tagged_publishedfileid_.MergeFrom(from.tagged_publishedfileid_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_thumbname();
      thumbname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumbname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_caption();
      caption_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.caption_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_shortcut_name();
      shortcut_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.shortcut_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_vr_filename();
      vr_filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vr_filename_);
    }
    if (cached_has_bits & 0x00000020u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000040u) {
      rtime32_created_ = from.rtime32_created_;
    }
    if (cached_has_bits & 0x00000080u) {
      width_ = from.width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      height_ = from.height_;
    }
    if (cached_has_bits & 0x00000200u) {
      permissions_ = from.permissions_;
    }
    if (cached_has_bits & 0x00000400u) {
      spoiler_tag_ = from.spoiler_tag_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMAddScreenshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMAddScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMAddScreenshot::CopyFrom(const CMsgClientUCMAddScreenshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMAddScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMAddScreenshot::IsInitialized() const {
  return true;
}

void CMsgClientUCMAddScreenshot::Swap(CMsgClientUCMAddScreenshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMAddScreenshot::InternalSwap(CMsgClientUCMAddScreenshot* other) {
  tag_.InternalSwap(&other->tag_);
  tagged_steamid_.InternalSwap(&other->tagged_steamid_);
  tagged_publishedfileid_.InternalSwap(&other->tagged_publishedfileid_);
  filename_.Swap(&other->filename_);
  thumbname_.Swap(&other->thumbname_);
  caption_.Swap(&other->caption_);
  shortcut_name_.Swap(&other->shortcut_name_);
  vr_filename_.Swap(&other->vr_filename_);
  std::swap(appid_, other->appid_);
  std::swap(rtime32_created_, other->rtime32_created_);
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  std::swap(permissions_, other->permissions_);
  std::swap(spoiler_tag_, other->spoiler_tag_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMAddScreenshot::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMAddScreenshot

// optional uint32 appid = 1;
bool CMsgClientUCMAddScreenshot::has_appid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientUCMAddScreenshot::set_has_appid() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientUCMAddScreenshot::clear_has_appid() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientUCMAddScreenshot::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
::google::protobuf::uint32 CMsgClientUCMAddScreenshot::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.appid)
  return appid_;
}
void CMsgClientUCMAddScreenshot::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.appid)
}

// optional string filename = 2;
bool CMsgClientUCMAddScreenshot::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMAddScreenshot::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMAddScreenshot::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMAddScreenshot::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
const ::std::string& CMsgClientUCMAddScreenshot::filename() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.filename)
  return filename_.GetNoArena();
}
void CMsgClientUCMAddScreenshot::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.filename)
}
#if LANG_CXX11
void CMsgClientUCMAddScreenshot::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMAddScreenshot.filename)
}
#endif
void CMsgClientUCMAddScreenshot::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMAddScreenshot.filename)
}
void CMsgClientUCMAddScreenshot::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMAddScreenshot.filename)
}
::std::string* CMsgClientUCMAddScreenshot::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMAddScreenshot.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMAddScreenshot::release_filename() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMAddScreenshot.filename)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMAddScreenshot::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMAddScreenshot.filename)
}

// optional string thumbname = 3;
bool CMsgClientUCMAddScreenshot::has_thumbname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMAddScreenshot::set_has_thumbname() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMAddScreenshot::clear_has_thumbname() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMAddScreenshot::clear_thumbname() {
  thumbname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_thumbname();
}
const ::std::string& CMsgClientUCMAddScreenshot::thumbname() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.thumbname)
  return thumbname_.GetNoArena();
}
void CMsgClientUCMAddScreenshot::set_thumbname(const ::std::string& value) {
  set_has_thumbname();
  thumbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.thumbname)
}
#if LANG_CXX11
void CMsgClientUCMAddScreenshot::set_thumbname(::std::string&& value) {
  set_has_thumbname();
  thumbname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMAddScreenshot.thumbname)
}
#endif
void CMsgClientUCMAddScreenshot::set_thumbname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_thumbname();
  thumbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMAddScreenshot.thumbname)
}
void CMsgClientUCMAddScreenshot::set_thumbname(const char* value, size_t size) {
  set_has_thumbname();
  thumbname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMAddScreenshot.thumbname)
}
::std::string* CMsgClientUCMAddScreenshot::mutable_thumbname() {
  set_has_thumbname();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMAddScreenshot.thumbname)
  return thumbname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMAddScreenshot::release_thumbname() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMAddScreenshot.thumbname)
  clear_has_thumbname();
  return thumbname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMAddScreenshot::set_allocated_thumbname(::std::string* thumbname) {
  if (thumbname != NULL) {
    set_has_thumbname();
  } else {
    clear_has_thumbname();
  }
  thumbname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), thumbname);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMAddScreenshot.thumbname)
}

// optional string vr_filename = 14;
bool CMsgClientUCMAddScreenshot::has_vr_filename() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientUCMAddScreenshot::set_has_vr_filename() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientUCMAddScreenshot::clear_has_vr_filename() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientUCMAddScreenshot::clear_vr_filename() {
  vr_filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vr_filename();
}
const ::std::string& CMsgClientUCMAddScreenshot::vr_filename() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.vr_filename)
  return vr_filename_.GetNoArena();
}
void CMsgClientUCMAddScreenshot::set_vr_filename(const ::std::string& value) {
  set_has_vr_filename();
  vr_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.vr_filename)
}
#if LANG_CXX11
void CMsgClientUCMAddScreenshot::set_vr_filename(::std::string&& value) {
  set_has_vr_filename();
  vr_filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMAddScreenshot.vr_filename)
}
#endif
void CMsgClientUCMAddScreenshot::set_vr_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_vr_filename();
  vr_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMAddScreenshot.vr_filename)
}
void CMsgClientUCMAddScreenshot::set_vr_filename(const char* value, size_t size) {
  set_has_vr_filename();
  vr_filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMAddScreenshot.vr_filename)
}
::std::string* CMsgClientUCMAddScreenshot::mutable_vr_filename() {
  set_has_vr_filename();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMAddScreenshot.vr_filename)
  return vr_filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMAddScreenshot::release_vr_filename() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMAddScreenshot.vr_filename)
  clear_has_vr_filename();
  return vr_filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMAddScreenshot::set_allocated_vr_filename(::std::string* vr_filename) {
  if (vr_filename != NULL) {
    set_has_vr_filename();
  } else {
    clear_has_vr_filename();
  }
  vr_filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vr_filename);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMAddScreenshot.vr_filename)
}

// optional fixed32 rtime32_created = 4;
bool CMsgClientUCMAddScreenshot::has_rtime32_created() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientUCMAddScreenshot::set_has_rtime32_created() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientUCMAddScreenshot::clear_has_rtime32_created() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientUCMAddScreenshot::clear_rtime32_created() {
  rtime32_created_ = 0u;
  clear_has_rtime32_created();
}
::google::protobuf::uint32 CMsgClientUCMAddScreenshot::rtime32_created() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.rtime32_created)
  return rtime32_created_;
}
void CMsgClientUCMAddScreenshot::set_rtime32_created(::google::protobuf::uint32 value) {
  set_has_rtime32_created();
  rtime32_created_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.rtime32_created)
}

// optional uint32 width = 5;
bool CMsgClientUCMAddScreenshot::has_width() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgClientUCMAddScreenshot::set_has_width() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgClientUCMAddScreenshot::clear_has_width() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgClientUCMAddScreenshot::clear_width() {
  width_ = 0u;
  clear_has_width();
}
::google::protobuf::uint32 CMsgClientUCMAddScreenshot::width() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.width)
  return width_;
}
void CMsgClientUCMAddScreenshot::set_width(::google::protobuf::uint32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.width)
}

// optional uint32 height = 6;
bool CMsgClientUCMAddScreenshot::has_height() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgClientUCMAddScreenshot::set_has_height() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgClientUCMAddScreenshot::clear_has_height() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgClientUCMAddScreenshot::clear_height() {
  height_ = 0u;
  clear_has_height();
}
::google::protobuf::uint32 CMsgClientUCMAddScreenshot::height() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.height)
  return height_;
}
void CMsgClientUCMAddScreenshot::set_height(::google::protobuf::uint32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.height)
}

// optional uint32 permissions = 7;
bool CMsgClientUCMAddScreenshot::has_permissions() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CMsgClientUCMAddScreenshot::set_has_permissions() {
  _has_bits_[0] |= 0x00000200u;
}
void CMsgClientUCMAddScreenshot::clear_has_permissions() {
  _has_bits_[0] &= ~0x00000200u;
}
void CMsgClientUCMAddScreenshot::clear_permissions() {
  permissions_ = 0u;
  clear_has_permissions();
}
::google::protobuf::uint32 CMsgClientUCMAddScreenshot::permissions() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.permissions)
  return permissions_;
}
void CMsgClientUCMAddScreenshot::set_permissions(::google::protobuf::uint32 value) {
  set_has_permissions();
  permissions_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.permissions)
}

// optional string caption = 8;
bool CMsgClientUCMAddScreenshot::has_caption() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUCMAddScreenshot::set_has_caption() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUCMAddScreenshot::clear_has_caption() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUCMAddScreenshot::clear_caption() {
  caption_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_caption();
}
const ::std::string& CMsgClientUCMAddScreenshot::caption() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.caption)
  return caption_.GetNoArena();
}
void CMsgClientUCMAddScreenshot::set_caption(const ::std::string& value) {
  set_has_caption();
  caption_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.caption)
}
#if LANG_CXX11
void CMsgClientUCMAddScreenshot::set_caption(::std::string&& value) {
  set_has_caption();
  caption_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMAddScreenshot.caption)
}
#endif
void CMsgClientUCMAddScreenshot::set_caption(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_caption();
  caption_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMAddScreenshot.caption)
}
void CMsgClientUCMAddScreenshot::set_caption(const char* value, size_t size) {
  set_has_caption();
  caption_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMAddScreenshot.caption)
}
::std::string* CMsgClientUCMAddScreenshot::mutable_caption() {
  set_has_caption();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMAddScreenshot.caption)
  return caption_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMAddScreenshot::release_caption() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMAddScreenshot.caption)
  clear_has_caption();
  return caption_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMAddScreenshot::set_allocated_caption(::std::string* caption) {
  if (caption != NULL) {
    set_has_caption();
  } else {
    clear_has_caption();
  }
  caption_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), caption);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMAddScreenshot.caption)
}

// optional string shortcut_name = 9;
bool CMsgClientUCMAddScreenshot::has_shortcut_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientUCMAddScreenshot::set_has_shortcut_name() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientUCMAddScreenshot::clear_has_shortcut_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientUCMAddScreenshot::clear_shortcut_name() {
  shortcut_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_shortcut_name();
}
const ::std::string& CMsgClientUCMAddScreenshot::shortcut_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.shortcut_name)
  return shortcut_name_.GetNoArena();
}
void CMsgClientUCMAddScreenshot::set_shortcut_name(const ::std::string& value) {
  set_has_shortcut_name();
  shortcut_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.shortcut_name)
}
#if LANG_CXX11
void CMsgClientUCMAddScreenshot::set_shortcut_name(::std::string&& value) {
  set_has_shortcut_name();
  shortcut_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMAddScreenshot.shortcut_name)
}
#endif
void CMsgClientUCMAddScreenshot::set_shortcut_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_shortcut_name();
  shortcut_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMAddScreenshot.shortcut_name)
}
void CMsgClientUCMAddScreenshot::set_shortcut_name(const char* value, size_t size) {
  set_has_shortcut_name();
  shortcut_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMAddScreenshot.shortcut_name)
}
::std::string* CMsgClientUCMAddScreenshot::mutable_shortcut_name() {
  set_has_shortcut_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMAddScreenshot.shortcut_name)
  return shortcut_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMAddScreenshot::release_shortcut_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMAddScreenshot.shortcut_name)
  clear_has_shortcut_name();
  return shortcut_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMAddScreenshot::set_allocated_shortcut_name(::std::string* shortcut_name) {
  if (shortcut_name != NULL) {
    set_has_shortcut_name();
  } else {
    clear_has_shortcut_name();
  }
  shortcut_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shortcut_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMAddScreenshot.shortcut_name)
}

// repeated .proto.steam.CMsgClientUCMAddScreenshot.Tag tag = 10;
int CMsgClientUCMAddScreenshot::tag_size() const {
  return tag_.size();
}
void CMsgClientUCMAddScreenshot::clear_tag() {
  tag_.Clear();
}
const ::proto::steam::CMsgClientUCMAddScreenshot_Tag& CMsgClientUCMAddScreenshot::tag(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.tag)
  return tag_.Get(index);
}
::proto::steam::CMsgClientUCMAddScreenshot_Tag* CMsgClientUCMAddScreenshot::mutable_tag(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMAddScreenshot.tag)
  return tag_.Mutable(index);
}
::proto::steam::CMsgClientUCMAddScreenshot_Tag* CMsgClientUCMAddScreenshot::add_tag() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMAddScreenshot.tag)
  return tag_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMAddScreenshot_Tag >*
CMsgClientUCMAddScreenshot::mutable_tag() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMAddScreenshot.tag)
  return &tag_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMAddScreenshot_Tag >&
CMsgClientUCMAddScreenshot::tag() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMAddScreenshot.tag)
  return tag_;
}

// repeated fixed64 tagged_steamid = 11;
int CMsgClientUCMAddScreenshot::tagged_steamid_size() const {
  return tagged_steamid_.size();
}
void CMsgClientUCMAddScreenshot::clear_tagged_steamid() {
  tagged_steamid_.Clear();
}
::google::protobuf::uint64 CMsgClientUCMAddScreenshot::tagged_steamid(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.tagged_steamid)
  return tagged_steamid_.Get(index);
}
void CMsgClientUCMAddScreenshot::set_tagged_steamid(int index, ::google::protobuf::uint64 value) {
  tagged_steamid_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.tagged_steamid)
}
void CMsgClientUCMAddScreenshot::add_tagged_steamid(::google::protobuf::uint64 value) {
  tagged_steamid_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMAddScreenshot.tagged_steamid)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientUCMAddScreenshot::tagged_steamid() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMAddScreenshot.tagged_steamid)
  return tagged_steamid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientUCMAddScreenshot::mutable_tagged_steamid() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMAddScreenshot.tagged_steamid)
  return &tagged_steamid_;
}

// optional bool spoiler_tag = 12;
bool CMsgClientUCMAddScreenshot::has_spoiler_tag() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CMsgClientUCMAddScreenshot::set_has_spoiler_tag() {
  _has_bits_[0] |= 0x00000400u;
}
void CMsgClientUCMAddScreenshot::clear_has_spoiler_tag() {
  _has_bits_[0] &= ~0x00000400u;
}
void CMsgClientUCMAddScreenshot::clear_spoiler_tag() {
  spoiler_tag_ = false;
  clear_has_spoiler_tag();
}
bool CMsgClientUCMAddScreenshot::spoiler_tag() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.spoiler_tag)
  return spoiler_tag_;
}
void CMsgClientUCMAddScreenshot::set_spoiler_tag(bool value) {
  set_has_spoiler_tag();
  spoiler_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.spoiler_tag)
}

// repeated uint64 tagged_publishedfileid = 13;
int CMsgClientUCMAddScreenshot::tagged_publishedfileid_size() const {
  return tagged_publishedfileid_.size();
}
void CMsgClientUCMAddScreenshot::clear_tagged_publishedfileid() {
  tagged_publishedfileid_.Clear();
}
::google::protobuf::uint64 CMsgClientUCMAddScreenshot::tagged_publishedfileid(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshot.tagged_publishedfileid)
  return tagged_publishedfileid_.Get(index);
}
void CMsgClientUCMAddScreenshot::set_tagged_publishedfileid(int index, ::google::protobuf::uint64 value) {
  tagged_publishedfileid_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshot.tagged_publishedfileid)
}
void CMsgClientUCMAddScreenshot::add_tagged_publishedfileid(::google::protobuf::uint64 value) {
  tagged_publishedfileid_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMAddScreenshot.tagged_publishedfileid)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientUCMAddScreenshot::tagged_publishedfileid() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMAddScreenshot.tagged_publishedfileid)
  return tagged_publishedfileid_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientUCMAddScreenshot::mutable_tagged_publishedfileid() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMAddScreenshot.tagged_publishedfileid)
  return &tagged_publishedfileid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMAddScreenshotResponse::kEresultFieldNumber;
const int CMsgClientUCMAddScreenshotResponse::kScreenshotidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMAddScreenshotResponse::CMsgClientUCMAddScreenshotResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMAddScreenshotResponse)
}
CMsgClientUCMAddScreenshotResponse::CMsgClientUCMAddScreenshotResponse(const CMsgClientUCMAddScreenshotResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&eresult_, &from.eresult_,
    reinterpret_cast<char*>(&screenshotid_) -
    reinterpret_cast<char*>(&eresult_) + sizeof(screenshotid_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMAddScreenshotResponse)
}

void CMsgClientUCMAddScreenshotResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
  screenshotid_ = GOOGLE_ULONGLONG(18446744073709551615);
}

CMsgClientUCMAddScreenshotResponse::~CMsgClientUCMAddScreenshotResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMAddScreenshotResponse)
  SharedDtor();
}

void CMsgClientUCMAddScreenshotResponse::SharedDtor() {
}

void CMsgClientUCMAddScreenshotResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMAddScreenshotResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMAddScreenshotResponse& CMsgClientUCMAddScreenshotResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMAddScreenshotResponse* CMsgClientUCMAddScreenshotResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMAddScreenshotResponse* n = new CMsgClientUCMAddScreenshotResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMAddScreenshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  if (_has_bits_[0 / 32] & 3u) {
    eresult_ = 2;
    screenshotid_ = GOOGLE_ULONGLONG(18446744073709551615);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMAddScreenshotResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_screenshotid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &screenshotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMAddScreenshotResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMAddScreenshotResponse)
  return false;
#undef DO_
}

void CMsgClientUCMAddScreenshotResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->screenshotid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMAddScreenshotResponse)
}

::google::protobuf::uint8* CMsgClientUCMAddScreenshotResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->screenshotid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMAddScreenshotResponse)
  return target;
}

size_t CMsgClientUCMAddScreenshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

    // optional fixed64 screenshotid = 2 [default = 18446744073709551615];
    if (has_screenshotid()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMAddScreenshotResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMAddScreenshotResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMAddScreenshotResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMAddScreenshotResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMAddScreenshotResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMAddScreenshotResponse::MergeFrom(const CMsgClientUCMAddScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000002u) {
      screenshotid_ = from.screenshotid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMAddScreenshotResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMAddScreenshotResponse::CopyFrom(const CMsgClientUCMAddScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMAddScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMAddScreenshotResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMAddScreenshotResponse::Swap(CMsgClientUCMAddScreenshotResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMAddScreenshotResponse::InternalSwap(CMsgClientUCMAddScreenshotResponse* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(screenshotid_, other->screenshotid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMAddScreenshotResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMAddScreenshotResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientUCMAddScreenshotResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMAddScreenshotResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMAddScreenshotResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMAddScreenshotResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientUCMAddScreenshotResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshotResponse.eresult)
  return eresult_;
}
void CMsgClientUCMAddScreenshotResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshotResponse.eresult)
}

// optional fixed64 screenshotid = 2 [default = 18446744073709551615];
bool CMsgClientUCMAddScreenshotResponse::has_screenshotid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMAddScreenshotResponse::set_has_screenshotid() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMAddScreenshotResponse::clear_has_screenshotid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMAddScreenshotResponse::clear_screenshotid() {
  screenshotid_ = GOOGLE_ULONGLONG(18446744073709551615);
  clear_has_screenshotid();
}
::google::protobuf::uint64 CMsgClientUCMAddScreenshotResponse::screenshotid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMAddScreenshotResponse.screenshotid)
  return screenshotid_;
}
void CMsgClientUCMAddScreenshotResponse::set_screenshotid(::google::protobuf::uint64 value) {
  set_has_screenshotid();
  screenshotid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMAddScreenshotResponse.screenshotid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMDeleteScreenshot::kScreenshotidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMDeleteScreenshot::CMsgClientUCMDeleteScreenshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMDeleteScreenshot)
}
CMsgClientUCMDeleteScreenshot::CMsgClientUCMDeleteScreenshot(const CMsgClientUCMDeleteScreenshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  screenshotid_ = from.screenshotid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMDeleteScreenshot)
}

void CMsgClientUCMDeleteScreenshot::SharedCtor() {
  _cached_size_ = 0;
  screenshotid_ = GOOGLE_ULONGLONG(18446744073709551615);
}

CMsgClientUCMDeleteScreenshot::~CMsgClientUCMDeleteScreenshot() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMDeleteScreenshot)
  SharedDtor();
}

void CMsgClientUCMDeleteScreenshot::SharedDtor() {
}

void CMsgClientUCMDeleteScreenshot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMDeleteScreenshot::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMDeleteScreenshot& CMsgClientUCMDeleteScreenshot::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMDeleteScreenshot* CMsgClientUCMDeleteScreenshot::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMDeleteScreenshot* n = new CMsgClientUCMDeleteScreenshot;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMDeleteScreenshot::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  screenshotid_ = GOOGLE_ULONGLONG(18446744073709551615);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMDeleteScreenshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_screenshotid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &screenshotid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMDeleteScreenshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMDeleteScreenshot)
  return false;
#undef DO_
}

void CMsgClientUCMDeleteScreenshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->screenshotid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMDeleteScreenshot)
}

::google::protobuf::uint8* CMsgClientUCMDeleteScreenshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->screenshotid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMDeleteScreenshot)
  return target;
}

size_t CMsgClientUCMDeleteScreenshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 screenshotid = 1 [default = 18446744073709551615];
  if (has_screenshotid()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMDeleteScreenshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeleteScreenshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMDeleteScreenshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMDeleteScreenshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMDeleteScreenshot)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeleteScreenshot::MergeFrom(const CMsgClientUCMDeleteScreenshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_screenshotid()) {
    set_screenshotid(from.screenshotid());
  }
}

void CMsgClientUCMDeleteScreenshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeleteScreenshot::CopyFrom(const CMsgClientUCMDeleteScreenshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMDeleteScreenshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeleteScreenshot::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeleteScreenshot::Swap(CMsgClientUCMDeleteScreenshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMDeleteScreenshot::InternalSwap(CMsgClientUCMDeleteScreenshot* other) {
  std::swap(screenshotid_, other->screenshotid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMDeleteScreenshot::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMDeleteScreenshot

// optional fixed64 screenshotid = 1 [default = 18446744073709551615];
bool CMsgClientUCMDeleteScreenshot::has_screenshotid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMDeleteScreenshot::set_has_screenshotid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMDeleteScreenshot::clear_has_screenshotid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMDeleteScreenshot::clear_screenshotid() {
  screenshotid_ = GOOGLE_ULONGLONG(18446744073709551615);
  clear_has_screenshotid();
}
::google::protobuf::uint64 CMsgClientUCMDeleteScreenshot::screenshotid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMDeleteScreenshot.screenshotid)
  return screenshotid_;
}
void CMsgClientUCMDeleteScreenshot::set_screenshotid(::google::protobuf::uint64 value) {
  set_has_screenshotid();
  screenshotid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMDeleteScreenshot.screenshotid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMDeleteScreenshotResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMDeleteScreenshotResponse::CMsgClientUCMDeleteScreenshotResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
}
CMsgClientUCMDeleteScreenshotResponse::CMsgClientUCMDeleteScreenshotResponse(const CMsgClientUCMDeleteScreenshotResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
}

void CMsgClientUCMDeleteScreenshotResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
}

CMsgClientUCMDeleteScreenshotResponse::~CMsgClientUCMDeleteScreenshotResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  SharedDtor();
}

void CMsgClientUCMDeleteScreenshotResponse::SharedDtor() {
}

void CMsgClientUCMDeleteScreenshotResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMDeleteScreenshotResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMDeleteScreenshotResponse& CMsgClientUCMDeleteScreenshotResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMDeleteScreenshotResponse* CMsgClientUCMDeleteScreenshotResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMDeleteScreenshotResponse* n = new CMsgClientUCMDeleteScreenshotResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMDeleteScreenshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMDeleteScreenshotResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  return false;
#undef DO_
}

void CMsgClientUCMDeleteScreenshotResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
}

::google::protobuf::uint8* CMsgClientUCMDeleteScreenshotResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  return target;
}

size_t CMsgClientUCMDeleteScreenshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMDeleteScreenshotResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeleteScreenshotResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMDeleteScreenshotResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeleteScreenshotResponse::MergeFrom(const CMsgClientUCMDeleteScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientUCMDeleteScreenshotResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeleteScreenshotResponse::CopyFrom(const CMsgClientUCMDeleteScreenshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMDeleteScreenshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeleteScreenshotResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeleteScreenshotResponse::Swap(CMsgClientUCMDeleteScreenshotResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMDeleteScreenshotResponse::InternalSwap(CMsgClientUCMDeleteScreenshotResponse* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMDeleteScreenshotResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMDeleteScreenshotResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientUCMDeleteScreenshotResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMDeleteScreenshotResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMDeleteScreenshotResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMDeleteScreenshotResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientUCMDeleteScreenshotResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMDeleteScreenshotResponse.eresult)
  return eresult_;
}
void CMsgClientUCMDeleteScreenshotResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMDeleteScreenshotResponse.eresult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishFile::kAppIdFieldNumber;
const int CMsgClientUCMPublishFile::kFileNameFieldNumber;
const int CMsgClientUCMPublishFile::kPreviewFileNameFieldNumber;
const int CMsgClientUCMPublishFile::kConsumerAppIdFieldNumber;
const int CMsgClientUCMPublishFile::kTitleFieldNumber;
const int CMsgClientUCMPublishFile::kDescriptionFieldNumber;
const int CMsgClientUCMPublishFile::kTagsFieldNumber;
const int CMsgClientUCMPublishFile::kWorkshopFileFieldNumber;
const int CMsgClientUCMPublishFile::kVisibilityFieldNumber;
const int CMsgClientUCMPublishFile::kFileTypeFieldNumber;
const int CMsgClientUCMPublishFile::kUrlFieldNumber;
const int CMsgClientUCMPublishFile::kVideoProviderFieldNumber;
const int CMsgClientUCMPublishFile::kVideoAccountNameFieldNumber;
const int CMsgClientUCMPublishFile::kVideoIdentifierFieldNumber;
const int CMsgClientUCMPublishFile::kInProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishFile::CMsgClientUCMPublishFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMPublishFile)
}
CMsgClientUCMPublishFile::CMsgClientUCMPublishFile(const CMsgClientUCMPublishFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  preview_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_preview_file_name()) {
    preview_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_file_name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  video_account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_video_account_name()) {
    video_account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_account_name_);
  }
  video_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_video_identifier()) {
    video_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_identifier_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    reinterpret_cast<char*>(&video_provider_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(video_provider_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMPublishFile)
}

void CMsgClientUCMPublishFile::SharedCtor() {
  _cached_size_ = 0;
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&video_provider_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(video_provider_));
}

CMsgClientUCMPublishFile::~CMsgClientUCMPublishFile() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMPublishFile)
  SharedDtor();
}

void CMsgClientUCMPublishFile::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  video_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMPublishFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMPublishFile::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMPublishFile& CMsgClientUCMPublishFile::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMPublishFile* CMsgClientUCMPublishFile::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMPublishFile* n = new CMsgClientUCMPublishFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMPublishFile::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMPublishFile)
  tags_.Clear();
  if (_has_bits_[0 / 32] & 127u) {
    if (has_file_name()) {
      GOOGLE_DCHECK(!file_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*file_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_preview_file_name()) {
      GOOGLE_DCHECK(!preview_file_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*preview_file_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_title()) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (has_description()) {
      GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*description_.UnsafeRawStringPointer())->clear();
    }
    if (has_url()) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (has_video_account_name()) {
      GOOGLE_DCHECK(!video_account_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*video_account_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_video_identifier()) {
      GOOGLE_DCHECK(!video_identifier_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*video_identifier_.UnsafeRawStringPointer())->clear();
    }
  }
  app_id_ = 0u;
  if (_has_bits_[8 / 32] & 16128u) {
    ::memset(&consumer_app_id_, 0, reinterpret_cast<char*>(&video_provider_) -
      reinterpret_cast<char*>(&consumer_app_id_) + sizeof(video_provider_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMPublishFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMPublishFile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), this->file_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string preview_file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preview_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->preview_file_name().data(), this->preview_file_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.preview_file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 consumer_app_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_consumer_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &consumer_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tags(this->tags_size() - 1).data(),
            this->tags(this->tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool workshop_file = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_workshop_file();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &workshop_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 visibility = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_visibility();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_type = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_file_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 video_provider = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_video_provider();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &video_provider_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string video_account_name = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_video_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->video_account_name().data(), this->video_account_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.video_account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string video_identifier = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_video_identifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->video_identifier().data(), this->video_identifier().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMPublishFile.video_identifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool in_progress = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has_in_progress();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &in_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMPublishFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMPublishFile)
  return false;
#undef DO_
}

void CMsgClientUCMPublishFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMPublishFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file_name(), output);
  }

  // optional string preview_file_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_file_name().data(), this->preview_file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.preview_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->preview_file_name(), output);
  }

  // optional uint32 consumer_app_id = 4;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->consumer_app_id(), output);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->title(), output);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  // repeated string tags = 8;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->tags(i), output);
  }

  // optional bool workshop_file = 9;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->workshop_file(), output);
  }

  // optional int32 visibility = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->visibility(), output);
  }

  // optional uint32 file_type = 11;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->file_type(), output);
  }

  // optional string url = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->url(), output);
  }

  // optional uint32 video_provider = 13;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->video_provider(), output);
  }

  // optional string video_account_name = 14;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->video_account_name().data(), this->video_account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.video_account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->video_account_name(), output);
  }

  // optional string video_identifier = 15;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->video_identifier().data(), this->video_identifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.video_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->video_identifier(), output);
  }

  // optional bool in_progress = 16;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->in_progress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMPublishFile)
}

::google::protobuf::uint8* CMsgClientUCMPublishFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMPublishFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional string file_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file_name(), target);
  }

  // optional string preview_file_name = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_file_name().data(), this->preview_file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.preview_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->preview_file_name(), target);
  }

  // optional uint32 consumer_app_id = 4;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->consumer_app_id(), target);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // repeated string tags = 8;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(8, this->tags(i), target);
  }

  // optional bool workshop_file = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->workshop_file(), target);
  }

  // optional int32 visibility = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->visibility(), target);
  }

  // optional uint32 file_type = 11;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->file_type(), target);
  }

  // optional string url = 12;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->url(), target);
  }

  // optional uint32 video_provider = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->video_provider(), target);
  }

  // optional string video_account_name = 14;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->video_account_name().data(), this->video_account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.video_account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->video_account_name(), target);
  }

  // optional string video_identifier = 15;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->video_identifier().data(), this->video_identifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMPublishFile.video_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->video_identifier(), target);
  }

  // optional bool in_progress = 16;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->in_progress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMPublishFile)
  return target;
}

size_t CMsgClientUCMPublishFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMPublishFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string tags = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string file_name = 2;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional string preview_file_name = 3;
    if (has_preview_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preview_file_name());
    }

    // optional string title = 5;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string description = 6;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string url = 12;
    if (has_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string video_account_name = 14;
    if (has_video_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->video_account_name());
    }

    // optional string video_identifier = 15;
    if (has_video_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->video_identifier());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  if (_has_bits_[8 / 32] & 16128u) {
    // optional uint32 consumer_app_id = 4;
    if (has_consumer_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->consumer_app_id());
    }

    // optional int32 visibility = 10;
    if (has_visibility()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->visibility());
    }

    // optional uint32 file_type = 11;
    if (has_file_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_type());
    }

    // optional bool workshop_file = 9;
    if (has_workshop_file()) {
      total_size += 1 + 1;
    }

    // optional bool in_progress = 16;
    if (has_in_progress()) {
      total_size += 2 + 1;
    }

    // optional uint32 video_provider = 13;
    if (has_video_provider()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->video_provider());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMPublishFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMPublishFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMPublishFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMPublishFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMPublishFile)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishFile::MergeFrom(const CMsgClientUCMPublishFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMPublishFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_preview_file_name();
      preview_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_file_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_video_account_name();
      video_account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_account_name_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_video_identifier();
      video_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.video_identifier_);
    }
    if (cached_has_bits & 0x00000080u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 16128u) {
    if (cached_has_bits & 0x00000100u) {
      consumer_app_id_ = from.consumer_app_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      visibility_ = from.visibility_;
    }
    if (cached_has_bits & 0x00000400u) {
      file_type_ = from.file_type_;
    }
    if (cached_has_bits & 0x00000800u) {
      workshop_file_ = from.workshop_file_;
    }
    if (cached_has_bits & 0x00001000u) {
      in_progress_ = from.in_progress_;
    }
    if (cached_has_bits & 0x00002000u) {
      video_provider_ = from.video_provider_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMPublishFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishFile::CopyFrom(const CMsgClientUCMPublishFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMPublishFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishFile::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishFile::Swap(CMsgClientUCMPublishFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishFile::InternalSwap(CMsgClientUCMPublishFile* other) {
  tags_.InternalSwap(&other->tags_);
  file_name_.Swap(&other->file_name_);
  preview_file_name_.Swap(&other->preview_file_name_);
  title_.Swap(&other->title_);
  description_.Swap(&other->description_);
  url_.Swap(&other->url_);
  video_account_name_.Swap(&other->video_account_name_);
  video_identifier_.Swap(&other->video_identifier_);
  std::swap(app_id_, other->app_id_);
  std::swap(consumer_app_id_, other->consumer_app_id_);
  std::swap(visibility_, other->visibility_);
  std::swap(file_type_, other->file_type_);
  std::swap(workshop_file_, other->workshop_file_);
  std::swap(in_progress_, other->in_progress_);
  std::swap(video_provider_, other->video_provider_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMPublishFile::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMPublishFile

// optional uint32 app_id = 1;
bool CMsgClientUCMPublishFile::has_app_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgClientUCMPublishFile::set_has_app_id() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgClientUCMPublishFile::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgClientUCMPublishFile::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientUCMPublishFile::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.app_id)
  return app_id_;
}
void CMsgClientUCMPublishFile::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.app_id)
}

// optional string file_name = 2;
bool CMsgClientUCMPublishFile::has_file_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMPublishFile::set_has_file_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMPublishFile::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMPublishFile::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_name();
}
const ::std::string& CMsgClientUCMPublishFile::file_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.file_name)
  return file_name_.GetNoArena();
}
void CMsgClientUCMPublishFile::set_file_name(const ::std::string& value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.file_name)
}
#if LANG_CXX11
void CMsgClientUCMPublishFile::set_file_name(::std::string&& value) {
  set_has_file_name();
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMPublishFile.file_name)
}
#endif
void CMsgClientUCMPublishFile::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMPublishFile.file_name)
}
void CMsgClientUCMPublishFile::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMPublishFile.file_name)
}
::std::string* CMsgClientUCMPublishFile::mutable_file_name() {
  set_has_file_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMPublishFile.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMPublishFile::release_file_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMPublishFile.file_name)
  clear_has_file_name();
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMPublishFile::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    set_has_file_name();
  } else {
    clear_has_file_name();
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMPublishFile.file_name)
}

// optional string preview_file_name = 3;
bool CMsgClientUCMPublishFile::has_preview_file_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMPublishFile::set_has_preview_file_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMPublishFile::clear_has_preview_file_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMPublishFile::clear_preview_file_name() {
  preview_file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_preview_file_name();
}
const ::std::string& CMsgClientUCMPublishFile::preview_file_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.preview_file_name)
  return preview_file_name_.GetNoArena();
}
void CMsgClientUCMPublishFile::set_preview_file_name(const ::std::string& value) {
  set_has_preview_file_name();
  preview_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.preview_file_name)
}
#if LANG_CXX11
void CMsgClientUCMPublishFile::set_preview_file_name(::std::string&& value) {
  set_has_preview_file_name();
  preview_file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMPublishFile.preview_file_name)
}
#endif
void CMsgClientUCMPublishFile::set_preview_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_preview_file_name();
  preview_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMPublishFile.preview_file_name)
}
void CMsgClientUCMPublishFile::set_preview_file_name(const char* value, size_t size) {
  set_has_preview_file_name();
  preview_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMPublishFile.preview_file_name)
}
::std::string* CMsgClientUCMPublishFile::mutable_preview_file_name() {
  set_has_preview_file_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMPublishFile.preview_file_name)
  return preview_file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMPublishFile::release_preview_file_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMPublishFile.preview_file_name)
  clear_has_preview_file_name();
  return preview_file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMPublishFile::set_allocated_preview_file_name(::std::string* preview_file_name) {
  if (preview_file_name != NULL) {
    set_has_preview_file_name();
  } else {
    clear_has_preview_file_name();
  }
  preview_file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), preview_file_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMPublishFile.preview_file_name)
}

// optional uint32 consumer_app_id = 4;
bool CMsgClientUCMPublishFile::has_consumer_app_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgClientUCMPublishFile::set_has_consumer_app_id() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgClientUCMPublishFile::clear_has_consumer_app_id() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgClientUCMPublishFile::clear_consumer_app_id() {
  consumer_app_id_ = 0u;
  clear_has_consumer_app_id();
}
::google::protobuf::uint32 CMsgClientUCMPublishFile::consumer_app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.consumer_app_id)
  return consumer_app_id_;
}
void CMsgClientUCMPublishFile::set_consumer_app_id(::google::protobuf::uint32 value) {
  set_has_consumer_app_id();
  consumer_app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.consumer_app_id)
}

// optional string title = 5;
bool CMsgClientUCMPublishFile::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUCMPublishFile::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUCMPublishFile::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUCMPublishFile::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& CMsgClientUCMPublishFile::title() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.title)
  return title_.GetNoArena();
}
void CMsgClientUCMPublishFile::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.title)
}
#if LANG_CXX11
void CMsgClientUCMPublishFile::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMPublishFile.title)
}
#endif
void CMsgClientUCMPublishFile::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMPublishFile.title)
}
void CMsgClientUCMPublishFile::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMPublishFile.title)
}
::std::string* CMsgClientUCMPublishFile::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMPublishFile.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMPublishFile::release_title() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMPublishFile.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMPublishFile::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMPublishFile.title)
}

// optional string description = 6;
bool CMsgClientUCMPublishFile::has_description() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientUCMPublishFile::set_has_description() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientUCMPublishFile::clear_has_description() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientUCMPublishFile::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
const ::std::string& CMsgClientUCMPublishFile::description() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.description)
  return description_.GetNoArena();
}
void CMsgClientUCMPublishFile::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.description)
}
#if LANG_CXX11
void CMsgClientUCMPublishFile::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMPublishFile.description)
}
#endif
void CMsgClientUCMPublishFile::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMPublishFile.description)
}
void CMsgClientUCMPublishFile::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMPublishFile.description)
}
::std::string* CMsgClientUCMPublishFile::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMPublishFile.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMPublishFile::release_description() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMPublishFile.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMPublishFile::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMPublishFile.description)
}

// repeated string tags = 8;
int CMsgClientUCMPublishFile::tags_size() const {
  return tags_.size();
}
void CMsgClientUCMPublishFile::clear_tags() {
  tags_.Clear();
}
const ::std::string& CMsgClientUCMPublishFile::tags(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.tags)
  return tags_.Get(index);
}
::std::string* CMsgClientUCMPublishFile::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMPublishFile.tags)
  return tags_.Mutable(index);
}
void CMsgClientUCMPublishFile::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.tags)
  tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CMsgClientUCMPublishFile::set_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
#endif
void CMsgClientUCMPublishFile::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMPublishFile.tags)
}
void CMsgClientUCMPublishFile::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMPublishFile.tags)
}
::std::string* CMsgClientUCMPublishFile::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:proto.steam.CMsgClientUCMPublishFile.tags)
  return tags_.Add();
}
void CMsgClientUCMPublishFile::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMPublishFile.tags)
}
#if LANG_CXX11
void CMsgClientUCMPublishFile::add_tags(::std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMPublishFile.tags)
}
#endif
void CMsgClientUCMPublishFile::add_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.steam.CMsgClientUCMPublishFile.tags)
}
void CMsgClientUCMPublishFile::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.steam.CMsgClientUCMPublishFile.tags)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgClientUCMPublishFile::tags() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMPublishFile.tags)
  return tags_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgClientUCMPublishFile::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMPublishFile.tags)
  return &tags_;
}

// optional bool workshop_file = 9;
bool CMsgClientUCMPublishFile::has_workshop_file() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CMsgClientUCMPublishFile::set_has_workshop_file() {
  _has_bits_[0] |= 0x00000800u;
}
void CMsgClientUCMPublishFile::clear_has_workshop_file() {
  _has_bits_[0] &= ~0x00000800u;
}
void CMsgClientUCMPublishFile::clear_workshop_file() {
  workshop_file_ = false;
  clear_has_workshop_file();
}
bool CMsgClientUCMPublishFile::workshop_file() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.workshop_file)
  return workshop_file_;
}
void CMsgClientUCMPublishFile::set_workshop_file(bool value) {
  set_has_workshop_file();
  workshop_file_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.workshop_file)
}

// optional int32 visibility = 10;
bool CMsgClientUCMPublishFile::has_visibility() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CMsgClientUCMPublishFile::set_has_visibility() {
  _has_bits_[0] |= 0x00000200u;
}
void CMsgClientUCMPublishFile::clear_has_visibility() {
  _has_bits_[0] &= ~0x00000200u;
}
void CMsgClientUCMPublishFile::clear_visibility() {
  visibility_ = 0;
  clear_has_visibility();
}
::google::protobuf::int32 CMsgClientUCMPublishFile::visibility() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.visibility)
  return visibility_;
}
void CMsgClientUCMPublishFile::set_visibility(::google::protobuf::int32 value) {
  set_has_visibility();
  visibility_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.visibility)
}

// optional uint32 file_type = 11;
bool CMsgClientUCMPublishFile::has_file_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CMsgClientUCMPublishFile::set_has_file_type() {
  _has_bits_[0] |= 0x00000400u;
}
void CMsgClientUCMPublishFile::clear_has_file_type() {
  _has_bits_[0] &= ~0x00000400u;
}
void CMsgClientUCMPublishFile::clear_file_type() {
  file_type_ = 0u;
  clear_has_file_type();
}
::google::protobuf::uint32 CMsgClientUCMPublishFile::file_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.file_type)
  return file_type_;
}
void CMsgClientUCMPublishFile::set_file_type(::google::protobuf::uint32 value) {
  set_has_file_type();
  file_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.file_type)
}

// optional string url = 12;
bool CMsgClientUCMPublishFile::has_url() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientUCMPublishFile::set_has_url() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientUCMPublishFile::clear_has_url() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientUCMPublishFile::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& CMsgClientUCMPublishFile::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.url)
  return url_.GetNoArena();
}
void CMsgClientUCMPublishFile::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.url)
}
#if LANG_CXX11
void CMsgClientUCMPublishFile::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMPublishFile.url)
}
#endif
void CMsgClientUCMPublishFile::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMPublishFile.url)
}
void CMsgClientUCMPublishFile::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMPublishFile.url)
}
::std::string* CMsgClientUCMPublishFile::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMPublishFile.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMPublishFile::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMPublishFile.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMPublishFile::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMPublishFile.url)
}

// optional uint32 video_provider = 13;
bool CMsgClientUCMPublishFile::has_video_provider() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CMsgClientUCMPublishFile::set_has_video_provider() {
  _has_bits_[0] |= 0x00002000u;
}
void CMsgClientUCMPublishFile::clear_has_video_provider() {
  _has_bits_[0] &= ~0x00002000u;
}
void CMsgClientUCMPublishFile::clear_video_provider() {
  video_provider_ = 0u;
  clear_has_video_provider();
}
::google::protobuf::uint32 CMsgClientUCMPublishFile::video_provider() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.video_provider)
  return video_provider_;
}
void CMsgClientUCMPublishFile::set_video_provider(::google::protobuf::uint32 value) {
  set_has_video_provider();
  video_provider_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.video_provider)
}

// optional string video_account_name = 14;
bool CMsgClientUCMPublishFile::has_video_account_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientUCMPublishFile::set_has_video_account_name() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientUCMPublishFile::clear_has_video_account_name() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientUCMPublishFile::clear_video_account_name() {
  video_account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_video_account_name();
}
const ::std::string& CMsgClientUCMPublishFile::video_account_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.video_account_name)
  return video_account_name_.GetNoArena();
}
void CMsgClientUCMPublishFile::set_video_account_name(const ::std::string& value) {
  set_has_video_account_name();
  video_account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.video_account_name)
}
#if LANG_CXX11
void CMsgClientUCMPublishFile::set_video_account_name(::std::string&& value) {
  set_has_video_account_name();
  video_account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMPublishFile.video_account_name)
}
#endif
void CMsgClientUCMPublishFile::set_video_account_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_video_account_name();
  video_account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMPublishFile.video_account_name)
}
void CMsgClientUCMPublishFile::set_video_account_name(const char* value, size_t size) {
  set_has_video_account_name();
  video_account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMPublishFile.video_account_name)
}
::std::string* CMsgClientUCMPublishFile::mutable_video_account_name() {
  set_has_video_account_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMPublishFile.video_account_name)
  return video_account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMPublishFile::release_video_account_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMPublishFile.video_account_name)
  clear_has_video_account_name();
  return video_account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMPublishFile::set_allocated_video_account_name(::std::string* video_account_name) {
  if (video_account_name != NULL) {
    set_has_video_account_name();
  } else {
    clear_has_video_account_name();
  }
  video_account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), video_account_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMPublishFile.video_account_name)
}

// optional string video_identifier = 15;
bool CMsgClientUCMPublishFile::has_video_identifier() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientUCMPublishFile::set_has_video_identifier() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientUCMPublishFile::clear_has_video_identifier() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientUCMPublishFile::clear_video_identifier() {
  video_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_video_identifier();
}
const ::std::string& CMsgClientUCMPublishFile::video_identifier() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.video_identifier)
  return video_identifier_.GetNoArena();
}
void CMsgClientUCMPublishFile::set_video_identifier(const ::std::string& value) {
  set_has_video_identifier();
  video_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.video_identifier)
}
#if LANG_CXX11
void CMsgClientUCMPublishFile::set_video_identifier(::std::string&& value) {
  set_has_video_identifier();
  video_identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMPublishFile.video_identifier)
}
#endif
void CMsgClientUCMPublishFile::set_video_identifier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_video_identifier();
  video_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMPublishFile.video_identifier)
}
void CMsgClientUCMPublishFile::set_video_identifier(const char* value, size_t size) {
  set_has_video_identifier();
  video_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMPublishFile.video_identifier)
}
::std::string* CMsgClientUCMPublishFile::mutable_video_identifier() {
  set_has_video_identifier();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMPublishFile.video_identifier)
  return video_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMPublishFile::release_video_identifier() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMPublishFile.video_identifier)
  clear_has_video_identifier();
  return video_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMPublishFile::set_allocated_video_identifier(::std::string* video_identifier) {
  if (video_identifier != NULL) {
    set_has_video_identifier();
  } else {
    clear_has_video_identifier();
  }
  video_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), video_identifier);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMPublishFile.video_identifier)
}

// optional bool in_progress = 16;
bool CMsgClientUCMPublishFile::has_in_progress() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CMsgClientUCMPublishFile::set_has_in_progress() {
  _has_bits_[0] |= 0x00001000u;
}
void CMsgClientUCMPublishFile::clear_has_in_progress() {
  _has_bits_[0] &= ~0x00001000u;
}
void CMsgClientUCMPublishFile::clear_in_progress() {
  in_progress_ = false;
  clear_has_in_progress();
}
bool CMsgClientUCMPublishFile::in_progress() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFile.in_progress)
  return in_progress_;
}
void CMsgClientUCMPublishFile::set_in_progress(bool value) {
  set_has_in_progress();
  in_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFile.in_progress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishFileResponse::kEresultFieldNumber;
const int CMsgClientUCMPublishFileResponse::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishFileResponse::kNeedsWorkshopLegalAgreementAcceptanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishFileResponse::CMsgClientUCMPublishFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMPublishFileResponse)
}
CMsgClientUCMPublishFileResponse::CMsgClientUCMPublishFileResponse(const CMsgClientUCMPublishFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&needs_workshop_legal_agreement_acceptance_, &from.needs_workshop_legal_agreement_acceptance_,
    reinterpret_cast<char*>(&published_file_id_) -
    reinterpret_cast<char*>(&needs_workshop_legal_agreement_acceptance_) + sizeof(published_file_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMPublishFileResponse)
}

void CMsgClientUCMPublishFileResponse::SharedCtor() {
  _cached_size_ = 0;
  needs_workshop_legal_agreement_acceptance_ = false;
  eresult_ = 2;
  published_file_id_ = GOOGLE_ULONGLONG(18446744073709551615);
}

CMsgClientUCMPublishFileResponse::~CMsgClientUCMPublishFileResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMPublishFileResponse)
  SharedDtor();
}

void CMsgClientUCMPublishFileResponse::SharedDtor() {
}

void CMsgClientUCMPublishFileResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMPublishFileResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMPublishFileResponse& CMsgClientUCMPublishFileResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMPublishFileResponse* CMsgClientUCMPublishFileResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMPublishFileResponse* n = new CMsgClientUCMPublishFileResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMPublishFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMPublishFileResponse)
  if (_has_bits_[0 / 32] & 7u) {
    needs_workshop_legal_agreement_acceptance_ = false;
    eresult_ = 2;
    published_file_id_ = GOOGLE_ULONGLONG(18446744073709551615);
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMPublishFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMPublishFileResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_needs_workshop_legal_agreement_acceptance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needs_workshop_legal_agreement_acceptance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMPublishFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMPublishFileResponse)
  return false;
#undef DO_
}

void CMsgClientUCMPublishFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMPublishFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->published_file_id(), output);
  }

  // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->needs_workshop_legal_agreement_acceptance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMPublishFileResponse)
}

::google::protobuf::uint8* CMsgClientUCMPublishFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMPublishFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->published_file_id(), target);
  }

  // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->needs_workshop_legal_agreement_acceptance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMPublishFileResponse)
  return target;
}

size_t CMsgClientUCMPublishFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMPublishFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
    if (has_needs_workshop_legal_agreement_acceptance()) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

    // optional fixed64 published_file_id = 2 [default = 18446744073709551615];
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMPublishFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMPublishFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMPublishFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMPublishFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMPublishFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishFileResponse::MergeFrom(const CMsgClientUCMPublishFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMPublishFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      needs_workshop_legal_agreement_acceptance_ = from.needs_workshop_legal_agreement_acceptance_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000004u) {
      published_file_id_ = from.published_file_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMPublishFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishFileResponse::CopyFrom(const CMsgClientUCMPublishFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMPublishFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishFileResponse::Swap(CMsgClientUCMPublishFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishFileResponse::InternalSwap(CMsgClientUCMPublishFileResponse* other) {
  std::swap(needs_workshop_legal_agreement_acceptance_, other->needs_workshop_legal_agreement_acceptance_);
  std::swap(eresult_, other->eresult_);
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMPublishFileResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMPublishFileResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientUCMPublishFileResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMPublishFileResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMPublishFileResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMPublishFileResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientUCMPublishFileResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFileResponse.eresult)
  return eresult_;
}
void CMsgClientUCMPublishFileResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFileResponse.eresult)
}

// optional fixed64 published_file_id = 2 [default = 18446744073709551615];
bool CMsgClientUCMPublishFileResponse::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUCMPublishFileResponse::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUCMPublishFileResponse::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUCMPublishFileResponse::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(18446744073709551615);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientUCMPublishFileResponse::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFileResponse.published_file_id)
  return published_file_id_;
}
void CMsgClientUCMPublishFileResponse::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFileResponse.published_file_id)
}

// optional bool needs_workshop_legal_agreement_acceptance = 3 [default = false];
bool CMsgClientUCMPublishFileResponse::has_needs_workshop_legal_agreement_acceptance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMPublishFileResponse::set_has_needs_workshop_legal_agreement_acceptance() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMPublishFileResponse::clear_has_needs_workshop_legal_agreement_acceptance() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMPublishFileResponse::clear_needs_workshop_legal_agreement_acceptance() {
  needs_workshop_legal_agreement_acceptance_ = false;
  clear_has_needs_workshop_legal_agreement_acceptance();
}
bool CMsgClientUCMPublishFileResponse::needs_workshop_legal_agreement_acceptance() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishFileResponse.needs_workshop_legal_agreement_acceptance)
  return needs_workshop_legal_agreement_acceptance_;
}
void CMsgClientUCMPublishFileResponse::set_needs_workshop_legal_agreement_acceptance(bool value) {
  set_has_needs_workshop_legal_agreement_acceptance();
  needs_workshop_legal_agreement_acceptance_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishFileResponse.needs_workshop_legal_agreement_acceptance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMUpdatePublishedFile_KeyValueTag::kKeyFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_KeyValueTag::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMUpdatePublishedFile_KeyValueTag::CMsgClientUCMUpdatePublishedFile_KeyValueTag()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
}
CMsgClientUCMUpdatePublishedFile_KeyValueTag::CMsgClientUCMUpdatePublishedFile_KeyValueTag(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_value()) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientUCMUpdatePublishedFile_KeyValueTag::~CMsgClientUCMUpdatePublishedFile_KeyValueTag() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  SharedDtor();
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMUpdatePublishedFile_KeyValueTag::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMUpdatePublishedFile_KeyValueTag& CMsgClientUCMUpdatePublishedFile_KeyValueTag::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMUpdatePublishedFile_KeyValueTag* CMsgClientUCMUpdatePublishedFile_KeyValueTag::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMUpdatePublishedFile_KeyValueTag* n = new CMsgClientUCMUpdatePublishedFile_KeyValueTag;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_key()) {
      GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*key_.UnsafeRawStringPointer())->clear();
    }
    if (has_value()) {
      GOOGLE_DCHECK(!value_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*value_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMUpdatePublishedFile_KeyValueTag::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  return false;
#undef DO_
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
}

::google::protobuf::uint8* CMsgClientUCMUpdatePublishedFile_KeyValueTag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // optional string value = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFile_KeyValueTag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string key = 1;
    if (has_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->key());
    }

    // optional string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFile_KeyValueTag* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMUpdatePublishedFile_KeyValueTag>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::MergeFrom(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_key();
      key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_value();
      value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
    }
  }
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::CopyFrom(const CMsgClientUCMUpdatePublishedFile_KeyValueTag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFile_KeyValueTag::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFile_KeyValueTag::Swap(CMsgClientUCMUpdatePublishedFile_KeyValueTag* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::InternalSwap(CMsgClientUCMUpdatePublishedFile_KeyValueTag* other) {
  key_.Swap(&other->key_);
  value_.Swap(&other->value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMUpdatePublishedFile_KeyValueTag::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMUpdatePublishedFile_KeyValueTag

// optional string key = 1;
bool CMsgClientUCMUpdatePublishedFile_KeyValueTag::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& CMsgClientUCMUpdatePublishedFile_KeyValueTag::key() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
  return key_.GetNoArena();
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
}
#endif
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
}
::std::string* CMsgClientUCMUpdatePublishedFile_KeyValueTag::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMUpdatePublishedFile_KeyValueTag::release_key() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.key)
}

// optional string value = 2;
bool CMsgClientUCMUpdatePublishedFile_KeyValueTag::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
const ::std::string& CMsgClientUCMUpdatePublishedFile_KeyValueTag::value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
  return value_.GetNoArena();
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
}
#endif
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
}
::std::string* CMsgClientUCMUpdatePublishedFile_KeyValueTag::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMUpdatePublishedFile_KeyValueTag::release_value() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMUpdatePublishedFile_KeyValueTag::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag.value)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kOriginalFileNameFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kInternalFileNameFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kVideoidFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kPreviewTypeFieldNumber;
const int CMsgClientUCMUpdatePublishedFile_AdditionalPreview::kUpdateIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CMsgClientUCMUpdatePublishedFile_AdditionalPreview()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
}
CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CMsgClientUCMUpdatePublishedFile_AdditionalPreview(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  original_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_original_file_name()) {
    original_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_file_name_);
  }
  internal_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_internal_file_name()) {
    internal_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_file_name_);
  }
  videoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_videoid()) {
    videoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.videoid_);
  }
  ::memcpy(&preview_type_, &from.preview_type_,
    reinterpret_cast<char*>(&update_index_) -
    reinterpret_cast<char*>(&preview_type_) + sizeof(update_index_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SharedCtor() {
  _cached_size_ = 0;
  original_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  videoid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_type_ = 0u;
  update_index_ = -1;
}

CMsgClientUCMUpdatePublishedFile_AdditionalPreview::~CMsgClientUCMUpdatePublishedFile_AdditionalPreview() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  SharedDtor();
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SharedDtor() {
  original_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  internal_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  videoid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& CMsgClientUCMUpdatePublishedFile_AdditionalPreview::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMUpdatePublishedFile_AdditionalPreview* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMUpdatePublishedFile_AdditionalPreview* n = new CMsgClientUCMUpdatePublishedFile_AdditionalPreview;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_original_file_name()) {
      GOOGLE_DCHECK(!original_file_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*original_file_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_internal_file_name()) {
      GOOGLE_DCHECK(!internal_file_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*internal_file_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_videoid()) {
      GOOGLE_DCHECK(!videoid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*videoid_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    preview_type_ = 0u;
    update_index_ = -1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string original_file_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_original_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->original_file_name().data(), this->original_file_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string internal_file_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_internal_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->internal_file_name().data(), this->internal_file_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string videoid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_videoid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->videoid().data(), this->videoid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 preview_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_preview_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &preview_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 update_index = 5 [default = -1];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_update_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &update_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  return false;
#undef DO_
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string original_file_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->original_file_name().data(), this->original_file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->original_file_name(), output);
  }

  // optional string internal_file_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->internal_file_name().data(), this->internal_file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->internal_file_name(), output);
  }

  // optional string videoid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->videoid().data(), this->videoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->videoid(), output);
  }

  // optional uint32 preview_type = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->preview_type(), output);
  }

  // optional int32 update_index = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->update_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
}

::google::protobuf::uint8* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string original_file_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->original_file_name().data(), this->original_file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->original_file_name(), target);
  }

  // optional string internal_file_name = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->internal_file_name().data(), this->internal_file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->internal_file_name(), target);
  }

  // optional string videoid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->videoid().data(), this->videoid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->videoid(), target);
  }

  // optional uint32 preview_type = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->preview_type(), target);
  }

  // optional int32 update_index = 5 [default = -1];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->update_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFile_AdditionalPreview::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string original_file_name = 1;
    if (has_original_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->original_file_name());
    }

    // optional string internal_file_name = 2;
    if (has_internal_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->internal_file_name());
    }

    // optional string videoid = 3;
    if (has_videoid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->videoid());
    }

    // optional uint32 preview_type = 4;
    if (has_preview_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->preview_type());
    }

    // optional int32 update_index = 5 [default = -1];
    if (has_update_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->update_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFile_AdditionalPreview* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMUpdatePublishedFile_AdditionalPreview>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::MergeFrom(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_original_file_name();
      original_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.original_file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_internal_file_name();
      internal_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.internal_file_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_videoid();
      videoid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.videoid_);
    }
    if (cached_has_bits & 0x00000008u) {
      preview_type_ = from.preview_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      update_index_ = from.update_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::CopyFrom(const CMsgClientUCMUpdatePublishedFile_AdditionalPreview& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::Swap(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::InternalSwap(CMsgClientUCMUpdatePublishedFile_AdditionalPreview* other) {
  original_file_name_.Swap(&other->original_file_name_);
  internal_file_name_.Swap(&other->internal_file_name_);
  videoid_.Swap(&other->videoid_);
  std::swap(preview_type_, other->preview_type_);
  std::swap(update_index_, other->update_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMUpdatePublishedFile_AdditionalPreview::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMUpdatePublishedFile_AdditionalPreview

// optional string original_file_name = 1;
bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::has_original_file_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_has_original_file_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_has_original_file_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_original_file_name() {
  original_file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_original_file_name();
}
const ::std::string& CMsgClientUCMUpdatePublishedFile_AdditionalPreview::original_file_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
  return original_file_name_.GetNoArena();
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_original_file_name(const ::std::string& value) {
  set_has_original_file_name();
  original_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_original_file_name(::std::string&& value) {
  set_has_original_file_name();
  original_file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
}
#endif
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_original_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_original_file_name();
  original_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_original_file_name(const char* value, size_t size) {
  set_has_original_file_name();
  original_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
}
::std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::mutable_original_file_name() {
  set_has_original_file_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
  return original_file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::release_original_file_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
  clear_has_original_file_name();
  return original_file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_allocated_original_file_name(::std::string* original_file_name) {
  if (original_file_name != NULL) {
    set_has_original_file_name();
  } else {
    clear_has_original_file_name();
  }
  original_file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), original_file_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.original_file_name)
}

// optional string internal_file_name = 2;
bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::has_internal_file_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_has_internal_file_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_has_internal_file_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_internal_file_name() {
  internal_file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_internal_file_name();
}
const ::std::string& CMsgClientUCMUpdatePublishedFile_AdditionalPreview::internal_file_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
  return internal_file_name_.GetNoArena();
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_internal_file_name(const ::std::string& value) {
  set_has_internal_file_name();
  internal_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_internal_file_name(::std::string&& value) {
  set_has_internal_file_name();
  internal_file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
}
#endif
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_internal_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_internal_file_name();
  internal_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_internal_file_name(const char* value, size_t size) {
  set_has_internal_file_name();
  internal_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
}
::std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::mutable_internal_file_name() {
  set_has_internal_file_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
  return internal_file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::release_internal_file_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
  clear_has_internal_file_name();
  return internal_file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_allocated_internal_file_name(::std::string* internal_file_name) {
  if (internal_file_name != NULL) {
    set_has_internal_file_name();
  } else {
    clear_has_internal_file_name();
  }
  internal_file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), internal_file_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.internal_file_name)
}

// optional string videoid = 3;
bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::has_videoid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_has_videoid() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_has_videoid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_videoid() {
  videoid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_videoid();
}
const ::std::string& CMsgClientUCMUpdatePublishedFile_AdditionalPreview::videoid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
  return videoid_.GetNoArena();
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_videoid(const ::std::string& value) {
  set_has_videoid();
  videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_videoid(::std::string&& value) {
  set_has_videoid();
  videoid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
}
#endif
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_videoid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_videoid();
  videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_videoid(const char* value, size_t size) {
  set_has_videoid();
  videoid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
}
::std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::mutable_videoid() {
  set_has_videoid();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
  return videoid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMUpdatePublishedFile_AdditionalPreview::release_videoid() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
  clear_has_videoid();
  return videoid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_allocated_videoid(::std::string* videoid) {
  if (videoid != NULL) {
    set_has_videoid();
  } else {
    clear_has_videoid();
  }
  videoid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), videoid);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.videoid)
}

// optional uint32 preview_type = 4;
bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::has_preview_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_has_preview_type() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_has_preview_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_preview_type() {
  preview_type_ = 0u;
  clear_has_preview_type();
}
::google::protobuf::uint32 CMsgClientUCMUpdatePublishedFile_AdditionalPreview::preview_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.preview_type)
  return preview_type_;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_preview_type(::google::protobuf::uint32 value) {
  set_has_preview_type();
  preview_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.preview_type)
}

// optional int32 update_index = 5 [default = -1];
bool CMsgClientUCMUpdatePublishedFile_AdditionalPreview::has_update_index() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_has_update_index() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_has_update_index() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::clear_update_index() {
  update_index_ = -1;
  clear_has_update_index();
}
::google::protobuf::int32 CMsgClientUCMUpdatePublishedFile_AdditionalPreview::update_index() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.update_index)
  return update_index_;
}
void CMsgClientUCMUpdatePublishedFile_AdditionalPreview::set_update_index(::google::protobuf::int32 value) {
  set_has_update_index();
  update_index_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview.update_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMUpdatePublishedFile::kAppIdFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kPublishedFileIdFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kFileNameFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kPreviewFileNameFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kTitleFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kDescriptionFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kTagsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kVisibilityFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateFileFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdatePreviewFileFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateTitleFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateDescriptionFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateTagsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateVisibilityFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kChangeDescriptionFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateUrlFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUrlFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateContentManifestFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kContentManifestFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kMetadataFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kUpdateMetadataFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kLanguageFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kRemovedKvtagsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kKvtagsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kPreviewsFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kPreviewsToRemoveFieldNumber;
const int CMsgClientUCMUpdatePublishedFile::kClearInProgressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMUpdatePublishedFile::CMsgClientUCMUpdatePublishedFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMUpdatePublishedFile)
}
CMsgClientUCMUpdatePublishedFile::CMsgClientUCMUpdatePublishedFile(const CMsgClientUCMUpdatePublishedFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tags_(from.tags_),
      removed_kvtags_(from.removed_kvtags_),
      kvtags_(from.kvtags_),
      previews_(from.previews_),
      previews_to_remove_(from.previews_to_remove_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_file_name()) {
    file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
  }
  preview_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_preview_file_name()) {
    preview_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_file_name_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_title()) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_description()) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  change_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_change_description()) {
    change_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.change_description_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_url()) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_metadata()) {
    metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
  }
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&clear_in_progress_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(clear_in_progress_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMUpdatePublishedFile)
}

void CMsgClientUCMUpdatePublishedFile::SharedCtor() {
  _cached_size_ = 0;
  file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_file_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  change_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&clear_in_progress_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(clear_in_progress_));
}

CMsgClientUCMUpdatePublishedFile::~CMsgClientUCMUpdatePublishedFile() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMUpdatePublishedFile)
  SharedDtor();
}

void CMsgClientUCMUpdatePublishedFile::SharedDtor() {
  file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  preview_file_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  change_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  metadata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUCMUpdatePublishedFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMUpdatePublishedFile::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMUpdatePublishedFile& CMsgClientUCMUpdatePublishedFile::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMUpdatePublishedFile* CMsgClientUCMUpdatePublishedFile::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMUpdatePublishedFile* n = new CMsgClientUCMUpdatePublishedFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMUpdatePublishedFile::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  tags_.Clear();
  removed_kvtags_.Clear();
  kvtags_.Clear();
  previews_.Clear();
  previews_to_remove_.Clear();
  if (_has_bits_[0 / 32] & 127u) {
    if (has_file_name()) {
      GOOGLE_DCHECK(!file_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*file_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_preview_file_name()) {
      GOOGLE_DCHECK(!preview_file_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*preview_file_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_title()) {
      GOOGLE_DCHECK(!title_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*title_.UnsafeRawStringPointer())->clear();
    }
    if (has_description()) {
      GOOGLE_DCHECK(!description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*description_.UnsafeRawStringPointer())->clear();
    }
    if (has_change_description()) {
      GOOGLE_DCHECK(!change_description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*change_description_.UnsafeRawStringPointer())->clear();
    }
    if (has_url()) {
      GOOGLE_DCHECK(!url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*url_.UnsafeRawStringPointer())->clear();
    }
    if (has_metadata()) {
      GOOGLE_DCHECK(!metadata_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*metadata_.UnsafeRawStringPointer())->clear();
    }
  }
  published_file_id_ = GOOGLE_ULONGLONG(0);
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&app_id_, 0, reinterpret_cast<char*>(&update_visibility_) -
      reinterpret_cast<char*>(&app_id_) + sizeof(update_visibility_));
  }
  if (_has_bits_[16 / 32] & 4128768u) {
    ::memset(&update_url_, 0, reinterpret_cast<char*>(&clear_in_progress_) -
      reinterpret_cast<char*>(&update_url_) + sizeof(clear_in_progress_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMUpdatePublishedFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 published_file_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string file_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->file_name().data(), this->file_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string preview_file_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_preview_file_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->preview_file_name().data(), this->preview_file_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string title = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.title");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string description = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->description().data(), this->description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tags(this->tags_size() - 1).data(),
            this->tags(this->tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 visibility = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_visibility();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_file = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_update_file();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_preview_file = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_update_preview_file();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_preview_file_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_title = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_update_title();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_title_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_description = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_update_description();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_description_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_tags = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_update_tags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_tags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_visibility = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_update_visibility();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_visibility_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string change_description = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_change_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->change_description().data(), this->change_description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.change_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_url = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has_update_url();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_url_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string url = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_content_manifest = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          set_has_update_content_manifest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_content_manifest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 content_manifest = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u)) {
          set_has_content_manifest();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &content_manifest_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string metadata = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_metadata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->metadata().data(), this->metadata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.metadata");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool update_metadata = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u)) {
          set_has_update_metadata();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &update_metadata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 22 [default = 0];
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u)) {
          set_has_language();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string removed_kvtags = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_removed_kvtags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->removed_kvtags(this->removed_kvtags_size() - 1).data(),
            this->removed_kvtags(this->removed_kvtags_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_kvtags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_previews()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 previews_to_remove = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 208u, input, this->mutable_previews_to_remove())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(210u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_previews_to_remove())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool clear_in_progress = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u)) {
          set_has_clear_in_progress();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &clear_in_progress_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMUpdatePublishedFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMUpdatePublishedFile)
  return false;
#undef DO_
}

void CMsgClientUCMUpdatePublishedFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 published_file_id = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->published_file_id(), output);
  }

  // optional string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->file_name(), output);
  }

  // optional string preview_file_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_file_name().data(), this->preview_file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->preview_file_name(), output);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->title(), output);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->description(), output);
  }

  // repeated string tags = 7;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->tags(i), output);
  }

  // optional int32 visibility = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->visibility(), output);
  }

  // optional bool update_file = 9;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->update_file(), output);
  }

  // optional bool update_preview_file = 10;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->update_preview_file(), output);
  }

  // optional bool update_title = 11;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->update_title(), output);
  }

  // optional bool update_description = 12;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->update_description(), output);
  }

  // optional bool update_tags = 13;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->update_tags(), output);
  }

  // optional bool update_visibility = 14;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->update_visibility(), output);
  }

  // optional string change_description = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->change_description().data(), this->change_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.change_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->change_description(), output);
  }

  // optional bool update_url = 16;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->update_url(), output);
  }

  // optional string url = 17;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->url(), output);
  }

  // optional bool update_content_manifest = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->update_content_manifest(), output);
  }

  // optional fixed64 content_manifest = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(19, this->content_manifest(), output);
  }

  // optional string metadata = 20;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->metadata().data(), this->metadata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.metadata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->metadata(), output);
  }

  // optional bool update_metadata = 21;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(21, this->update_metadata(), output);
  }

  // optional int32 language = 22 [default = 0];
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(22, this->language(), output);
  }

  // repeated string removed_kvtags = 23;
  for (int i = 0, n = this->removed_kvtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->removed_kvtags(i).data(), this->removed_kvtags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      23, this->removed_kvtags(i), output);
  }

  // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
  for (unsigned int i = 0, n = this->kvtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24, this->kvtags(i), output);
  }

  // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
  for (unsigned int i = 0, n = this->previews_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25, this->previews(i), output);
  }

  // repeated int32 previews_to_remove = 26;
  for (int i = 0, n = this->previews_to_remove_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      26, this->previews_to_remove(i), output);
  }

  // optional bool clear_in_progress = 27;
  if (cached_has_bits & 0x00200000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(27, this->clear_in_progress(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMUpdatePublishedFile)
}

::google::protobuf::uint8* CMsgClientUCMUpdatePublishedFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 published_file_id = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->published_file_id(), target);
  }

  // optional string file_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->file_name().data(), this->file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->file_name(), target);
  }

  // optional string preview_file_name = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->preview_file_name().data(), this->preview_file_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->preview_file_name(), target);
  }

  // optional string title = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->title(), target);
  }

  // optional string description = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->description().data(), this->description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->description(), target);
  }

  // repeated string tags = 7;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->tags(i), target);
  }

  // optional int32 visibility = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->visibility(), target);
  }

  // optional bool update_file = 9;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->update_file(), target);
  }

  // optional bool update_preview_file = 10;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->update_preview_file(), target);
  }

  // optional bool update_title = 11;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->update_title(), target);
  }

  // optional bool update_description = 12;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->update_description(), target);
  }

  // optional bool update_tags = 13;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->update_tags(), target);
  }

  // optional bool update_visibility = 14;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->update_visibility(), target);
  }

  // optional string change_description = 15;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->change_description().data(), this->change_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.change_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->change_description(), target);
  }

  // optional bool update_url = 16;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->update_url(), target);
  }

  // optional string url = 17;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->url(), target);
  }

  // optional bool update_content_manifest = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->update_content_manifest(), target);
  }

  // optional fixed64 content_manifest = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(19, this->content_manifest(), target);
  }

  // optional string metadata = 20;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->metadata().data(), this->metadata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.metadata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->metadata(), target);
  }

  // optional bool update_metadata = 21;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(21, this->update_metadata(), target);
  }

  // optional int32 language = 22 [default = 0];
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(22, this->language(), target);
  }

  // repeated string removed_kvtags = 23;
  for (int i = 0, n = this->removed_kvtags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->removed_kvtags(i).data(), this->removed_kvtags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(23, this->removed_kvtags(i), target);
  }

  // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
  for (unsigned int i = 0, n = this->kvtags_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        24, this->kvtags(i), deterministic, target);
  }

  // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
  for (unsigned int i = 0, n = this->previews_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        25, this->previews(i), deterministic, target);
  }

  // repeated int32 previews_to_remove = 26;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(26, this->previews_to_remove_, target);

  // optional bool clear_in_progress = 27;
  if (cached_has_bits & 0x00200000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(27, this->clear_in_progress(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMUpdatePublishedFile)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string tags = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated string removed_kvtags = 23;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->removed_kvtags_size());
  for (int i = 0, n = this->removed_kvtags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->removed_kvtags(i));
  }

  // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
  {
    unsigned int count = this->kvtags_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->kvtags(i));
    }
  }

  // repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
  {
    unsigned int count = this->previews_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->previews(i));
    }
  }

  // repeated int32 previews_to_remove = 26;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->previews_to_remove_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->previews_to_remove_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string file_name = 3;
    if (has_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->file_name());
    }

    // optional string preview_file_name = 4;
    if (has_preview_file_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->preview_file_name());
    }

    // optional string title = 5;
    if (has_title()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->title());
    }

    // optional string description = 6;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional string change_description = 15;
    if (has_change_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->change_description());
    }

    // optional string url = 17;
    if (has_url()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->url());
    }

    // optional string metadata = 20;
    if (has_metadata()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->metadata());
    }

    // optional fixed64 published_file_id = 2;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 visibility = 8;
    if (has_visibility()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->visibility());
    }

    // optional bool update_file = 9;
    if (has_update_file()) {
      total_size += 1 + 1;
    }

    // optional bool update_preview_file = 10;
    if (has_update_preview_file()) {
      total_size += 1 + 1;
    }

    // optional bool update_title = 11;
    if (has_update_title()) {
      total_size += 1 + 1;
    }

    // optional bool update_description = 12;
    if (has_update_description()) {
      total_size += 1 + 1;
    }

    // optional bool update_tags = 13;
    if (has_update_tags()) {
      total_size += 1 + 1;
    }

    // optional bool update_visibility = 14;
    if (has_update_visibility()) {
      total_size += 1 + 1;
    }

  }
  if (_has_bits_[16 / 32] & 4128768u) {
    // optional bool update_url = 16;
    if (has_update_url()) {
      total_size += 2 + 1;
    }

    // optional bool update_content_manifest = 18;
    if (has_update_content_manifest()) {
      total_size += 2 + 1;
    }

    // optional fixed64 content_manifest = 19;
    if (has_content_manifest()) {
      total_size += 2 + 8;
    }

    // optional int32 language = 22 [default = 0];
    if (has_language()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

    // optional bool update_metadata = 21;
    if (has_update_metadata()) {
      total_size += 2 + 1;
    }

    // optional bool clear_in_progress = 27;
    if (has_clear_in_progress()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMUpdatePublishedFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMUpdatePublishedFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMUpdatePublishedFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMUpdatePublishedFile)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFile::MergeFrom(const CMsgClientUCMUpdatePublishedFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  removed_kvtags_.MergeFrom(from.removed_kvtags_);
  kvtags_.MergeFrom(from.kvtags_);
  previews_.MergeFrom(from.previews_);
  previews_to_remove_.MergeFrom(from.previews_to_remove_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_file_name();
      file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_preview_file_name();
      preview_file_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.preview_file_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_title();
      title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_description();
      description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_change_description();
      change_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.change_description_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_url();
      url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_metadata();
      metadata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.metadata_);
    }
    if (cached_has_bits & 0x00000080u) {
      published_file_id_ = from.published_file_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000200u) {
      visibility_ = from.visibility_;
    }
    if (cached_has_bits & 0x00000400u) {
      update_file_ = from.update_file_;
    }
    if (cached_has_bits & 0x00000800u) {
      update_preview_file_ = from.update_preview_file_;
    }
    if (cached_has_bits & 0x00001000u) {
      update_title_ = from.update_title_;
    }
    if (cached_has_bits & 0x00002000u) {
      update_description_ = from.update_description_;
    }
    if (cached_has_bits & 0x00004000u) {
      update_tags_ = from.update_tags_;
    }
    if (cached_has_bits & 0x00008000u) {
      update_visibility_ = from.update_visibility_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 4128768u) {
    if (cached_has_bits & 0x00010000u) {
      update_url_ = from.update_url_;
    }
    if (cached_has_bits & 0x00020000u) {
      update_content_manifest_ = from.update_content_manifest_;
    }
    if (cached_has_bits & 0x00040000u) {
      content_manifest_ = from.content_manifest_;
    }
    if (cached_has_bits & 0x00080000u) {
      language_ = from.language_;
    }
    if (cached_has_bits & 0x00100000u) {
      update_metadata_ = from.update_metadata_;
    }
    if (cached_has_bits & 0x00200000u) {
      clear_in_progress_ = from.clear_in_progress_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMUpdatePublishedFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFile::CopyFrom(const CMsgClientUCMUpdatePublishedFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFile::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFile::Swap(CMsgClientUCMUpdatePublishedFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMUpdatePublishedFile::InternalSwap(CMsgClientUCMUpdatePublishedFile* other) {
  tags_.InternalSwap(&other->tags_);
  removed_kvtags_.InternalSwap(&other->removed_kvtags_);
  kvtags_.InternalSwap(&other->kvtags_);
  previews_.InternalSwap(&other->previews_);
  previews_to_remove_.InternalSwap(&other->previews_to_remove_);
  file_name_.Swap(&other->file_name_);
  preview_file_name_.Swap(&other->preview_file_name_);
  title_.Swap(&other->title_);
  description_.Swap(&other->description_);
  change_description_.Swap(&other->change_description_);
  url_.Swap(&other->url_);
  metadata_.Swap(&other->metadata_);
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(app_id_, other->app_id_);
  std::swap(visibility_, other->visibility_);
  std::swap(update_file_, other->update_file_);
  std::swap(update_preview_file_, other->update_preview_file_);
  std::swap(update_title_, other->update_title_);
  std::swap(update_description_, other->update_description_);
  std::swap(update_tags_, other->update_tags_);
  std::swap(update_visibility_, other->update_visibility_);
  std::swap(update_url_, other->update_url_);
  std::swap(update_content_manifest_, other->update_content_manifest_);
  std::swap(content_manifest_, other->content_manifest_);
  std::swap(language_, other->language_);
  std::swap(update_metadata_, other->update_metadata_);
  std::swap(clear_in_progress_, other->clear_in_progress_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMUpdatePublishedFile::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMUpdatePublishedFile

// optional uint32 app_id = 1;
bool CMsgClientUCMUpdatePublishedFile::has_app_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_app_id() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgClientUCMUpdatePublishedFile::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientUCMUpdatePublishedFile::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.app_id)
  return app_id_;
}
void CMsgClientUCMUpdatePublishedFile::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.app_id)
}

// optional fixed64 published_file_id = 2;
bool CMsgClientUCMUpdatePublishedFile::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgClientUCMUpdatePublishedFile::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientUCMUpdatePublishedFile::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.published_file_id)
  return published_file_id_;
}
void CMsgClientUCMUpdatePublishedFile::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.published_file_id)
}

// optional string file_name = 3;
bool CMsgClientUCMUpdatePublishedFile::has_file_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_file_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_file_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMUpdatePublishedFile::clear_file_name() {
  file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_file_name();
}
const ::std::string& CMsgClientUCMUpdatePublishedFile::file_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.file_name)
  return file_name_.GetNoArena();
}
void CMsgClientUCMUpdatePublishedFile::set_file_name(const ::std::string& value) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.file_name)
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile::set_file_name(::std::string&& value) {
  set_has_file_name();
  file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMUpdatePublishedFile.file_name)
}
#endif
void CMsgClientUCMUpdatePublishedFile::set_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMUpdatePublishedFile.file_name)
}
void CMsgClientUCMUpdatePublishedFile::set_file_name(const char* value, size_t size) {
  set_has_file_name();
  file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.file_name)
}
::std::string* CMsgClientUCMUpdatePublishedFile::mutable_file_name() {
  set_has_file_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.file_name)
  return file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMUpdatePublishedFile::release_file_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMUpdatePublishedFile.file_name)
  clear_has_file_name();
  return file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMUpdatePublishedFile::set_allocated_file_name(::std::string* file_name) {
  if (file_name != NULL) {
    set_has_file_name();
  } else {
    clear_has_file_name();
  }
  file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), file_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMUpdatePublishedFile.file_name)
}

// optional string preview_file_name = 4;
bool CMsgClientUCMUpdatePublishedFile::has_preview_file_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_preview_file_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_preview_file_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMUpdatePublishedFile::clear_preview_file_name() {
  preview_file_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_preview_file_name();
}
const ::std::string& CMsgClientUCMUpdatePublishedFile::preview_file_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name)
  return preview_file_name_.GetNoArena();
}
void CMsgClientUCMUpdatePublishedFile::set_preview_file_name(const ::std::string& value) {
  set_has_preview_file_name();
  preview_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name)
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile::set_preview_file_name(::std::string&& value) {
  set_has_preview_file_name();
  preview_file_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name)
}
#endif
void CMsgClientUCMUpdatePublishedFile::set_preview_file_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_preview_file_name();
  preview_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name)
}
void CMsgClientUCMUpdatePublishedFile::set_preview_file_name(const char* value, size_t size) {
  set_has_preview_file_name();
  preview_file_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name)
}
::std::string* CMsgClientUCMUpdatePublishedFile::mutable_preview_file_name() {
  set_has_preview_file_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name)
  return preview_file_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMUpdatePublishedFile::release_preview_file_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name)
  clear_has_preview_file_name();
  return preview_file_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMUpdatePublishedFile::set_allocated_preview_file_name(::std::string* preview_file_name) {
  if (preview_file_name != NULL) {
    set_has_preview_file_name();
  } else {
    clear_has_preview_file_name();
  }
  preview_file_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), preview_file_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMUpdatePublishedFile.preview_file_name)
}

// optional string title = 5;
bool CMsgClientUCMUpdatePublishedFile::has_title() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_title() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_title() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUCMUpdatePublishedFile::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
const ::std::string& CMsgClientUCMUpdatePublishedFile::title() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.title)
  return title_.GetNoArena();
}
void CMsgClientUCMUpdatePublishedFile::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.title)
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMUpdatePublishedFile.title)
}
#endif
void CMsgClientUCMUpdatePublishedFile::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMUpdatePublishedFile.title)
}
void CMsgClientUCMUpdatePublishedFile::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.title)
}
::std::string* CMsgClientUCMUpdatePublishedFile::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMUpdatePublishedFile::release_title() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMUpdatePublishedFile.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMUpdatePublishedFile::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMUpdatePublishedFile.title)
}

// optional string description = 6;
bool CMsgClientUCMUpdatePublishedFile::has_description() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_description() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_description() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientUCMUpdatePublishedFile::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_description();
}
const ::std::string& CMsgClientUCMUpdatePublishedFile::description() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.description)
  return description_.GetNoArena();
}
void CMsgClientUCMUpdatePublishedFile::set_description(const ::std::string& value) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.description)
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile::set_description(::std::string&& value) {
  set_has_description();
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMUpdatePublishedFile.description)
}
#endif
void CMsgClientUCMUpdatePublishedFile::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMUpdatePublishedFile.description)
}
void CMsgClientUCMUpdatePublishedFile::set_description(const char* value, size_t size) {
  set_has_description();
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.description)
}
::std::string* CMsgClientUCMUpdatePublishedFile::mutable_description() {
  set_has_description();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMUpdatePublishedFile::release_description() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMUpdatePublishedFile.description)
  clear_has_description();
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMUpdatePublishedFile::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    set_has_description();
  } else {
    clear_has_description();
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMUpdatePublishedFile.description)
}

// repeated string tags = 7;
int CMsgClientUCMUpdatePublishedFile::tags_size() const {
  return tags_.size();
}
void CMsgClientUCMUpdatePublishedFile::clear_tags() {
  tags_.Clear();
}
const ::std::string& CMsgClientUCMUpdatePublishedFile::tags(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.tags)
  return tags_.Get(index);
}
::std::string* CMsgClientUCMUpdatePublishedFile::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.tags)
  return tags_.Mutable(index);
}
void CMsgClientUCMUpdatePublishedFile::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.tags)
  tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile::set_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
#endif
void CMsgClientUCMUpdatePublishedFile::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMUpdatePublishedFile.tags)
}
void CMsgClientUCMUpdatePublishedFile::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.tags)
}
::std::string* CMsgClientUCMUpdatePublishedFile::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.tags)
  return tags_.Add();
}
void CMsgClientUCMUpdatePublishedFile::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMUpdatePublishedFile.tags)
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile::add_tags(::std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMUpdatePublishedFile.tags)
}
#endif
void CMsgClientUCMUpdatePublishedFile::add_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.steam.CMsgClientUCMUpdatePublishedFile.tags)
}
void CMsgClientUCMUpdatePublishedFile::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.tags)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgClientUCMUpdatePublishedFile::tags() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMUpdatePublishedFile.tags)
  return tags_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgClientUCMUpdatePublishedFile::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMUpdatePublishedFile.tags)
  return &tags_;
}

// optional int32 visibility = 8;
bool CMsgClientUCMUpdatePublishedFile::has_visibility() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_visibility() {
  _has_bits_[0] |= 0x00000200u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_visibility() {
  _has_bits_[0] &= ~0x00000200u;
}
void CMsgClientUCMUpdatePublishedFile::clear_visibility() {
  visibility_ = 0;
  clear_has_visibility();
}
::google::protobuf::int32 CMsgClientUCMUpdatePublishedFile::visibility() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.visibility)
  return visibility_;
}
void CMsgClientUCMUpdatePublishedFile::set_visibility(::google::protobuf::int32 value) {
  set_has_visibility();
  visibility_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.visibility)
}

// optional bool update_file = 9;
bool CMsgClientUCMUpdatePublishedFile::has_update_file() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_update_file() {
  _has_bits_[0] |= 0x00000400u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_update_file() {
  _has_bits_[0] &= ~0x00000400u;
}
void CMsgClientUCMUpdatePublishedFile::clear_update_file() {
  update_file_ = false;
  clear_has_update_file();
}
bool CMsgClientUCMUpdatePublishedFile::update_file() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.update_file)
  return update_file_;
}
void CMsgClientUCMUpdatePublishedFile::set_update_file(bool value) {
  set_has_update_file();
  update_file_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.update_file)
}

// optional bool update_preview_file = 10;
bool CMsgClientUCMUpdatePublishedFile::has_update_preview_file() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_update_preview_file() {
  _has_bits_[0] |= 0x00000800u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_update_preview_file() {
  _has_bits_[0] &= ~0x00000800u;
}
void CMsgClientUCMUpdatePublishedFile::clear_update_preview_file() {
  update_preview_file_ = false;
  clear_has_update_preview_file();
}
bool CMsgClientUCMUpdatePublishedFile::update_preview_file() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.update_preview_file)
  return update_preview_file_;
}
void CMsgClientUCMUpdatePublishedFile::set_update_preview_file(bool value) {
  set_has_update_preview_file();
  update_preview_file_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.update_preview_file)
}

// optional bool update_title = 11;
bool CMsgClientUCMUpdatePublishedFile::has_update_title() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_update_title() {
  _has_bits_[0] |= 0x00001000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_update_title() {
  _has_bits_[0] &= ~0x00001000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_update_title() {
  update_title_ = false;
  clear_has_update_title();
}
bool CMsgClientUCMUpdatePublishedFile::update_title() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.update_title)
  return update_title_;
}
void CMsgClientUCMUpdatePublishedFile::set_update_title(bool value) {
  set_has_update_title();
  update_title_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.update_title)
}

// optional bool update_description = 12;
bool CMsgClientUCMUpdatePublishedFile::has_update_description() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_update_description() {
  _has_bits_[0] |= 0x00002000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_update_description() {
  _has_bits_[0] &= ~0x00002000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_update_description() {
  update_description_ = false;
  clear_has_update_description();
}
bool CMsgClientUCMUpdatePublishedFile::update_description() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.update_description)
  return update_description_;
}
void CMsgClientUCMUpdatePublishedFile::set_update_description(bool value) {
  set_has_update_description();
  update_description_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.update_description)
}

// optional bool update_tags = 13;
bool CMsgClientUCMUpdatePublishedFile::has_update_tags() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_update_tags() {
  _has_bits_[0] |= 0x00004000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_update_tags() {
  _has_bits_[0] &= ~0x00004000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_update_tags() {
  update_tags_ = false;
  clear_has_update_tags();
}
bool CMsgClientUCMUpdatePublishedFile::update_tags() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.update_tags)
  return update_tags_;
}
void CMsgClientUCMUpdatePublishedFile::set_update_tags(bool value) {
  set_has_update_tags();
  update_tags_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.update_tags)
}

// optional bool update_visibility = 14;
bool CMsgClientUCMUpdatePublishedFile::has_update_visibility() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_update_visibility() {
  _has_bits_[0] |= 0x00008000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_update_visibility() {
  _has_bits_[0] &= ~0x00008000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_update_visibility() {
  update_visibility_ = false;
  clear_has_update_visibility();
}
bool CMsgClientUCMUpdatePublishedFile::update_visibility() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.update_visibility)
  return update_visibility_;
}
void CMsgClientUCMUpdatePublishedFile::set_update_visibility(bool value) {
  set_has_update_visibility();
  update_visibility_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.update_visibility)
}

// optional string change_description = 15;
bool CMsgClientUCMUpdatePublishedFile::has_change_description() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_change_description() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_change_description() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientUCMUpdatePublishedFile::clear_change_description() {
  change_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_change_description();
}
const ::std::string& CMsgClientUCMUpdatePublishedFile::change_description() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.change_description)
  return change_description_.GetNoArena();
}
void CMsgClientUCMUpdatePublishedFile::set_change_description(const ::std::string& value) {
  set_has_change_description();
  change_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.change_description)
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile::set_change_description(::std::string&& value) {
  set_has_change_description();
  change_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMUpdatePublishedFile.change_description)
}
#endif
void CMsgClientUCMUpdatePublishedFile::set_change_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_change_description();
  change_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMUpdatePublishedFile.change_description)
}
void CMsgClientUCMUpdatePublishedFile::set_change_description(const char* value, size_t size) {
  set_has_change_description();
  change_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.change_description)
}
::std::string* CMsgClientUCMUpdatePublishedFile::mutable_change_description() {
  set_has_change_description();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.change_description)
  return change_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMUpdatePublishedFile::release_change_description() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMUpdatePublishedFile.change_description)
  clear_has_change_description();
  return change_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMUpdatePublishedFile::set_allocated_change_description(::std::string* change_description) {
  if (change_description != NULL) {
    set_has_change_description();
  } else {
    clear_has_change_description();
  }
  change_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), change_description);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMUpdatePublishedFile.change_description)
}

// optional bool update_url = 16;
bool CMsgClientUCMUpdatePublishedFile::has_update_url() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_update_url() {
  _has_bits_[0] |= 0x00010000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_update_url() {
  _has_bits_[0] &= ~0x00010000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_update_url() {
  update_url_ = false;
  clear_has_update_url();
}
bool CMsgClientUCMUpdatePublishedFile::update_url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.update_url)
  return update_url_;
}
void CMsgClientUCMUpdatePublishedFile::set_update_url(bool value) {
  set_has_update_url();
  update_url_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.update_url)
}

// optional string url = 17;
bool CMsgClientUCMUpdatePublishedFile::has_url() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_url() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_url() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientUCMUpdatePublishedFile::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
const ::std::string& CMsgClientUCMUpdatePublishedFile::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.url)
  return url_.GetNoArena();
}
void CMsgClientUCMUpdatePublishedFile::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.url)
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMUpdatePublishedFile.url)
}
#endif
void CMsgClientUCMUpdatePublishedFile::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMUpdatePublishedFile.url)
}
void CMsgClientUCMUpdatePublishedFile::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.url)
}
::std::string* CMsgClientUCMUpdatePublishedFile::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMUpdatePublishedFile::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMUpdatePublishedFile.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMUpdatePublishedFile::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMUpdatePublishedFile.url)
}

// optional bool update_content_manifest = 18;
bool CMsgClientUCMUpdatePublishedFile::has_update_content_manifest() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_update_content_manifest() {
  _has_bits_[0] |= 0x00020000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_update_content_manifest() {
  _has_bits_[0] &= ~0x00020000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_update_content_manifest() {
  update_content_manifest_ = false;
  clear_has_update_content_manifest();
}
bool CMsgClientUCMUpdatePublishedFile::update_content_manifest() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.update_content_manifest)
  return update_content_manifest_;
}
void CMsgClientUCMUpdatePublishedFile::set_update_content_manifest(bool value) {
  set_has_update_content_manifest();
  update_content_manifest_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.update_content_manifest)
}

// optional fixed64 content_manifest = 19;
bool CMsgClientUCMUpdatePublishedFile::has_content_manifest() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_content_manifest() {
  _has_bits_[0] |= 0x00040000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_content_manifest() {
  _has_bits_[0] &= ~0x00040000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_content_manifest() {
  content_manifest_ = GOOGLE_ULONGLONG(0);
  clear_has_content_manifest();
}
::google::protobuf::uint64 CMsgClientUCMUpdatePublishedFile::content_manifest() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.content_manifest)
  return content_manifest_;
}
void CMsgClientUCMUpdatePublishedFile::set_content_manifest(::google::protobuf::uint64 value) {
  set_has_content_manifest();
  content_manifest_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.content_manifest)
}

// optional string metadata = 20;
bool CMsgClientUCMUpdatePublishedFile::has_metadata() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_metadata() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_metadata() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientUCMUpdatePublishedFile::clear_metadata() {
  metadata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_metadata();
}
const ::std::string& CMsgClientUCMUpdatePublishedFile::metadata() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.metadata)
  return metadata_.GetNoArena();
}
void CMsgClientUCMUpdatePublishedFile::set_metadata(const ::std::string& value) {
  set_has_metadata();
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.metadata)
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile::set_metadata(::std::string&& value) {
  set_has_metadata();
  metadata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUCMUpdatePublishedFile.metadata)
}
#endif
void CMsgClientUCMUpdatePublishedFile::set_metadata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_metadata();
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMUpdatePublishedFile.metadata)
}
void CMsgClientUCMUpdatePublishedFile::set_metadata(const char* value, size_t size) {
  set_has_metadata();
  metadata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.metadata)
}
::std::string* CMsgClientUCMUpdatePublishedFile::mutable_metadata() {
  set_has_metadata();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.metadata)
  return metadata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUCMUpdatePublishedFile::release_metadata() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUCMUpdatePublishedFile.metadata)
  clear_has_metadata();
  return metadata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUCMUpdatePublishedFile::set_allocated_metadata(::std::string* metadata) {
  if (metadata != NULL) {
    set_has_metadata();
  } else {
    clear_has_metadata();
  }
  metadata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), metadata);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUCMUpdatePublishedFile.metadata)
}

// optional bool update_metadata = 21;
bool CMsgClientUCMUpdatePublishedFile::has_update_metadata() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_update_metadata() {
  _has_bits_[0] |= 0x00100000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_update_metadata() {
  _has_bits_[0] &= ~0x00100000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_update_metadata() {
  update_metadata_ = false;
  clear_has_update_metadata();
}
bool CMsgClientUCMUpdatePublishedFile::update_metadata() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.update_metadata)
  return update_metadata_;
}
void CMsgClientUCMUpdatePublishedFile::set_update_metadata(bool value) {
  set_has_update_metadata();
  update_metadata_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.update_metadata)
}

// optional int32 language = 22 [default = 0];
bool CMsgClientUCMUpdatePublishedFile::has_language() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_language() {
  _has_bits_[0] |= 0x00080000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_language() {
  _has_bits_[0] &= ~0x00080000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_language() {
  language_ = 0;
  clear_has_language();
}
::google::protobuf::int32 CMsgClientUCMUpdatePublishedFile::language() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.language)
  return language_;
}
void CMsgClientUCMUpdatePublishedFile::set_language(::google::protobuf::int32 value) {
  set_has_language();
  language_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.language)
}

// repeated string removed_kvtags = 23;
int CMsgClientUCMUpdatePublishedFile::removed_kvtags_size() const {
  return removed_kvtags_.size();
}
void CMsgClientUCMUpdatePublishedFile::clear_removed_kvtags() {
  removed_kvtags_.Clear();
}
const ::std::string& CMsgClientUCMUpdatePublishedFile::removed_kvtags(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags)
  return removed_kvtags_.Get(index);
}
::std::string* CMsgClientUCMUpdatePublishedFile::mutable_removed_kvtags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags)
  return removed_kvtags_.Mutable(index);
}
void CMsgClientUCMUpdatePublishedFile::set_removed_kvtags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags)
  removed_kvtags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile::set_removed_kvtags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags)
  removed_kvtags_.Mutable(index)->assign(std::move(value));
}
#endif
void CMsgClientUCMUpdatePublishedFile::set_removed_kvtags(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  removed_kvtags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags)
}
void CMsgClientUCMUpdatePublishedFile::set_removed_kvtags(int index, const char* value, size_t size) {
  removed_kvtags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags)
}
::std::string* CMsgClientUCMUpdatePublishedFile::add_removed_kvtags() {
  // @@protoc_insertion_point(field_add_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags)
  return removed_kvtags_.Add();
}
void CMsgClientUCMUpdatePublishedFile::add_removed_kvtags(const ::std::string& value) {
  removed_kvtags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags)
}
#if LANG_CXX11
void CMsgClientUCMUpdatePublishedFile::add_removed_kvtags(::std::string&& value) {
  removed_kvtags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags)
}
#endif
void CMsgClientUCMUpdatePublishedFile::add_removed_kvtags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  removed_kvtags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags)
}
void CMsgClientUCMUpdatePublishedFile::add_removed_kvtags(const char* value, size_t size) {
  removed_kvtags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgClientUCMUpdatePublishedFile::removed_kvtags() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags)
  return removed_kvtags_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgClientUCMUpdatePublishedFile::mutable_removed_kvtags() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMUpdatePublishedFile.removed_kvtags)
  return &removed_kvtags_;
}

// repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.KeyValueTag kvtags = 24;
int CMsgClientUCMUpdatePublishedFile::kvtags_size() const {
  return kvtags_.size();
}
void CMsgClientUCMUpdatePublishedFile::clear_kvtags() {
  kvtags_.Clear();
}
const ::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag& CMsgClientUCMUpdatePublishedFile::kvtags(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.kvtags)
  return kvtags_.Get(index);
}
::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag* CMsgClientUCMUpdatePublishedFile::mutable_kvtags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.kvtags)
  return kvtags_.Mutable(index);
}
::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag* CMsgClientUCMUpdatePublishedFile::add_kvtags() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMUpdatePublishedFile.kvtags)
  return kvtags_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag >*
CMsgClientUCMUpdatePublishedFile::mutable_kvtags() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMUpdatePublishedFile.kvtags)
  return &kvtags_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMUpdatePublishedFile_KeyValueTag >&
CMsgClientUCMUpdatePublishedFile::kvtags() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMUpdatePublishedFile.kvtags)
  return kvtags_;
}

// repeated .proto.steam.CMsgClientUCMUpdatePublishedFile.AdditionalPreview previews = 25;
int CMsgClientUCMUpdatePublishedFile::previews_size() const {
  return previews_.size();
}
void CMsgClientUCMUpdatePublishedFile::clear_previews() {
  previews_.Clear();
}
const ::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview& CMsgClientUCMUpdatePublishedFile::previews(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.previews)
  return previews_.Get(index);
}
::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview* CMsgClientUCMUpdatePublishedFile::mutable_previews(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMUpdatePublishedFile.previews)
  return previews_.Mutable(index);
}
::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview* CMsgClientUCMUpdatePublishedFile::add_previews() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMUpdatePublishedFile.previews)
  return previews_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview >*
CMsgClientUCMUpdatePublishedFile::mutable_previews() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMUpdatePublishedFile.previews)
  return &previews_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMUpdatePublishedFile_AdditionalPreview >&
CMsgClientUCMUpdatePublishedFile::previews() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMUpdatePublishedFile.previews)
  return previews_;
}

// repeated int32 previews_to_remove = 26;
int CMsgClientUCMUpdatePublishedFile::previews_to_remove_size() const {
  return previews_to_remove_.size();
}
void CMsgClientUCMUpdatePublishedFile::clear_previews_to_remove() {
  previews_to_remove_.Clear();
}
::google::protobuf::int32 CMsgClientUCMUpdatePublishedFile::previews_to_remove(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.previews_to_remove)
  return previews_to_remove_.Get(index);
}
void CMsgClientUCMUpdatePublishedFile::set_previews_to_remove(int index, ::google::protobuf::int32 value) {
  previews_to_remove_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.previews_to_remove)
}
void CMsgClientUCMUpdatePublishedFile::add_previews_to_remove(::google::protobuf::int32 value) {
  previews_to_remove_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMUpdatePublishedFile.previews_to_remove)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
CMsgClientUCMUpdatePublishedFile::previews_to_remove() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMUpdatePublishedFile.previews_to_remove)
  return previews_to_remove_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
CMsgClientUCMUpdatePublishedFile::mutable_previews_to_remove() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMUpdatePublishedFile.previews_to_remove)
  return &previews_to_remove_;
}

// optional bool clear_in_progress = 27;
bool CMsgClientUCMUpdatePublishedFile::has_clear_in_progress() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
void CMsgClientUCMUpdatePublishedFile::set_has_clear_in_progress() {
  _has_bits_[0] |= 0x00200000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_has_clear_in_progress() {
  _has_bits_[0] &= ~0x00200000u;
}
void CMsgClientUCMUpdatePublishedFile::clear_clear_in_progress() {
  clear_in_progress_ = false;
  clear_has_clear_in_progress();
}
bool CMsgClientUCMUpdatePublishedFile::clear_in_progress() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFile.clear_in_progress)
  return clear_in_progress_;
}
void CMsgClientUCMUpdatePublishedFile::set_clear_in_progress(bool value) {
  set_has_clear_in_progress();
  clear_in_progress_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFile.clear_in_progress)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMUpdatePublishedFileResponse::kEresultFieldNumber;
const int CMsgClientUCMUpdatePublishedFileResponse::kNeedsWorkshopLegalAgreementAcceptanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMUpdatePublishedFileResponse::CMsgClientUCMUpdatePublishedFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
}
CMsgClientUCMUpdatePublishedFileResponse::CMsgClientUCMUpdatePublishedFileResponse(const CMsgClientUCMUpdatePublishedFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&needs_workshop_legal_agreement_acceptance_, &from.needs_workshop_legal_agreement_acceptance_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&needs_workshop_legal_agreement_acceptance_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
}

void CMsgClientUCMUpdatePublishedFileResponse::SharedCtor() {
  _cached_size_ = 0;
  needs_workshop_legal_agreement_acceptance_ = false;
  eresult_ = 2;
}

CMsgClientUCMUpdatePublishedFileResponse::~CMsgClientUCMUpdatePublishedFileResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  SharedDtor();
}

void CMsgClientUCMUpdatePublishedFileResponse::SharedDtor() {
}

void CMsgClientUCMUpdatePublishedFileResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMUpdatePublishedFileResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMUpdatePublishedFileResponse& CMsgClientUCMUpdatePublishedFileResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMUpdatePublishedFileResponse* CMsgClientUCMUpdatePublishedFileResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMUpdatePublishedFileResponse* n = new CMsgClientUCMUpdatePublishedFileResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMUpdatePublishedFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  if (_has_bits_[0 / 32] & 3u) {
    needs_workshop_legal_agreement_acceptance_ = false;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMUpdatePublishedFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_needs_workshop_legal_agreement_acceptance();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &needs_workshop_legal_agreement_acceptance_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  return false;
#undef DO_
}

void CMsgClientUCMUpdatePublishedFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->needs_workshop_legal_agreement_acceptance(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
}

::google::protobuf::uint8* CMsgClientUCMUpdatePublishedFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->needs_workshop_legal_agreement_acceptance(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  return target;
}

size_t CMsgClientUCMUpdatePublishedFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
    if (has_needs_workshop_legal_agreement_acceptance()) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMUpdatePublishedFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMUpdatePublishedFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMUpdatePublishedFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMUpdatePublishedFileResponse::MergeFrom(const CMsgClientUCMUpdatePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      needs_workshop_legal_agreement_acceptance_ = from.needs_workshop_legal_agreement_acceptance_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMUpdatePublishedFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMUpdatePublishedFileResponse::CopyFrom(const CMsgClientUCMUpdatePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMUpdatePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMUpdatePublishedFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMUpdatePublishedFileResponse::Swap(CMsgClientUCMUpdatePublishedFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMUpdatePublishedFileResponse::InternalSwap(CMsgClientUCMUpdatePublishedFileResponse* other) {
  std::swap(needs_workshop_legal_agreement_acceptance_, other->needs_workshop_legal_agreement_acceptance_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMUpdatePublishedFileResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMUpdatePublishedFileResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientUCMUpdatePublishedFileResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMUpdatePublishedFileResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMUpdatePublishedFileResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMUpdatePublishedFileResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientUCMUpdatePublishedFileResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFileResponse.eresult)
  return eresult_;
}
void CMsgClientUCMUpdatePublishedFileResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFileResponse.eresult)
}

// optional bool needs_workshop_legal_agreement_acceptance = 2 [default = false];
bool CMsgClientUCMUpdatePublishedFileResponse::has_needs_workshop_legal_agreement_acceptance() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMUpdatePublishedFileResponse::set_has_needs_workshop_legal_agreement_acceptance() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMUpdatePublishedFileResponse::clear_has_needs_workshop_legal_agreement_acceptance() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMUpdatePublishedFileResponse::clear_needs_workshop_legal_agreement_acceptance() {
  needs_workshop_legal_agreement_acceptance_ = false;
  clear_has_needs_workshop_legal_agreement_acceptance();
}
bool CMsgClientUCMUpdatePublishedFileResponse::needs_workshop_legal_agreement_acceptance() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMUpdatePublishedFileResponse.needs_workshop_legal_agreement_acceptance)
  return needs_workshop_legal_agreement_acceptance_;
}
void CMsgClientUCMUpdatePublishedFileResponse::set_needs_workshop_legal_agreement_acceptance(bool value) {
  set_has_needs_workshop_legal_agreement_acceptance();
  needs_workshop_legal_agreement_acceptance_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMUpdatePublishedFileResponse.needs_workshop_legal_agreement_acceptance)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMDeletePublishedFile::kPublishedFileIdFieldNumber;
const int CMsgClientUCMDeletePublishedFile::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMDeletePublishedFile::CMsgClientUCMDeletePublishedFile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMDeletePublishedFile)
}
CMsgClientUCMDeletePublishedFile::CMsgClientUCMDeletePublishedFile(const CMsgClientUCMDeletePublishedFile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMDeletePublishedFile)
}

void CMsgClientUCMDeletePublishedFile::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(app_id_));
}

CMsgClientUCMDeletePublishedFile::~CMsgClientUCMDeletePublishedFile() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMDeletePublishedFile)
  SharedDtor();
}

void CMsgClientUCMDeletePublishedFile::SharedDtor() {
}

void CMsgClientUCMDeletePublishedFile::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMDeletePublishedFile::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMDeletePublishedFile& CMsgClientUCMDeletePublishedFile::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMDeletePublishedFile* CMsgClientUCMDeletePublishedFile::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMDeletePublishedFile* n = new CMsgClientUCMDeletePublishedFile;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMDeletePublishedFile::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMDeletePublishedFile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMDeletePublishedFile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMDeletePublishedFile)
  return false;
#undef DO_
}

void CMsgClientUCMDeletePublishedFile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMDeletePublishedFile)
}

::google::protobuf::uint8* CMsgClientUCMDeletePublishedFile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMDeletePublishedFile)
  return target;
}

size_t CMsgClientUCMDeletePublishedFile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMDeletePublishedFile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeletePublishedFile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMDeletePublishedFile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMDeletePublishedFile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMDeletePublishedFile)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeletePublishedFile::MergeFrom(const CMsgClientUCMDeletePublishedFile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMDeletePublishedFile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeletePublishedFile::CopyFrom(const CMsgClientUCMDeletePublishedFile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMDeletePublishedFile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeletePublishedFile::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeletePublishedFile::Swap(CMsgClientUCMDeletePublishedFile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMDeletePublishedFile::InternalSwap(CMsgClientUCMDeletePublishedFile* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(app_id_, other->app_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMDeletePublishedFile::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMDeletePublishedFile

// optional fixed64 published_file_id = 1;
bool CMsgClientUCMDeletePublishedFile::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMDeletePublishedFile::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMDeletePublishedFile::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMDeletePublishedFile::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientUCMDeletePublishedFile::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMDeletePublishedFile.published_file_id)
  return published_file_id_;
}
void CMsgClientUCMDeletePublishedFile::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMDeletePublishedFile.published_file_id)
}

// optional uint32 app_id = 2;
bool CMsgClientUCMDeletePublishedFile::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMDeletePublishedFile::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMDeletePublishedFile::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMDeletePublishedFile::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientUCMDeletePublishedFile::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMDeletePublishedFile.app_id)
  return app_id_;
}
void CMsgClientUCMDeletePublishedFile::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMDeletePublishedFile.app_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMDeletePublishedFileResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMDeletePublishedFileResponse::CMsgClientUCMDeletePublishedFileResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
}
CMsgClientUCMDeletePublishedFileResponse::CMsgClientUCMDeletePublishedFileResponse(const CMsgClientUCMDeletePublishedFileResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
}

void CMsgClientUCMDeletePublishedFileResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
}

CMsgClientUCMDeletePublishedFileResponse::~CMsgClientUCMDeletePublishedFileResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  SharedDtor();
}

void CMsgClientUCMDeletePublishedFileResponse::SharedDtor() {
}

void CMsgClientUCMDeletePublishedFileResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMDeletePublishedFileResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMDeletePublishedFileResponse& CMsgClientUCMDeletePublishedFileResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMDeletePublishedFileResponse* CMsgClientUCMDeletePublishedFileResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMDeletePublishedFileResponse* n = new CMsgClientUCMDeletePublishedFileResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMDeletePublishedFileResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMDeletePublishedFileResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  return false;
#undef DO_
}

void CMsgClientUCMDeletePublishedFileResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
}

::google::protobuf::uint8* CMsgClientUCMDeletePublishedFileResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  return target;
}

size_t CMsgClientUCMDeletePublishedFileResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMDeletePublishedFileResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMDeletePublishedFileResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMDeletePublishedFileResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMDeletePublishedFileResponse::MergeFrom(const CMsgClientUCMDeletePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientUCMDeletePublishedFileResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMDeletePublishedFileResponse::CopyFrom(const CMsgClientUCMDeletePublishedFileResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMDeletePublishedFileResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMDeletePublishedFileResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMDeletePublishedFileResponse::Swap(CMsgClientUCMDeletePublishedFileResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMDeletePublishedFileResponse::InternalSwap(CMsgClientUCMDeletePublishedFileResponse* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMDeletePublishedFileResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMDeletePublishedFileResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientUCMDeletePublishedFileResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMDeletePublishedFileResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMDeletePublishedFileResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMDeletePublishedFileResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientUCMDeletePublishedFileResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMDeletePublishedFileResponse.eresult)
  return eresult_;
}
void CMsgClientUCMDeletePublishedFileResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMDeletePublishedFileResponse.eresult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserPublishedFiles::kAppIdFieldNumber;
const int CMsgClientUCMEnumerateUserPublishedFiles::kStartIndexFieldNumber;
const int CMsgClientUCMEnumerateUserPublishedFiles::kSortOrderFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserPublishedFiles::CMsgClientUCMEnumerateUserPublishedFiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
}
CMsgClientUCMEnumerateUserPublishedFiles::CMsgClientUCMEnumerateUserPublishedFiles(const CMsgClientUCMEnumerateUserPublishedFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    reinterpret_cast<char*>(&sort_order_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(sort_order_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
}

void CMsgClientUCMEnumerateUserPublishedFiles::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&sort_order_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(sort_order_));
}

CMsgClientUCMEnumerateUserPublishedFiles::~CMsgClientUCMEnumerateUserPublishedFiles() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserPublishedFiles::SharedDtor() {
}

void CMsgClientUCMEnumerateUserPublishedFiles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserPublishedFiles::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserPublishedFiles& CMsgClientUCMEnumerateUserPublishedFiles::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMEnumerateUserPublishedFiles* CMsgClientUCMEnumerateUserPublishedFiles::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMEnumerateUserPublishedFiles* n = new CMsgClientUCMEnumerateUserPublishedFiles;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMEnumerateUserPublishedFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&app_id_, 0, reinterpret_cast<char*>(&sort_order_) -
      reinterpret_cast<char*>(&app_id_) + sizeof(sort_order_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserPublishedFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_start_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sort_order = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_sort_order();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sort_order_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserPublishedFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_index(), output);
  }

  // optional uint32 sort_order = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sort_order(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserPublishedFiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_index(), target);
  }

  // optional uint32 sort_order = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sort_order(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  return target;
}

size_t CMsgClientUCMEnumerateUserPublishedFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 2;
    if (has_start_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional uint32 sort_order = 3;
    if (has_sort_order()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sort_order());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMEnumerateUserPublishedFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserPublishedFiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserPublishedFiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserPublishedFiles::MergeFrom(const CMsgClientUCMEnumerateUserPublishedFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      sort_order_ = from.sort_order_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserPublishedFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserPublishedFiles::CopyFrom(const CMsgClientUCMEnumerateUserPublishedFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserPublishedFiles::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserPublishedFiles::Swap(CMsgClientUCMEnumerateUserPublishedFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserPublishedFiles::InternalSwap(CMsgClientUCMEnumerateUserPublishedFiles* other) {
  std::swap(app_id_, other->app_id_);
  std::swap(start_index_, other->start_index_);
  std::swap(sort_order_, other->sort_order_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserPublishedFiles::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMEnumerateUserPublishedFiles

// optional uint32 app_id = 1;
bool CMsgClientUCMEnumerateUserPublishedFiles::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMEnumerateUserPublishedFiles::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMEnumerateUserPublishedFiles::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMEnumerateUserPublishedFiles::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserPublishedFiles::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles.app_id)
  return app_id_;
}
void CMsgClientUCMEnumerateUserPublishedFiles::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles.app_id)
}

// optional uint32 start_index = 2;
bool CMsgClientUCMEnumerateUserPublishedFiles::has_start_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMEnumerateUserPublishedFiles::set_has_start_index() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMEnumerateUserPublishedFiles::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMEnumerateUserPublishedFiles::clear_start_index() {
  start_index_ = 0u;
  clear_has_start_index();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserPublishedFiles::start_index() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles.start_index)
  return start_index_;
}
void CMsgClientUCMEnumerateUserPublishedFiles::set_start_index(::google::protobuf::uint32 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles.start_index)
}

// optional uint32 sort_order = 3;
bool CMsgClientUCMEnumerateUserPublishedFiles::has_sort_order() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUCMEnumerateUserPublishedFiles::set_has_sort_order() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUCMEnumerateUserPublishedFiles::clear_has_sort_order() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUCMEnumerateUserPublishedFiles::clear_sort_order() {
  sort_order_ = 0u;
  clear_has_sort_order();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserPublishedFiles::sort_order() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles.sort_order)
  return sort_order_;
}
void CMsgClientUCMEnumerateUserPublishedFiles::set_sort_order(::google::protobuf::uint32 value) {
  set_has_sort_order();
  sort_order_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserPublishedFiles.sort_order)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::kPublishedFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
}
CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId(const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  published_file_id_ = from.published_file_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::SharedCtor() {
  _cached_size_ = 0;
  published_file_id_ = GOOGLE_ULONGLONG(0);
}

CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::~CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId& CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* n = new CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  published_file_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 published_file_id = 1;
  if (has_published_file_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::MergeFrom(const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_published_file_id()) {
    set_published_file_id(from.published_file_id());
  }
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::CopyFrom(const CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::Swap(CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::InternalSwap(CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId

// optional fixed64 published_file_id = 1;
bool CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId.published_file_id)
  return published_file_id_;
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId.published_file_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserPublishedFilesResponse::kEresultFieldNumber;
const int CMsgClientUCMEnumerateUserPublishedFilesResponse::kPublishedFilesFieldNumber;
const int CMsgClientUCMEnumerateUserPublishedFilesResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserPublishedFilesResponse::CMsgClientUCMEnumerateUserPublishedFilesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
}
CMsgClientUCMEnumerateUserPublishedFilesResponse::CMsgClientUCMEnumerateUserPublishedFilesResponse(const CMsgClientUCMEnumerateUserPublishedFilesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      published_files_(from.published_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::SharedCtor() {
  _cached_size_ = 0;
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMEnumerateUserPublishedFilesResponse::~CMsgClientUCMEnumerateUserPublishedFilesResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::SharedDtor() {
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserPublishedFilesResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserPublishedFilesResponse& CMsgClientUCMEnumerateUserPublishedFilesResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMEnumerateUserPublishedFilesResponse* CMsgClientUCMEnumerateUserPublishedFilesResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMEnumerateUserPublishedFilesResponse* n = new CMsgClientUCMEnumerateUserPublishedFilesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  published_files_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserPublishedFilesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_published_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_total_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0, n = this->published_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->published_files(i), output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserPublishedFilesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0, n = this->published_files_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->published_files(i), deterministic, target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  return target;
}

size_t CMsgClientUCMEnumerateUserPublishedFilesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId published_files = 2;
  {
    unsigned int count = this->published_files_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->published_files(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_results = 3;
    if (has_total_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserPublishedFilesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserPublishedFilesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::MergeFrom(const CMsgClientUCMEnumerateUserPublishedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_files_.MergeFrom(from.published_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::CopyFrom(const CMsgClientUCMEnumerateUserPublishedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserPublishedFilesResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserPublishedFilesResponse::Swap(CMsgClientUCMEnumerateUserPublishedFilesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse::InternalSwap(CMsgClientUCMEnumerateUserPublishedFilesResponse* other) {
  published_files_.InternalSwap(&other->published_files_);
  std::swap(total_results_, other->total_results_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserPublishedFilesResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMEnumerateUserPublishedFilesResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientUCMEnumerateUserPublishedFilesResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientUCMEnumerateUserPublishedFilesResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.eresult)
  return eresult_;
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.eresult)
}

// repeated .proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.PublishedFileId published_files = 2;
int CMsgClientUCMEnumerateUserPublishedFilesResponse::published_files_size() const {
  return published_files_.size();
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse::clear_published_files() {
  published_files_.Clear();
}
const ::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId& CMsgClientUCMEnumerateUserPublishedFilesResponse::published_files(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.published_files)
  return published_files_.Get(index);
}
::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* CMsgClientUCMEnumerateUserPublishedFilesResponse::mutable_published_files(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.published_files)
  return published_files_.Mutable(index);
}
::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId* CMsgClientUCMEnumerateUserPublishedFilesResponse::add_published_files() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.published_files)
  return published_files_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId >*
CMsgClientUCMEnumerateUserPublishedFilesResponse::mutable_published_files() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.published_files)
  return &published_files_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMEnumerateUserPublishedFilesResponse_PublishedFileId >&
CMsgClientUCMEnumerateUserPublishedFilesResponse::published_files() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.published_files)
  return published_files_;
}

// optional uint32 total_results = 3;
bool CMsgClientUCMEnumerateUserPublishedFilesResponse::has_total_results() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse::set_has_total_results() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse::clear_has_total_results() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse::clear_total_results() {
  total_results_ = 0u;
  clear_has_total_results();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserPublishedFilesResponse::total_results() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.total_results)
  return total_results_;
}
void CMsgClientUCMEnumerateUserPublishedFilesResponse::set_total_results(::google::protobuf::uint32 value) {
  set_has_total_results();
  total_results_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserPublishedFilesResponse.total_results)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFiles::kAppIdFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFiles::kStartIndexFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFiles::kListTypeFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFiles::kMatchingFileTypeFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFiles::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFiles::CMsgClientUCMEnumerateUserSubscribedFiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
}
CMsgClientUCMEnumerateUserSubscribedFiles::CMsgClientUCMEnumerateUserSubscribedFiles(const CMsgClientUCMEnumerateUserSubscribedFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
}

void CMsgClientUCMEnumerateUserSubscribedFiles::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&matching_file_type_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(matching_file_type_));
  list_type_ = 1u;
  count_ = 50u;
}

CMsgClientUCMEnumerateUserSubscribedFiles::~CMsgClientUCMEnumerateUserSubscribedFiles() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFiles::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFiles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserSubscribedFiles::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserSubscribedFiles& CMsgClientUCMEnumerateUserSubscribedFiles::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMEnumerateUserSubscribedFiles* CMsgClientUCMEnumerateUserSubscribedFiles::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMEnumerateUserSubscribedFiles* n = new CMsgClientUCMEnumerateUserSubscribedFiles;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMEnumerateUserSubscribedFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&app_id_, 0, reinterpret_cast<char*>(&matching_file_type_) -
      reinterpret_cast<char*>(&app_id_) + sizeof(matching_file_type_));
    list_type_ = 1u;
    count_ = 50u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserSubscribedFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_start_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 list_type = 3 [default = 1];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_list_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &list_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 matching_file_type = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_matching_file_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matching_file_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 5 [default = 50];
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserSubscribedFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_index(), output);
  }

  // optional uint32 list_type = 3 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->list_type(), output);
  }

  // optional uint32 matching_file_type = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->matching_file_type(), output);
  }

  // optional uint32 count = 5 [default = 50];
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_index(), target);
  }

  // optional uint32 list_type = 3 [default = 1];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->list_type(), target);
  }

  // optional uint32 matching_file_type = 4 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->matching_file_type(), target);
  }

  // optional uint32 count = 5 [default = 50];
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 2;
    if (has_start_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional uint32 matching_file_type = 4 [default = 0];
    if (has_matching_file_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->matching_file_type());
    }

    // optional uint32 list_type = 3 [default = 1];
    if (has_list_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->list_type());
    }

    // optional uint32 count = 5 [default = 50];
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserSubscribedFiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFiles::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      matching_file_type_ = from.matching_file_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      list_type_ = from.list_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFiles::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFiles::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFiles::Swap(CMsgClientUCMEnumerateUserSubscribedFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFiles::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFiles* other) {
  std::swap(app_id_, other->app_id_);
  std::swap(start_index_, other->start_index_);
  std::swap(matching_file_type_, other->matching_file_type_);
  std::swap(list_type_, other->list_type_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFiles::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMEnumerateUserSubscribedFiles

// optional uint32 app_id = 1;
bool CMsgClientUCMEnumerateUserSubscribedFiles::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFiles::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles.app_id)
  return app_id_;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles.app_id)
}

// optional uint32 start_index = 2;
bool CMsgClientUCMEnumerateUserSubscribedFiles::has_start_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::set_has_start_index() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::clear_start_index() {
  start_index_ = 0u;
  clear_has_start_index();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFiles::start_index() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles.start_index)
  return start_index_;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::set_start_index(::google::protobuf::uint32 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles.start_index)
}

// optional uint32 list_type = 3 [default = 1];
bool CMsgClientUCMEnumerateUserSubscribedFiles::has_list_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::set_has_list_type() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::clear_has_list_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::clear_list_type() {
  list_type_ = 1u;
  clear_has_list_type();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFiles::list_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles.list_type)
  return list_type_;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::set_list_type(::google::protobuf::uint32 value) {
  set_has_list_type();
  list_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles.list_type)
}

// optional uint32 matching_file_type = 4 [default = 0];
bool CMsgClientUCMEnumerateUserSubscribedFiles::has_matching_file_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::set_has_matching_file_type() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::clear_has_matching_file_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::clear_matching_file_type() {
  matching_file_type_ = 0u;
  clear_has_matching_file_type();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFiles::matching_file_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles.matching_file_type)
  return matching_file_type_;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::set_matching_file_type(::google::protobuf::uint32 value) {
  set_has_matching_file_type();
  matching_file_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles.matching_file_type)
}

// optional uint32 count = 5 [default = 50];
bool CMsgClientUCMEnumerateUserSubscribedFiles::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::clear_count() {
  count_ = 50u;
  clear_has_count();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFiles::count() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles.count)
  return count_;
}
void CMsgClientUCMEnumerateUserSubscribedFiles::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFiles.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::kPublishedFileIdFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::kRtime32SubscribedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
}
CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId(const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&rtime32_subscribed_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(rtime32_subscribed_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&rtime32_subscribed_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(rtime32_subscribed_));
}

CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::~CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId& CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* n = new CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&rtime32_subscribed_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(rtime32_subscribed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime32_subscribed = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {
          set_has_rtime32_subscribed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime32_subscribed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional fixed32 rtime32_subscribed = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->rtime32_subscribed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional fixed32 rtime32_subscribed = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->rtime32_subscribed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional fixed32 rtime32_subscribed = 2 [default = 0];
    if (has_rtime32_subscribed()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      rtime32_subscribed_ = from.rtime32_subscribed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::Swap(CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(rtime32_subscribed_, other->rtime32_subscribed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId

// optional fixed64 published_file_id = 1;
bool CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId.published_file_id)
  return published_file_id_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId.published_file_id)
}

// optional fixed32 rtime32_subscribed = 2 [default = 0];
bool CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::has_rtime32_subscribed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::set_has_rtime32_subscribed() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::clear_has_rtime32_subscribed() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::clear_rtime32_subscribed() {
  rtime32_subscribed_ = 0u;
  clear_has_rtime32_subscribed();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::rtime32_subscribed() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId.rtime32_subscribed)
  return rtime32_subscribed_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId::set_rtime32_subscribed(::google::protobuf::uint32 value) {
  set_has_rtime32_subscribed();
  rtime32_subscribed_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId.rtime32_subscribed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse::kEresultFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse::kSubscribedFilesFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesResponse::CMsgClientUCMEnumerateUserSubscribedFilesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
}
CMsgClientUCMEnumerateUserSubscribedFilesResponse::CMsgClientUCMEnumerateUserSubscribedFilesResponse(const CMsgClientUCMEnumerateUserSubscribedFilesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      subscribed_files_(from.subscribed_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::SharedCtor() {
  _cached_size_ = 0;
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMEnumerateUserSubscribedFilesResponse::~CMsgClientUCMEnumerateUserSubscribedFilesResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserSubscribedFilesResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserSubscribedFilesResponse& CMsgClientUCMEnumerateUserSubscribedFilesResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMEnumerateUserSubscribedFilesResponse* CMsgClientUCMEnumerateUserSubscribedFilesResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMEnumerateUserSubscribedFilesResponse* n = new CMsgClientUCMEnumerateUserSubscribedFilesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  subscribed_files_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserSubscribedFilesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId subscribed_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_subscribed_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_total_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId subscribed_files = 2;
  for (unsigned int i = 0, n = this->subscribed_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->subscribed_files(i), output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId subscribed_files = 2;
  for (unsigned int i = 0, n = this->subscribed_files_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->subscribed_files(i), deterministic, target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId subscribed_files = 2;
  {
    unsigned int count = this->subscribed_files_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->subscribed_files(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_results = 3;
    if (has_total_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserSubscribedFilesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscribed_files_.MergeFrom(from.subscribed_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesResponse::Swap(CMsgClientUCMEnumerateUserSubscribedFilesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesResponse* other) {
  subscribed_files_.InternalSwap(&other->subscribed_files_);
  std::swap(total_results_, other->total_results_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMEnumerateUserSubscribedFilesResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientUCMEnumerateUserSubscribedFilesResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientUCMEnumerateUserSubscribedFilesResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.eresult)
  return eresult_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.eresult)
}

// repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.PublishedFileId subscribed_files = 2;
int CMsgClientUCMEnumerateUserSubscribedFilesResponse::subscribed_files_size() const {
  return subscribed_files_.size();
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse::clear_subscribed_files() {
  subscribed_files_.Clear();
}
const ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId& CMsgClientUCMEnumerateUserSubscribedFilesResponse::subscribed_files(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.subscribed_files)
  return subscribed_files_.Get(index);
}
::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* CMsgClientUCMEnumerateUserSubscribedFilesResponse::mutable_subscribed_files(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.subscribed_files)
  return subscribed_files_.Mutable(index);
}
::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId* CMsgClientUCMEnumerateUserSubscribedFilesResponse::add_subscribed_files() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.subscribed_files)
  return subscribed_files_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId >*
CMsgClientUCMEnumerateUserSubscribedFilesResponse::mutable_subscribed_files() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.subscribed_files)
  return &subscribed_files_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesResponse_PublishedFileId >&
CMsgClientUCMEnumerateUserSubscribedFilesResponse::subscribed_files() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.subscribed_files)
  return subscribed_files_;
}

// optional uint32 total_results = 3;
bool CMsgClientUCMEnumerateUserSubscribedFilesResponse::has_total_results() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse::set_has_total_results() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse::clear_has_total_results() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse::clear_total_results() {
  total_results_ = 0u;
  clear_has_total_results();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFilesResponse::total_results() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.total_results)
  return total_results_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesResponse::set_total_results(::google::protobuf::uint32 value) {
  set_has_total_results();
  total_results_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesResponse.total_results)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::kAppIdFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::kStartIndexFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::kStartTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
}
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    reinterpret_cast<char*>(&start_time_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(start_time_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&start_time_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(start_time_));
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* n = new CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&app_id_, 0, reinterpret_cast<char*>(&start_time_) -
      reinterpret_cast<char*>(&app_id_) + sizeof(start_time_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_start_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 start_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_start_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &start_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_index(), output);
  }

  // optional fixed32 start_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->start_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_index(), target);
  }

  // optional fixed32 start_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->start_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 2;
    if (has_start_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional fixed32 start_time = 3;
    if (has_start_time()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_time_ = from.start_time_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::Swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates* other) {
  std::swap(app_id_, other->app_id_);
  std::swap(start_index_, other->start_index_);
  std::swap(start_time_, other->start_time_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates

// optional uint32 app_id = 1;
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.app_id)
  return app_id_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.app_id)
}

// optional uint32 start_index = 2;
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::has_start_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::set_has_start_index() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::clear_start_index() {
  start_index_ = 0u;
  clear_has_start_index();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::start_index() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.start_index)
  return start_index_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::set_start_index(::google::protobuf::uint32 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.start_index)
}

// optional fixed32 start_time = 3;
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::has_start_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::set_has_start_time() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::clear_has_start_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::clear_start_time() {
  start_time_ = 0u;
  clear_has_start_time();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::start_time() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.start_time)
  return start_time_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates::set_start_time(::google::protobuf::uint32 value) {
  set_has_start_time();
  start_time_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdates.start_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kPublishedFileIdFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kRtime32SubscribedFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kAppidFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kFileHcontentFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kFileSizeFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kRtime32LastUpdatedFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::kIsDepotContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
}
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&is_depot_content_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(is_depot_content_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&is_depot_content_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(is_depot_content_));
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* n = new CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&is_depot_content_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(is_depot_content_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime32_subscribed = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {
          set_has_rtime32_subscribed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime32_subscribed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 file_hcontent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_file_hcontent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &file_hcontent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime32_last_updated = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u)) {
          set_has_rtime32_last_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime32_last_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_depot_content = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_is_depot_content();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_depot_content_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional fixed32 rtime32_subscribed = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->rtime32_subscribed(), output);
  }

  // optional uint32 appid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->appid(), output);
  }

  // optional fixed64 file_hcontent = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->file_hcontent(), output);
  }

  // optional uint32 file_size = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->file_size(), output);
  }

  // optional fixed32 rtime32_last_updated = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(6, this->rtime32_last_updated(), output);
  }

  // optional bool is_depot_content = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->is_depot_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional fixed32 rtime32_subscribed = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->rtime32_subscribed(), target);
  }

  // optional uint32 appid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->appid(), target);
  }

  // optional fixed64 file_hcontent = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->file_hcontent(), target);
  }

  // optional uint32 file_size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->file_size(), target);
  }

  // optional fixed32 rtime32_last_updated = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(6, this->rtime32_last_updated(), target);
  }

  // optional bool is_depot_content = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->is_depot_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional fixed32 rtime32_subscribed = 2 [default = 0];
    if (has_rtime32_subscribed()) {
      total_size += 1 + 4;
    }

    // optional uint32 appid = 3;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional fixed64 file_hcontent = 4;
    if (has_file_hcontent()) {
      total_size += 1 + 8;
    }

    // optional uint32 file_size = 5;
    if (has_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_size());
    }

    // optional fixed32 rtime32_last_updated = 6;
    if (has_rtime32_last_updated()) {
      total_size += 1 + 4;
    }

    // optional bool is_depot_content = 7;
    if (has_is_depot_content()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      rtime32_subscribed_ = from.rtime32_subscribed_;
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      file_hcontent_ = from.file_hcontent_;
    }
    if (cached_has_bits & 0x00000010u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      rtime32_last_updated_ = from.rtime32_last_updated_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_depot_content_ = from.is_depot_content_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::Swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(rtime32_subscribed_, other->rtime32_subscribed_);
  std::swap(appid_, other->appid_);
  std::swap(file_hcontent_, other->file_hcontent_);
  std::swap(file_size_, other->file_size_);
  std::swap(rtime32_last_updated_, other->rtime32_last_updated_);
  std::swap(is_depot_content_, other->is_depot_content_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId

// optional fixed64 published_file_id = 1;
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.published_file_id)
  return published_file_id_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.published_file_id)
}

// optional fixed32 rtime32_subscribed = 2 [default = 0];
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::has_rtime32_subscribed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_has_rtime32_subscribed() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_has_rtime32_subscribed() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_rtime32_subscribed() {
  rtime32_subscribed_ = 0u;
  clear_has_rtime32_subscribed();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::rtime32_subscribed() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.rtime32_subscribed)
  return rtime32_subscribed_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_rtime32_subscribed(::google::protobuf::uint32 value) {
  set_has_rtime32_subscribed();
  rtime32_subscribed_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.rtime32_subscribed)
}

// optional uint32 appid = 3;
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_has_appid() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_has_appid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.appid)
  return appid_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.appid)
}

// optional fixed64 file_hcontent = 4;
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::has_file_hcontent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_has_file_hcontent() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_has_file_hcontent() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_file_hcontent() {
  file_hcontent_ = GOOGLE_ULONGLONG(0);
  clear_has_file_hcontent();
}
::google::protobuf::uint64 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::file_hcontent() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.file_hcontent)
  return file_hcontent_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_file_hcontent(::google::protobuf::uint64 value) {
  set_has_file_hcontent();
  file_hcontent_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.file_hcontent)
}

// optional uint32 file_size = 5;
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::has_file_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_has_file_size() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_has_file_size() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_file_size() {
  file_size_ = 0u;
  clear_has_file_size();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::file_size() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.file_size)
  return file_size_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_file_size(::google::protobuf::uint32 value) {
  set_has_file_size();
  file_size_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.file_size)
}

// optional fixed32 rtime32_last_updated = 6;
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::has_rtime32_last_updated() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_has_rtime32_last_updated() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_has_rtime32_last_updated() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_rtime32_last_updated() {
  rtime32_last_updated_ = 0u;
  clear_has_rtime32_last_updated();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::rtime32_last_updated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.rtime32_last_updated)
  return rtime32_last_updated_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_rtime32_last_updated(::google::protobuf::uint32 value) {
  set_has_rtime32_last_updated();
  rtime32_last_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.rtime32_last_updated)
}

// optional bool is_depot_content = 7;
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::has_is_depot_content() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_has_is_depot_content() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_has_is_depot_content() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::clear_is_depot_content() {
  is_depot_content_ = false;
  clear_has_is_depot_content();
}
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::is_depot_content() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.is_depot_content)
  return is_depot_content_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId::set_is_depot_content(bool value) {
  set_has_is_depot_content();
  is_depot_content_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId.is_depot_content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::kEresultFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::kSubscribedFilesFieldNumber;
const int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
}
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      subscribed_files_(from.subscribed_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SharedCtor() {
  _cached_size_ = 0;
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::~CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  SharedDtor();
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SharedDtor() {
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* n = new CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  subscribed_files_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_subscribed_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_total_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  return false;
#undef DO_
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
  for (unsigned int i = 0, n = this->subscribed_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->subscribed_files(i), output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
}

::google::protobuf::uint8* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
  for (unsigned int i = 0, n = this->subscribed_files_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->subscribed_files(i), deterministic, target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  return target;
}

size_t CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
  {
    unsigned int count = this->subscribed_files_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->subscribed_files(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_results = 3;
    if (has_total_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::MergeFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subscribed_files_.MergeFrom(from.subscribed_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::CopyFrom(const CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::Swap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::InternalSwap(CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse* other) {
  subscribed_files_.InternalSwap(&other->subscribed_files_);
  std::swap(total_results_, other->total_results_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.eresult)
  return eresult_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.eresult)
}

// repeated .proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.PublishedFileId subscribed_files = 2;
int CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::subscribed_files_size() const {
  return subscribed_files_.size();
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::clear_subscribed_files() {
  subscribed_files_.Clear();
}
const ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId& CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::subscribed_files(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.subscribed_files)
  return subscribed_files_.Get(index);
}
::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::mutable_subscribed_files(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.subscribed_files)
  return subscribed_files_.Mutable(index);
}
::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId* CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::add_subscribed_files() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.subscribed_files)
  return subscribed_files_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId >*
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::mutable_subscribed_files() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.subscribed_files)
  return &subscribed_files_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse_PublishedFileId >&
CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::subscribed_files() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.subscribed_files)
  return subscribed_files_;
}

// optional uint32 total_results = 3;
bool CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::has_total_results() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::set_has_total_results() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::clear_has_total_results() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::clear_total_results() {
  total_results_ = 0u;
  clear_has_total_results();
}
::google::protobuf::uint32 CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::total_results() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.total_results)
  return total_results_;
}
void CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse::set_total_results(::google::protobuf::uint32 value) {
  set_has_total_results();
  total_results_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumerateUserSubscribedFilesWithUpdatesResponse.total_results)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishedFileSubscribed::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kAppIdFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kFileHcontentFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kFileSizeFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kRtimeSubscribedFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kIsDepotContentFieldNumber;
const int CMsgClientUCMPublishedFileSubscribed::kRtimeUpdatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishedFileSubscribed::CMsgClientUCMPublishedFileSubscribed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMPublishedFileSubscribed)
}
CMsgClientUCMPublishedFileSubscribed::CMsgClientUCMPublishedFileSubscribed(const CMsgClientUCMPublishedFileSubscribed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&rtime_updated_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(rtime_updated_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMPublishedFileSubscribed)
}

void CMsgClientUCMPublishedFileSubscribed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&rtime_updated_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(rtime_updated_));
}

CMsgClientUCMPublishedFileSubscribed::~CMsgClientUCMPublishedFileSubscribed() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  SharedDtor();
}

void CMsgClientUCMPublishedFileSubscribed::SharedDtor() {
}

void CMsgClientUCMPublishedFileSubscribed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMPublishedFileSubscribed::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMPublishedFileSubscribed& CMsgClientUCMPublishedFileSubscribed::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMPublishedFileSubscribed* CMsgClientUCMPublishedFileSubscribed::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMPublishedFileSubscribed* n = new CMsgClientUCMPublishedFileSubscribed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMPublishedFileSubscribed::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  if (_has_bits_[0 / 32] & 127u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&rtime_updated_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(rtime_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMPublishedFileSubscribed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 file_hcontent = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_file_hcontent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &file_hcontent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 file_size = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rtime_subscribed = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_rtime_subscribed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rtime_subscribed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_depot_content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_is_depot_content();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_depot_content_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 rtime_updated = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_rtime_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rtime_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  return false;
#undef DO_
}

void CMsgClientUCMPublishedFileSubscribed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional fixed64 file_hcontent = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->file_hcontent(), output);
  }

  // optional uint32 file_size = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->file_size(), output);
  }

  // optional uint32 rtime_subscribed = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->rtime_subscribed(), output);
  }

  // optional bool is_depot_content = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_depot_content(), output);
  }

  // optional uint32 rtime_updated = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->rtime_updated(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMPublishedFileSubscribed)
}

::google::protobuf::uint8* CMsgClientUCMPublishedFileSubscribed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional fixed64 file_hcontent = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->file_hcontent(), target);
  }

  // optional uint32 file_size = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->file_size(), target);
  }

  // optional uint32 rtime_subscribed = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->rtime_subscribed(), target);
  }

  // optional bool is_depot_content = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_depot_content(), target);
  }

  // optional uint32 rtime_updated = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->rtime_updated(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  return target;
}

size_t CMsgClientUCMPublishedFileSubscribed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 file_hcontent = 3;
    if (has_file_hcontent()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 file_size = 4;
    if (has_file_size()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->file_size());
    }

    // optional uint32 rtime_subscribed = 5;
    if (has_rtime_subscribed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rtime_subscribed());
    }

    // optional bool is_depot_content = 6;
    if (has_is_depot_content()) {
      total_size += 1 + 1;
    }

    // optional uint32 rtime_updated = 7;
    if (has_rtime_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->rtime_updated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMPublishedFileSubscribed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishedFileSubscribed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMPublishedFileSubscribed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMPublishedFileSubscribed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMPublishedFileSubscribed)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishedFileSubscribed::MergeFrom(const CMsgClientUCMPublishedFileSubscribed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      file_hcontent_ = from.file_hcontent_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000010u) {
      rtime_subscribed_ = from.rtime_subscribed_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_depot_content_ = from.is_depot_content_;
    }
    if (cached_has_bits & 0x00000040u) {
      rtime_updated_ = from.rtime_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishedFileSubscribed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishedFileSubscribed::CopyFrom(const CMsgClientUCMPublishedFileSubscribed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMPublishedFileSubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishedFileSubscribed::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishedFileSubscribed::Swap(CMsgClientUCMPublishedFileSubscribed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishedFileSubscribed::InternalSwap(CMsgClientUCMPublishedFileSubscribed* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(file_hcontent_, other->file_hcontent_);
  std::swap(app_id_, other->app_id_);
  std::swap(file_size_, other->file_size_);
  std::swap(rtime_subscribed_, other->rtime_subscribed_);
  std::swap(is_depot_content_, other->is_depot_content_);
  std::swap(rtime_updated_, other->rtime_updated_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMPublishedFileSubscribed::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMPublishedFileSubscribed

// optional fixed64 published_file_id = 1;
bool CMsgClientUCMPublishedFileSubscribed::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMPublishedFileSubscribed::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMPublishedFileSubscribed::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMPublishedFileSubscribed::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientUCMPublishedFileSubscribed::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileSubscribed.published_file_id)
  return published_file_id_;
}
void CMsgClientUCMPublishedFileSubscribed::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileSubscribed.published_file_id)
}

// optional uint32 app_id = 2;
bool CMsgClientUCMPublishedFileSubscribed::has_app_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUCMPublishedFileSubscribed::set_has_app_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUCMPublishedFileSubscribed::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUCMPublishedFileSubscribed::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientUCMPublishedFileSubscribed::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileSubscribed.app_id)
  return app_id_;
}
void CMsgClientUCMPublishedFileSubscribed::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileSubscribed.app_id)
}

// optional fixed64 file_hcontent = 3;
bool CMsgClientUCMPublishedFileSubscribed::has_file_hcontent() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMPublishedFileSubscribed::set_has_file_hcontent() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMPublishedFileSubscribed::clear_has_file_hcontent() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMPublishedFileSubscribed::clear_file_hcontent() {
  file_hcontent_ = GOOGLE_ULONGLONG(0);
  clear_has_file_hcontent();
}
::google::protobuf::uint64 CMsgClientUCMPublishedFileSubscribed::file_hcontent() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileSubscribed.file_hcontent)
  return file_hcontent_;
}
void CMsgClientUCMPublishedFileSubscribed::set_file_hcontent(::google::protobuf::uint64 value) {
  set_has_file_hcontent();
  file_hcontent_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileSubscribed.file_hcontent)
}

// optional uint32 file_size = 4;
bool CMsgClientUCMPublishedFileSubscribed::has_file_size() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientUCMPublishedFileSubscribed::set_has_file_size() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientUCMPublishedFileSubscribed::clear_has_file_size() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientUCMPublishedFileSubscribed::clear_file_size() {
  file_size_ = 0u;
  clear_has_file_size();
}
::google::protobuf::uint32 CMsgClientUCMPublishedFileSubscribed::file_size() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileSubscribed.file_size)
  return file_size_;
}
void CMsgClientUCMPublishedFileSubscribed::set_file_size(::google::protobuf::uint32 value) {
  set_has_file_size();
  file_size_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileSubscribed.file_size)
}

// optional uint32 rtime_subscribed = 5;
bool CMsgClientUCMPublishedFileSubscribed::has_rtime_subscribed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientUCMPublishedFileSubscribed::set_has_rtime_subscribed() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientUCMPublishedFileSubscribed::clear_has_rtime_subscribed() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientUCMPublishedFileSubscribed::clear_rtime_subscribed() {
  rtime_subscribed_ = 0u;
  clear_has_rtime_subscribed();
}
::google::protobuf::uint32 CMsgClientUCMPublishedFileSubscribed::rtime_subscribed() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileSubscribed.rtime_subscribed)
  return rtime_subscribed_;
}
void CMsgClientUCMPublishedFileSubscribed::set_rtime_subscribed(::google::protobuf::uint32 value) {
  set_has_rtime_subscribed();
  rtime_subscribed_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileSubscribed.rtime_subscribed)
}

// optional bool is_depot_content = 6;
bool CMsgClientUCMPublishedFileSubscribed::has_is_depot_content() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientUCMPublishedFileSubscribed::set_has_is_depot_content() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientUCMPublishedFileSubscribed::clear_has_is_depot_content() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientUCMPublishedFileSubscribed::clear_is_depot_content() {
  is_depot_content_ = false;
  clear_has_is_depot_content();
}
bool CMsgClientUCMPublishedFileSubscribed::is_depot_content() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileSubscribed.is_depot_content)
  return is_depot_content_;
}
void CMsgClientUCMPublishedFileSubscribed::set_is_depot_content(bool value) {
  set_has_is_depot_content();
  is_depot_content_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileSubscribed.is_depot_content)
}

// optional uint32 rtime_updated = 7;
bool CMsgClientUCMPublishedFileSubscribed::has_rtime_updated() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientUCMPublishedFileSubscribed::set_has_rtime_updated() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientUCMPublishedFileSubscribed::clear_has_rtime_updated() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientUCMPublishedFileSubscribed::clear_rtime_updated() {
  rtime_updated_ = 0u;
  clear_has_rtime_updated();
}
::google::protobuf::uint32 CMsgClientUCMPublishedFileSubscribed::rtime_updated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileSubscribed.rtime_updated)
  return rtime_updated_;
}
void CMsgClientUCMPublishedFileSubscribed::set_rtime_updated(::google::protobuf::uint32 value) {
  set_has_rtime_updated();
  rtime_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileSubscribed.rtime_updated)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishedFileUnsubscribed::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishedFileUnsubscribed::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishedFileUnsubscribed::CMsgClientUCMPublishedFileUnsubscribed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
}
CMsgClientUCMPublishedFileUnsubscribed::CMsgClientUCMPublishedFileUnsubscribed(const CMsgClientUCMPublishedFileUnsubscribed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
}

void CMsgClientUCMPublishedFileUnsubscribed::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(app_id_));
}

CMsgClientUCMPublishedFileUnsubscribed::~CMsgClientUCMPublishedFileUnsubscribed() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  SharedDtor();
}

void CMsgClientUCMPublishedFileUnsubscribed::SharedDtor() {
}

void CMsgClientUCMPublishedFileUnsubscribed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMPublishedFileUnsubscribed::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMPublishedFileUnsubscribed& CMsgClientUCMPublishedFileUnsubscribed::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMPublishedFileUnsubscribed* CMsgClientUCMPublishedFileUnsubscribed::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMPublishedFileUnsubscribed* n = new CMsgClientUCMPublishedFileUnsubscribed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMPublishedFileUnsubscribed::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMPublishedFileUnsubscribed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  return false;
#undef DO_
}

void CMsgClientUCMPublishedFileUnsubscribed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
}

::google::protobuf::uint8* CMsgClientUCMPublishedFileUnsubscribed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  return target;
}

size_t CMsgClientUCMPublishedFileUnsubscribed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMPublishedFileUnsubscribed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishedFileUnsubscribed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMPublishedFileUnsubscribed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishedFileUnsubscribed::MergeFrom(const CMsgClientUCMPublishedFileUnsubscribed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishedFileUnsubscribed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishedFileUnsubscribed::CopyFrom(const CMsgClientUCMPublishedFileUnsubscribed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMPublishedFileUnsubscribed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishedFileUnsubscribed::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishedFileUnsubscribed::Swap(CMsgClientUCMPublishedFileUnsubscribed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishedFileUnsubscribed::InternalSwap(CMsgClientUCMPublishedFileUnsubscribed* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(app_id_, other->app_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMPublishedFileUnsubscribed::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMPublishedFileUnsubscribed

// optional fixed64 published_file_id = 1;
bool CMsgClientUCMPublishedFileUnsubscribed::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMPublishedFileUnsubscribed::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMPublishedFileUnsubscribed::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMPublishedFileUnsubscribed::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientUCMPublishedFileUnsubscribed::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileUnsubscribed.published_file_id)
  return published_file_id_;
}
void CMsgClientUCMPublishedFileUnsubscribed::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileUnsubscribed.published_file_id)
}

// optional uint32 app_id = 2;
bool CMsgClientUCMPublishedFileUnsubscribed::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMPublishedFileUnsubscribed::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMPublishedFileUnsubscribed::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMPublishedFileUnsubscribed::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientUCMPublishedFileUnsubscribed::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileUnsubscribed.app_id)
  return app_id_;
}
void CMsgClientUCMPublishedFileUnsubscribed::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileUnsubscribed.app_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishedFileDeleted::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishedFileDeleted::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishedFileDeleted::CMsgClientUCMPublishedFileDeleted()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMPublishedFileDeleted)
}
CMsgClientUCMPublishedFileDeleted::CMsgClientUCMPublishedFileDeleted(const CMsgClientUCMPublishedFileDeleted& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMPublishedFileDeleted)
}

void CMsgClientUCMPublishedFileDeleted::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(app_id_));
}

CMsgClientUCMPublishedFileDeleted::~CMsgClientUCMPublishedFileDeleted() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMPublishedFileDeleted)
  SharedDtor();
}

void CMsgClientUCMPublishedFileDeleted::SharedDtor() {
}

void CMsgClientUCMPublishedFileDeleted::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMPublishedFileDeleted::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMPublishedFileDeleted& CMsgClientUCMPublishedFileDeleted::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMPublishedFileDeleted* CMsgClientUCMPublishedFileDeleted::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMPublishedFileDeleted* n = new CMsgClientUCMPublishedFileDeleted;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMPublishedFileDeleted::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMPublishedFileDeleted::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMPublishedFileDeleted)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMPublishedFileDeleted)
  return false;
#undef DO_
}

void CMsgClientUCMPublishedFileDeleted::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMPublishedFileDeleted)
}

::google::protobuf::uint8* CMsgClientUCMPublishedFileDeleted::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMPublishedFileDeleted)
  return target;
}

size_t CMsgClientUCMPublishedFileDeleted::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMPublishedFileDeleted::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishedFileDeleted* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMPublishedFileDeleted>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMPublishedFileDeleted)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMPublishedFileDeleted)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishedFileDeleted::MergeFrom(const CMsgClientUCMPublishedFileDeleted& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishedFileDeleted::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishedFileDeleted::CopyFrom(const CMsgClientUCMPublishedFileDeleted& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMPublishedFileDeleted)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishedFileDeleted::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishedFileDeleted::Swap(CMsgClientUCMPublishedFileDeleted* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishedFileDeleted::InternalSwap(CMsgClientUCMPublishedFileDeleted* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(app_id_, other->app_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMPublishedFileDeleted::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMPublishedFileDeleted

// optional fixed64 published_file_id = 1;
bool CMsgClientUCMPublishedFileDeleted::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMPublishedFileDeleted::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMPublishedFileDeleted::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMPublishedFileDeleted::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientUCMPublishedFileDeleted::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileDeleted.published_file_id)
  return published_file_id_;
}
void CMsgClientUCMPublishedFileDeleted::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileDeleted.published_file_id)
}

// optional uint32 app_id = 2;
bool CMsgClientUCMPublishedFileDeleted::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMPublishedFileDeleted::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMPublishedFileDeleted::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMPublishedFileDeleted::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientUCMPublishedFileDeleted::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileDeleted.app_id)
  return app_id_;
}
void CMsgClientUCMPublishedFileDeleted::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileDeleted.app_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMPublishedFileUpdated::kPublishedFileIdFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kAppIdFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kTimeUpdatedFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kHcontentFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kFileSizeFieldNumber;
const int CMsgClientUCMPublishedFileUpdated::kIsDepotContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMPublishedFileUpdated::CMsgClientUCMPublishedFileUpdated()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMPublishedFileUpdated)
}
CMsgClientUCMPublishedFileUpdated::CMsgClientUCMPublishedFileUpdated(const CMsgClientUCMPublishedFileUpdated& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&is_depot_content_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(is_depot_content_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMPublishedFileUpdated)
}

void CMsgClientUCMPublishedFileUpdated::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&is_depot_content_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(is_depot_content_));
}

CMsgClientUCMPublishedFileUpdated::~CMsgClientUCMPublishedFileUpdated() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMPublishedFileUpdated)
  SharedDtor();
}

void CMsgClientUCMPublishedFileUpdated::SharedDtor() {
}

void CMsgClientUCMPublishedFileUpdated::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMPublishedFileUpdated::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMPublishedFileUpdated& CMsgClientUCMPublishedFileUpdated::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMPublishedFileUpdated* CMsgClientUCMPublishedFileUpdated::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMPublishedFileUpdated* n = new CMsgClientUCMPublishedFileUpdated;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMPublishedFileUpdated::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&is_depot_content_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(is_depot_content_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMPublishedFileUpdated::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 hcontent = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_hcontent();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &hcontent_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 file_size = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u)) {
          set_has_file_size();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &file_size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_depot_content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_is_depot_content();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_depot_content_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMPublishedFileUpdated)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMPublishedFileUpdated)
  return false;
#undef DO_
}

void CMsgClientUCMPublishedFileUpdated::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional uint32 time_updated = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->time_updated(), output);
  }

  // optional fixed64 hcontent = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->hcontent(), output);
  }

  // optional fixed32 file_size = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->file_size(), output);
  }

  // optional bool is_depot_content = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->is_depot_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMPublishedFileUpdated)
}

::google::protobuf::uint8* CMsgClientUCMPublishedFileUpdated::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional uint32 time_updated = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->time_updated(), target);
  }

  // optional fixed64 hcontent = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->hcontent(), target);
  }

  // optional fixed32 file_size = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->file_size(), target);
  }

  // optional bool is_depot_content = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->is_depot_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMPublishedFileUpdated)
  return target;
}

size_t CMsgClientUCMPublishedFileUpdated::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 time_updated = 3;
    if (has_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

    // optional fixed64 hcontent = 4;
    if (has_hcontent()) {
      total_size += 1 + 8;
    }

    // optional fixed32 file_size = 5;
    if (has_file_size()) {
      total_size += 1 + 4;
    }

    // optional bool is_depot_content = 6;
    if (has_is_depot_content()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMPublishedFileUpdated::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMPublishedFileUpdated* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMPublishedFileUpdated>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMPublishedFileUpdated)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMPublishedFileUpdated)
    MergeFrom(*source);
  }
}

void CMsgClientUCMPublishedFileUpdated::MergeFrom(const CMsgClientUCMPublishedFileUpdated& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_updated_ = from.time_updated_;
    }
    if (cached_has_bits & 0x00000008u) {
      hcontent_ = from.hcontent_;
    }
    if (cached_has_bits & 0x00000010u) {
      file_size_ = from.file_size_;
    }
    if (cached_has_bits & 0x00000020u) {
      is_depot_content_ = from.is_depot_content_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMPublishedFileUpdated::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMPublishedFileUpdated::CopyFrom(const CMsgClientUCMPublishedFileUpdated& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMPublishedFileUpdated)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMPublishedFileUpdated::IsInitialized() const {
  return true;
}

void CMsgClientUCMPublishedFileUpdated::Swap(CMsgClientUCMPublishedFileUpdated* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMPublishedFileUpdated::InternalSwap(CMsgClientUCMPublishedFileUpdated* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(app_id_, other->app_id_);
  std::swap(time_updated_, other->time_updated_);
  std::swap(hcontent_, other->hcontent_);
  std::swap(file_size_, other->file_size_);
  std::swap(is_depot_content_, other->is_depot_content_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMPublishedFileUpdated::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMPublishedFileUpdated

// optional fixed64 published_file_id = 1;
bool CMsgClientUCMPublishedFileUpdated::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMPublishedFileUpdated::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMPublishedFileUpdated::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMPublishedFileUpdated::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientUCMPublishedFileUpdated::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileUpdated.published_file_id)
  return published_file_id_;
}
void CMsgClientUCMPublishedFileUpdated::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileUpdated.published_file_id)
}

// optional uint32 app_id = 2;
bool CMsgClientUCMPublishedFileUpdated::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMPublishedFileUpdated::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMPublishedFileUpdated::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMPublishedFileUpdated::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientUCMPublishedFileUpdated::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileUpdated.app_id)
  return app_id_;
}
void CMsgClientUCMPublishedFileUpdated::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileUpdated.app_id)
}

// optional uint32 time_updated = 3;
bool CMsgClientUCMPublishedFileUpdated::has_time_updated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUCMPublishedFileUpdated::set_has_time_updated() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUCMPublishedFileUpdated::clear_has_time_updated() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUCMPublishedFileUpdated::clear_time_updated() {
  time_updated_ = 0u;
  clear_has_time_updated();
}
::google::protobuf::uint32 CMsgClientUCMPublishedFileUpdated::time_updated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileUpdated.time_updated)
  return time_updated_;
}
void CMsgClientUCMPublishedFileUpdated::set_time_updated(::google::protobuf::uint32 value) {
  set_has_time_updated();
  time_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileUpdated.time_updated)
}

// optional fixed64 hcontent = 4;
bool CMsgClientUCMPublishedFileUpdated::has_hcontent() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientUCMPublishedFileUpdated::set_has_hcontent() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientUCMPublishedFileUpdated::clear_has_hcontent() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientUCMPublishedFileUpdated::clear_hcontent() {
  hcontent_ = GOOGLE_ULONGLONG(0);
  clear_has_hcontent();
}
::google::protobuf::uint64 CMsgClientUCMPublishedFileUpdated::hcontent() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileUpdated.hcontent)
  return hcontent_;
}
void CMsgClientUCMPublishedFileUpdated::set_hcontent(::google::protobuf::uint64 value) {
  set_has_hcontent();
  hcontent_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileUpdated.hcontent)
}

// optional fixed32 file_size = 5;
bool CMsgClientUCMPublishedFileUpdated::has_file_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientUCMPublishedFileUpdated::set_has_file_size() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientUCMPublishedFileUpdated::clear_has_file_size() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientUCMPublishedFileUpdated::clear_file_size() {
  file_size_ = 0u;
  clear_has_file_size();
}
::google::protobuf::uint32 CMsgClientUCMPublishedFileUpdated::file_size() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileUpdated.file_size)
  return file_size_;
}
void CMsgClientUCMPublishedFileUpdated::set_file_size(::google::protobuf::uint32 value) {
  set_has_file_size();
  file_size_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileUpdated.file_size)
}

// optional bool is_depot_content = 6;
bool CMsgClientUCMPublishedFileUpdated::has_is_depot_content() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientUCMPublishedFileUpdated::set_has_is_depot_content() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientUCMPublishedFileUpdated::clear_has_is_depot_content() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientUCMPublishedFileUpdated::clear_is_depot_content() {
  is_depot_content_ = false;
  clear_has_is_depot_content();
}
bool CMsgClientUCMPublishedFileUpdated::is_depot_content() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMPublishedFileUpdated.is_depot_content)
  return is_depot_content_;
}
void CMsgClientUCMPublishedFileUpdated::set_is_depot_content(bool value) {
  set_has_is_depot_content();
  is_depot_content_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMPublishedFileUpdated.is_depot_content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemChangesRequest::kAppIdFieldNumber;
const int CMsgClientWorkshopItemChangesRequest::kLastTimeUpdatedFieldNumber;
const int CMsgClientWorkshopItemChangesRequest::kNumItemsNeededFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemChangesRequest::CMsgClientWorkshopItemChangesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientWorkshopItemChangesRequest)
}
CMsgClientWorkshopItemChangesRequest::CMsgClientWorkshopItemChangesRequest(const CMsgClientWorkshopItemChangesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    reinterpret_cast<char*>(&num_items_needed_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(num_items_needed_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientWorkshopItemChangesRequest)
}

void CMsgClientWorkshopItemChangesRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&num_items_needed_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(num_items_needed_));
}

CMsgClientWorkshopItemChangesRequest::~CMsgClientWorkshopItemChangesRequest() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientWorkshopItemChangesRequest)
  SharedDtor();
}

void CMsgClientWorkshopItemChangesRequest::SharedDtor() {
}

void CMsgClientWorkshopItemChangesRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientWorkshopItemChangesRequest::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWorkshopItemChangesRequest& CMsgClientWorkshopItemChangesRequest::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientWorkshopItemChangesRequest* CMsgClientWorkshopItemChangesRequest::New(::google::protobuf::Arena* arena) const {
  CMsgClientWorkshopItemChangesRequest* n = new CMsgClientWorkshopItemChangesRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientWorkshopItemChangesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&app_id_, 0, reinterpret_cast<char*>(&num_items_needed_) -
      reinterpret_cast<char*>(&app_id_) + sizeof(num_items_needed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWorkshopItemChangesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_last_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_items_needed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_num_items_needed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_items_needed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientWorkshopItemChangesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientWorkshopItemChangesRequest)
  return false;
#undef DO_
}

void CMsgClientWorkshopItemChangesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->last_time_updated(), output);
  }

  // optional uint32 num_items_needed = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->num_items_needed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientWorkshopItemChangesRequest)
}

::google::protobuf::uint8* CMsgClientWorkshopItemChangesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->last_time_updated(), target);
  }

  // optional uint32 num_items_needed = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->num_items_needed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientWorkshopItemChangesRequest)
  return target;
}

size_t CMsgClientWorkshopItemChangesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 last_time_updated = 2;
    if (has_last_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_time_updated());
    }

    // optional uint32 num_items_needed = 3;
    if (has_num_items_needed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_items_needed());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientWorkshopItemChangesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemChangesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWorkshopItemChangesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientWorkshopItemChangesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientWorkshopItemChangesRequest)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemChangesRequest::MergeFrom(const CMsgClientWorkshopItemChangesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      last_time_updated_ = from.last_time_updated_;
    }
    if (cached_has_bits & 0x00000004u) {
      num_items_needed_ = from.num_items_needed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemChangesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemChangesRequest::CopyFrom(const CMsgClientWorkshopItemChangesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientWorkshopItemChangesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemChangesRequest::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemChangesRequest::Swap(CMsgClientWorkshopItemChangesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemChangesRequest::InternalSwap(CMsgClientWorkshopItemChangesRequest* other) {
  std::swap(app_id_, other->app_id_);
  std::swap(last_time_updated_, other->last_time_updated_);
  std::swap(num_items_needed_, other->num_items_needed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemChangesRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientWorkshopItemChangesRequest

// optional uint32 app_id = 1;
bool CMsgClientWorkshopItemChangesRequest::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientWorkshopItemChangesRequest::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientWorkshopItemChangesRequest::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientWorkshopItemChangesRequest::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientWorkshopItemChangesRequest::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemChangesRequest.app_id)
  return app_id_;
}
void CMsgClientWorkshopItemChangesRequest::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemChangesRequest.app_id)
}

// optional uint32 last_time_updated = 2;
bool CMsgClientWorkshopItemChangesRequest::has_last_time_updated() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientWorkshopItemChangesRequest::set_has_last_time_updated() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientWorkshopItemChangesRequest::clear_has_last_time_updated() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientWorkshopItemChangesRequest::clear_last_time_updated() {
  last_time_updated_ = 0u;
  clear_has_last_time_updated();
}
::google::protobuf::uint32 CMsgClientWorkshopItemChangesRequest::last_time_updated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemChangesRequest.last_time_updated)
  return last_time_updated_;
}
void CMsgClientWorkshopItemChangesRequest::set_last_time_updated(::google::protobuf::uint32 value) {
  set_has_last_time_updated();
  last_time_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemChangesRequest.last_time_updated)
}

// optional uint32 num_items_needed = 3;
bool CMsgClientWorkshopItemChangesRequest::has_num_items_needed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientWorkshopItemChangesRequest::set_has_num_items_needed() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientWorkshopItemChangesRequest::clear_has_num_items_needed() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientWorkshopItemChangesRequest::clear_num_items_needed() {
  num_items_needed_ = 0u;
  clear_has_num_items_needed();
}
::google::protobuf::uint32 CMsgClientWorkshopItemChangesRequest::num_items_needed() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemChangesRequest.num_items_needed)
  return num_items_needed_;
}
void CMsgClientWorkshopItemChangesRequest::set_num_items_needed(::google::protobuf::uint32 value) {
  set_has_num_items_needed();
  num_items_needed_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemChangesRequest.num_items_needed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::kPublishedFileIdFieldNumber;
const int CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::kTimeUpdatedFieldNumber;
const int CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::kManifestIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
}
CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&time_updated_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(time_updated_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&time_updated_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(time_updated_));
}

CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::~CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  SharedDtor();
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SharedDtor() {
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::New(::google::protobuf::Arena* arena) const {
  CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* n = new CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&time_updated_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(time_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 manifest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_manifest_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &manifest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  return false;
#undef DO_
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_updated(), output);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->manifest_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
}

::google::protobuf::uint8* CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_updated(), target);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->manifest_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  return target;
}

size_t CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 manifest_id = 3;
    if (has_manifest_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 time_updated = 2;
    if (has_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::MergeFrom(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      manifest_id_ = from.manifest_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_updated_ = from.time_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::CopyFrom(const CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::Swap(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::InternalSwap(CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(manifest_id_, other->manifest_id_);
  std::swap(time_updated_, other->time_updated_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo

// optional fixed64 published_file_id = 1;
bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo.published_file_id)
  return published_file_id_;
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo.published_file_id)
}

// optional uint32 time_updated = 2;
bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::has_time_updated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::set_has_time_updated() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::clear_has_time_updated() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::clear_time_updated() {
  time_updated_ = 0u;
  clear_has_time_updated();
}
::google::protobuf::uint32 CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::time_updated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo.time_updated)
  return time_updated_;
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::set_time_updated(::google::protobuf::uint32 value) {
  set_has_time_updated();
  time_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo.time_updated)
}

// optional fixed64 manifest_id = 3;
bool CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::has_manifest_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::set_has_manifest_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::clear_has_manifest_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::clear_manifest_id() {
  manifest_id_ = GOOGLE_ULONGLONG(0);
  clear_has_manifest_id();
}
::google::protobuf::uint64 CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::manifest_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo.manifest_id)
  return manifest_id_;
}
void CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo::set_manifest_id(::google::protobuf::uint64 value) {
  set_has_manifest_id();
  manifest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo.manifest_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemChangesResponse::kEresultFieldNumber;
const int CMsgClientWorkshopItemChangesResponse::kUpdateTimeFieldNumber;
const int CMsgClientWorkshopItemChangesResponse::kWorkshopItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemChangesResponse::CMsgClientWorkshopItemChangesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientWorkshopItemChangesResponse)
}
CMsgClientWorkshopItemChangesResponse::CMsgClientWorkshopItemChangesResponse(const CMsgClientWorkshopItemChangesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      workshop_items_(from.workshop_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&update_time_, &from.update_time_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&update_time_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientWorkshopItemChangesResponse)
}

void CMsgClientWorkshopItemChangesResponse::SharedCtor() {
  _cached_size_ = 0;
  update_time_ = 0u;
  eresult_ = 2;
}

CMsgClientWorkshopItemChangesResponse::~CMsgClientWorkshopItemChangesResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientWorkshopItemChangesResponse)
  SharedDtor();
}

void CMsgClientWorkshopItemChangesResponse::SharedDtor() {
}

void CMsgClientWorkshopItemChangesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientWorkshopItemChangesResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWorkshopItemChangesResponse& CMsgClientWorkshopItemChangesResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientWorkshopItemChangesResponse* CMsgClientWorkshopItemChangesResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientWorkshopItemChangesResponse* n = new CMsgClientWorkshopItemChangesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientWorkshopItemChangesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  workshop_items_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    update_time_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWorkshopItemChangesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 update_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_update_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_workshop_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientWorkshopItemChangesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientWorkshopItemChangesResponse)
  return false;
#undef DO_
}

void CMsgClientWorkshopItemChangesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 update_time = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->update_time(), output);
  }

  // repeated .proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
  for (unsigned int i = 0, n = this->workshop_items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->workshop_items(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientWorkshopItemChangesResponse)
}

::google::protobuf::uint8* CMsgClientWorkshopItemChangesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 update_time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->update_time(), target);
  }

  // repeated .proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
  for (unsigned int i = 0, n = this->workshop_items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->workshop_items(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientWorkshopItemChangesResponse)
  return target;
}

size_t CMsgClientWorkshopItemChangesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
  {
    unsigned int count = this->workshop_items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->workshop_items(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 update_time = 2;
    if (has_update_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->update_time());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientWorkshopItemChangesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemChangesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWorkshopItemChangesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientWorkshopItemChangesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientWorkshopItemChangesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemChangesResponse::MergeFrom(const CMsgClientWorkshopItemChangesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workshop_items_.MergeFrom(from.workshop_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      update_time_ = from.update_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemChangesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemChangesResponse::CopyFrom(const CMsgClientWorkshopItemChangesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientWorkshopItemChangesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemChangesResponse::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemChangesResponse::Swap(CMsgClientWorkshopItemChangesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemChangesResponse::InternalSwap(CMsgClientWorkshopItemChangesResponse* other) {
  workshop_items_.InternalSwap(&other->workshop_items_);
  std::swap(update_time_, other->update_time_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemChangesResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientWorkshopItemChangesResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientWorkshopItemChangesResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientWorkshopItemChangesResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientWorkshopItemChangesResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientWorkshopItemChangesResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientWorkshopItemChangesResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemChangesResponse.eresult)
  return eresult_;
}
void CMsgClientWorkshopItemChangesResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemChangesResponse.eresult)
}

// optional uint32 update_time = 2;
bool CMsgClientWorkshopItemChangesResponse::has_update_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientWorkshopItemChangesResponse::set_has_update_time() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientWorkshopItemChangesResponse::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientWorkshopItemChangesResponse::clear_update_time() {
  update_time_ = 0u;
  clear_has_update_time();
}
::google::protobuf::uint32 CMsgClientWorkshopItemChangesResponse::update_time() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemChangesResponse.update_time)
  return update_time_;
}
void CMsgClientWorkshopItemChangesResponse::set_update_time(::google::protobuf::uint32 value) {
  set_has_update_time();
  update_time_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemChangesResponse.update_time)
}

// repeated .proto.steam.CMsgClientWorkshopItemChangesResponse.WorkshopItemInfo workshop_items = 5;
int CMsgClientWorkshopItemChangesResponse::workshop_items_size() const {
  return workshop_items_.size();
}
void CMsgClientWorkshopItemChangesResponse::clear_workshop_items() {
  workshop_items_.Clear();
}
const ::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo& CMsgClientWorkshopItemChangesResponse::workshop_items(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemChangesResponse.workshop_items)
  return workshop_items_.Get(index);
}
::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* CMsgClientWorkshopItemChangesResponse::mutable_workshop_items(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientWorkshopItemChangesResponse.workshop_items)
  return workshop_items_.Mutable(index);
}
::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo* CMsgClientWorkshopItemChangesResponse::add_workshop_items() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientWorkshopItemChangesResponse.workshop_items)
  return workshop_items_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo >*
CMsgClientWorkshopItemChangesResponse::mutable_workshop_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientWorkshopItemChangesResponse.workshop_items)
  return &workshop_items_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientWorkshopItemChangesResponse_WorkshopItemInfo >&
CMsgClientWorkshopItemChangesResponse::workshop_items() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientWorkshopItemChangesResponse.workshop_items)
  return workshop_items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemInfoRequest_WorkshopItem::kPublishedFileIdFieldNumber;
const int CMsgClientWorkshopItemInfoRequest_WorkshopItem::kTimeUpdatedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemInfoRequest_WorkshopItem::CMsgClientWorkshopItemInfoRequest_WorkshopItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
}
CMsgClientWorkshopItemInfoRequest_WorkshopItem::CMsgClientWorkshopItemInfoRequest_WorkshopItem(const CMsgClientWorkshopItemInfoRequest_WorkshopItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&time_updated_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(time_updated_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&time_updated_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(time_updated_));
}

CMsgClientWorkshopItemInfoRequest_WorkshopItem::~CMsgClientWorkshopItemInfoRequest_WorkshopItem() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  SharedDtor();
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::SharedDtor() {
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientWorkshopItemInfoRequest_WorkshopItem::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWorkshopItemInfoRequest_WorkshopItem& CMsgClientWorkshopItemInfoRequest_WorkshopItem::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientWorkshopItemInfoRequest_WorkshopItem* CMsgClientWorkshopItemInfoRequest_WorkshopItem::New(::google::protobuf::Arena* arena) const {
  CMsgClientWorkshopItemInfoRequest_WorkshopItem* n = new CMsgClientWorkshopItemInfoRequest_WorkshopItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&time_updated_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(time_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWorkshopItemInfoRequest_WorkshopItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  return false;
#undef DO_
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_updated(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
}

::google::protobuf::uint8* CMsgClientWorkshopItemInfoRequest_WorkshopItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_updated(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  return target;
}

size_t CMsgClientWorkshopItemInfoRequest_WorkshopItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 time_updated = 2;
    if (has_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemInfoRequest_WorkshopItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWorkshopItemInfoRequest_WorkshopItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::MergeFrom(const CMsgClientWorkshopItemInfoRequest_WorkshopItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      time_updated_ = from.time_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::CopyFrom(const CMsgClientWorkshopItemInfoRequest_WorkshopItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemInfoRequest_WorkshopItem::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemInfoRequest_WorkshopItem::Swap(CMsgClientWorkshopItemInfoRequest_WorkshopItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemInfoRequest_WorkshopItem::InternalSwap(CMsgClientWorkshopItemInfoRequest_WorkshopItem* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(time_updated_, other->time_updated_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemInfoRequest_WorkshopItem::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientWorkshopItemInfoRequest_WorkshopItem

// optional fixed64 published_file_id = 1;
bool CMsgClientWorkshopItemInfoRequest_WorkshopItem::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientWorkshopItemInfoRequest_WorkshopItem::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientWorkshopItemInfoRequest_WorkshopItem::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientWorkshopItemInfoRequest_WorkshopItem::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientWorkshopItemInfoRequest_WorkshopItem::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem.published_file_id)
  return published_file_id_;
}
void CMsgClientWorkshopItemInfoRequest_WorkshopItem::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem.published_file_id)
}

// optional uint32 time_updated = 2;
bool CMsgClientWorkshopItemInfoRequest_WorkshopItem::has_time_updated() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientWorkshopItemInfoRequest_WorkshopItem::set_has_time_updated() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientWorkshopItemInfoRequest_WorkshopItem::clear_has_time_updated() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientWorkshopItemInfoRequest_WorkshopItem::clear_time_updated() {
  time_updated_ = 0u;
  clear_has_time_updated();
}
::google::protobuf::uint32 CMsgClientWorkshopItemInfoRequest_WorkshopItem::time_updated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem.time_updated)
  return time_updated_;
}
void CMsgClientWorkshopItemInfoRequest_WorkshopItem::set_time_updated(::google::protobuf::uint32 value) {
  set_has_time_updated();
  time_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem.time_updated)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemInfoRequest::kAppIdFieldNumber;
const int CMsgClientWorkshopItemInfoRequest::kLastTimeUpdatedFieldNumber;
const int CMsgClientWorkshopItemInfoRequest::kWorkshopItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemInfoRequest::CMsgClientWorkshopItemInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientWorkshopItemInfoRequest)
}
CMsgClientWorkshopItemInfoRequest::CMsgClientWorkshopItemInfoRequest(const CMsgClientWorkshopItemInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      workshop_items_(from.workshop_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    reinterpret_cast<char*>(&last_time_updated_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(last_time_updated_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientWorkshopItemInfoRequest)
}

void CMsgClientWorkshopItemInfoRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&last_time_updated_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(last_time_updated_));
}

CMsgClientWorkshopItemInfoRequest::~CMsgClientWorkshopItemInfoRequest() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientWorkshopItemInfoRequest)
  SharedDtor();
}

void CMsgClientWorkshopItemInfoRequest::SharedDtor() {
}

void CMsgClientWorkshopItemInfoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientWorkshopItemInfoRequest::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWorkshopItemInfoRequest& CMsgClientWorkshopItemInfoRequest::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientWorkshopItemInfoRequest* CMsgClientWorkshopItemInfoRequest::New(::google::protobuf::Arena* arena) const {
  CMsgClientWorkshopItemInfoRequest* n = new CMsgClientWorkshopItemInfoRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientWorkshopItemInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  workshop_items_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&app_id_, 0, reinterpret_cast<char*>(&last_time_updated_) -
      reinterpret_cast<char*>(&app_id_) + sizeof(last_time_updated_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWorkshopItemInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_last_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem workshop_items = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_workshop_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientWorkshopItemInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientWorkshopItemInfoRequest)
  return false;
#undef DO_
}

void CMsgClientWorkshopItemInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->last_time_updated(), output);
  }

  // repeated .proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem workshop_items = 3;
  for (unsigned int i = 0, n = this->workshop_items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->workshop_items(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientWorkshopItemInfoRequest)
}

::google::protobuf::uint8* CMsgClientWorkshopItemInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 last_time_updated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->last_time_updated(), target);
  }

  // repeated .proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem workshop_items = 3;
  for (unsigned int i = 0, n = this->workshop_items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->workshop_items(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientWorkshopItemInfoRequest)
  return target;
}

size_t CMsgClientWorkshopItemInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem workshop_items = 3;
  {
    unsigned int count = this->workshop_items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->workshop_items(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 last_time_updated = 2;
    if (has_last_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_time_updated());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientWorkshopItemInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWorkshopItemInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientWorkshopItemInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientWorkshopItemInfoRequest)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemInfoRequest::MergeFrom(const CMsgClientWorkshopItemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workshop_items_.MergeFrom(from.workshop_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      last_time_updated_ = from.last_time_updated_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemInfoRequest::CopyFrom(const CMsgClientWorkshopItemInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemInfoRequest::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemInfoRequest::Swap(CMsgClientWorkshopItemInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemInfoRequest::InternalSwap(CMsgClientWorkshopItemInfoRequest* other) {
  workshop_items_.InternalSwap(&other->workshop_items_);
  std::swap(app_id_, other->app_id_);
  std::swap(last_time_updated_, other->last_time_updated_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemInfoRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientWorkshopItemInfoRequest

// optional uint32 app_id = 1;
bool CMsgClientWorkshopItemInfoRequest::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientWorkshopItemInfoRequest::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientWorkshopItemInfoRequest::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientWorkshopItemInfoRequest::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientWorkshopItemInfoRequest::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemInfoRequest.app_id)
  return app_id_;
}
void CMsgClientWorkshopItemInfoRequest::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemInfoRequest.app_id)
}

// optional uint32 last_time_updated = 2;
bool CMsgClientWorkshopItemInfoRequest::has_last_time_updated() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientWorkshopItemInfoRequest::set_has_last_time_updated() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientWorkshopItemInfoRequest::clear_has_last_time_updated() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientWorkshopItemInfoRequest::clear_last_time_updated() {
  last_time_updated_ = 0u;
  clear_has_last_time_updated();
}
::google::protobuf::uint32 CMsgClientWorkshopItemInfoRequest::last_time_updated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemInfoRequest.last_time_updated)
  return last_time_updated_;
}
void CMsgClientWorkshopItemInfoRequest::set_last_time_updated(::google::protobuf::uint32 value) {
  set_has_last_time_updated();
  last_time_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemInfoRequest.last_time_updated)
}

// repeated .proto.steam.CMsgClientWorkshopItemInfoRequest.WorkshopItem workshop_items = 3;
int CMsgClientWorkshopItemInfoRequest::workshop_items_size() const {
  return workshop_items_.size();
}
void CMsgClientWorkshopItemInfoRequest::clear_workshop_items() {
  workshop_items_.Clear();
}
const ::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem& CMsgClientWorkshopItemInfoRequest::workshop_items(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemInfoRequest.workshop_items)
  return workshop_items_.Get(index);
}
::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem* CMsgClientWorkshopItemInfoRequest::mutable_workshop_items(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientWorkshopItemInfoRequest.workshop_items)
  return workshop_items_.Mutable(index);
}
::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem* CMsgClientWorkshopItemInfoRequest::add_workshop_items() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientWorkshopItemInfoRequest.workshop_items)
  return workshop_items_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem >*
CMsgClientWorkshopItemInfoRequest::mutable_workshop_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientWorkshopItemInfoRequest.workshop_items)
  return &workshop_items_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientWorkshopItemInfoRequest_WorkshopItem >&
CMsgClientWorkshopItemInfoRequest::workshop_items() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientWorkshopItemInfoRequest.workshop_items)
  return workshop_items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::kPublishedFileIdFieldNumber;
const int CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::kTimeUpdatedFieldNumber;
const int CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::kManifestIdFieldNumber;
const int CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::kIsLegacyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
}
CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo(const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&is_legacy_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(is_legacy_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&is_legacy_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(is_legacy_));
}

CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::~CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  SharedDtor();
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::SharedDtor() {
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo& CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::New(::google::protobuf::Arena* arena) const {
  CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* n = new CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&is_legacy_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(is_legacy_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 time_updated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_time_updated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &time_updated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 manifest_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_manifest_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &manifest_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_legacy = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_is_legacy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_legacy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  return false;
#undef DO_
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->time_updated(), output);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->manifest_id(), output);
  }

  // optional bool is_legacy = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->is_legacy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
}

::google::protobuf::uint8* CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 time_updated = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->time_updated(), target);
  }

  // optional fixed64 manifest_id = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(3, this->manifest_id(), target);
  }

  // optional bool is_legacy = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->is_legacy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  return target;
}

size_t CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional fixed64 manifest_id = 3;
    if (has_manifest_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 time_updated = 2;
    if (has_time_updated()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->time_updated());
    }

    // optional bool is_legacy = 4;
    if (has_is_legacy()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::MergeFrom(const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      manifest_id_ = from.manifest_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_updated_ = from.time_updated_;
    }
    if (cached_has_bits & 0x00000008u) {
      is_legacy_ = from.is_legacy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::CopyFrom(const CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::Swap(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::InternalSwap(CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(manifest_id_, other->manifest_id_);
  std::swap(time_updated_, other->time_updated_);
  std::swap(is_legacy_, other->is_legacy_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo

// optional fixed64 published_file_id = 1;
bool CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo.published_file_id)
  return published_file_id_;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo.published_file_id)
}

// optional uint32 time_updated = 2;
bool CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::has_time_updated() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::set_has_time_updated() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::clear_has_time_updated() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::clear_time_updated() {
  time_updated_ = 0u;
  clear_has_time_updated();
}
::google::protobuf::uint32 CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::time_updated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo.time_updated)
  return time_updated_;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::set_time_updated(::google::protobuf::uint32 value) {
  set_has_time_updated();
  time_updated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo.time_updated)
}

// optional fixed64 manifest_id = 3;
bool CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::has_manifest_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::set_has_manifest_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::clear_has_manifest_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::clear_manifest_id() {
  manifest_id_ = GOOGLE_ULONGLONG(0);
  clear_has_manifest_id();
}
::google::protobuf::uint64 CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::manifest_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo.manifest_id)
  return manifest_id_;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::set_manifest_id(::google::protobuf::uint64 value) {
  set_has_manifest_id();
  manifest_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo.manifest_id)
}

// optional bool is_legacy = 4;
bool CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::has_is_legacy() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::set_has_is_legacy() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::clear_has_is_legacy() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::clear_is_legacy() {
  is_legacy_ = false;
  clear_has_is_legacy();
}
bool CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::is_legacy() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo.is_legacy)
  return is_legacy_;
}
void CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo::set_is_legacy(bool value) {
  set_has_is_legacy();
  is_legacy_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo.is_legacy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientWorkshopItemInfoResponse::kEresultFieldNumber;
const int CMsgClientWorkshopItemInfoResponse::kUpdateTimeFieldNumber;
const int CMsgClientWorkshopItemInfoResponse::kWorkshopItemsFieldNumber;
const int CMsgClientWorkshopItemInfoResponse::kPrivateItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientWorkshopItemInfoResponse::CMsgClientWorkshopItemInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientWorkshopItemInfoResponse)
}
CMsgClientWorkshopItemInfoResponse::CMsgClientWorkshopItemInfoResponse(const CMsgClientWorkshopItemInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      workshop_items_(from.workshop_items_),
      private_items_(from.private_items_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&update_time_, &from.update_time_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&update_time_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientWorkshopItemInfoResponse)
}

void CMsgClientWorkshopItemInfoResponse::SharedCtor() {
  _cached_size_ = 0;
  update_time_ = 0u;
  eresult_ = 2;
}

CMsgClientWorkshopItemInfoResponse::~CMsgClientWorkshopItemInfoResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientWorkshopItemInfoResponse)
  SharedDtor();
}

void CMsgClientWorkshopItemInfoResponse::SharedDtor() {
}

void CMsgClientWorkshopItemInfoResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientWorkshopItemInfoResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientWorkshopItemInfoResponse& CMsgClientWorkshopItemInfoResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientWorkshopItemInfoResponse* CMsgClientWorkshopItemInfoResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientWorkshopItemInfoResponse* n = new CMsgClientWorkshopItemInfoResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientWorkshopItemInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  workshop_items_.Clear();
  private_items_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    update_time_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientWorkshopItemInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 update_time = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_update_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &update_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo workshop_items = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_workshop_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 private_items = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 33u, input, this->mutable_private_items())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(34u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_private_items())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientWorkshopItemInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientWorkshopItemInfoResponse)
  return false;
#undef DO_
}

void CMsgClientWorkshopItemInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 update_time = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->update_time(), output);
  }

  // repeated .proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo workshop_items = 3;
  for (unsigned int i = 0, n = this->workshop_items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->workshop_items(i), output);
  }

  // repeated fixed64 private_items = 4;
  for (int i = 0, n = this->private_items_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      4, this->private_items(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientWorkshopItemInfoResponse)
}

::google::protobuf::uint8* CMsgClientWorkshopItemInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 update_time = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->update_time(), target);
  }

  // repeated .proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo workshop_items = 3;
  for (unsigned int i = 0, n = this->workshop_items_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->workshop_items(i), deterministic, target);
  }

  // repeated fixed64 private_items = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(4, this->private_items_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientWorkshopItemInfoResponse)
  return target;
}

size_t CMsgClientWorkshopItemInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo workshop_items = 3;
  {
    unsigned int count = this->workshop_items_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->workshop_items(i));
    }
  }

  // repeated fixed64 private_items = 4;
  {
    unsigned int count = this->private_items_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->private_items_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 update_time = 2;
    if (has_update_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->update_time());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientWorkshopItemInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientWorkshopItemInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientWorkshopItemInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientWorkshopItemInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientWorkshopItemInfoResponse)
    MergeFrom(*source);
  }
}

void CMsgClientWorkshopItemInfoResponse::MergeFrom(const CMsgClientWorkshopItemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  workshop_items_.MergeFrom(from.workshop_items_);
  private_items_.MergeFrom(from.private_items_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      update_time_ = from.update_time_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientWorkshopItemInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientWorkshopItemInfoResponse::CopyFrom(const CMsgClientWorkshopItemInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientWorkshopItemInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientWorkshopItemInfoResponse::IsInitialized() const {
  return true;
}

void CMsgClientWorkshopItemInfoResponse::Swap(CMsgClientWorkshopItemInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientWorkshopItemInfoResponse::InternalSwap(CMsgClientWorkshopItemInfoResponse* other) {
  workshop_items_.InternalSwap(&other->workshop_items_);
  private_items_.InternalSwap(&other->private_items_);
  std::swap(update_time_, other->update_time_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientWorkshopItemInfoResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientWorkshopItemInfoResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientWorkshopItemInfoResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientWorkshopItemInfoResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientWorkshopItemInfoResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientWorkshopItemInfoResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientWorkshopItemInfoResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemInfoResponse.eresult)
  return eresult_;
}
void CMsgClientWorkshopItemInfoResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemInfoResponse.eresult)
}

// optional uint32 update_time = 2;
bool CMsgClientWorkshopItemInfoResponse::has_update_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientWorkshopItemInfoResponse::set_has_update_time() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientWorkshopItemInfoResponse::clear_has_update_time() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientWorkshopItemInfoResponse::clear_update_time() {
  update_time_ = 0u;
  clear_has_update_time();
}
::google::protobuf::uint32 CMsgClientWorkshopItemInfoResponse::update_time() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemInfoResponse.update_time)
  return update_time_;
}
void CMsgClientWorkshopItemInfoResponse::set_update_time(::google::protobuf::uint32 value) {
  set_has_update_time();
  update_time_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemInfoResponse.update_time)
}

// repeated .proto.steam.CMsgClientWorkshopItemInfoResponse.WorkshopItemInfo workshop_items = 3;
int CMsgClientWorkshopItemInfoResponse::workshop_items_size() const {
  return workshop_items_.size();
}
void CMsgClientWorkshopItemInfoResponse::clear_workshop_items() {
  workshop_items_.Clear();
}
const ::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo& CMsgClientWorkshopItemInfoResponse::workshop_items(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemInfoResponse.workshop_items)
  return workshop_items_.Get(index);
}
::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* CMsgClientWorkshopItemInfoResponse::mutable_workshop_items(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientWorkshopItemInfoResponse.workshop_items)
  return workshop_items_.Mutable(index);
}
::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo* CMsgClientWorkshopItemInfoResponse::add_workshop_items() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientWorkshopItemInfoResponse.workshop_items)
  return workshop_items_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo >*
CMsgClientWorkshopItemInfoResponse::mutable_workshop_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientWorkshopItemInfoResponse.workshop_items)
  return &workshop_items_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientWorkshopItemInfoResponse_WorkshopItemInfo >&
CMsgClientWorkshopItemInfoResponse::workshop_items() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientWorkshopItemInfoResponse.workshop_items)
  return workshop_items_;
}

// repeated fixed64 private_items = 4;
int CMsgClientWorkshopItemInfoResponse::private_items_size() const {
  return private_items_.size();
}
void CMsgClientWorkshopItemInfoResponse::clear_private_items() {
  private_items_.Clear();
}
::google::protobuf::uint64 CMsgClientWorkshopItemInfoResponse::private_items(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientWorkshopItemInfoResponse.private_items)
  return private_items_.Get(index);
}
void CMsgClientWorkshopItemInfoResponse::set_private_items(int index, ::google::protobuf::uint64 value) {
  private_items_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientWorkshopItemInfoResponse.private_items)
}
void CMsgClientWorkshopItemInfoResponse::add_private_items(::google::protobuf::uint64 value) {
  private_items_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientWorkshopItemInfoResponse.private_items)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientWorkshopItemInfoResponse::private_items() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientWorkshopItemInfoResponse.private_items)
  return private_items_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientWorkshopItemInfoResponse::mutable_private_items() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientWorkshopItemInfoResponse.private_items)
  return &private_items_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMGetPublishedFilesForUser::kAppIdFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUser::kCreatorSteamIdFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUser::kRequiredTagsFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUser::kExcludedTagsFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUser::kStartIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMGetPublishedFilesForUser::CMsgClientUCMGetPublishedFilesForUser()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
}
CMsgClientUCMGetPublishedFilesForUser::CMsgClientUCMGetPublishedFilesForUser(const CMsgClientUCMGetPublishedFilesForUser& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      required_tags_(from.required_tags_),
      excluded_tags_(from.excluded_tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&creator_steam_id_, &from.creator_steam_id_,
    reinterpret_cast<char*>(&start_index_) -
    reinterpret_cast<char*>(&creator_steam_id_) + sizeof(start_index_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
}

void CMsgClientUCMGetPublishedFilesForUser::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&creator_steam_id_, 0, reinterpret_cast<char*>(&start_index_) -
    reinterpret_cast<char*>(&creator_steam_id_) + sizeof(start_index_));
}

CMsgClientUCMGetPublishedFilesForUser::~CMsgClientUCMGetPublishedFilesForUser() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  SharedDtor();
}

void CMsgClientUCMGetPublishedFilesForUser::SharedDtor() {
}

void CMsgClientUCMGetPublishedFilesForUser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMGetPublishedFilesForUser::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMGetPublishedFilesForUser& CMsgClientUCMGetPublishedFilesForUser::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMGetPublishedFilesForUser* CMsgClientUCMGetPublishedFilesForUser::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMGetPublishedFilesForUser* n = new CMsgClientUCMGetPublishedFilesForUser;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMGetPublishedFilesForUser::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  required_tags_.Clear();
  excluded_tags_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&creator_steam_id_, 0, reinterpret_cast<char*>(&start_index_) -
      reinterpret_cast<char*>(&creator_steam_id_) + sizeof(start_index_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMGetPublishedFilesForUser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 creator_steam_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_creator_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &creator_steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string required_tags = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_required_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->required_tags(this->required_tags_size() - 1).data(),
            this->required_tags(this->required_tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string excluded_tags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_excluded_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->excluded_tags(this->excluded_tags_size() - 1).data(),
            this->excluded_tags(this->excluded_tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_start_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  return false;
#undef DO_
}

void CMsgClientUCMGetPublishedFilesForUser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional fixed64 creator_steam_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->creator_steam_id(), output);
  }

  // repeated string required_tags = 3;
  for (int i = 0, n = this->required_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_tags(i).data(), this->required_tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->required_tags(i), output);
  }

  // repeated string excluded_tags = 4;
  for (int i = 0, n = this->excluded_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->excluded_tags(i).data(), this->excluded_tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->excluded_tags(i), output);
  }

  // optional uint32 start_index = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->start_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
}

::google::protobuf::uint8* CMsgClientUCMGetPublishedFilesForUser::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional fixed64 creator_steam_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->creator_steam_id(), target);
  }

  // repeated string required_tags = 3;
  for (int i = 0, n = this->required_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_tags(i).data(), this->required_tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->required_tags(i), target);
  }

  // repeated string excluded_tags = 4;
  for (int i = 0, n = this->excluded_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->excluded_tags(i).data(), this->excluded_tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->excluded_tags(i), target);
  }

  // optional uint32 start_index = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->start_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  return target;
}

size_t CMsgClientUCMGetPublishedFilesForUser::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string required_tags = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->required_tags_size());
  for (int i = 0, n = this->required_tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->required_tags(i));
  }

  // repeated string excluded_tags = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->excluded_tags_size());
  for (int i = 0, n = this->excluded_tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->excluded_tags(i));
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 creator_steam_id = 2;
    if (has_creator_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 5;
    if (has_start_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMGetPublishedFilesForUser::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMGetPublishedFilesForUser* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMGetPublishedFilesForUser>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
    MergeFrom(*source);
  }
}

void CMsgClientUCMGetPublishedFilesForUser::MergeFrom(const CMsgClientUCMGetPublishedFilesForUser& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  required_tags_.MergeFrom(from.required_tags_);
  excluded_tags_.MergeFrom(from.excluded_tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      creator_steam_id_ = from.creator_steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_index_ = from.start_index_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMGetPublishedFilesForUser::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMGetPublishedFilesForUser::CopyFrom(const CMsgClientUCMGetPublishedFilesForUser& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUser)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMGetPublishedFilesForUser::IsInitialized() const {
  return true;
}

void CMsgClientUCMGetPublishedFilesForUser::Swap(CMsgClientUCMGetPublishedFilesForUser* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMGetPublishedFilesForUser::InternalSwap(CMsgClientUCMGetPublishedFilesForUser* other) {
  required_tags_.InternalSwap(&other->required_tags_);
  excluded_tags_.InternalSwap(&other->excluded_tags_);
  std::swap(creator_steam_id_, other->creator_steam_id_);
  std::swap(app_id_, other->app_id_);
  std::swap(start_index_, other->start_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMGetPublishedFilesForUser::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMGetPublishedFilesForUser

// optional uint32 app_id = 1;
bool CMsgClientUCMGetPublishedFilesForUser::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMGetPublishedFilesForUser::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMGetPublishedFilesForUser::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMGetPublishedFilesForUser::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientUCMGetPublishedFilesForUser::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMGetPublishedFilesForUser.app_id)
  return app_id_;
}
void CMsgClientUCMGetPublishedFilesForUser::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMGetPublishedFilesForUser.app_id)
}

// optional fixed64 creator_steam_id = 2;
bool CMsgClientUCMGetPublishedFilesForUser::has_creator_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMGetPublishedFilesForUser::set_has_creator_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMGetPublishedFilesForUser::clear_has_creator_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMGetPublishedFilesForUser::clear_creator_steam_id() {
  creator_steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_creator_steam_id();
}
::google::protobuf::uint64 CMsgClientUCMGetPublishedFilesForUser::creator_steam_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMGetPublishedFilesForUser.creator_steam_id)
  return creator_steam_id_;
}
void CMsgClientUCMGetPublishedFilesForUser::set_creator_steam_id(::google::protobuf::uint64 value) {
  set_has_creator_steam_id();
  creator_steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMGetPublishedFilesForUser.creator_steam_id)
}

// repeated string required_tags = 3;
int CMsgClientUCMGetPublishedFilesForUser::required_tags_size() const {
  return required_tags_.size();
}
void CMsgClientUCMGetPublishedFilesForUser::clear_required_tags() {
  required_tags_.Clear();
}
const ::std::string& CMsgClientUCMGetPublishedFilesForUser::required_tags(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags)
  return required_tags_.Get(index);
}
::std::string* CMsgClientUCMGetPublishedFilesForUser::mutable_required_tags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags)
  return required_tags_.Mutable(index);
}
void CMsgClientUCMGetPublishedFilesForUser::set_required_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags)
  required_tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CMsgClientUCMGetPublishedFilesForUser::set_required_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags)
  required_tags_.Mutable(index)->assign(std::move(value));
}
#endif
void CMsgClientUCMGetPublishedFilesForUser::set_required_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  required_tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags)
}
void CMsgClientUCMGetPublishedFilesForUser::set_required_tags(int index, const char* value, size_t size) {
  required_tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags)
}
::std::string* CMsgClientUCMGetPublishedFilesForUser::add_required_tags() {
  // @@protoc_insertion_point(field_add_mutable:proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags)
  return required_tags_.Add();
}
void CMsgClientUCMGetPublishedFilesForUser::add_required_tags(const ::std::string& value) {
  required_tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags)
}
#if LANG_CXX11
void CMsgClientUCMGetPublishedFilesForUser::add_required_tags(::std::string&& value) {
  required_tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags)
}
#endif
void CMsgClientUCMGetPublishedFilesForUser::add_required_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  required_tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags)
}
void CMsgClientUCMGetPublishedFilesForUser::add_required_tags(const char* value, size_t size) {
  required_tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgClientUCMGetPublishedFilesForUser::required_tags() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags)
  return required_tags_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgClientUCMGetPublishedFilesForUser::mutable_required_tags() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMGetPublishedFilesForUser.required_tags)
  return &required_tags_;
}

// repeated string excluded_tags = 4;
int CMsgClientUCMGetPublishedFilesForUser::excluded_tags_size() const {
  return excluded_tags_.size();
}
void CMsgClientUCMGetPublishedFilesForUser::clear_excluded_tags() {
  excluded_tags_.Clear();
}
const ::std::string& CMsgClientUCMGetPublishedFilesForUser::excluded_tags(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags)
  return excluded_tags_.Get(index);
}
::std::string* CMsgClientUCMGetPublishedFilesForUser::mutable_excluded_tags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags)
  return excluded_tags_.Mutable(index);
}
void CMsgClientUCMGetPublishedFilesForUser::set_excluded_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags)
  excluded_tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CMsgClientUCMGetPublishedFilesForUser::set_excluded_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags)
  excluded_tags_.Mutable(index)->assign(std::move(value));
}
#endif
void CMsgClientUCMGetPublishedFilesForUser::set_excluded_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  excluded_tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags)
}
void CMsgClientUCMGetPublishedFilesForUser::set_excluded_tags(int index, const char* value, size_t size) {
  excluded_tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags)
}
::std::string* CMsgClientUCMGetPublishedFilesForUser::add_excluded_tags() {
  // @@protoc_insertion_point(field_add_mutable:proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags)
  return excluded_tags_.Add();
}
void CMsgClientUCMGetPublishedFilesForUser::add_excluded_tags(const ::std::string& value) {
  excluded_tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags)
}
#if LANG_CXX11
void CMsgClientUCMGetPublishedFilesForUser::add_excluded_tags(::std::string&& value) {
  excluded_tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags)
}
#endif
void CMsgClientUCMGetPublishedFilesForUser::add_excluded_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  excluded_tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags)
}
void CMsgClientUCMGetPublishedFilesForUser::add_excluded_tags(const char* value, size_t size) {
  excluded_tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgClientUCMGetPublishedFilesForUser::excluded_tags() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags)
  return excluded_tags_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgClientUCMGetPublishedFilesForUser::mutable_excluded_tags() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMGetPublishedFilesForUser.excluded_tags)
  return &excluded_tags_;
}

// optional uint32 start_index = 5;
bool CMsgClientUCMGetPublishedFilesForUser::has_start_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUCMGetPublishedFilesForUser::set_has_start_index() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUCMGetPublishedFilesForUser::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUCMGetPublishedFilesForUser::clear_start_index() {
  start_index_ = 0u;
  clear_has_start_index();
}
::google::protobuf::uint32 CMsgClientUCMGetPublishedFilesForUser::start_index() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMGetPublishedFilesForUser.start_index)
  return start_index_;
}
void CMsgClientUCMGetPublishedFilesForUser::set_start_index(::google::protobuf::uint32 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMGetPublishedFilesForUser.start_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::kPublishedFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
}
CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId(const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  published_file_id_ = from.published_file_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::SharedCtor() {
  _cached_size_ = 0;
  published_file_id_ = GOOGLE_ULONGLONG(0);
}

CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::~CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId& CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* n = new CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  published_file_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  return false;
#undef DO_
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 published_file_id = 1;
  if (has_published_file_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::MergeFrom(const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_published_file_id()) {
    set_published_file_id(from.published_file_id());
  }
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::CopyFrom(const CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::Swap(CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::InternalSwap(CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId

// optional fixed64 published_file_id = 1;
bool CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId.published_file_id)
  return published_file_id_;
}
void CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId.published_file_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMGetPublishedFilesForUserResponse::kEresultFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUserResponse::kPublishedFilesFieldNumber;
const int CMsgClientUCMGetPublishedFilesForUserResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMGetPublishedFilesForUserResponse::CMsgClientUCMGetPublishedFilesForUserResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
}
CMsgClientUCMGetPublishedFilesForUserResponse::CMsgClientUCMGetPublishedFilesForUserResponse(const CMsgClientUCMGetPublishedFilesForUserResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      published_files_(from.published_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
}

void CMsgClientUCMGetPublishedFilesForUserResponse::SharedCtor() {
  _cached_size_ = 0;
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMGetPublishedFilesForUserResponse::~CMsgClientUCMGetPublishedFilesForUserResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  SharedDtor();
}

void CMsgClientUCMGetPublishedFilesForUserResponse::SharedDtor() {
}

void CMsgClientUCMGetPublishedFilesForUserResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMGetPublishedFilesForUserResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMGetPublishedFilesForUserResponse& CMsgClientUCMGetPublishedFilesForUserResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMGetPublishedFilesForUserResponse* CMsgClientUCMGetPublishedFilesForUserResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMGetPublishedFilesForUserResponse* n = new CMsgClientUCMGetPublishedFilesForUserResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMGetPublishedFilesForUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  published_files_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMGetPublishedFilesForUserResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_published_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_total_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  return false;
#undef DO_
}

void CMsgClientUCMGetPublishedFilesForUserResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0, n = this->published_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->published_files(i), output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
}

::google::protobuf::uint8* CMsgClientUCMGetPublishedFilesForUserResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0, n = this->published_files_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->published_files(i), deterministic, target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  return target;
}

size_t CMsgClientUCMGetPublishedFilesForUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId published_files = 2;
  {
    unsigned int count = this->published_files_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->published_files(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_results = 3;
    if (has_total_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMGetPublishedFilesForUserResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMGetPublishedFilesForUserResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMGetPublishedFilesForUserResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMGetPublishedFilesForUserResponse::MergeFrom(const CMsgClientUCMGetPublishedFilesForUserResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_files_.MergeFrom(from.published_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMGetPublishedFilesForUserResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMGetPublishedFilesForUserResponse::CopyFrom(const CMsgClientUCMGetPublishedFilesForUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMGetPublishedFilesForUserResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMGetPublishedFilesForUserResponse::Swap(CMsgClientUCMGetPublishedFilesForUserResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMGetPublishedFilesForUserResponse::InternalSwap(CMsgClientUCMGetPublishedFilesForUserResponse* other) {
  published_files_.InternalSwap(&other->published_files_);
  std::swap(total_results_, other->total_results_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMGetPublishedFilesForUserResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMGetPublishedFilesForUserResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientUCMGetPublishedFilesForUserResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMGetPublishedFilesForUserResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMGetPublishedFilesForUserResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMGetPublishedFilesForUserResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientUCMGetPublishedFilesForUserResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.eresult)
  return eresult_;
}
void CMsgClientUCMGetPublishedFilesForUserResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.eresult)
}

// repeated .proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.PublishedFileId published_files = 2;
int CMsgClientUCMGetPublishedFilesForUserResponse::published_files_size() const {
  return published_files_.size();
}
void CMsgClientUCMGetPublishedFilesForUserResponse::clear_published_files() {
  published_files_.Clear();
}
const ::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId& CMsgClientUCMGetPublishedFilesForUserResponse::published_files(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.published_files)
  return published_files_.Get(index);
}
::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* CMsgClientUCMGetPublishedFilesForUserResponse::mutable_published_files(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.published_files)
  return published_files_.Mutable(index);
}
::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId* CMsgClientUCMGetPublishedFilesForUserResponse::add_published_files() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.published_files)
  return published_files_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId >*
CMsgClientUCMGetPublishedFilesForUserResponse::mutable_published_files() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.published_files)
  return &published_files_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMGetPublishedFilesForUserResponse_PublishedFileId >&
CMsgClientUCMGetPublishedFilesForUserResponse::published_files() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.published_files)
  return published_files_;
}

// optional uint32 total_results = 3;
bool CMsgClientUCMGetPublishedFilesForUserResponse::has_total_results() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMGetPublishedFilesForUserResponse::set_has_total_results() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMGetPublishedFilesForUserResponse::clear_has_total_results() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMGetPublishedFilesForUserResponse::clear_total_results() {
  total_results_ = 0u;
  clear_has_total_results();
}
::google::protobuf::uint32 CMsgClientUCMGetPublishedFilesForUserResponse::total_results() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.total_results)
  return total_results_;
}
void CMsgClientUCMGetPublishedFilesForUserResponse::set_total_results(::google::protobuf::uint32 value) {
  set_has_total_results();
  total_results_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMGetPublishedFilesForUserResponse.total_results)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMSetUserPublishedFileAction::kPublishedFileIdFieldNumber;
const int CMsgClientUCMSetUserPublishedFileAction::kAppIdFieldNumber;
const int CMsgClientUCMSetUserPublishedFileAction::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMSetUserPublishedFileAction::CMsgClientUCMSetUserPublishedFileAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
}
CMsgClientUCMSetUserPublishedFileAction::CMsgClientUCMSetUserPublishedFileAction(const CMsgClientUCMSetUserPublishedFileAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
}

void CMsgClientUCMSetUserPublishedFileAction::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(action_));
}

CMsgClientUCMSetUserPublishedFileAction::~CMsgClientUCMSetUserPublishedFileAction() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  SharedDtor();
}

void CMsgClientUCMSetUserPublishedFileAction::SharedDtor() {
}

void CMsgClientUCMSetUserPublishedFileAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMSetUserPublishedFileAction::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMSetUserPublishedFileAction& CMsgClientUCMSetUserPublishedFileAction::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMSetUserPublishedFileAction* CMsgClientUCMSetUserPublishedFileAction::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMSetUserPublishedFileAction* n = new CMsgClientUCMSetUserPublishedFileAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMSetUserPublishedFileAction::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMSetUserPublishedFileAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  return false;
#undef DO_
}

void CMsgClientUCMSetUserPublishedFileAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
}

::google::protobuf::uint8* CMsgClientUCMSetUserPublishedFileAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  return target;
}

size_t CMsgClientUCMSetUserPublishedFileAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 action = 3;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMSetUserPublishedFileAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMSetUserPublishedFileAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMSetUserPublishedFileAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
    MergeFrom(*source);
  }
}

void CMsgClientUCMSetUserPublishedFileAction::MergeFrom(const CMsgClientUCMSetUserPublishedFileAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMSetUserPublishedFileAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMSetUserPublishedFileAction::CopyFrom(const CMsgClientUCMSetUserPublishedFileAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMSetUserPublishedFileAction::IsInitialized() const {
  return true;
}

void CMsgClientUCMSetUserPublishedFileAction::Swap(CMsgClientUCMSetUserPublishedFileAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMSetUserPublishedFileAction::InternalSwap(CMsgClientUCMSetUserPublishedFileAction* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(app_id_, other->app_id_);
  std::swap(action_, other->action_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMSetUserPublishedFileAction::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMSetUserPublishedFileAction

// optional fixed64 published_file_id = 1;
bool CMsgClientUCMSetUserPublishedFileAction::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMSetUserPublishedFileAction::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMSetUserPublishedFileAction::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMSetUserPublishedFileAction::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientUCMSetUserPublishedFileAction::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMSetUserPublishedFileAction.published_file_id)
  return published_file_id_;
}
void CMsgClientUCMSetUserPublishedFileAction::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMSetUserPublishedFileAction.published_file_id)
}

// optional uint32 app_id = 2;
bool CMsgClientUCMSetUserPublishedFileAction::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMSetUserPublishedFileAction::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMSetUserPublishedFileAction::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMSetUserPublishedFileAction::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientUCMSetUserPublishedFileAction::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMSetUserPublishedFileAction.app_id)
  return app_id_;
}
void CMsgClientUCMSetUserPublishedFileAction::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMSetUserPublishedFileAction.app_id)
}

// optional int32 action = 3;
bool CMsgClientUCMSetUserPublishedFileAction::has_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUCMSetUserPublishedFileAction::set_has_action() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUCMSetUserPublishedFileAction::clear_has_action() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUCMSetUserPublishedFileAction::clear_action() {
  action_ = 0;
  clear_has_action();
}
::google::protobuf::int32 CMsgClientUCMSetUserPublishedFileAction::action() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMSetUserPublishedFileAction.action)
  return action_;
}
void CMsgClientUCMSetUserPublishedFileAction::set_action(::google::protobuf::int32 value) {
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMSetUserPublishedFileAction.action)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMSetUserPublishedFileActionResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMSetUserPublishedFileActionResponse::CMsgClientUCMSetUserPublishedFileActionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
}
CMsgClientUCMSetUserPublishedFileActionResponse::CMsgClientUCMSetUserPublishedFileActionResponse(const CMsgClientUCMSetUserPublishedFileActionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
}

void CMsgClientUCMSetUserPublishedFileActionResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
}

CMsgClientUCMSetUserPublishedFileActionResponse::~CMsgClientUCMSetUserPublishedFileActionResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  SharedDtor();
}

void CMsgClientUCMSetUserPublishedFileActionResponse::SharedDtor() {
}

void CMsgClientUCMSetUserPublishedFileActionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMSetUserPublishedFileActionResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMSetUserPublishedFileActionResponse& CMsgClientUCMSetUserPublishedFileActionResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMSetUserPublishedFileActionResponse* CMsgClientUCMSetUserPublishedFileActionResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMSetUserPublishedFileActionResponse* n = new CMsgClientUCMSetUserPublishedFileActionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMSetUserPublishedFileActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMSetUserPublishedFileActionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  return false;
#undef DO_
}

void CMsgClientUCMSetUserPublishedFileActionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
}

::google::protobuf::uint8* CMsgClientUCMSetUserPublishedFileActionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  return target;
}

size_t CMsgClientUCMSetUserPublishedFileActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMSetUserPublishedFileActionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMSetUserPublishedFileActionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMSetUserPublishedFileActionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMSetUserPublishedFileActionResponse::MergeFrom(const CMsgClientUCMSetUserPublishedFileActionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientUCMSetUserPublishedFileActionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMSetUserPublishedFileActionResponse::CopyFrom(const CMsgClientUCMSetUserPublishedFileActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMSetUserPublishedFileActionResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMSetUserPublishedFileActionResponse::Swap(CMsgClientUCMSetUserPublishedFileActionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMSetUserPublishedFileActionResponse::InternalSwap(CMsgClientUCMSetUserPublishedFileActionResponse* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMSetUserPublishedFileActionResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMSetUserPublishedFileActionResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientUCMSetUserPublishedFileActionResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMSetUserPublishedFileActionResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMSetUserPublishedFileActionResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMSetUserPublishedFileActionResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientUCMSetUserPublishedFileActionResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse.eresult)
  return eresult_;
}
void CMsgClientUCMSetUserPublishedFileActionResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMSetUserPublishedFileActionResponse.eresult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumeratePublishedFilesByUserAction::kAppIdFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserAction::kStartIndexFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserAction::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumeratePublishedFilesByUserAction::CMsgClientUCMEnumeratePublishedFilesByUserAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
}
CMsgClientUCMEnumeratePublishedFilesByUserAction::CMsgClientUCMEnumeratePublishedFilesByUserAction(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(action_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&action_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(action_));
}

CMsgClientUCMEnumeratePublishedFilesByUserAction::~CMsgClientUCMEnumeratePublishedFilesByUserAction() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  SharedDtor();
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::SharedDtor() {
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumeratePublishedFilesByUserAction::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumeratePublishedFilesByUserAction& CMsgClientUCMEnumeratePublishedFilesByUserAction::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMEnumeratePublishedFilesByUserAction* CMsgClientUCMEnumeratePublishedFilesByUserAction::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMEnumeratePublishedFilesByUserAction* n = new CMsgClientUCMEnumeratePublishedFilesByUserAction;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&app_id_, 0, reinterpret_cast<char*>(&action_) -
      reinterpret_cast<char*>(&app_id_) + sizeof(action_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumeratePublishedFilesByUserAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_start_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 action = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  return false;
#undef DO_
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->start_index(), output);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
}

::google::protobuf::uint8* CMsgClientUCMEnumeratePublishedFilesByUserAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 start_index = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->start_index(), target);
  }

  // optional int32 action = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  return target;
}

size_t CMsgClientUCMEnumeratePublishedFilesByUserAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 start_index = 2;
    if (has_start_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional int32 action = 3;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->action());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumeratePublishedFilesByUserAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumeratePublishedFilesByUserAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000004u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumeratePublishedFilesByUserAction::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumeratePublishedFilesByUserAction::Swap(CMsgClientUCMEnumeratePublishedFilesByUserAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserAction* other) {
  std::swap(app_id_, other->app_id_);
  std::swap(start_index_, other->start_index_);
  std::swap(action_, other->action_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMEnumeratePublishedFilesByUserAction::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMEnumeratePublishedFilesByUserAction

// optional uint32 app_id = 1;
bool CMsgClientUCMEnumeratePublishedFilesByUserAction::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientUCMEnumeratePublishedFilesByUserAction::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction.app_id)
  return app_id_;
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction.app_id)
}

// optional uint32 start_index = 2;
bool CMsgClientUCMEnumeratePublishedFilesByUserAction::has_start_index() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::set_has_start_index() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::clear_start_index() {
  start_index_ = 0u;
  clear_has_start_index();
}
::google::protobuf::uint32 CMsgClientUCMEnumeratePublishedFilesByUserAction::start_index() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction.start_index)
  return start_index_;
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::set_start_index(::google::protobuf::uint32 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction.start_index)
}

// optional int32 action = 3;
bool CMsgClientUCMEnumeratePublishedFilesByUserAction::has_action() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::set_has_action() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::clear_has_action() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::clear_action() {
  action_ = 0;
  clear_has_action();
}
::google::protobuf::int32 CMsgClientUCMEnumeratePublishedFilesByUserAction::action() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction.action)
  return action_;
}
void CMsgClientUCMEnumeratePublishedFilesByUserAction::set_action(::google::protobuf::int32 value) {
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserAction.action)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::kPublishedFileIdFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::kRtimeTimeStampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
}
CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&rtime_time_stamp_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(rtime_time_stamp_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&rtime_time_stamp_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(rtime_time_stamp_));
}

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::~CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  SharedDtor();
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SharedDtor() {
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* n = new CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&rtime_time_stamp_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(rtime_time_stamp_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 rtime_time_stamp = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {
          set_has_rtime_time_stamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &rtime_time_stamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  return false;
#undef DO_
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional fixed32 rtime_time_stamp = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->rtime_time_stamp(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional fixed32 rtime_time_stamp = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->rtime_time_stamp(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  return target;
}

size_t CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional fixed32 rtime_time_stamp = 2 [default = 0];
    if (has_rtime_time_stamp()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      rtime_time_stamp_ = from.rtime_time_stamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::Swap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(rtime_time_stamp_, other->rtime_time_stamp_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId

// optional fixed64 published_file_id = 1;
bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId.published_file_id)
  return published_file_id_;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId.published_file_id)
}

// optional fixed32 rtime_time_stamp = 2 [default = 0];
bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::has_rtime_time_stamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::set_has_rtime_time_stamp() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::clear_has_rtime_time_stamp() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::clear_rtime_time_stamp() {
  rtime_time_stamp_ = 0u;
  clear_has_rtime_time_stamp();
}
::google::protobuf::uint32 CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::rtime_time_stamp() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId.rtime_time_stamp)
  return rtime_time_stamp_;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId::set_rtime_time_stamp(::google::protobuf::uint32 value) {
  set_has_rtime_time_stamp();
  rtime_time_stamp_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId.rtime_time_stamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::kEresultFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::kPublishedFilesFieldNumber;
const int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
}
CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      published_files_(from.published_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SharedCtor() {
  _cached_size_ = 0;
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::~CMsgClientUCMEnumeratePublishedFilesByUserActionResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  SharedDtor();
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SharedDtor() {
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* n = new CMsgClientUCMEnumeratePublishedFilesByUserActionResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  published_files_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_published_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_total_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  return false;
#undef DO_
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0, n = this->published_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->published_files(i), output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
}

::google::protobuf::uint8* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0, n = this->published_files_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->published_files(i), deterministic, target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  return target;
}

size_t CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
  {
    unsigned int count = this->published_files_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->published_files(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_results = 3;
    if (has_total_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::MergeFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_files_.MergeFrom(from.published_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::CopyFrom(const CMsgClientUCMEnumeratePublishedFilesByUserActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::IsInitialized() const {
  return true;
}

void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::Swap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::InternalSwap(CMsgClientUCMEnumeratePublishedFilesByUserActionResponse* other) {
  published_files_.InternalSwap(&other->published_files_);
  std::swap(total_results_, other->total_results_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUCMEnumeratePublishedFilesByUserActionResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.eresult)
  return eresult_;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.eresult)
}

// repeated .proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.PublishedFileId published_files = 2;
int CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::published_files_size() const {
  return published_files_.size();
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::clear_published_files() {
  published_files_.Clear();
}
const ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId& CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::published_files(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.published_files)
  return published_files_.Get(index);
}
::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::mutable_published_files(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.published_files)
  return published_files_.Mutable(index);
}
::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId* CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::add_published_files() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.published_files)
  return published_files_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId >*
CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::mutable_published_files() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.published_files)
  return &published_files_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUCMEnumeratePublishedFilesByUserActionResponse_PublishedFileId >&
CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::published_files() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.published_files)
  return published_files_;
}

// optional uint32 total_results = 3;
bool CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::has_total_results() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::set_has_total_results() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::clear_has_total_results() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::clear_total_results() {
  total_results_ = 0u;
  clear_has_total_results();
}
::google::protobuf::uint32 CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::total_results() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.total_results)
  return total_results_;
}
void CMsgClientUCMEnumeratePublishedFilesByUserActionResponse::set_total_results(::google::protobuf::uint32 value) {
  set_has_total_results();
  total_results_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUCMEnumeratePublishedFilesByUserActionResponse.total_results)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientScreenshotsChanged::CMsgClientScreenshotsChanged()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientScreenshotsChanged)
}
CMsgClientScreenshotsChanged::CMsgClientScreenshotsChanged(const CMsgClientScreenshotsChanged& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientScreenshotsChanged)
}

void CMsgClientScreenshotsChanged::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientScreenshotsChanged::~CMsgClientScreenshotsChanged() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientScreenshotsChanged)
  SharedDtor();
}

void CMsgClientScreenshotsChanged::SharedDtor() {
}

void CMsgClientScreenshotsChanged::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientScreenshotsChanged::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientScreenshotsChanged& CMsgClientScreenshotsChanged::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientScreenshotsChanged* CMsgClientScreenshotsChanged::New(::google::protobuf::Arena* arena) const {
  CMsgClientScreenshotsChanged* n = new CMsgClientScreenshotsChanged;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientScreenshotsChanged::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientScreenshotsChanged)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientScreenshotsChanged::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientScreenshotsChanged)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientScreenshotsChanged)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientScreenshotsChanged)
  return false;
#undef DO_
}

void CMsgClientScreenshotsChanged::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientScreenshotsChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientScreenshotsChanged)
}

::google::protobuf::uint8* CMsgClientScreenshotsChanged::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientScreenshotsChanged)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientScreenshotsChanged)
  return target;
}

size_t CMsgClientScreenshotsChanged::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientScreenshotsChanged)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientScreenshotsChanged::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientScreenshotsChanged)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientScreenshotsChanged* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientScreenshotsChanged>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientScreenshotsChanged)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientScreenshotsChanged)
    MergeFrom(*source);
  }
}

void CMsgClientScreenshotsChanged::MergeFrom(const CMsgClientScreenshotsChanged& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientScreenshotsChanged)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientScreenshotsChanged::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientScreenshotsChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientScreenshotsChanged::CopyFrom(const CMsgClientScreenshotsChanged& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientScreenshotsChanged)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientScreenshotsChanged::IsInitialized() const {
  return true;
}

void CMsgClientScreenshotsChanged::Swap(CMsgClientScreenshotsChanged* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientScreenshotsChanged::InternalSwap(CMsgClientScreenshotsChanged* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientScreenshotsChanged::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientScreenshotsChanged

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUpdateUserGameInfo::kSteamidIdgsFieldNumber;
const int CMsgClientUpdateUserGameInfo::kGameidFieldNumber;
const int CMsgClientUpdateUserGameInfo::kGameIpFieldNumber;
const int CMsgClientUpdateUserGameInfo::kGamePortFieldNumber;
const int CMsgClientUpdateUserGameInfo::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUpdateUserGameInfo::CMsgClientUpdateUserGameInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUpdateUserGameInfo)
}
CMsgClientUpdateUserGameInfo::CMsgClientUpdateUserGameInfo(const CMsgClientUpdateUserGameInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&steamid_idgs_, &from.steamid_idgs_,
    reinterpret_cast<char*>(&game_port_) -
    reinterpret_cast<char*>(&steamid_idgs_) + sizeof(game_port_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUpdateUserGameInfo)
}

void CMsgClientUpdateUserGameInfo::SharedCtor() {
  _cached_size_ = 0;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steamid_idgs_, 0, reinterpret_cast<char*>(&game_port_) -
    reinterpret_cast<char*>(&steamid_idgs_) + sizeof(game_port_));
}

CMsgClientUpdateUserGameInfo::~CMsgClientUpdateUserGameInfo() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUpdateUserGameInfo)
  SharedDtor();
}

void CMsgClientUpdateUserGameInfo::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUpdateUserGameInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUpdateUserGameInfo::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUpdateUserGameInfo& CMsgClientUpdateUserGameInfo::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUpdateUserGameInfo* CMsgClientUpdateUserGameInfo::New(::google::protobuf::Arena* arena) const {
  CMsgClientUpdateUserGameInfo* n = new CMsgClientUpdateUserGameInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUpdateUserGameInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUpdateUserGameInfo)
  if (has_token()) {
    GOOGLE_DCHECK(!token_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*token_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 30u) {
    ::memset(&steamid_idgs_, 0, reinterpret_cast<char*>(&game_port_) -
      reinterpret_cast<char*>(&steamid_idgs_) + sizeof(game_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUpdateUserGameInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUpdateUserGameInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_idgs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steamid_idgs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_idgs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 gameid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_gameid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_game_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_game_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes token = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUpdateUserGameInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUpdateUserGameInfo)
  return false;
#undef DO_
}

void CMsgClientUpdateUserGameInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUpdateUserGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_idgs = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_idgs(), output);
  }

  // optional fixed64 gameid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->gameid(), output);
  }

  // optional uint32 game_ip = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->game_ip(), output);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->game_port(), output);
  }

  // optional bytes token = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUpdateUserGameInfo)
}

::google::protobuf::uint8* CMsgClientUpdateUserGameInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUpdateUserGameInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_idgs = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_idgs(), target);
  }

  // optional fixed64 gameid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->gameid(), target);
  }

  // optional uint32 game_ip = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->game_ip(), target);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->game_port(), target);
  }

  // optional bytes token = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUpdateUserGameInfo)
  return target;
}

size_t CMsgClientUpdateUserGameInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUpdateUserGameInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes token = 5;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token());
    }

    // optional fixed64 steamid_idgs = 1;
    if (has_steamid_idgs()) {
      total_size += 1 + 8;
    }

    // optional fixed64 gameid = 2;
    if (has_gameid()) {
      total_size += 1 + 8;
    }

    // optional uint32 game_ip = 3;
    if (has_game_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_ip());
    }

    // optional uint32 game_port = 4;
    if (has_game_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUpdateUserGameInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUpdateUserGameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUpdateUserGameInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUpdateUserGameInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUpdateUserGameInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUpdateUserGameInfo)
    MergeFrom(*source);
  }
}

void CMsgClientUpdateUserGameInfo::MergeFrom(const CMsgClientUpdateUserGameInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUpdateUserGameInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_idgs_ = from.steamid_idgs_;
    }
    if (cached_has_bits & 0x00000004u) {
      gameid_ = from.gameid_;
    }
    if (cached_has_bits & 0x00000008u) {
      game_ip_ = from.game_ip_;
    }
    if (cached_has_bits & 0x00000010u) {
      game_port_ = from.game_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUpdateUserGameInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUpdateUserGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUpdateUserGameInfo::CopyFrom(const CMsgClientUpdateUserGameInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUpdateUserGameInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUpdateUserGameInfo::IsInitialized() const {
  return true;
}

void CMsgClientUpdateUserGameInfo::Swap(CMsgClientUpdateUserGameInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUpdateUserGameInfo::InternalSwap(CMsgClientUpdateUserGameInfo* other) {
  token_.Swap(&other->token_);
  std::swap(steamid_idgs_, other->steamid_idgs_);
  std::swap(gameid_, other->gameid_);
  std::swap(game_ip_, other->game_ip_);
  std::swap(game_port_, other->game_port_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUpdateUserGameInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUpdateUserGameInfo

// optional fixed64 steamid_idgs = 1;
bool CMsgClientUpdateUserGameInfo::has_steamid_idgs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUpdateUserGameInfo::set_has_steamid_idgs() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUpdateUserGameInfo::clear_has_steamid_idgs() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUpdateUserGameInfo::clear_steamid_idgs() {
  steamid_idgs_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_idgs();
}
::google::protobuf::uint64 CMsgClientUpdateUserGameInfo::steamid_idgs() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateUserGameInfo.steamid_idgs)
  return steamid_idgs_;
}
void CMsgClientUpdateUserGameInfo::set_steamid_idgs(::google::protobuf::uint64 value) {
  set_has_steamid_idgs();
  steamid_idgs_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateUserGameInfo.steamid_idgs)
}

// optional fixed64 gameid = 2;
bool CMsgClientUpdateUserGameInfo::has_gameid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUpdateUserGameInfo::set_has_gameid() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUpdateUserGameInfo::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUpdateUserGameInfo::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
  clear_has_gameid();
}
::google::protobuf::uint64 CMsgClientUpdateUserGameInfo::gameid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateUserGameInfo.gameid)
  return gameid_;
}
void CMsgClientUpdateUserGameInfo::set_gameid(::google::protobuf::uint64 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateUserGameInfo.gameid)
}

// optional uint32 game_ip = 3;
bool CMsgClientUpdateUserGameInfo::has_game_ip() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientUpdateUserGameInfo::set_has_game_ip() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientUpdateUserGameInfo::clear_has_game_ip() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientUpdateUserGameInfo::clear_game_ip() {
  game_ip_ = 0u;
  clear_has_game_ip();
}
::google::protobuf::uint32 CMsgClientUpdateUserGameInfo::game_ip() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateUserGameInfo.game_ip)
  return game_ip_;
}
void CMsgClientUpdateUserGameInfo::set_game_ip(::google::protobuf::uint32 value) {
  set_has_game_ip();
  game_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateUserGameInfo.game_ip)
}

// optional uint32 game_port = 4;
bool CMsgClientUpdateUserGameInfo::has_game_port() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientUpdateUserGameInfo::set_has_game_port() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientUpdateUserGameInfo::clear_has_game_port() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientUpdateUserGameInfo::clear_game_port() {
  game_port_ = 0u;
  clear_has_game_port();
}
::google::protobuf::uint32 CMsgClientUpdateUserGameInfo::game_port() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateUserGameInfo.game_port)
  return game_port_;
}
void CMsgClientUpdateUserGameInfo::set_game_port(::google::protobuf::uint32 value) {
  set_has_game_port();
  game_port_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateUserGameInfo.game_port)
}

// optional bytes token = 5;
bool CMsgClientUpdateUserGameInfo::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUpdateUserGameInfo::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUpdateUserGameInfo::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUpdateUserGameInfo::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
const ::std::string& CMsgClientUpdateUserGameInfo::token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateUserGameInfo.token)
  return token_.GetNoArena();
}
void CMsgClientUpdateUserGameInfo::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateUserGameInfo.token)
}
#if LANG_CXX11
void CMsgClientUpdateUserGameInfo::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUpdateUserGameInfo.token)
}
#endif
void CMsgClientUpdateUserGameInfo::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUpdateUserGameInfo.token)
}
void CMsgClientUpdateUserGameInfo::set_token(const void* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUpdateUserGameInfo.token)
}
::std::string* CMsgClientUpdateUserGameInfo::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUpdateUserGameInfo.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUpdateUserGameInfo::release_token() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUpdateUserGameInfo.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUpdateUserGameInfo::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUpdateUserGameInfo.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRichPresenceUpload::kRichPresenceKvFieldNumber;
const int CMsgClientRichPresenceUpload::kSteamidBroadcastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRichPresenceUpload::CMsgClientRichPresenceUpload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRichPresenceUpload)
}
CMsgClientRichPresenceUpload::CMsgClientRichPresenceUpload(const CMsgClientRichPresenceUpload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      steamid_broadcast_(from.steamid_broadcast_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rich_presence_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rich_presence_kv()) {
    rich_presence_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rich_presence_kv_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRichPresenceUpload)
}

void CMsgClientRichPresenceUpload::SharedCtor() {
  _cached_size_ = 0;
  rich_presence_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientRichPresenceUpload::~CMsgClientRichPresenceUpload() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRichPresenceUpload)
  SharedDtor();
}

void CMsgClientRichPresenceUpload::SharedDtor() {
  rich_presence_kv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRichPresenceUpload::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRichPresenceUpload::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRichPresenceUpload& CMsgClientRichPresenceUpload::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRichPresenceUpload* CMsgClientRichPresenceUpload::New(::google::protobuf::Arena* arena) const {
  CMsgClientRichPresenceUpload* n = new CMsgClientRichPresenceUpload;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRichPresenceUpload::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRichPresenceUpload)
  steamid_broadcast_.Clear();
  if (has_rich_presence_kv()) {
    GOOGLE_DCHECK(!rich_presence_kv_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*rich_presence_kv_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRichPresenceUpload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRichPresenceUpload)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes rich_presence_kv = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rich_presence_kv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 steamid_broadcast = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 17u, input, this->mutable_steamid_broadcast())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamid_broadcast())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRichPresenceUpload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRichPresenceUpload)
  return false;
#undef DO_
}

void CMsgClientRichPresenceUpload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRichPresenceUpload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes rich_presence_kv = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->rich_presence_kv(), output);
  }

  // repeated fixed64 steamid_broadcast = 2;
  for (int i = 0, n = this->steamid_broadcast_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      2, this->steamid_broadcast(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRichPresenceUpload)
}

::google::protobuf::uint8* CMsgClientRichPresenceUpload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRichPresenceUpload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes rich_presence_kv = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->rich_presence_kv(), target);
  }

  // repeated fixed64 steamid_broadcast = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(2, this->steamid_broadcast_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRichPresenceUpload)
  return target;
}

size_t CMsgClientRichPresenceUpload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRichPresenceUpload)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated fixed64 steamid_broadcast = 2;
  {
    unsigned int count = this->steamid_broadcast_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamid_broadcast_size());
    total_size += data_size;
  }

  // optional bytes rich_presence_kv = 1;
  if (has_rich_presence_kv()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->rich_presence_kv());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRichPresenceUpload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRichPresenceUpload)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRichPresenceUpload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRichPresenceUpload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRichPresenceUpload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRichPresenceUpload)
    MergeFrom(*source);
  }
}

void CMsgClientRichPresenceUpload::MergeFrom(const CMsgClientRichPresenceUpload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRichPresenceUpload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steamid_broadcast_.MergeFrom(from.steamid_broadcast_);
  if (from.has_rich_presence_kv()) {
    set_has_rich_presence_kv();
    rich_presence_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rich_presence_kv_);
  }
}

void CMsgClientRichPresenceUpload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRichPresenceUpload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRichPresenceUpload::CopyFrom(const CMsgClientRichPresenceUpload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRichPresenceUpload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRichPresenceUpload::IsInitialized() const {
  return true;
}

void CMsgClientRichPresenceUpload::Swap(CMsgClientRichPresenceUpload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRichPresenceUpload::InternalSwap(CMsgClientRichPresenceUpload* other) {
  steamid_broadcast_.InternalSwap(&other->steamid_broadcast_);
  rich_presence_kv_.Swap(&other->rich_presence_kv_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRichPresenceUpload::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRichPresenceUpload

// optional bytes rich_presence_kv = 1;
bool CMsgClientRichPresenceUpload::has_rich_presence_kv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientRichPresenceUpload::set_has_rich_presence_kv() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientRichPresenceUpload::clear_has_rich_presence_kv() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientRichPresenceUpload::clear_rich_presence_kv() {
  rich_presence_kv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rich_presence_kv();
}
const ::std::string& CMsgClientRichPresenceUpload::rich_presence_kv() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRichPresenceUpload.rich_presence_kv)
  return rich_presence_kv_.GetNoArena();
}
void CMsgClientRichPresenceUpload::set_rich_presence_kv(const ::std::string& value) {
  set_has_rich_presence_kv();
  rich_presence_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRichPresenceUpload.rich_presence_kv)
}
#if LANG_CXX11
void CMsgClientRichPresenceUpload::set_rich_presence_kv(::std::string&& value) {
  set_has_rich_presence_kv();
  rich_presence_kv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRichPresenceUpload.rich_presence_kv)
}
#endif
void CMsgClientRichPresenceUpload::set_rich_presence_kv(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_rich_presence_kv();
  rich_presence_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRichPresenceUpload.rich_presence_kv)
}
void CMsgClientRichPresenceUpload::set_rich_presence_kv(const void* value, size_t size) {
  set_has_rich_presence_kv();
  rich_presence_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRichPresenceUpload.rich_presence_kv)
}
::std::string* CMsgClientRichPresenceUpload::mutable_rich_presence_kv() {
  set_has_rich_presence_kv();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRichPresenceUpload.rich_presence_kv)
  return rich_presence_kv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRichPresenceUpload::release_rich_presence_kv() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRichPresenceUpload.rich_presence_kv)
  clear_has_rich_presence_kv();
  return rich_presence_kv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRichPresenceUpload::set_allocated_rich_presence_kv(::std::string* rich_presence_kv) {
  if (rich_presence_kv != NULL) {
    set_has_rich_presence_kv();
  } else {
    clear_has_rich_presence_kv();
  }
  rich_presence_kv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rich_presence_kv);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRichPresenceUpload.rich_presence_kv)
}

// repeated fixed64 steamid_broadcast = 2;
int CMsgClientRichPresenceUpload::steamid_broadcast_size() const {
  return steamid_broadcast_.size();
}
void CMsgClientRichPresenceUpload::clear_steamid_broadcast() {
  steamid_broadcast_.Clear();
}
::google::protobuf::uint64 CMsgClientRichPresenceUpload::steamid_broadcast(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRichPresenceUpload.steamid_broadcast)
  return steamid_broadcast_.Get(index);
}
void CMsgClientRichPresenceUpload::set_steamid_broadcast(int index, ::google::protobuf::uint64 value) {
  steamid_broadcast_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRichPresenceUpload.steamid_broadcast)
}
void CMsgClientRichPresenceUpload::add_steamid_broadcast(::google::protobuf::uint64 value) {
  steamid_broadcast_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientRichPresenceUpload.steamid_broadcast)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientRichPresenceUpload::steamid_broadcast() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientRichPresenceUpload.steamid_broadcast)
  return steamid_broadcast_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientRichPresenceUpload::mutable_steamid_broadcast() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientRichPresenceUpload.steamid_broadcast)
  return &steamid_broadcast_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRichPresenceRequest::kSteamidRequestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRichPresenceRequest::CMsgClientRichPresenceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRichPresenceRequest)
}
CMsgClientRichPresenceRequest::CMsgClientRichPresenceRequest(const CMsgClientRichPresenceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      steamid_request_(from.steamid_request_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRichPresenceRequest)
}

void CMsgClientRichPresenceRequest::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientRichPresenceRequest::~CMsgClientRichPresenceRequest() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRichPresenceRequest)
  SharedDtor();
}

void CMsgClientRichPresenceRequest::SharedDtor() {
}

void CMsgClientRichPresenceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRichPresenceRequest::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRichPresenceRequest& CMsgClientRichPresenceRequest::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRichPresenceRequest* CMsgClientRichPresenceRequest::New(::google::protobuf::Arena* arena) const {
  CMsgClientRichPresenceRequest* n = new CMsgClientRichPresenceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRichPresenceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRichPresenceRequest)
  steamid_request_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRichPresenceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRichPresenceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated fixed64 steamid_request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 9u, input, this->mutable_steamid_request())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steamid_request())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRichPresenceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRichPresenceRequest)
  return false;
#undef DO_
}

void CMsgClientRichPresenceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRichPresenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 steamid_request = 1;
  for (int i = 0, n = this->steamid_request_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      1, this->steamid_request(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRichPresenceRequest)
}

::google::protobuf::uint8* CMsgClientRichPresenceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRichPresenceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated fixed64 steamid_request = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(1, this->steamid_request_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRichPresenceRequest)
  return target;
}

size_t CMsgClientRichPresenceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRichPresenceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated fixed64 steamid_request = 1;
  {
    unsigned int count = this->steamid_request_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamid_request_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRichPresenceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRichPresenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRichPresenceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRichPresenceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRichPresenceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRichPresenceRequest)
    MergeFrom(*source);
  }
}

void CMsgClientRichPresenceRequest::MergeFrom(const CMsgClientRichPresenceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRichPresenceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steamid_request_.MergeFrom(from.steamid_request_);
}

void CMsgClientRichPresenceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRichPresenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRichPresenceRequest::CopyFrom(const CMsgClientRichPresenceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRichPresenceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRichPresenceRequest::IsInitialized() const {
  return true;
}

void CMsgClientRichPresenceRequest::Swap(CMsgClientRichPresenceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRichPresenceRequest::InternalSwap(CMsgClientRichPresenceRequest* other) {
  steamid_request_.InternalSwap(&other->steamid_request_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRichPresenceRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRichPresenceRequest

// repeated fixed64 steamid_request = 1;
int CMsgClientRichPresenceRequest::steamid_request_size() const {
  return steamid_request_.size();
}
void CMsgClientRichPresenceRequest::clear_steamid_request() {
  steamid_request_.Clear();
}
::google::protobuf::uint64 CMsgClientRichPresenceRequest::steamid_request(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRichPresenceRequest.steamid_request)
  return steamid_request_.Get(index);
}
void CMsgClientRichPresenceRequest::set_steamid_request(int index, ::google::protobuf::uint64 value) {
  steamid_request_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRichPresenceRequest.steamid_request)
}
void CMsgClientRichPresenceRequest::add_steamid_request(::google::protobuf::uint64 value) {
  steamid_request_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientRichPresenceRequest.steamid_request)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientRichPresenceRequest::steamid_request() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientRichPresenceRequest.steamid_request)
  return steamid_request_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientRichPresenceRequest::mutable_steamid_request() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientRichPresenceRequest.steamid_request)
  return &steamid_request_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRichPresenceInfo_RichPresence::kSteamidUserFieldNumber;
const int CMsgClientRichPresenceInfo_RichPresence::kRichPresenceKvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRichPresenceInfo_RichPresence::CMsgClientRichPresenceInfo_RichPresence()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
}
CMsgClientRichPresenceInfo_RichPresence::CMsgClientRichPresenceInfo_RichPresence(const CMsgClientRichPresenceInfo_RichPresence& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rich_presence_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_rich_presence_kv()) {
    rich_presence_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rich_presence_kv_);
  }
  steamid_user_ = from.steamid_user_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
}

void CMsgClientRichPresenceInfo_RichPresence::SharedCtor() {
  _cached_size_ = 0;
  rich_presence_kv_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steamid_user_ = GOOGLE_ULONGLONG(0);
}

CMsgClientRichPresenceInfo_RichPresence::~CMsgClientRichPresenceInfo_RichPresence() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  SharedDtor();
}

void CMsgClientRichPresenceInfo_RichPresence::SharedDtor() {
  rich_presence_kv_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRichPresenceInfo_RichPresence::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRichPresenceInfo_RichPresence::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRichPresenceInfo_RichPresence& CMsgClientRichPresenceInfo_RichPresence::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRichPresenceInfo_RichPresence* CMsgClientRichPresenceInfo_RichPresence::New(::google::protobuf::Arena* arena) const {
  CMsgClientRichPresenceInfo_RichPresence* n = new CMsgClientRichPresenceInfo_RichPresence;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRichPresenceInfo_RichPresence::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  if (has_rich_presence_kv()) {
    GOOGLE_DCHECK(!rich_presence_kv_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*rich_presence_kv_.UnsafeRawStringPointer())->clear();
  }
  steamid_user_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRichPresenceInfo_RichPresence::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid_user = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steamid_user();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_user_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes rich_presence_kv = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_rich_presence_kv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  return false;
#undef DO_
}

void CMsgClientRichPresenceInfo_RichPresence::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_user = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid_user(), output);
  }

  // optional bytes rich_presence_kv = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->rich_presence_kv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
}

::google::protobuf::uint8* CMsgClientRichPresenceInfo_RichPresence::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid_user = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid_user(), target);
  }

  // optional bytes rich_presence_kv = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->rich_presence_kv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  return target;
}

size_t CMsgClientRichPresenceInfo_RichPresence::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes rich_presence_kv = 2;
    if (has_rich_presence_kv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->rich_presence_kv());
    }

    // optional fixed64 steamid_user = 1;
    if (has_steamid_user()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRichPresenceInfo_RichPresence::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRichPresenceInfo_RichPresence* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRichPresenceInfo_RichPresence>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
    MergeFrom(*source);
  }
}

void CMsgClientRichPresenceInfo_RichPresence::MergeFrom(const CMsgClientRichPresenceInfo_RichPresence& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_rich_presence_kv();
      rich_presence_kv_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.rich_presence_kv_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_user_ = from.steamid_user_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRichPresenceInfo_RichPresence::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRichPresenceInfo_RichPresence::CopyFrom(const CMsgClientRichPresenceInfo_RichPresence& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRichPresenceInfo.RichPresence)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRichPresenceInfo_RichPresence::IsInitialized() const {
  return true;
}

void CMsgClientRichPresenceInfo_RichPresence::Swap(CMsgClientRichPresenceInfo_RichPresence* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRichPresenceInfo_RichPresence::InternalSwap(CMsgClientRichPresenceInfo_RichPresence* other) {
  rich_presence_kv_.Swap(&other->rich_presence_kv_);
  std::swap(steamid_user_, other->steamid_user_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRichPresenceInfo_RichPresence::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRichPresenceInfo_RichPresence

// optional fixed64 steamid_user = 1;
bool CMsgClientRichPresenceInfo_RichPresence::has_steamid_user() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientRichPresenceInfo_RichPresence::set_has_steamid_user() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientRichPresenceInfo_RichPresence::clear_has_steamid_user() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientRichPresenceInfo_RichPresence::clear_steamid_user() {
  steamid_user_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_user();
}
::google::protobuf::uint64 CMsgClientRichPresenceInfo_RichPresence::steamid_user() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRichPresenceInfo.RichPresence.steamid_user)
  return steamid_user_;
}
void CMsgClientRichPresenceInfo_RichPresence::set_steamid_user(::google::protobuf::uint64 value) {
  set_has_steamid_user();
  steamid_user_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRichPresenceInfo.RichPresence.steamid_user)
}

// optional bytes rich_presence_kv = 2;
bool CMsgClientRichPresenceInfo_RichPresence::has_rich_presence_kv() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientRichPresenceInfo_RichPresence::set_has_rich_presence_kv() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientRichPresenceInfo_RichPresence::clear_has_rich_presence_kv() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientRichPresenceInfo_RichPresence::clear_rich_presence_kv() {
  rich_presence_kv_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_rich_presence_kv();
}
const ::std::string& CMsgClientRichPresenceInfo_RichPresence::rich_presence_kv() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
  return rich_presence_kv_.GetNoArena();
}
void CMsgClientRichPresenceInfo_RichPresence::set_rich_presence_kv(const ::std::string& value) {
  set_has_rich_presence_kv();
  rich_presence_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
}
#if LANG_CXX11
void CMsgClientRichPresenceInfo_RichPresence::set_rich_presence_kv(::std::string&& value) {
  set_has_rich_presence_kv();
  rich_presence_kv_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
}
#endif
void CMsgClientRichPresenceInfo_RichPresence::set_rich_presence_kv(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_rich_presence_kv();
  rich_presence_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
}
void CMsgClientRichPresenceInfo_RichPresence::set_rich_presence_kv(const void* value, size_t size) {
  set_has_rich_presence_kv();
  rich_presence_kv_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
}
::std::string* CMsgClientRichPresenceInfo_RichPresence::mutable_rich_presence_kv() {
  set_has_rich_presence_kv();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
  return rich_presence_kv_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRichPresenceInfo_RichPresence::release_rich_presence_kv() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
  clear_has_rich_presence_kv();
  return rich_presence_kv_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRichPresenceInfo_RichPresence::set_allocated_rich_presence_kv(::std::string* rich_presence_kv) {
  if (rich_presence_kv != NULL) {
    set_has_rich_presence_kv();
  } else {
    clear_has_rich_presence_kv();
  }
  rich_presence_kv_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rich_presence_kv);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRichPresenceInfo.RichPresence.rich_presence_kv)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRichPresenceInfo::kRichPresenceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRichPresenceInfo::CMsgClientRichPresenceInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRichPresenceInfo)
}
CMsgClientRichPresenceInfo::CMsgClientRichPresenceInfo(const CMsgClientRichPresenceInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      rich_presence_(from.rich_presence_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRichPresenceInfo)
}

void CMsgClientRichPresenceInfo::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientRichPresenceInfo::~CMsgClientRichPresenceInfo() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRichPresenceInfo)
  SharedDtor();
}

void CMsgClientRichPresenceInfo::SharedDtor() {
}

void CMsgClientRichPresenceInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRichPresenceInfo::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRichPresenceInfo& CMsgClientRichPresenceInfo::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRichPresenceInfo* CMsgClientRichPresenceInfo::New(::google::protobuf::Arena* arena) const {
  CMsgClientRichPresenceInfo* n = new CMsgClientRichPresenceInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRichPresenceInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRichPresenceInfo)
  rich_presence_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRichPresenceInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRichPresenceInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.steam.CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_rich_presence()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRichPresenceInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRichPresenceInfo)
  return false;
#undef DO_
}

void CMsgClientRichPresenceInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRichPresenceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
  for (unsigned int i = 0, n = this->rich_presence_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rich_presence(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRichPresenceInfo)
}

::google::protobuf::uint8* CMsgClientRichPresenceInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRichPresenceInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
  for (unsigned int i = 0, n = this->rich_presence_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->rich_presence(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRichPresenceInfo)
  return target;
}

size_t CMsgClientRichPresenceInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRichPresenceInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
  {
    unsigned int count = this->rich_presence_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rich_presence(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRichPresenceInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRichPresenceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRichPresenceInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRichPresenceInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRichPresenceInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRichPresenceInfo)
    MergeFrom(*source);
  }
}

void CMsgClientRichPresenceInfo::MergeFrom(const CMsgClientRichPresenceInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRichPresenceInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  rich_presence_.MergeFrom(from.rich_presence_);
}

void CMsgClientRichPresenceInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRichPresenceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRichPresenceInfo::CopyFrom(const CMsgClientRichPresenceInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRichPresenceInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRichPresenceInfo::IsInitialized() const {
  return true;
}

void CMsgClientRichPresenceInfo::Swap(CMsgClientRichPresenceInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRichPresenceInfo::InternalSwap(CMsgClientRichPresenceInfo* other) {
  rich_presence_.InternalSwap(&other->rich_presence_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRichPresenceInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRichPresenceInfo

// repeated .proto.steam.CMsgClientRichPresenceInfo.RichPresence rich_presence = 1;
int CMsgClientRichPresenceInfo::rich_presence_size() const {
  return rich_presence_.size();
}
void CMsgClientRichPresenceInfo::clear_rich_presence() {
  rich_presence_.Clear();
}
const ::proto::steam::CMsgClientRichPresenceInfo_RichPresence& CMsgClientRichPresenceInfo::rich_presence(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRichPresenceInfo.rich_presence)
  return rich_presence_.Get(index);
}
::proto::steam::CMsgClientRichPresenceInfo_RichPresence* CMsgClientRichPresenceInfo::mutable_rich_presence(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRichPresenceInfo.rich_presence)
  return rich_presence_.Mutable(index);
}
::proto::steam::CMsgClientRichPresenceInfo_RichPresence* CMsgClientRichPresenceInfo::add_rich_presence() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientRichPresenceInfo.rich_presence)
  return rich_presence_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientRichPresenceInfo_RichPresence >*
CMsgClientRichPresenceInfo::mutable_rich_presence() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientRichPresenceInfo.rich_presence)
  return &rich_presence_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientRichPresenceInfo_RichPresence >&
CMsgClientRichPresenceInfo::rich_presence() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientRichPresenceInfo.rich_presence)
  return rich_presence_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckFileSignature::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckFileSignature::CMsgClientCheckFileSignature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientCheckFileSignature)
}
CMsgClientCheckFileSignature::CMsgClientCheckFileSignature(const CMsgClientCheckFileSignature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientCheckFileSignature)
}

void CMsgClientCheckFileSignature::SharedCtor() {
  _cached_size_ = 0;
  app_id_ = 0u;
}

CMsgClientCheckFileSignature::~CMsgClientCheckFileSignature() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientCheckFileSignature)
  SharedDtor();
}

void CMsgClientCheckFileSignature::SharedDtor() {
}

void CMsgClientCheckFileSignature::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientCheckFileSignature::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCheckFileSignature& CMsgClientCheckFileSignature::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientCheckFileSignature* CMsgClientCheckFileSignature::New(::google::protobuf::Arena* arena) const {
  CMsgClientCheckFileSignature* n = new CMsgClientCheckFileSignature;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientCheckFileSignature::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientCheckFileSignature)
  app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCheckFileSignature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientCheckFileSignature)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientCheckFileSignature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientCheckFileSignature)
  return false;
#undef DO_
}

void CMsgClientCheckFileSignature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientCheckFileSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientCheckFileSignature)
}

::google::protobuf::uint8* CMsgClientCheckFileSignature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientCheckFileSignature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientCheckFileSignature)
  return target;
}

size_t CMsgClientCheckFileSignature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientCheckFileSignature)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 app_id = 1;
  if (has_app_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->app_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientCheckFileSignature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientCheckFileSignature)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckFileSignature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCheckFileSignature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientCheckFileSignature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientCheckFileSignature)
    MergeFrom(*source);
  }
}

void CMsgClientCheckFileSignature::MergeFrom(const CMsgClientCheckFileSignature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientCheckFileSignature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_app_id()) {
    set_app_id(from.app_id());
  }
}

void CMsgClientCheckFileSignature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientCheckFileSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckFileSignature::CopyFrom(const CMsgClientCheckFileSignature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientCheckFileSignature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckFileSignature::IsInitialized() const {
  return true;
}

void CMsgClientCheckFileSignature::Swap(CMsgClientCheckFileSignature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckFileSignature::InternalSwap(CMsgClientCheckFileSignature* other) {
  std::swap(app_id_, other->app_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientCheckFileSignature::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientCheckFileSignature

// optional uint32 app_id = 1;
bool CMsgClientCheckFileSignature::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientCheckFileSignature::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientCheckFileSignature::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientCheckFileSignature::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientCheckFileSignature::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckFileSignature.app_id)
  return app_id_;
}
void CMsgClientCheckFileSignature::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckFileSignature.app_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckFileSignatureResponse::kAppIdFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kPidFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kEresultFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kFilenameFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kEsignatureresultFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kShaFileFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kSignatureheaderFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kFilesizeFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kGetlasterrorFieldNumber;
const int CMsgClientCheckFileSignatureResponse::kEvalvesignaturecheckdetailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckFileSignatureResponse::CMsgClientCheckFileSignatureResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientCheckFileSignatureResponse)
}
CMsgClientCheckFileSignatureResponse::CMsgClientCheckFileSignatureResponse(const CMsgClientCheckFileSignatureResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  signatureheader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signatureheader()) {
    signatureheader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signatureheader_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    reinterpret_cast<char*>(&evalvesignaturecheckdetail_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(evalvesignaturecheckdetail_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientCheckFileSignatureResponse)
}

void CMsgClientCheckFileSignatureResponse::SharedCtor() {
  _cached_size_ = 0;
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signatureheader_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&evalvesignaturecheckdetail_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(evalvesignaturecheckdetail_));
}

CMsgClientCheckFileSignatureResponse::~CMsgClientCheckFileSignatureResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientCheckFileSignatureResponse)
  SharedDtor();
}

void CMsgClientCheckFileSignatureResponse::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signatureheader_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientCheckFileSignatureResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientCheckFileSignatureResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCheckFileSignatureResponse& CMsgClientCheckFileSignatureResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientCheckFileSignatureResponse* CMsgClientCheckFileSignatureResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientCheckFileSignatureResponse* n = new CMsgClientCheckFileSignatureResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientCheckFileSignatureResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_filename()) {
      GOOGLE_DCHECK(!filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*filename_.UnsafeRawStringPointer())->clear();
    }
    if (has_sha_file()) {
      GOOGLE_DCHECK(!sha_file_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sha_file_.UnsafeRawStringPointer())->clear();
    }
    if (has_signatureheader()) {
      GOOGLE_DCHECK(!signatureheader_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*signatureheader_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 248u) {
    ::memset(&app_id_, 0, reinterpret_cast<char*>(&filesize_) -
      reinterpret_cast<char*>(&app_id_) + sizeof(filesize_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&getlasterror_, 0, reinterpret_cast<char*>(&evalvesignaturecheckdetail_) -
      reinterpret_cast<char*>(&getlasterror_) + sizeof(evalvesignaturecheckdetail_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCheckFileSignatureResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_pid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientCheckFileSignatureResponse.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 esignatureresult = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_esignatureresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &esignatureresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes signatureheader = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signatureheader()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 filesize = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_filesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 getlasterror = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_getlasterror();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &getlasterror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 evalvesignaturecheckdetail = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_evalvesignaturecheckdetail();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &evalvesignaturecheckdetail_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientCheckFileSignatureResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientCheckFileSignatureResponse)
  return false;
#undef DO_
}

void CMsgClientCheckFileSignatureResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pid(), output);
  }

  // optional uint32 eresult = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->eresult(), output);
  }

  // optional string filename = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckFileSignatureResponse.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filename(), output);
  }

  // optional uint32 esignatureresult = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->esignatureresult(), output);
  }

  // optional bytes sha_file = 6;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->sha_file(), output);
  }

  // optional bytes signatureheader = 7;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->signatureheader(), output);
  }

  // optional uint32 filesize = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->filesize(), output);
  }

  // optional uint32 getlasterror = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->getlasterror(), output);
  }

  // optional uint32 evalvesignaturecheckdetail = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->evalvesignaturecheckdetail(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientCheckFileSignatureResponse)
}

::google::protobuf::uint8* CMsgClientCheckFileSignatureResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 pid = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pid(), target);
  }

  // optional uint32 eresult = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->eresult(), target);
  }

  // optional string filename = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckFileSignatureResponse.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filename(), target);
  }

  // optional uint32 esignatureresult = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->esignatureresult(), target);
  }

  // optional bytes sha_file = 6;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->sha_file(), target);
  }

  // optional bytes signatureheader = 7;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->signatureheader(), target);
  }

  // optional uint32 filesize = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->filesize(), target);
  }

  // optional uint32 getlasterror = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->getlasterror(), target);
  }

  // optional uint32 evalvesignaturecheckdetail = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->evalvesignaturecheckdetail(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientCheckFileSignatureResponse)
  return target;
}

size_t CMsgClientCheckFileSignatureResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string filename = 4;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes sha_file = 6;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional bytes signatureheader = 7;
    if (has_signatureheader()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->signatureheader());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 pid = 2;
    if (has_pid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pid());
    }

    // optional uint32 eresult = 3;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional uint32 esignatureresult = 5;
    if (has_esignatureresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->esignatureresult());
    }

    // optional uint32 filesize = 8;
    if (has_filesize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filesize());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional uint32 getlasterror = 9;
    if (has_getlasterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->getlasterror());
    }

    // optional uint32 evalvesignaturecheckdetail = 10;
    if (has_evalvesignaturecheckdetail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->evalvesignaturecheckdetail());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientCheckFileSignatureResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckFileSignatureResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCheckFileSignatureResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientCheckFileSignatureResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientCheckFileSignatureResponse)
    MergeFrom(*source);
  }
}

void CMsgClientCheckFileSignatureResponse::MergeFrom(const CMsgClientCheckFileSignatureResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_signatureheader();
      signatureheader_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signatureheader_);
    }
    if (cached_has_bits & 0x00000008u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      pid_ = from.pid_;
    }
    if (cached_has_bits & 0x00000020u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000040u) {
      esignatureresult_ = from.esignatureresult_;
    }
    if (cached_has_bits & 0x00000080u) {
      filesize_ = from.filesize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      getlasterror_ = from.getlasterror_;
    }
    if (cached_has_bits & 0x00000200u) {
      evalvesignaturecheckdetail_ = from.evalvesignaturecheckdetail_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientCheckFileSignatureResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckFileSignatureResponse::CopyFrom(const CMsgClientCheckFileSignatureResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientCheckFileSignatureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckFileSignatureResponse::IsInitialized() const {
  return true;
}

void CMsgClientCheckFileSignatureResponse::Swap(CMsgClientCheckFileSignatureResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckFileSignatureResponse::InternalSwap(CMsgClientCheckFileSignatureResponse* other) {
  filename_.Swap(&other->filename_);
  sha_file_.Swap(&other->sha_file_);
  signatureheader_.Swap(&other->signatureheader_);
  std::swap(app_id_, other->app_id_);
  std::swap(pid_, other->pid_);
  std::swap(eresult_, other->eresult_);
  std::swap(esignatureresult_, other->esignatureresult_);
  std::swap(filesize_, other->filesize_);
  std::swap(getlasterror_, other->getlasterror_);
  std::swap(evalvesignaturecheckdetail_, other->evalvesignaturecheckdetail_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientCheckFileSignatureResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientCheckFileSignatureResponse

// optional uint32 app_id = 1;
bool CMsgClientCheckFileSignatureResponse::has_app_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientCheckFileSignatureResponse::set_has_app_id() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientCheckFileSignatureResponse::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientCheckFileSignatureResponse::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientCheckFileSignatureResponse::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckFileSignatureResponse.app_id)
  return app_id_;
}
void CMsgClientCheckFileSignatureResponse::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckFileSignatureResponse.app_id)
}

// optional uint32 pid = 2;
bool CMsgClientCheckFileSignatureResponse::has_pid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientCheckFileSignatureResponse::set_has_pid() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientCheckFileSignatureResponse::clear_has_pid() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientCheckFileSignatureResponse::clear_pid() {
  pid_ = 0u;
  clear_has_pid();
}
::google::protobuf::uint32 CMsgClientCheckFileSignatureResponse::pid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckFileSignatureResponse.pid)
  return pid_;
}
void CMsgClientCheckFileSignatureResponse::set_pid(::google::protobuf::uint32 value) {
  set_has_pid();
  pid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckFileSignatureResponse.pid)
}

// optional uint32 eresult = 3;
bool CMsgClientCheckFileSignatureResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientCheckFileSignatureResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientCheckFileSignatureResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientCheckFileSignatureResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgClientCheckFileSignatureResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckFileSignatureResponse.eresult)
  return eresult_;
}
void CMsgClientCheckFileSignatureResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckFileSignatureResponse.eresult)
}

// optional string filename = 4;
bool CMsgClientCheckFileSignatureResponse::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientCheckFileSignatureResponse::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientCheckFileSignatureResponse::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientCheckFileSignatureResponse::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
const ::std::string& CMsgClientCheckFileSignatureResponse::filename() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckFileSignatureResponse.filename)
  return filename_.GetNoArena();
}
void CMsgClientCheckFileSignatureResponse::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckFileSignatureResponse.filename)
}
#if LANG_CXX11
void CMsgClientCheckFileSignatureResponse::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientCheckFileSignatureResponse.filename)
}
#endif
void CMsgClientCheckFileSignatureResponse::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientCheckFileSignatureResponse.filename)
}
void CMsgClientCheckFileSignatureResponse::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientCheckFileSignatureResponse.filename)
}
::std::string* CMsgClientCheckFileSignatureResponse::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientCheckFileSignatureResponse.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientCheckFileSignatureResponse::release_filename() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientCheckFileSignatureResponse.filename)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientCheckFileSignatureResponse::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientCheckFileSignatureResponse.filename)
}

// optional uint32 esignatureresult = 5;
bool CMsgClientCheckFileSignatureResponse::has_esignatureresult() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientCheckFileSignatureResponse::set_has_esignatureresult() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientCheckFileSignatureResponse::clear_has_esignatureresult() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientCheckFileSignatureResponse::clear_esignatureresult() {
  esignatureresult_ = 0u;
  clear_has_esignatureresult();
}
::google::protobuf::uint32 CMsgClientCheckFileSignatureResponse::esignatureresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckFileSignatureResponse.esignatureresult)
  return esignatureresult_;
}
void CMsgClientCheckFileSignatureResponse::set_esignatureresult(::google::protobuf::uint32 value) {
  set_has_esignatureresult();
  esignatureresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckFileSignatureResponse.esignatureresult)
}

// optional bytes sha_file = 6;
bool CMsgClientCheckFileSignatureResponse::has_sha_file() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientCheckFileSignatureResponse::set_has_sha_file() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientCheckFileSignatureResponse::clear_has_sha_file() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientCheckFileSignatureResponse::clear_sha_file() {
  sha_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sha_file();
}
const ::std::string& CMsgClientCheckFileSignatureResponse::sha_file() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckFileSignatureResponse.sha_file)
  return sha_file_.GetNoArena();
}
void CMsgClientCheckFileSignatureResponse::set_sha_file(const ::std::string& value) {
  set_has_sha_file();
  sha_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckFileSignatureResponse.sha_file)
}
#if LANG_CXX11
void CMsgClientCheckFileSignatureResponse::set_sha_file(::std::string&& value) {
  set_has_sha_file();
  sha_file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientCheckFileSignatureResponse.sha_file)
}
#endif
void CMsgClientCheckFileSignatureResponse::set_sha_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sha_file();
  sha_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientCheckFileSignatureResponse.sha_file)
}
void CMsgClientCheckFileSignatureResponse::set_sha_file(const void* value, size_t size) {
  set_has_sha_file();
  sha_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientCheckFileSignatureResponse.sha_file)
}
::std::string* CMsgClientCheckFileSignatureResponse::mutable_sha_file() {
  set_has_sha_file();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientCheckFileSignatureResponse.sha_file)
  return sha_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientCheckFileSignatureResponse::release_sha_file() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientCheckFileSignatureResponse.sha_file)
  clear_has_sha_file();
  return sha_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientCheckFileSignatureResponse::set_allocated_sha_file(::std::string* sha_file) {
  if (sha_file != NULL) {
    set_has_sha_file();
  } else {
    clear_has_sha_file();
  }
  sha_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha_file);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientCheckFileSignatureResponse.sha_file)
}

// optional bytes signatureheader = 7;
bool CMsgClientCheckFileSignatureResponse::has_signatureheader() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientCheckFileSignatureResponse::set_has_signatureheader() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientCheckFileSignatureResponse::clear_has_signatureheader() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientCheckFileSignatureResponse::clear_signatureheader() {
  signatureheader_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signatureheader();
}
const ::std::string& CMsgClientCheckFileSignatureResponse::signatureheader() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckFileSignatureResponse.signatureheader)
  return signatureheader_.GetNoArena();
}
void CMsgClientCheckFileSignatureResponse::set_signatureheader(const ::std::string& value) {
  set_has_signatureheader();
  signatureheader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckFileSignatureResponse.signatureheader)
}
#if LANG_CXX11
void CMsgClientCheckFileSignatureResponse::set_signatureheader(::std::string&& value) {
  set_has_signatureheader();
  signatureheader_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientCheckFileSignatureResponse.signatureheader)
}
#endif
void CMsgClientCheckFileSignatureResponse::set_signatureheader(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signatureheader();
  signatureheader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientCheckFileSignatureResponse.signatureheader)
}
void CMsgClientCheckFileSignatureResponse::set_signatureheader(const void* value, size_t size) {
  set_has_signatureheader();
  signatureheader_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientCheckFileSignatureResponse.signatureheader)
}
::std::string* CMsgClientCheckFileSignatureResponse::mutable_signatureheader() {
  set_has_signatureheader();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientCheckFileSignatureResponse.signatureheader)
  return signatureheader_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientCheckFileSignatureResponse::release_signatureheader() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientCheckFileSignatureResponse.signatureheader)
  clear_has_signatureheader();
  return signatureheader_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientCheckFileSignatureResponse::set_allocated_signatureheader(::std::string* signatureheader) {
  if (signatureheader != NULL) {
    set_has_signatureheader();
  } else {
    clear_has_signatureheader();
  }
  signatureheader_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signatureheader);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientCheckFileSignatureResponse.signatureheader)
}

// optional uint32 filesize = 8;
bool CMsgClientCheckFileSignatureResponse::has_filesize() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgClientCheckFileSignatureResponse::set_has_filesize() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgClientCheckFileSignatureResponse::clear_has_filesize() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgClientCheckFileSignatureResponse::clear_filesize() {
  filesize_ = 0u;
  clear_has_filesize();
}
::google::protobuf::uint32 CMsgClientCheckFileSignatureResponse::filesize() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckFileSignatureResponse.filesize)
  return filesize_;
}
void CMsgClientCheckFileSignatureResponse::set_filesize(::google::protobuf::uint32 value) {
  set_has_filesize();
  filesize_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckFileSignatureResponse.filesize)
}

// optional uint32 getlasterror = 9;
bool CMsgClientCheckFileSignatureResponse::has_getlasterror() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgClientCheckFileSignatureResponse::set_has_getlasterror() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgClientCheckFileSignatureResponse::clear_has_getlasterror() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgClientCheckFileSignatureResponse::clear_getlasterror() {
  getlasterror_ = 0u;
  clear_has_getlasterror();
}
::google::protobuf::uint32 CMsgClientCheckFileSignatureResponse::getlasterror() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckFileSignatureResponse.getlasterror)
  return getlasterror_;
}
void CMsgClientCheckFileSignatureResponse::set_getlasterror(::google::protobuf::uint32 value) {
  set_has_getlasterror();
  getlasterror_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckFileSignatureResponse.getlasterror)
}

// optional uint32 evalvesignaturecheckdetail = 10;
bool CMsgClientCheckFileSignatureResponse::has_evalvesignaturecheckdetail() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CMsgClientCheckFileSignatureResponse::set_has_evalvesignaturecheckdetail() {
  _has_bits_[0] |= 0x00000200u;
}
void CMsgClientCheckFileSignatureResponse::clear_has_evalvesignaturecheckdetail() {
  _has_bits_[0] &= ~0x00000200u;
}
void CMsgClientCheckFileSignatureResponse::clear_evalvesignaturecheckdetail() {
  evalvesignaturecheckdetail_ = 0u;
  clear_has_evalvesignaturecheckdetail();
}
::google::protobuf::uint32 CMsgClientCheckFileSignatureResponse::evalvesignaturecheckdetail() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckFileSignatureResponse.evalvesignaturecheckdetail)
  return evalvesignaturecheckdetail_;
}
void CMsgClientCheckFileSignatureResponse::set_evalvesignaturecheckdetail(::google::protobuf::uint32 value) {
  set_has_evalvesignaturecheckdetail();
  evalvesignaturecheckdetail_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckFileSignatureResponse.evalvesignaturecheckdetail)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientReadMachineAuth::kFilenameFieldNumber;
const int CMsgClientReadMachineAuth::kOffsetFieldNumber;
const int CMsgClientReadMachineAuth::kCubtoreadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientReadMachineAuth::CMsgClientReadMachineAuth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientReadMachineAuth)
}
CMsgClientReadMachineAuth::CMsgClientReadMachineAuth(const CMsgClientReadMachineAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  ::memcpy(&offset_, &from.offset_,
    reinterpret_cast<char*>(&cubtoread_) -
    reinterpret_cast<char*>(&offset_) + sizeof(cubtoread_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientReadMachineAuth)
}

void CMsgClientReadMachineAuth::SharedCtor() {
  _cached_size_ = 0;
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, reinterpret_cast<char*>(&cubtoread_) -
    reinterpret_cast<char*>(&offset_) + sizeof(cubtoread_));
}

CMsgClientReadMachineAuth::~CMsgClientReadMachineAuth() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientReadMachineAuth)
  SharedDtor();
}

void CMsgClientReadMachineAuth::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientReadMachineAuth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientReadMachineAuth::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientReadMachineAuth& CMsgClientReadMachineAuth::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientReadMachineAuth* CMsgClientReadMachineAuth::New(::google::protobuf::Arena* arena) const {
  CMsgClientReadMachineAuth* n = new CMsgClientReadMachineAuth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientReadMachineAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientReadMachineAuth)
  if (has_filename()) {
    GOOGLE_DCHECK(!filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*filename_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&offset_, 0, reinterpret_cast<char*>(&cubtoread_) -
      reinterpret_cast<char*>(&offset_) + sizeof(cubtoread_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientReadMachineAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientReadMachineAuth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientReadMachineAuth.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cubtoread = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_cubtoread();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cubtoread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientReadMachineAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientReadMachineAuth)
  return false;
#undef DO_
}

void CMsgClientReadMachineAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientReadMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientReadMachineAuth.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offset(), output);
  }

  // optional uint32 cubtoread = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cubtoread(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientReadMachineAuth)
}

::google::protobuf::uint8* CMsgClientReadMachineAuth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientReadMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientReadMachineAuth.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offset(), target);
  }

  // optional uint32 cubtoread = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cubtoread(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientReadMachineAuth)
  return target;
}

size_t CMsgClientReadMachineAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientReadMachineAuth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional uint32 offset = 2;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 cubtoread = 3;
    if (has_cubtoread()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cubtoread());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientReadMachineAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientReadMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientReadMachineAuth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientReadMachineAuth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientReadMachineAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientReadMachineAuth)
    MergeFrom(*source);
  }
}

void CMsgClientReadMachineAuth::MergeFrom(const CMsgClientReadMachineAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientReadMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000004u) {
      cubtoread_ = from.cubtoread_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientReadMachineAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientReadMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientReadMachineAuth::CopyFrom(const CMsgClientReadMachineAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientReadMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientReadMachineAuth::IsInitialized() const {
  return true;
}

void CMsgClientReadMachineAuth::Swap(CMsgClientReadMachineAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientReadMachineAuth::InternalSwap(CMsgClientReadMachineAuth* other) {
  filename_.Swap(&other->filename_);
  std::swap(offset_, other->offset_);
  std::swap(cubtoread_, other->cubtoread_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientReadMachineAuth::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientReadMachineAuth

// optional string filename = 1;
bool CMsgClientReadMachineAuth::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientReadMachineAuth::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientReadMachineAuth::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientReadMachineAuth::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
const ::std::string& CMsgClientReadMachineAuth::filename() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientReadMachineAuth.filename)
  return filename_.GetNoArena();
}
void CMsgClientReadMachineAuth::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientReadMachineAuth.filename)
}
#if LANG_CXX11
void CMsgClientReadMachineAuth::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientReadMachineAuth.filename)
}
#endif
void CMsgClientReadMachineAuth::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientReadMachineAuth.filename)
}
void CMsgClientReadMachineAuth::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientReadMachineAuth.filename)
}
::std::string* CMsgClientReadMachineAuth::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientReadMachineAuth.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientReadMachineAuth::release_filename() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientReadMachineAuth.filename)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientReadMachineAuth::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientReadMachineAuth.filename)
}

// optional uint32 offset = 2;
bool CMsgClientReadMachineAuth::has_offset() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientReadMachineAuth::set_has_offset() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientReadMachineAuth::clear_has_offset() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientReadMachineAuth::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
::google::protobuf::uint32 CMsgClientReadMachineAuth::offset() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientReadMachineAuth.offset)
  return offset_;
}
void CMsgClientReadMachineAuth::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientReadMachineAuth.offset)
}

// optional uint32 cubtoread = 3;
bool CMsgClientReadMachineAuth::has_cubtoread() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientReadMachineAuth::set_has_cubtoread() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientReadMachineAuth::clear_has_cubtoread() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientReadMachineAuth::clear_cubtoread() {
  cubtoread_ = 0u;
  clear_has_cubtoread();
}
::google::protobuf::uint32 CMsgClientReadMachineAuth::cubtoread() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientReadMachineAuth.cubtoread)
  return cubtoread_;
}
void CMsgClientReadMachineAuth::set_cubtoread(::google::protobuf::uint32 value) {
  set_has_cubtoread();
  cubtoread_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientReadMachineAuth.cubtoread)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientReadMachineAuthResponse::kFilenameFieldNumber;
const int CMsgClientReadMachineAuthResponse::kEresultFieldNumber;
const int CMsgClientReadMachineAuthResponse::kFilesizeFieldNumber;
const int CMsgClientReadMachineAuthResponse::kShaFileFieldNumber;
const int CMsgClientReadMachineAuthResponse::kGetlasterrorFieldNumber;
const int CMsgClientReadMachineAuthResponse::kOffsetFieldNumber;
const int CMsgClientReadMachineAuthResponse::kCubreadFieldNumber;
const int CMsgClientReadMachineAuthResponse::kBytesReadFieldNumber;
const int CMsgClientReadMachineAuthResponse::kFilenameSentryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientReadMachineAuthResponse::CMsgClientReadMachineAuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientReadMachineAuthResponse)
}
CMsgClientReadMachineAuthResponse::CMsgClientReadMachineAuthResponse(const CMsgClientReadMachineAuthResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  bytes_read_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bytes_read()) {
    bytes_read_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_read_);
  }
  filename_sentry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename_sentry()) {
    filename_sentry_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_sentry_);
  }
  ::memcpy(&eresult_, &from.eresult_,
    reinterpret_cast<char*>(&cubread_) -
    reinterpret_cast<char*>(&eresult_) + sizeof(cubread_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientReadMachineAuthResponse)
}

void CMsgClientReadMachineAuthResponse::SharedCtor() {
  _cached_size_ = 0;
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_read_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_sentry_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&eresult_, 0, reinterpret_cast<char*>(&cubread_) -
    reinterpret_cast<char*>(&eresult_) + sizeof(cubread_));
}

CMsgClientReadMachineAuthResponse::~CMsgClientReadMachineAuthResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientReadMachineAuthResponse)
  SharedDtor();
}

void CMsgClientReadMachineAuthResponse::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_read_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filename_sentry_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientReadMachineAuthResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientReadMachineAuthResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientReadMachineAuthResponse& CMsgClientReadMachineAuthResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientReadMachineAuthResponse* CMsgClientReadMachineAuthResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientReadMachineAuthResponse* n = new CMsgClientReadMachineAuthResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientReadMachineAuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientReadMachineAuthResponse)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_filename()) {
      GOOGLE_DCHECK(!filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*filename_.UnsafeRawStringPointer())->clear();
    }
    if (has_sha_file()) {
      GOOGLE_DCHECK(!sha_file_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sha_file_.UnsafeRawStringPointer())->clear();
    }
    if (has_bytes_read()) {
      GOOGLE_DCHECK(!bytes_read_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bytes_read_.UnsafeRawStringPointer())->clear();
    }
    if (has_filename_sentry()) {
      GOOGLE_DCHECK(!filename_sentry_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*filename_sentry_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&eresult_, 0, reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&eresult_) + sizeof(offset_));
  }
  cubread_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientReadMachineAuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientReadMachineAuthResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientReadMachineAuthResponse.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 filesize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_filesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 getlasterror = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_getlasterror();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &getlasterror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 offset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cubread = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_cubread();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cubread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bytes_read = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes_read()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filename_sentry = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename_sentry()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename_sentry().data(), this->filename_sentry().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientReadMachineAuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientReadMachineAuthResponse)
  return false;
#undef DO_
}

void CMsgClientReadMachineAuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientReadMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientReadMachineAuthResponse.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->filesize(), output);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sha_file(), output);
  }

  // optional uint32 getlasterror = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->getlasterror(), output);
  }

  // optional uint32 offset = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->offset(), output);
  }

  // optional uint32 cubread = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->cubread(), output);
  }

  // optional bytes bytes_read = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->bytes_read(), output);
  }

  // optional string filename_sentry = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename_sentry().data(), this->filename_sentry().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->filename_sentry(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientReadMachineAuthResponse)
}

::google::protobuf::uint8* CMsgClientReadMachineAuthResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientReadMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientReadMachineAuthResponse.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->filesize(), target);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sha_file(), target);
  }

  // optional uint32 getlasterror = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->getlasterror(), target);
  }

  // optional uint32 offset = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->offset(), target);
  }

  // optional uint32 cubread = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->cubread(), target);
  }

  // optional bytes bytes_read = 8;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->bytes_read(), target);
  }

  // optional string filename_sentry = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename_sentry().data(), this->filename_sentry().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->filename_sentry(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientReadMachineAuthResponse)
  return target;
}

size_t CMsgClientReadMachineAuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientReadMachineAuthResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes sha_file = 4;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional bytes bytes_read = 8;
    if (has_bytes_read()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes_read());
    }

    // optional string filename_sentry = 9;
    if (has_filename_sentry()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename_sentry());
    }

    // optional uint32 eresult = 2;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional uint32 filesize = 3;
    if (has_filesize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filesize());
    }

    // optional uint32 getlasterror = 5;
    if (has_getlasterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->getlasterror());
    }

    // optional uint32 offset = 6;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

  }
  // optional uint32 cubread = 7;
  if (has_cubread()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cubread());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientReadMachineAuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientReadMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientReadMachineAuthResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientReadMachineAuthResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientReadMachineAuthResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientReadMachineAuthResponse)
    MergeFrom(*source);
  }
}

void CMsgClientReadMachineAuthResponse::MergeFrom(const CMsgClientReadMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientReadMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_bytes_read();
      bytes_read_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_read_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_filename_sentry();
      filename_sentry_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_sentry_);
    }
    if (cached_has_bits & 0x00000010u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000020u) {
      filesize_ = from.filesize_;
    }
    if (cached_has_bits & 0x00000040u) {
      getlasterror_ = from.getlasterror_;
    }
    if (cached_has_bits & 0x00000080u) {
      offset_ = from.offset_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_cubread(from.cubread());
  }
}

void CMsgClientReadMachineAuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientReadMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientReadMachineAuthResponse::CopyFrom(const CMsgClientReadMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientReadMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientReadMachineAuthResponse::IsInitialized() const {
  return true;
}

void CMsgClientReadMachineAuthResponse::Swap(CMsgClientReadMachineAuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientReadMachineAuthResponse::InternalSwap(CMsgClientReadMachineAuthResponse* other) {
  filename_.Swap(&other->filename_);
  sha_file_.Swap(&other->sha_file_);
  bytes_read_.Swap(&other->bytes_read_);
  filename_sentry_.Swap(&other->filename_sentry_);
  std::swap(eresult_, other->eresult_);
  std::swap(filesize_, other->filesize_);
  std::swap(getlasterror_, other->getlasterror_);
  std::swap(offset_, other->offset_);
  std::swap(cubread_, other->cubread_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientReadMachineAuthResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientReadMachineAuthResponse

// optional string filename = 1;
bool CMsgClientReadMachineAuthResponse::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientReadMachineAuthResponse::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientReadMachineAuthResponse::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientReadMachineAuthResponse::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
const ::std::string& CMsgClientReadMachineAuthResponse::filename() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientReadMachineAuthResponse.filename)
  return filename_.GetNoArena();
}
void CMsgClientReadMachineAuthResponse::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientReadMachineAuthResponse.filename)
}
#if LANG_CXX11
void CMsgClientReadMachineAuthResponse::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientReadMachineAuthResponse.filename)
}
#endif
void CMsgClientReadMachineAuthResponse::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientReadMachineAuthResponse.filename)
}
void CMsgClientReadMachineAuthResponse::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientReadMachineAuthResponse.filename)
}
::std::string* CMsgClientReadMachineAuthResponse::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientReadMachineAuthResponse.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientReadMachineAuthResponse::release_filename() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientReadMachineAuthResponse.filename)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientReadMachineAuthResponse::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientReadMachineAuthResponse.filename)
}

// optional uint32 eresult = 2;
bool CMsgClientReadMachineAuthResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientReadMachineAuthResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientReadMachineAuthResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientReadMachineAuthResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgClientReadMachineAuthResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientReadMachineAuthResponse.eresult)
  return eresult_;
}
void CMsgClientReadMachineAuthResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientReadMachineAuthResponse.eresult)
}

// optional uint32 filesize = 3;
bool CMsgClientReadMachineAuthResponse::has_filesize() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientReadMachineAuthResponse::set_has_filesize() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientReadMachineAuthResponse::clear_has_filesize() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientReadMachineAuthResponse::clear_filesize() {
  filesize_ = 0u;
  clear_has_filesize();
}
::google::protobuf::uint32 CMsgClientReadMachineAuthResponse::filesize() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientReadMachineAuthResponse.filesize)
  return filesize_;
}
void CMsgClientReadMachineAuthResponse::set_filesize(::google::protobuf::uint32 value) {
  set_has_filesize();
  filesize_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientReadMachineAuthResponse.filesize)
}

// optional bytes sha_file = 4;
bool CMsgClientReadMachineAuthResponse::has_sha_file() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientReadMachineAuthResponse::set_has_sha_file() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientReadMachineAuthResponse::clear_has_sha_file() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientReadMachineAuthResponse::clear_sha_file() {
  sha_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sha_file();
}
const ::std::string& CMsgClientReadMachineAuthResponse::sha_file() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientReadMachineAuthResponse.sha_file)
  return sha_file_.GetNoArena();
}
void CMsgClientReadMachineAuthResponse::set_sha_file(const ::std::string& value) {
  set_has_sha_file();
  sha_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientReadMachineAuthResponse.sha_file)
}
#if LANG_CXX11
void CMsgClientReadMachineAuthResponse::set_sha_file(::std::string&& value) {
  set_has_sha_file();
  sha_file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientReadMachineAuthResponse.sha_file)
}
#endif
void CMsgClientReadMachineAuthResponse::set_sha_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sha_file();
  sha_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientReadMachineAuthResponse.sha_file)
}
void CMsgClientReadMachineAuthResponse::set_sha_file(const void* value, size_t size) {
  set_has_sha_file();
  sha_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientReadMachineAuthResponse.sha_file)
}
::std::string* CMsgClientReadMachineAuthResponse::mutable_sha_file() {
  set_has_sha_file();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientReadMachineAuthResponse.sha_file)
  return sha_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientReadMachineAuthResponse::release_sha_file() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientReadMachineAuthResponse.sha_file)
  clear_has_sha_file();
  return sha_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientReadMachineAuthResponse::set_allocated_sha_file(::std::string* sha_file) {
  if (sha_file != NULL) {
    set_has_sha_file();
  } else {
    clear_has_sha_file();
  }
  sha_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha_file);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientReadMachineAuthResponse.sha_file)
}

// optional uint32 getlasterror = 5;
bool CMsgClientReadMachineAuthResponse::has_getlasterror() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientReadMachineAuthResponse::set_has_getlasterror() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientReadMachineAuthResponse::clear_has_getlasterror() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientReadMachineAuthResponse::clear_getlasterror() {
  getlasterror_ = 0u;
  clear_has_getlasterror();
}
::google::protobuf::uint32 CMsgClientReadMachineAuthResponse::getlasterror() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientReadMachineAuthResponse.getlasterror)
  return getlasterror_;
}
void CMsgClientReadMachineAuthResponse::set_getlasterror(::google::protobuf::uint32 value) {
  set_has_getlasterror();
  getlasterror_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientReadMachineAuthResponse.getlasterror)
}

// optional uint32 offset = 6;
bool CMsgClientReadMachineAuthResponse::has_offset() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgClientReadMachineAuthResponse::set_has_offset() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgClientReadMachineAuthResponse::clear_has_offset() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgClientReadMachineAuthResponse::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
::google::protobuf::uint32 CMsgClientReadMachineAuthResponse::offset() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientReadMachineAuthResponse.offset)
  return offset_;
}
void CMsgClientReadMachineAuthResponse::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientReadMachineAuthResponse.offset)
}

// optional uint32 cubread = 7;
bool CMsgClientReadMachineAuthResponse::has_cubread() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgClientReadMachineAuthResponse::set_has_cubread() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgClientReadMachineAuthResponse::clear_has_cubread() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgClientReadMachineAuthResponse::clear_cubread() {
  cubread_ = 0u;
  clear_has_cubread();
}
::google::protobuf::uint32 CMsgClientReadMachineAuthResponse::cubread() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientReadMachineAuthResponse.cubread)
  return cubread_;
}
void CMsgClientReadMachineAuthResponse::set_cubread(::google::protobuf::uint32 value) {
  set_has_cubread();
  cubread_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientReadMachineAuthResponse.cubread)
}

// optional bytes bytes_read = 8;
bool CMsgClientReadMachineAuthResponse::has_bytes_read() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientReadMachineAuthResponse::set_has_bytes_read() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientReadMachineAuthResponse::clear_has_bytes_read() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientReadMachineAuthResponse::clear_bytes_read() {
  bytes_read_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bytes_read();
}
const ::std::string& CMsgClientReadMachineAuthResponse::bytes_read() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientReadMachineAuthResponse.bytes_read)
  return bytes_read_.GetNoArena();
}
void CMsgClientReadMachineAuthResponse::set_bytes_read(const ::std::string& value) {
  set_has_bytes_read();
  bytes_read_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientReadMachineAuthResponse.bytes_read)
}
#if LANG_CXX11
void CMsgClientReadMachineAuthResponse::set_bytes_read(::std::string&& value) {
  set_has_bytes_read();
  bytes_read_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientReadMachineAuthResponse.bytes_read)
}
#endif
void CMsgClientReadMachineAuthResponse::set_bytes_read(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bytes_read();
  bytes_read_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientReadMachineAuthResponse.bytes_read)
}
void CMsgClientReadMachineAuthResponse::set_bytes_read(const void* value, size_t size) {
  set_has_bytes_read();
  bytes_read_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientReadMachineAuthResponse.bytes_read)
}
::std::string* CMsgClientReadMachineAuthResponse::mutable_bytes_read() {
  set_has_bytes_read();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientReadMachineAuthResponse.bytes_read)
  return bytes_read_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientReadMachineAuthResponse::release_bytes_read() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientReadMachineAuthResponse.bytes_read)
  clear_has_bytes_read();
  return bytes_read_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientReadMachineAuthResponse::set_allocated_bytes_read(::std::string* bytes_read) {
  if (bytes_read != NULL) {
    set_has_bytes_read();
  } else {
    clear_has_bytes_read();
  }
  bytes_read_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes_read);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientReadMachineAuthResponse.bytes_read)
}

// optional string filename_sentry = 9;
bool CMsgClientReadMachineAuthResponse::has_filename_sentry() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientReadMachineAuthResponse::set_has_filename_sentry() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientReadMachineAuthResponse::clear_has_filename_sentry() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientReadMachineAuthResponse::clear_filename_sentry() {
  filename_sentry_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename_sentry();
}
const ::std::string& CMsgClientReadMachineAuthResponse::filename_sentry() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry)
  return filename_sentry_.GetNoArena();
}
void CMsgClientReadMachineAuthResponse::set_filename_sentry(const ::std::string& value) {
  set_has_filename_sentry();
  filename_sentry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry)
}
#if LANG_CXX11
void CMsgClientReadMachineAuthResponse::set_filename_sentry(::std::string&& value) {
  set_has_filename_sentry();
  filename_sentry_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry)
}
#endif
void CMsgClientReadMachineAuthResponse::set_filename_sentry(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename_sentry();
  filename_sentry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry)
}
void CMsgClientReadMachineAuthResponse::set_filename_sentry(const char* value, size_t size) {
  set_has_filename_sentry();
  filename_sentry_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry)
}
::std::string* CMsgClientReadMachineAuthResponse::mutable_filename_sentry() {
  set_has_filename_sentry();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry)
  return filename_sentry_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientReadMachineAuthResponse::release_filename_sentry() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry)
  clear_has_filename_sentry();
  return filename_sentry_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientReadMachineAuthResponse::set_allocated_filename_sentry(::std::string* filename_sentry) {
  if (filename_sentry != NULL) {
    set_has_filename_sentry();
  } else {
    clear_has_filename_sentry();
  }
  filename_sentry_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename_sentry);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientReadMachineAuthResponse.filename_sentry)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUpdateMachineAuth::kFilenameFieldNumber;
const int CMsgClientUpdateMachineAuth::kOffsetFieldNumber;
const int CMsgClientUpdateMachineAuth::kCubtowriteFieldNumber;
const int CMsgClientUpdateMachineAuth::kBytesFieldNumber;
const int CMsgClientUpdateMachineAuth::kOtpTypeFieldNumber;
const int CMsgClientUpdateMachineAuth::kOtpIdentifierFieldNumber;
const int CMsgClientUpdateMachineAuth::kOtpSharedsecretFieldNumber;
const int CMsgClientUpdateMachineAuth::kOtpTimedriftFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUpdateMachineAuth::CMsgClientUpdateMachineAuth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUpdateMachineAuth)
}
CMsgClientUpdateMachineAuth::CMsgClientUpdateMachineAuth(const CMsgClientUpdateMachineAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bytes()) {
    bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
  }
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_identifier()) {
    otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
  }
  otp_sharedsecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_sharedsecret()) {
    otp_sharedsecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_sharedsecret_);
  }
  ::memcpy(&offset_, &from.offset_,
    reinterpret_cast<char*>(&otp_timedrift_) -
    reinterpret_cast<char*>(&offset_) + sizeof(otp_timedrift_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUpdateMachineAuth)
}

void CMsgClientUpdateMachineAuth::SharedCtor() {
  _cached_size_ = 0;
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_sharedsecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&offset_, 0, reinterpret_cast<char*>(&otp_timedrift_) -
    reinterpret_cast<char*>(&offset_) + sizeof(otp_timedrift_));
}

CMsgClientUpdateMachineAuth::~CMsgClientUpdateMachineAuth() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUpdateMachineAuth)
  SharedDtor();
}

void CMsgClientUpdateMachineAuth::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_sharedsecret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUpdateMachineAuth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUpdateMachineAuth::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUpdateMachineAuth& CMsgClientUpdateMachineAuth::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUpdateMachineAuth* CMsgClientUpdateMachineAuth::New(::google::protobuf::Arena* arena) const {
  CMsgClientUpdateMachineAuth* n = new CMsgClientUpdateMachineAuth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUpdateMachineAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUpdateMachineAuth)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_filename()) {
      GOOGLE_DCHECK(!filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*filename_.UnsafeRawStringPointer())->clear();
    }
    if (has_bytes()) {
      GOOGLE_DCHECK(!bytes_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bytes_.UnsafeRawStringPointer())->clear();
    }
    if (has_otp_identifier()) {
      GOOGLE_DCHECK(!otp_identifier_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*otp_identifier_.UnsafeRawStringPointer())->clear();
    }
    if (has_otp_sharedsecret()) {
      GOOGLE_DCHECK(!otp_sharedsecret_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*otp_sharedsecret_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&offset_, 0, reinterpret_cast<char*>(&otp_timedrift_) -
      reinterpret_cast<char*>(&offset_) + sizeof(otp_timedrift_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUpdateMachineAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUpdateMachineAuth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUpdateMachineAuth.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 offset = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cubtowrite = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_cubtowrite();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cubtowrite_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_otp_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string otp_identifier = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_otp_identifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->otp_identifier().data(), this->otp_identifier().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUpdateMachineAuth.otp_identifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes otp_sharedsecret = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_otp_sharedsecret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_timedrift = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_otp_timedrift();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_timedrift_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUpdateMachineAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUpdateMachineAuth)
  return false;
#undef DO_
}

void CMsgClientUpdateMachineAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUpdateMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuth.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->offset(), output);
  }

  // optional uint32 cubtowrite = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cubtowrite(), output);
  }

  // optional bytes bytes = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->bytes(), output);
  }

  // optional uint32 otp_type = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->otp_type(), output);
  }

  // optional string otp_identifier = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), this->otp_identifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuth.otp_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->otp_identifier(), output);
  }

  // optional bytes otp_sharedsecret = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->otp_sharedsecret(), output);
  }

  // optional uint32 otp_timedrift = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->otp_timedrift(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUpdateMachineAuth)
}

::google::protobuf::uint8* CMsgClientUpdateMachineAuth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUpdateMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuth.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 offset = 2;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->offset(), target);
  }

  // optional uint32 cubtowrite = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cubtowrite(), target);
  }

  // optional bytes bytes = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->bytes(), target);
  }

  // optional uint32 otp_type = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->otp_type(), target);
  }

  // optional string otp_identifier = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), this->otp_identifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuth.otp_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->otp_identifier(), target);
  }

  // optional bytes otp_sharedsecret = 7;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->otp_sharedsecret(), target);
  }

  // optional uint32 otp_timedrift = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->otp_timedrift(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUpdateMachineAuth)
  return target;
}

size_t CMsgClientUpdateMachineAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUpdateMachineAuth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes bytes = 4;
    if (has_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->bytes());
    }

    // optional string otp_identifier = 6;
    if (has_otp_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->otp_identifier());
    }

    // optional bytes otp_sharedsecret = 7;
    if (has_otp_sharedsecret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->otp_sharedsecret());
    }

    // optional uint32 offset = 2;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 cubtowrite = 3;
    if (has_cubtowrite()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cubtowrite());
    }

    // optional uint32 otp_type = 5;
    if (has_otp_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_type());
    }

    // optional uint32 otp_timedrift = 8;
    if (has_otp_timedrift()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_timedrift());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUpdateMachineAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUpdateMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUpdateMachineAuth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUpdateMachineAuth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUpdateMachineAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUpdateMachineAuth)
    MergeFrom(*source);
  }
}

void CMsgClientUpdateMachineAuth::MergeFrom(const CMsgClientUpdateMachineAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUpdateMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bytes();
      bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_otp_identifier();
      otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_otp_sharedsecret();
      otp_sharedsecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_sharedsecret_);
    }
    if (cached_has_bits & 0x00000010u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000020u) {
      cubtowrite_ = from.cubtowrite_;
    }
    if (cached_has_bits & 0x00000040u) {
      otp_type_ = from.otp_type_;
    }
    if (cached_has_bits & 0x00000080u) {
      otp_timedrift_ = from.otp_timedrift_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUpdateMachineAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUpdateMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUpdateMachineAuth::CopyFrom(const CMsgClientUpdateMachineAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUpdateMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUpdateMachineAuth::IsInitialized() const {
  return true;
}

void CMsgClientUpdateMachineAuth::Swap(CMsgClientUpdateMachineAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUpdateMachineAuth::InternalSwap(CMsgClientUpdateMachineAuth* other) {
  filename_.Swap(&other->filename_);
  bytes_.Swap(&other->bytes_);
  otp_identifier_.Swap(&other->otp_identifier_);
  otp_sharedsecret_.Swap(&other->otp_sharedsecret_);
  std::swap(offset_, other->offset_);
  std::swap(cubtowrite_, other->cubtowrite_);
  std::swap(otp_type_, other->otp_type_);
  std::swap(otp_timedrift_, other->otp_timedrift_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUpdateMachineAuth::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUpdateMachineAuth

// optional string filename = 1;
bool CMsgClientUpdateMachineAuth::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUpdateMachineAuth::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUpdateMachineAuth::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUpdateMachineAuth::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
const ::std::string& CMsgClientUpdateMachineAuth::filename() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuth.filename)
  return filename_.GetNoArena();
}
void CMsgClientUpdateMachineAuth::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuth.filename)
}
#if LANG_CXX11
void CMsgClientUpdateMachineAuth::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUpdateMachineAuth.filename)
}
#endif
void CMsgClientUpdateMachineAuth::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUpdateMachineAuth.filename)
}
void CMsgClientUpdateMachineAuth::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUpdateMachineAuth.filename)
}
::std::string* CMsgClientUpdateMachineAuth::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUpdateMachineAuth.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUpdateMachineAuth::release_filename() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUpdateMachineAuth.filename)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUpdateMachineAuth::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUpdateMachineAuth.filename)
}

// optional uint32 offset = 2;
bool CMsgClientUpdateMachineAuth::has_offset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientUpdateMachineAuth::set_has_offset() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientUpdateMachineAuth::clear_has_offset() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientUpdateMachineAuth::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
::google::protobuf::uint32 CMsgClientUpdateMachineAuth::offset() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuth.offset)
  return offset_;
}
void CMsgClientUpdateMachineAuth::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuth.offset)
}

// optional uint32 cubtowrite = 3;
bool CMsgClientUpdateMachineAuth::has_cubtowrite() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientUpdateMachineAuth::set_has_cubtowrite() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientUpdateMachineAuth::clear_has_cubtowrite() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientUpdateMachineAuth::clear_cubtowrite() {
  cubtowrite_ = 0u;
  clear_has_cubtowrite();
}
::google::protobuf::uint32 CMsgClientUpdateMachineAuth::cubtowrite() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuth.cubtowrite)
  return cubtowrite_;
}
void CMsgClientUpdateMachineAuth::set_cubtowrite(::google::protobuf::uint32 value) {
  set_has_cubtowrite();
  cubtowrite_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuth.cubtowrite)
}

// optional bytes bytes = 4;
bool CMsgClientUpdateMachineAuth::has_bytes() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUpdateMachineAuth::set_has_bytes() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUpdateMachineAuth::clear_has_bytes() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUpdateMachineAuth::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bytes();
}
const ::std::string& CMsgClientUpdateMachineAuth::bytes() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuth.bytes)
  return bytes_.GetNoArena();
}
void CMsgClientUpdateMachineAuth::set_bytes(const ::std::string& value) {
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuth.bytes)
}
#if LANG_CXX11
void CMsgClientUpdateMachineAuth::set_bytes(::std::string&& value) {
  set_has_bytes();
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUpdateMachineAuth.bytes)
}
#endif
void CMsgClientUpdateMachineAuth::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUpdateMachineAuth.bytes)
}
void CMsgClientUpdateMachineAuth::set_bytes(const void* value, size_t size) {
  set_has_bytes();
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUpdateMachineAuth.bytes)
}
::std::string* CMsgClientUpdateMachineAuth::mutable_bytes() {
  set_has_bytes();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUpdateMachineAuth.bytes)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUpdateMachineAuth::release_bytes() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUpdateMachineAuth.bytes)
  clear_has_bytes();
  return bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUpdateMachineAuth::set_allocated_bytes(::std::string* bytes) {
  if (bytes != NULL) {
    set_has_bytes();
  } else {
    clear_has_bytes();
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUpdateMachineAuth.bytes)
}

// optional uint32 otp_type = 5;
bool CMsgClientUpdateMachineAuth::has_otp_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientUpdateMachineAuth::set_has_otp_type() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientUpdateMachineAuth::clear_has_otp_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientUpdateMachineAuth::clear_otp_type() {
  otp_type_ = 0u;
  clear_has_otp_type();
}
::google::protobuf::uint32 CMsgClientUpdateMachineAuth::otp_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuth.otp_type)
  return otp_type_;
}
void CMsgClientUpdateMachineAuth::set_otp_type(::google::protobuf::uint32 value) {
  set_has_otp_type();
  otp_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuth.otp_type)
}

// optional string otp_identifier = 6;
bool CMsgClientUpdateMachineAuth::has_otp_identifier() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUpdateMachineAuth::set_has_otp_identifier() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUpdateMachineAuth::clear_has_otp_identifier() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUpdateMachineAuth::clear_otp_identifier() {
  otp_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_otp_identifier();
}
const ::std::string& CMsgClientUpdateMachineAuth::otp_identifier() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuth.otp_identifier)
  return otp_identifier_.GetNoArena();
}
void CMsgClientUpdateMachineAuth::set_otp_identifier(const ::std::string& value) {
  set_has_otp_identifier();
  otp_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuth.otp_identifier)
}
#if LANG_CXX11
void CMsgClientUpdateMachineAuth::set_otp_identifier(::std::string&& value) {
  set_has_otp_identifier();
  otp_identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUpdateMachineAuth.otp_identifier)
}
#endif
void CMsgClientUpdateMachineAuth::set_otp_identifier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_otp_identifier();
  otp_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUpdateMachineAuth.otp_identifier)
}
void CMsgClientUpdateMachineAuth::set_otp_identifier(const char* value, size_t size) {
  set_has_otp_identifier();
  otp_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUpdateMachineAuth.otp_identifier)
}
::std::string* CMsgClientUpdateMachineAuth::mutable_otp_identifier() {
  set_has_otp_identifier();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUpdateMachineAuth.otp_identifier)
  return otp_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUpdateMachineAuth::release_otp_identifier() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUpdateMachineAuth.otp_identifier)
  clear_has_otp_identifier();
  return otp_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUpdateMachineAuth::set_allocated_otp_identifier(::std::string* otp_identifier) {
  if (otp_identifier != NULL) {
    set_has_otp_identifier();
  } else {
    clear_has_otp_identifier();
  }
  otp_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), otp_identifier);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUpdateMachineAuth.otp_identifier)
}

// optional bytes otp_sharedsecret = 7;
bool CMsgClientUpdateMachineAuth::has_otp_sharedsecret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientUpdateMachineAuth::set_has_otp_sharedsecret() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientUpdateMachineAuth::clear_has_otp_sharedsecret() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientUpdateMachineAuth::clear_otp_sharedsecret() {
  otp_sharedsecret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_otp_sharedsecret();
}
const ::std::string& CMsgClientUpdateMachineAuth::otp_sharedsecret() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuth.otp_sharedsecret)
  return otp_sharedsecret_.GetNoArena();
}
void CMsgClientUpdateMachineAuth::set_otp_sharedsecret(const ::std::string& value) {
  set_has_otp_sharedsecret();
  otp_sharedsecret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuth.otp_sharedsecret)
}
#if LANG_CXX11
void CMsgClientUpdateMachineAuth::set_otp_sharedsecret(::std::string&& value) {
  set_has_otp_sharedsecret();
  otp_sharedsecret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUpdateMachineAuth.otp_sharedsecret)
}
#endif
void CMsgClientUpdateMachineAuth::set_otp_sharedsecret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_otp_sharedsecret();
  otp_sharedsecret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUpdateMachineAuth.otp_sharedsecret)
}
void CMsgClientUpdateMachineAuth::set_otp_sharedsecret(const void* value, size_t size) {
  set_has_otp_sharedsecret();
  otp_sharedsecret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUpdateMachineAuth.otp_sharedsecret)
}
::std::string* CMsgClientUpdateMachineAuth::mutable_otp_sharedsecret() {
  set_has_otp_sharedsecret();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUpdateMachineAuth.otp_sharedsecret)
  return otp_sharedsecret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUpdateMachineAuth::release_otp_sharedsecret() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUpdateMachineAuth.otp_sharedsecret)
  clear_has_otp_sharedsecret();
  return otp_sharedsecret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUpdateMachineAuth::set_allocated_otp_sharedsecret(::std::string* otp_sharedsecret) {
  if (otp_sharedsecret != NULL) {
    set_has_otp_sharedsecret();
  } else {
    clear_has_otp_sharedsecret();
  }
  otp_sharedsecret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), otp_sharedsecret);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUpdateMachineAuth.otp_sharedsecret)
}

// optional uint32 otp_timedrift = 8;
bool CMsgClientUpdateMachineAuth::has_otp_timedrift() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgClientUpdateMachineAuth::set_has_otp_timedrift() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgClientUpdateMachineAuth::clear_has_otp_timedrift() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgClientUpdateMachineAuth::clear_otp_timedrift() {
  otp_timedrift_ = 0u;
  clear_has_otp_timedrift();
}
::google::protobuf::uint32 CMsgClientUpdateMachineAuth::otp_timedrift() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuth.otp_timedrift)
  return otp_timedrift_;
}
void CMsgClientUpdateMachineAuth::set_otp_timedrift(::google::protobuf::uint32 value) {
  set_has_otp_timedrift();
  otp_timedrift_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuth.otp_timedrift)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUpdateMachineAuthResponse::kFilenameFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kEresultFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kFilesizeFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kShaFileFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kGetlasterrorFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kOffsetFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kCubwroteFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kOtpTypeFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kOtpValueFieldNumber;
const int CMsgClientUpdateMachineAuthResponse::kOtpIdentifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUpdateMachineAuthResponse::CMsgClientUpdateMachineAuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUpdateMachineAuthResponse)
}
CMsgClientUpdateMachineAuthResponse::CMsgClientUpdateMachineAuthResponse(const CMsgClientUpdateMachineAuthResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_file()) {
    sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
  }
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_identifier()) {
    otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
  }
  ::memcpy(&eresult_, &from.eresult_,
    reinterpret_cast<char*>(&otp_value_) -
    reinterpret_cast<char*>(&eresult_) + sizeof(otp_value_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUpdateMachineAuthResponse)
}

void CMsgClientUpdateMachineAuthResponse::SharedCtor() {
  _cached_size_ = 0;
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&eresult_, 0, reinterpret_cast<char*>(&otp_value_) -
    reinterpret_cast<char*>(&eresult_) + sizeof(otp_value_));
}

CMsgClientUpdateMachineAuthResponse::~CMsgClientUpdateMachineAuthResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUpdateMachineAuthResponse)
  SharedDtor();
}

void CMsgClientUpdateMachineAuthResponse::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUpdateMachineAuthResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUpdateMachineAuthResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUpdateMachineAuthResponse& CMsgClientUpdateMachineAuthResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUpdateMachineAuthResponse* CMsgClientUpdateMachineAuthResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientUpdateMachineAuthResponse* n = new CMsgClientUpdateMachineAuthResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUpdateMachineAuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_filename()) {
      GOOGLE_DCHECK(!filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*filename_.UnsafeRawStringPointer())->clear();
    }
    if (has_sha_file()) {
      GOOGLE_DCHECK(!sha_file_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sha_file_.UnsafeRawStringPointer())->clear();
    }
    if (has_otp_identifier()) {
      GOOGLE_DCHECK(!otp_identifier_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*otp_identifier_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 248u) {
    ::memset(&eresult_, 0, reinterpret_cast<char*>(&cubwrote_) -
      reinterpret_cast<char*>(&eresult_) + sizeof(cubwrote_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&otp_type_, 0, reinterpret_cast<char*>(&otp_value_) -
      reinterpret_cast<char*>(&otp_type_) + sizeof(otp_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUpdateMachineAuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUpdateMachineAuthResponse.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 filesize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_filesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_file = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 getlasterror = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_getlasterror();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &getlasterror_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 offset = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_offset();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cubwrote = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_cubwrote();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cubwrote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 otp_type = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_otp_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &otp_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_value = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_otp_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string otp_identifier = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_otp_identifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->otp_identifier().data(), this->otp_identifier().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUpdateMachineAuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUpdateMachineAuthResponse)
  return false;
#undef DO_
}

void CMsgClientUpdateMachineAuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuthResponse.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->filesize(), output);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sha_file(), output);
  }

  // optional uint32 getlasterror = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->getlasterror(), output);
  }

  // optional uint32 offset = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->offset(), output);
  }

  // optional uint32 cubwrote = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->cubwrote(), output);
  }

  // optional int32 otp_type = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->otp_type(), output);
  }

  // optional uint32 otp_value = 9;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->otp_value(), output);
  }

  // optional string otp_identifier = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), this->otp_identifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->otp_identifier(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUpdateMachineAuthResponse)
}

::google::protobuf::uint8* CMsgClientUpdateMachineAuthResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuthResponse.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->filesize(), target);
  }

  // optional bytes sha_file = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sha_file(), target);
  }

  // optional uint32 getlasterror = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->getlasterror(), target);
  }

  // optional uint32 offset = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->offset(), target);
  }

  // optional uint32 cubwrote = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->cubwrote(), target);
  }

  // optional int32 otp_type = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->otp_type(), target);
  }

  // optional uint32 otp_value = 9;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->otp_value(), target);
  }

  // optional string otp_identifier = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), this->otp_identifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->otp_identifier(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUpdateMachineAuthResponse)
  return target;
}

size_t CMsgClientUpdateMachineAuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes sha_file = 4;
    if (has_sha_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_file());
    }

    // optional string otp_identifier = 10;
    if (has_otp_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->otp_identifier());
    }

    // optional uint32 eresult = 2;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional uint32 filesize = 3;
    if (has_filesize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filesize());
    }

    // optional uint32 getlasterror = 5;
    if (has_getlasterror()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->getlasterror());
    }

    // optional uint32 offset = 6;
    if (has_offset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->offset());
    }

    // optional uint32 cubwrote = 7;
    if (has_cubwrote()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cubwrote());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional int32 otp_type = 8;
    if (has_otp_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->otp_type());
    }

    // optional uint32 otp_value = 9;
    if (has_otp_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUpdateMachineAuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUpdateMachineAuthResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUpdateMachineAuthResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUpdateMachineAuthResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUpdateMachineAuthResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUpdateMachineAuthResponse::MergeFrom(const CMsgClientUpdateMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sha_file();
      sha_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_file_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_otp_identifier();
      otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
    }
    if (cached_has_bits & 0x00000008u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000010u) {
      filesize_ = from.filesize_;
    }
    if (cached_has_bits & 0x00000020u) {
      getlasterror_ = from.getlasterror_;
    }
    if (cached_has_bits & 0x00000040u) {
      offset_ = from.offset_;
    }
    if (cached_has_bits & 0x00000080u) {
      cubwrote_ = from.cubwrote_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      otp_type_ = from.otp_type_;
    }
    if (cached_has_bits & 0x00000200u) {
      otp_value_ = from.otp_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUpdateMachineAuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUpdateMachineAuthResponse::CopyFrom(const CMsgClientUpdateMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUpdateMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUpdateMachineAuthResponse::IsInitialized() const {
  return true;
}

void CMsgClientUpdateMachineAuthResponse::Swap(CMsgClientUpdateMachineAuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUpdateMachineAuthResponse::InternalSwap(CMsgClientUpdateMachineAuthResponse* other) {
  filename_.Swap(&other->filename_);
  sha_file_.Swap(&other->sha_file_);
  otp_identifier_.Swap(&other->otp_identifier_);
  std::swap(eresult_, other->eresult_);
  std::swap(filesize_, other->filesize_);
  std::swap(getlasterror_, other->getlasterror_);
  std::swap(offset_, other->offset_);
  std::swap(cubwrote_, other->cubwrote_);
  std::swap(otp_type_, other->otp_type_);
  std::swap(otp_value_, other->otp_value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUpdateMachineAuthResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUpdateMachineAuthResponse

// optional string filename = 1;
bool CMsgClientUpdateMachineAuthResponse::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUpdateMachineAuthResponse::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUpdateMachineAuthResponse::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUpdateMachineAuthResponse::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
const ::std::string& CMsgClientUpdateMachineAuthResponse::filename() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuthResponse.filename)
  return filename_.GetNoArena();
}
void CMsgClientUpdateMachineAuthResponse::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuthResponse.filename)
}
#if LANG_CXX11
void CMsgClientUpdateMachineAuthResponse::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUpdateMachineAuthResponse.filename)
}
#endif
void CMsgClientUpdateMachineAuthResponse::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUpdateMachineAuthResponse.filename)
}
void CMsgClientUpdateMachineAuthResponse::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUpdateMachineAuthResponse.filename)
}
::std::string* CMsgClientUpdateMachineAuthResponse::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUpdateMachineAuthResponse.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUpdateMachineAuthResponse::release_filename() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUpdateMachineAuthResponse.filename)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUpdateMachineAuthResponse::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUpdateMachineAuthResponse.filename)
}

// optional uint32 eresult = 2;
bool CMsgClientUpdateMachineAuthResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientUpdateMachineAuthResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientUpdateMachineAuthResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientUpdateMachineAuthResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgClientUpdateMachineAuthResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuthResponse.eresult)
  return eresult_;
}
void CMsgClientUpdateMachineAuthResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuthResponse.eresult)
}

// optional uint32 filesize = 3;
bool CMsgClientUpdateMachineAuthResponse::has_filesize() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientUpdateMachineAuthResponse::set_has_filesize() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientUpdateMachineAuthResponse::clear_has_filesize() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientUpdateMachineAuthResponse::clear_filesize() {
  filesize_ = 0u;
  clear_has_filesize();
}
::google::protobuf::uint32 CMsgClientUpdateMachineAuthResponse::filesize() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuthResponse.filesize)
  return filesize_;
}
void CMsgClientUpdateMachineAuthResponse::set_filesize(::google::protobuf::uint32 value) {
  set_has_filesize();
  filesize_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuthResponse.filesize)
}

// optional bytes sha_file = 4;
bool CMsgClientUpdateMachineAuthResponse::has_sha_file() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUpdateMachineAuthResponse::set_has_sha_file() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUpdateMachineAuthResponse::clear_has_sha_file() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUpdateMachineAuthResponse::clear_sha_file() {
  sha_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sha_file();
}
const ::std::string& CMsgClientUpdateMachineAuthResponse::sha_file() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuthResponse.sha_file)
  return sha_file_.GetNoArena();
}
void CMsgClientUpdateMachineAuthResponse::set_sha_file(const ::std::string& value) {
  set_has_sha_file();
  sha_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuthResponse.sha_file)
}
#if LANG_CXX11
void CMsgClientUpdateMachineAuthResponse::set_sha_file(::std::string&& value) {
  set_has_sha_file();
  sha_file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUpdateMachineAuthResponse.sha_file)
}
#endif
void CMsgClientUpdateMachineAuthResponse::set_sha_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sha_file();
  sha_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUpdateMachineAuthResponse.sha_file)
}
void CMsgClientUpdateMachineAuthResponse::set_sha_file(const void* value, size_t size) {
  set_has_sha_file();
  sha_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUpdateMachineAuthResponse.sha_file)
}
::std::string* CMsgClientUpdateMachineAuthResponse::mutable_sha_file() {
  set_has_sha_file();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUpdateMachineAuthResponse.sha_file)
  return sha_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUpdateMachineAuthResponse::release_sha_file() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUpdateMachineAuthResponse.sha_file)
  clear_has_sha_file();
  return sha_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUpdateMachineAuthResponse::set_allocated_sha_file(::std::string* sha_file) {
  if (sha_file != NULL) {
    set_has_sha_file();
  } else {
    clear_has_sha_file();
  }
  sha_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha_file);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUpdateMachineAuthResponse.sha_file)
}

// optional uint32 getlasterror = 5;
bool CMsgClientUpdateMachineAuthResponse::has_getlasterror() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientUpdateMachineAuthResponse::set_has_getlasterror() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientUpdateMachineAuthResponse::clear_has_getlasterror() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientUpdateMachineAuthResponse::clear_getlasterror() {
  getlasterror_ = 0u;
  clear_has_getlasterror();
}
::google::protobuf::uint32 CMsgClientUpdateMachineAuthResponse::getlasterror() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuthResponse.getlasterror)
  return getlasterror_;
}
void CMsgClientUpdateMachineAuthResponse::set_getlasterror(::google::protobuf::uint32 value) {
  set_has_getlasterror();
  getlasterror_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuthResponse.getlasterror)
}

// optional uint32 offset = 6;
bool CMsgClientUpdateMachineAuthResponse::has_offset() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientUpdateMachineAuthResponse::set_has_offset() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientUpdateMachineAuthResponse::clear_has_offset() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientUpdateMachineAuthResponse::clear_offset() {
  offset_ = 0u;
  clear_has_offset();
}
::google::protobuf::uint32 CMsgClientUpdateMachineAuthResponse::offset() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuthResponse.offset)
  return offset_;
}
void CMsgClientUpdateMachineAuthResponse::set_offset(::google::protobuf::uint32 value) {
  set_has_offset();
  offset_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuthResponse.offset)
}

// optional uint32 cubwrote = 7;
bool CMsgClientUpdateMachineAuthResponse::has_cubwrote() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgClientUpdateMachineAuthResponse::set_has_cubwrote() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgClientUpdateMachineAuthResponse::clear_has_cubwrote() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgClientUpdateMachineAuthResponse::clear_cubwrote() {
  cubwrote_ = 0u;
  clear_has_cubwrote();
}
::google::protobuf::uint32 CMsgClientUpdateMachineAuthResponse::cubwrote() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuthResponse.cubwrote)
  return cubwrote_;
}
void CMsgClientUpdateMachineAuthResponse::set_cubwrote(::google::protobuf::uint32 value) {
  set_has_cubwrote();
  cubwrote_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuthResponse.cubwrote)
}

// optional int32 otp_type = 8;
bool CMsgClientUpdateMachineAuthResponse::has_otp_type() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgClientUpdateMachineAuthResponse::set_has_otp_type() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgClientUpdateMachineAuthResponse::clear_has_otp_type() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgClientUpdateMachineAuthResponse::clear_otp_type() {
  otp_type_ = 0;
  clear_has_otp_type();
}
::google::protobuf::int32 CMsgClientUpdateMachineAuthResponse::otp_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuthResponse.otp_type)
  return otp_type_;
}
void CMsgClientUpdateMachineAuthResponse::set_otp_type(::google::protobuf::int32 value) {
  set_has_otp_type();
  otp_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuthResponse.otp_type)
}

// optional uint32 otp_value = 9;
bool CMsgClientUpdateMachineAuthResponse::has_otp_value() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CMsgClientUpdateMachineAuthResponse::set_has_otp_value() {
  _has_bits_[0] |= 0x00000200u;
}
void CMsgClientUpdateMachineAuthResponse::clear_has_otp_value() {
  _has_bits_[0] &= ~0x00000200u;
}
void CMsgClientUpdateMachineAuthResponse::clear_otp_value() {
  otp_value_ = 0u;
  clear_has_otp_value();
}
::google::protobuf::uint32 CMsgClientUpdateMachineAuthResponse::otp_value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuthResponse.otp_value)
  return otp_value_;
}
void CMsgClientUpdateMachineAuthResponse::set_otp_value(::google::protobuf::uint32 value) {
  set_has_otp_value();
  otp_value_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuthResponse.otp_value)
}

// optional string otp_identifier = 10;
bool CMsgClientUpdateMachineAuthResponse::has_otp_identifier() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUpdateMachineAuthResponse::set_has_otp_identifier() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUpdateMachineAuthResponse::clear_has_otp_identifier() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUpdateMachineAuthResponse::clear_otp_identifier() {
  otp_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_otp_identifier();
}
const ::std::string& CMsgClientUpdateMachineAuthResponse::otp_identifier() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier)
  return otp_identifier_.GetNoArena();
}
void CMsgClientUpdateMachineAuthResponse::set_otp_identifier(const ::std::string& value) {
  set_has_otp_identifier();
  otp_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier)
}
#if LANG_CXX11
void CMsgClientUpdateMachineAuthResponse::set_otp_identifier(::std::string&& value) {
  set_has_otp_identifier();
  otp_identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier)
}
#endif
void CMsgClientUpdateMachineAuthResponse::set_otp_identifier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_otp_identifier();
  otp_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier)
}
void CMsgClientUpdateMachineAuthResponse::set_otp_identifier(const char* value, size_t size) {
  set_has_otp_identifier();
  otp_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier)
}
::std::string* CMsgClientUpdateMachineAuthResponse::mutable_otp_identifier() {
  set_has_otp_identifier();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier)
  return otp_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUpdateMachineAuthResponse::release_otp_identifier() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier)
  clear_has_otp_identifier();
  return otp_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUpdateMachineAuthResponse::set_allocated_otp_identifier(::std::string* otp_identifier) {
  if (otp_identifier != NULL) {
    set_has_otp_identifier();
  } else {
    clear_has_otp_identifier();
  }
  otp_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), otp_identifier);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUpdateMachineAuthResponse.otp_identifier)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestMachineAuth::kFilenameFieldNumber;
const int CMsgClientRequestMachineAuth::kEresultSentryfileFieldNumber;
const int CMsgClientRequestMachineAuth::kFilesizeFieldNumber;
const int CMsgClientRequestMachineAuth::kShaSentryfileFieldNumber;
const int CMsgClientRequestMachineAuth::kLockAccountActionFieldNumber;
const int CMsgClientRequestMachineAuth::kOtpTypeFieldNumber;
const int CMsgClientRequestMachineAuth::kOtpIdentifierFieldNumber;
const int CMsgClientRequestMachineAuth::kOtpSharedsecretFieldNumber;
const int CMsgClientRequestMachineAuth::kOtpValueFieldNumber;
const int CMsgClientRequestMachineAuth::kMachineNameFieldNumber;
const int CMsgClientRequestMachineAuth::kMachineNameUserchosenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestMachineAuth::CMsgClientRequestMachineAuth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestMachineAuth)
}
CMsgClientRequestMachineAuth::CMsgClientRequestMachineAuth(const CMsgClientRequestMachineAuth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  sha_sentryfile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sha_sentryfile()) {
    sha_sentryfile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_sentryfile_);
  }
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_identifier()) {
    otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
  }
  otp_sharedsecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp_sharedsecret()) {
    otp_sharedsecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_sharedsecret_);
  }
  machine_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_name()) {
    machine_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_name_);
  }
  machine_name_userchosen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_name_userchosen()) {
    machine_name_userchosen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_name_userchosen_);
  }
  ::memcpy(&eresult_sentryfile_, &from.eresult_sentryfile_,
    reinterpret_cast<char*>(&otp_value_) -
    reinterpret_cast<char*>(&eresult_sentryfile_) + sizeof(otp_value_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestMachineAuth)
}

void CMsgClientRequestMachineAuth::SharedCtor() {
  _cached_size_ = 0;
  filename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_sentryfile_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_sharedsecret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_name_userchosen_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&eresult_sentryfile_, 0, reinterpret_cast<char*>(&otp_value_) -
    reinterpret_cast<char*>(&eresult_sentryfile_) + sizeof(otp_value_));
}

CMsgClientRequestMachineAuth::~CMsgClientRequestMachineAuth() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestMachineAuth)
  SharedDtor();
}

void CMsgClientRequestMachineAuth::SharedDtor() {
  filename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sha_sentryfile_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_identifier_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  otp_sharedsecret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  machine_name_userchosen_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRequestMachineAuth::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRequestMachineAuth::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestMachineAuth& CMsgClientRequestMachineAuth::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRequestMachineAuth* CMsgClientRequestMachineAuth::New(::google::protobuf::Arena* arena) const {
  CMsgClientRequestMachineAuth* n = new CMsgClientRequestMachineAuth;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRequestMachineAuth::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestMachineAuth)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_filename()) {
      GOOGLE_DCHECK(!filename_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*filename_.UnsafeRawStringPointer())->clear();
    }
    if (has_sha_sentryfile()) {
      GOOGLE_DCHECK(!sha_sentryfile_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sha_sentryfile_.UnsafeRawStringPointer())->clear();
    }
    if (has_otp_identifier()) {
      GOOGLE_DCHECK(!otp_identifier_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*otp_identifier_.UnsafeRawStringPointer())->clear();
    }
    if (has_otp_sharedsecret()) {
      GOOGLE_DCHECK(!otp_sharedsecret_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*otp_sharedsecret_.UnsafeRawStringPointer())->clear();
    }
    if (has_machine_name()) {
      GOOGLE_DCHECK(!machine_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*machine_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_machine_name_userchosen()) {
      GOOGLE_DCHECK(!machine_name_userchosen_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*machine_name_userchosen_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 192u) {
    ::memset(&eresult_sentryfile_, 0, reinterpret_cast<char*>(&filesize_) -
      reinterpret_cast<char*>(&eresult_sentryfile_) + sizeof(filesize_));
  }
  if (_has_bits_[8 / 32] & 1792u) {
    ::memset(&lock_account_action_, 0, reinterpret_cast<char*>(&otp_value_) -
      reinterpret_cast<char*>(&lock_account_action_) + sizeof(otp_value_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestMachineAuth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestMachineAuth)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), this->filename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestMachineAuth.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult_sentryfile = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_eresult_sentryfile();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_sentryfile_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 filesize = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_filesize();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &filesize_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes sha_sentryfile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sha_sentryfile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lock_account_action = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_lock_account_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lock_account_action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_type = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_otp_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string otp_identifier = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_otp_identifier()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->otp_identifier().data(), this->otp_identifier().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestMachineAuth.otp_identifier");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes otp_sharedsecret = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_otp_sharedsecret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 otp_value = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_otp_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &otp_value_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string machine_name = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_name().data(), this->machine_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestMachineAuth.machine_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string machine_name_userchosen = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_machine_name_userchosen()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->machine_name_userchosen().data(), this->machine_name_userchosen().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestMachineAuth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestMachineAuth)
  return false;
#undef DO_
}

void CMsgClientRequestMachineAuth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.filename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  // optional uint32 eresult_sentryfile = 2;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult_sentryfile(), output);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->filesize(), output);
  }

  // optional bytes sha_sentryfile = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->sha_sentryfile(), output);
  }

  // optional int32 lock_account_action = 6;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->lock_account_action(), output);
  }

  // optional uint32 otp_type = 7;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->otp_type(), output);
  }

  // optional string otp_identifier = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), this->otp_identifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.otp_identifier");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->otp_identifier(), output);
  }

  // optional bytes otp_sharedsecret = 9;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->otp_sharedsecret(), output);
  }

  // optional uint32 otp_value = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->otp_value(), output);
  }

  // optional string machine_name = 11;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_name().data(), this->machine_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.machine_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->machine_name(), output);
  }

  // optional string machine_name_userchosen = 12;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_name_userchosen().data(), this->machine_name_userchosen().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->machine_name_userchosen(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestMachineAuth)
}

::google::protobuf::uint8* CMsgClientRequestMachineAuth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestMachineAuth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), this->filename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.filename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  // optional uint32 eresult_sentryfile = 2;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult_sentryfile(), target);
  }

  // optional uint32 filesize = 3;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->filesize(), target);
  }

  // optional bytes sha_sentryfile = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->sha_sentryfile(), target);
  }

  // optional int32 lock_account_action = 6;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->lock_account_action(), target);
  }

  // optional uint32 otp_type = 7;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->otp_type(), target);
  }

  // optional string otp_identifier = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp_identifier().data(), this->otp_identifier().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.otp_identifier");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->otp_identifier(), target);
  }

  // optional bytes otp_sharedsecret = 9;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->otp_sharedsecret(), target);
  }

  // optional uint32 otp_value = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->otp_value(), target);
  }

  // optional string machine_name = 11;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_name().data(), this->machine_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.machine_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->machine_name(), target);
  }

  // optional string machine_name_userchosen = 12;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->machine_name_userchosen().data(), this->machine_name_userchosen().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->machine_name_userchosen(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestMachineAuth)
  return target;
}

size_t CMsgClientRequestMachineAuth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestMachineAuth)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string filename = 1;
    if (has_filename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filename());
    }

    // optional bytes sha_sentryfile = 4;
    if (has_sha_sentryfile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sha_sentryfile());
    }

    // optional string otp_identifier = 8;
    if (has_otp_identifier()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->otp_identifier());
    }

    // optional bytes otp_sharedsecret = 9;
    if (has_otp_sharedsecret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->otp_sharedsecret());
    }

    // optional string machine_name = 11;
    if (has_machine_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->machine_name());
    }

    // optional string machine_name_userchosen = 12;
    if (has_machine_name_userchosen()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->machine_name_userchosen());
    }

    // optional uint32 eresult_sentryfile = 2;
    if (has_eresult_sentryfile()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult_sentryfile());
    }

    // optional uint32 filesize = 3;
    if (has_filesize()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->filesize());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional int32 lock_account_action = 6;
    if (has_lock_account_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lock_account_action());
    }

    // optional uint32 otp_type = 7;
    if (has_otp_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_type());
    }

    // optional uint32 otp_value = 10;
    if (has_otp_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->otp_value());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRequestMachineAuth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestMachineAuth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestMachineAuth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestMachineAuth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestMachineAuth)
    MergeFrom(*source);
  }
}

void CMsgClientRequestMachineAuth::MergeFrom(const CMsgClientRequestMachineAuth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestMachineAuth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filename();
      filename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filename_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sha_sentryfile();
      sha_sentryfile_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sha_sentryfile_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_otp_identifier();
      otp_identifier_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_identifier_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_otp_sharedsecret();
      otp_sharedsecret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_sharedsecret_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_machine_name();
      machine_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_name_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_machine_name_userchosen();
      machine_name_userchosen_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_name_userchosen_);
    }
    if (cached_has_bits & 0x00000040u) {
      eresult_sentryfile_ = from.eresult_sentryfile_;
    }
    if (cached_has_bits & 0x00000080u) {
      filesize_ = from.filesize_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      lock_account_action_ = from.lock_account_action_;
    }
    if (cached_has_bits & 0x00000200u) {
      otp_type_ = from.otp_type_;
    }
    if (cached_has_bits & 0x00000400u) {
      otp_value_ = from.otp_value_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestMachineAuth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestMachineAuth::CopyFrom(const CMsgClientRequestMachineAuth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestMachineAuth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestMachineAuth::IsInitialized() const {
  return true;
}

void CMsgClientRequestMachineAuth::Swap(CMsgClientRequestMachineAuth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestMachineAuth::InternalSwap(CMsgClientRequestMachineAuth* other) {
  filename_.Swap(&other->filename_);
  sha_sentryfile_.Swap(&other->sha_sentryfile_);
  otp_identifier_.Swap(&other->otp_identifier_);
  otp_sharedsecret_.Swap(&other->otp_sharedsecret_);
  machine_name_.Swap(&other->machine_name_);
  machine_name_userchosen_.Swap(&other->machine_name_userchosen_);
  std::swap(eresult_sentryfile_, other->eresult_sentryfile_);
  std::swap(filesize_, other->filesize_);
  std::swap(lock_account_action_, other->lock_account_action_);
  std::swap(otp_type_, other->otp_type_);
  std::swap(otp_value_, other->otp_value_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRequestMachineAuth::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRequestMachineAuth

// optional string filename = 1;
bool CMsgClientRequestMachineAuth::has_filename() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientRequestMachineAuth::set_has_filename() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientRequestMachineAuth::clear_has_filename() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientRequestMachineAuth::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
const ::std::string& CMsgClientRequestMachineAuth::filename() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestMachineAuth.filename)
  return filename_.GetNoArena();
}
void CMsgClientRequestMachineAuth::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestMachineAuth.filename)
}
#if LANG_CXX11
void CMsgClientRequestMachineAuth::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRequestMachineAuth.filename)
}
#endif
void CMsgClientRequestMachineAuth::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRequestMachineAuth.filename)
}
void CMsgClientRequestMachineAuth::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRequestMachineAuth.filename)
}
::std::string* CMsgClientRequestMachineAuth::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRequestMachineAuth.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRequestMachineAuth::release_filename() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRequestMachineAuth.filename)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRequestMachineAuth::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRequestMachineAuth.filename)
}

// optional uint32 eresult_sentryfile = 2;
bool CMsgClientRequestMachineAuth::has_eresult_sentryfile() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientRequestMachineAuth::set_has_eresult_sentryfile() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientRequestMachineAuth::clear_has_eresult_sentryfile() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientRequestMachineAuth::clear_eresult_sentryfile() {
  eresult_sentryfile_ = 0u;
  clear_has_eresult_sentryfile();
}
::google::protobuf::uint32 CMsgClientRequestMachineAuth::eresult_sentryfile() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestMachineAuth.eresult_sentryfile)
  return eresult_sentryfile_;
}
void CMsgClientRequestMachineAuth::set_eresult_sentryfile(::google::protobuf::uint32 value) {
  set_has_eresult_sentryfile();
  eresult_sentryfile_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestMachineAuth.eresult_sentryfile)
}

// optional uint32 filesize = 3;
bool CMsgClientRequestMachineAuth::has_filesize() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgClientRequestMachineAuth::set_has_filesize() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgClientRequestMachineAuth::clear_has_filesize() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgClientRequestMachineAuth::clear_filesize() {
  filesize_ = 0u;
  clear_has_filesize();
}
::google::protobuf::uint32 CMsgClientRequestMachineAuth::filesize() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestMachineAuth.filesize)
  return filesize_;
}
void CMsgClientRequestMachineAuth::set_filesize(::google::protobuf::uint32 value) {
  set_has_filesize();
  filesize_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestMachineAuth.filesize)
}

// optional bytes sha_sentryfile = 4;
bool CMsgClientRequestMachineAuth::has_sha_sentryfile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientRequestMachineAuth::set_has_sha_sentryfile() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientRequestMachineAuth::clear_has_sha_sentryfile() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientRequestMachineAuth::clear_sha_sentryfile() {
  sha_sentryfile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sha_sentryfile();
}
const ::std::string& CMsgClientRequestMachineAuth::sha_sentryfile() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestMachineAuth.sha_sentryfile)
  return sha_sentryfile_.GetNoArena();
}
void CMsgClientRequestMachineAuth::set_sha_sentryfile(const ::std::string& value) {
  set_has_sha_sentryfile();
  sha_sentryfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestMachineAuth.sha_sentryfile)
}
#if LANG_CXX11
void CMsgClientRequestMachineAuth::set_sha_sentryfile(::std::string&& value) {
  set_has_sha_sentryfile();
  sha_sentryfile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRequestMachineAuth.sha_sentryfile)
}
#endif
void CMsgClientRequestMachineAuth::set_sha_sentryfile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sha_sentryfile();
  sha_sentryfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRequestMachineAuth.sha_sentryfile)
}
void CMsgClientRequestMachineAuth::set_sha_sentryfile(const void* value, size_t size) {
  set_has_sha_sentryfile();
  sha_sentryfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRequestMachineAuth.sha_sentryfile)
}
::std::string* CMsgClientRequestMachineAuth::mutable_sha_sentryfile() {
  set_has_sha_sentryfile();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRequestMachineAuth.sha_sentryfile)
  return sha_sentryfile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRequestMachineAuth::release_sha_sentryfile() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRequestMachineAuth.sha_sentryfile)
  clear_has_sha_sentryfile();
  return sha_sentryfile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRequestMachineAuth::set_allocated_sha_sentryfile(::std::string* sha_sentryfile) {
  if (sha_sentryfile != NULL) {
    set_has_sha_sentryfile();
  } else {
    clear_has_sha_sentryfile();
  }
  sha_sentryfile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sha_sentryfile);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRequestMachineAuth.sha_sentryfile)
}

// optional int32 lock_account_action = 6;
bool CMsgClientRequestMachineAuth::has_lock_account_action() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgClientRequestMachineAuth::set_has_lock_account_action() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgClientRequestMachineAuth::clear_has_lock_account_action() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgClientRequestMachineAuth::clear_lock_account_action() {
  lock_account_action_ = 0;
  clear_has_lock_account_action();
}
::google::protobuf::int32 CMsgClientRequestMachineAuth::lock_account_action() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestMachineAuth.lock_account_action)
  return lock_account_action_;
}
void CMsgClientRequestMachineAuth::set_lock_account_action(::google::protobuf::int32 value) {
  set_has_lock_account_action();
  lock_account_action_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestMachineAuth.lock_account_action)
}

// optional uint32 otp_type = 7;
bool CMsgClientRequestMachineAuth::has_otp_type() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CMsgClientRequestMachineAuth::set_has_otp_type() {
  _has_bits_[0] |= 0x00000200u;
}
void CMsgClientRequestMachineAuth::clear_has_otp_type() {
  _has_bits_[0] &= ~0x00000200u;
}
void CMsgClientRequestMachineAuth::clear_otp_type() {
  otp_type_ = 0u;
  clear_has_otp_type();
}
::google::protobuf::uint32 CMsgClientRequestMachineAuth::otp_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestMachineAuth.otp_type)
  return otp_type_;
}
void CMsgClientRequestMachineAuth::set_otp_type(::google::protobuf::uint32 value) {
  set_has_otp_type();
  otp_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestMachineAuth.otp_type)
}

// optional string otp_identifier = 8;
bool CMsgClientRequestMachineAuth::has_otp_identifier() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientRequestMachineAuth::set_has_otp_identifier() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientRequestMachineAuth::clear_has_otp_identifier() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientRequestMachineAuth::clear_otp_identifier() {
  otp_identifier_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_otp_identifier();
}
const ::std::string& CMsgClientRequestMachineAuth::otp_identifier() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestMachineAuth.otp_identifier)
  return otp_identifier_.GetNoArena();
}
void CMsgClientRequestMachineAuth::set_otp_identifier(const ::std::string& value) {
  set_has_otp_identifier();
  otp_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestMachineAuth.otp_identifier)
}
#if LANG_CXX11
void CMsgClientRequestMachineAuth::set_otp_identifier(::std::string&& value) {
  set_has_otp_identifier();
  otp_identifier_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRequestMachineAuth.otp_identifier)
}
#endif
void CMsgClientRequestMachineAuth::set_otp_identifier(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_otp_identifier();
  otp_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRequestMachineAuth.otp_identifier)
}
void CMsgClientRequestMachineAuth::set_otp_identifier(const char* value, size_t size) {
  set_has_otp_identifier();
  otp_identifier_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRequestMachineAuth.otp_identifier)
}
::std::string* CMsgClientRequestMachineAuth::mutable_otp_identifier() {
  set_has_otp_identifier();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRequestMachineAuth.otp_identifier)
  return otp_identifier_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRequestMachineAuth::release_otp_identifier() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRequestMachineAuth.otp_identifier)
  clear_has_otp_identifier();
  return otp_identifier_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRequestMachineAuth::set_allocated_otp_identifier(::std::string* otp_identifier) {
  if (otp_identifier != NULL) {
    set_has_otp_identifier();
  } else {
    clear_has_otp_identifier();
  }
  otp_identifier_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), otp_identifier);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRequestMachineAuth.otp_identifier)
}

// optional bytes otp_sharedsecret = 9;
bool CMsgClientRequestMachineAuth::has_otp_sharedsecret() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientRequestMachineAuth::set_has_otp_sharedsecret() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientRequestMachineAuth::clear_has_otp_sharedsecret() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientRequestMachineAuth::clear_otp_sharedsecret() {
  otp_sharedsecret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_otp_sharedsecret();
}
const ::std::string& CMsgClientRequestMachineAuth::otp_sharedsecret() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestMachineAuth.otp_sharedsecret)
  return otp_sharedsecret_.GetNoArena();
}
void CMsgClientRequestMachineAuth::set_otp_sharedsecret(const ::std::string& value) {
  set_has_otp_sharedsecret();
  otp_sharedsecret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestMachineAuth.otp_sharedsecret)
}
#if LANG_CXX11
void CMsgClientRequestMachineAuth::set_otp_sharedsecret(::std::string&& value) {
  set_has_otp_sharedsecret();
  otp_sharedsecret_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRequestMachineAuth.otp_sharedsecret)
}
#endif
void CMsgClientRequestMachineAuth::set_otp_sharedsecret(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_otp_sharedsecret();
  otp_sharedsecret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRequestMachineAuth.otp_sharedsecret)
}
void CMsgClientRequestMachineAuth::set_otp_sharedsecret(const void* value, size_t size) {
  set_has_otp_sharedsecret();
  otp_sharedsecret_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRequestMachineAuth.otp_sharedsecret)
}
::std::string* CMsgClientRequestMachineAuth::mutable_otp_sharedsecret() {
  set_has_otp_sharedsecret();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRequestMachineAuth.otp_sharedsecret)
  return otp_sharedsecret_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRequestMachineAuth::release_otp_sharedsecret() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRequestMachineAuth.otp_sharedsecret)
  clear_has_otp_sharedsecret();
  return otp_sharedsecret_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRequestMachineAuth::set_allocated_otp_sharedsecret(::std::string* otp_sharedsecret) {
  if (otp_sharedsecret != NULL) {
    set_has_otp_sharedsecret();
  } else {
    clear_has_otp_sharedsecret();
  }
  otp_sharedsecret_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), otp_sharedsecret);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRequestMachineAuth.otp_sharedsecret)
}

// optional uint32 otp_value = 10;
bool CMsgClientRequestMachineAuth::has_otp_value() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CMsgClientRequestMachineAuth::set_has_otp_value() {
  _has_bits_[0] |= 0x00000400u;
}
void CMsgClientRequestMachineAuth::clear_has_otp_value() {
  _has_bits_[0] &= ~0x00000400u;
}
void CMsgClientRequestMachineAuth::clear_otp_value() {
  otp_value_ = 0u;
  clear_has_otp_value();
}
::google::protobuf::uint32 CMsgClientRequestMachineAuth::otp_value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestMachineAuth.otp_value)
  return otp_value_;
}
void CMsgClientRequestMachineAuth::set_otp_value(::google::protobuf::uint32 value) {
  set_has_otp_value();
  otp_value_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestMachineAuth.otp_value)
}

// optional string machine_name = 11;
bool CMsgClientRequestMachineAuth::has_machine_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientRequestMachineAuth::set_has_machine_name() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientRequestMachineAuth::clear_has_machine_name() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientRequestMachineAuth::clear_machine_name() {
  machine_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_machine_name();
}
const ::std::string& CMsgClientRequestMachineAuth::machine_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestMachineAuth.machine_name)
  return machine_name_.GetNoArena();
}
void CMsgClientRequestMachineAuth::set_machine_name(const ::std::string& value) {
  set_has_machine_name();
  machine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestMachineAuth.machine_name)
}
#if LANG_CXX11
void CMsgClientRequestMachineAuth::set_machine_name(::std::string&& value) {
  set_has_machine_name();
  machine_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRequestMachineAuth.machine_name)
}
#endif
void CMsgClientRequestMachineAuth::set_machine_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_machine_name();
  machine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRequestMachineAuth.machine_name)
}
void CMsgClientRequestMachineAuth::set_machine_name(const char* value, size_t size) {
  set_has_machine_name();
  machine_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRequestMachineAuth.machine_name)
}
::std::string* CMsgClientRequestMachineAuth::mutable_machine_name() {
  set_has_machine_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRequestMachineAuth.machine_name)
  return machine_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRequestMachineAuth::release_machine_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRequestMachineAuth.machine_name)
  clear_has_machine_name();
  return machine_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRequestMachineAuth::set_allocated_machine_name(::std::string* machine_name) {
  if (machine_name != NULL) {
    set_has_machine_name();
  } else {
    clear_has_machine_name();
  }
  machine_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRequestMachineAuth.machine_name)
}

// optional string machine_name_userchosen = 12;
bool CMsgClientRequestMachineAuth::has_machine_name_userchosen() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientRequestMachineAuth::set_has_machine_name_userchosen() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientRequestMachineAuth::clear_has_machine_name_userchosen() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientRequestMachineAuth::clear_machine_name_userchosen() {
  machine_name_userchosen_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_machine_name_userchosen();
}
const ::std::string& CMsgClientRequestMachineAuth::machine_name_userchosen() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen)
  return machine_name_userchosen_.GetNoArena();
}
void CMsgClientRequestMachineAuth::set_machine_name_userchosen(const ::std::string& value) {
  set_has_machine_name_userchosen();
  machine_name_userchosen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen)
}
#if LANG_CXX11
void CMsgClientRequestMachineAuth::set_machine_name_userchosen(::std::string&& value) {
  set_has_machine_name_userchosen();
  machine_name_userchosen_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen)
}
#endif
void CMsgClientRequestMachineAuth::set_machine_name_userchosen(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_machine_name_userchosen();
  machine_name_userchosen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen)
}
void CMsgClientRequestMachineAuth::set_machine_name_userchosen(const char* value, size_t size) {
  set_has_machine_name_userchosen();
  machine_name_userchosen_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen)
}
::std::string* CMsgClientRequestMachineAuth::mutable_machine_name_userchosen() {
  set_has_machine_name_userchosen();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen)
  return machine_name_userchosen_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRequestMachineAuth::release_machine_name_userchosen() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen)
  clear_has_machine_name_userchosen();
  return machine_name_userchosen_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRequestMachineAuth::set_allocated_machine_name_userchosen(::std::string* machine_name_userchosen) {
  if (machine_name_userchosen != NULL) {
    set_has_machine_name_userchosen();
  } else {
    clear_has_machine_name_userchosen();
  }
  machine_name_userchosen_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine_name_userchosen);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRequestMachineAuth.machine_name_userchosen)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestMachineAuthResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestMachineAuthResponse::CMsgClientRequestMachineAuthResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestMachineAuthResponse)
}
CMsgClientRequestMachineAuthResponse::CMsgClientRequestMachineAuthResponse(const CMsgClientRequestMachineAuthResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestMachineAuthResponse)
}

void CMsgClientRequestMachineAuthResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 0u;
}

CMsgClientRequestMachineAuthResponse::~CMsgClientRequestMachineAuthResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestMachineAuthResponse)
  SharedDtor();
}

void CMsgClientRequestMachineAuthResponse::SharedDtor() {
}

void CMsgClientRequestMachineAuthResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRequestMachineAuthResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestMachineAuthResponse& CMsgClientRequestMachineAuthResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRequestMachineAuthResponse* CMsgClientRequestMachineAuthResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientRequestMachineAuthResponse* n = new CMsgClientRequestMachineAuthResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRequestMachineAuthResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  eresult_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestMachineAuthResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestMachineAuthResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestMachineAuthResponse)
  return false;
#undef DO_
}

void CMsgClientRequestMachineAuthResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestMachineAuthResponse)
}

::google::protobuf::uint8* CMsgClientRequestMachineAuthResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestMachineAuthResponse)
  return target;
}

size_t CMsgClientRequestMachineAuthResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 eresult = 1;
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRequestMachineAuthResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestMachineAuthResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestMachineAuthResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestMachineAuthResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestMachineAuthResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRequestMachineAuthResponse::MergeFrom(const CMsgClientRequestMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientRequestMachineAuthResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestMachineAuthResponse::CopyFrom(const CMsgClientRequestMachineAuthResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestMachineAuthResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestMachineAuthResponse::IsInitialized() const {
  return true;
}

void CMsgClientRequestMachineAuthResponse::Swap(CMsgClientRequestMachineAuthResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestMachineAuthResponse::InternalSwap(CMsgClientRequestMachineAuthResponse* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRequestMachineAuthResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRequestMachineAuthResponse

// optional uint32 eresult = 1;
bool CMsgClientRequestMachineAuthResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientRequestMachineAuthResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientRequestMachineAuthResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientRequestMachineAuthResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgClientRequestMachineAuthResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestMachineAuthResponse.eresult)
  return eresult_;
}
void CMsgClientRequestMachineAuthResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestMachineAuthResponse.eresult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRegisterKey::kKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRegisterKey::CMsgClientRegisterKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRegisterKey)
}
CMsgClientRegisterKey::CMsgClientRegisterKey(const CMsgClientRegisterKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_key()) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRegisterKey)
}

void CMsgClientRegisterKey::SharedCtor() {
  _cached_size_ = 0;
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientRegisterKey::~CMsgClientRegisterKey() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRegisterKey)
  SharedDtor();
}

void CMsgClientRegisterKey::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRegisterKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRegisterKey::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRegisterKey& CMsgClientRegisterKey::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRegisterKey* CMsgClientRegisterKey::New(::google::protobuf::Arena* arena) const {
  CMsgClientRegisterKey* n = new CMsgClientRegisterKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRegisterKey::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRegisterKey)
  if (has_key()) {
    GOOGLE_DCHECK(!key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*key_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRegisterKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRegisterKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->key().data(), this->key().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRegisterKey.key");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRegisterKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRegisterKey)
  return false;
#undef DO_
}

void CMsgClientRegisterKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRegisterKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRegisterKey.key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRegisterKey)
}

::google::protobuf::uint8* CMsgClientRegisterKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRegisterKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string key = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->key().data(), this->key().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRegisterKey.key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRegisterKey)
  return target;
}

size_t CMsgClientRegisterKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRegisterKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string key = 1;
  if (has_key()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRegisterKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRegisterKey)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRegisterKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRegisterKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRegisterKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRegisterKey)
    MergeFrom(*source);
  }
}

void CMsgClientRegisterKey::MergeFrom(const CMsgClientRegisterKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRegisterKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    set_has_key();
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
}

void CMsgClientRegisterKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRegisterKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRegisterKey::CopyFrom(const CMsgClientRegisterKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRegisterKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRegisterKey::IsInitialized() const {
  return true;
}

void CMsgClientRegisterKey::Swap(CMsgClientRegisterKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRegisterKey::InternalSwap(CMsgClientRegisterKey* other) {
  key_.Swap(&other->key_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRegisterKey::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRegisterKey

// optional string key = 1;
bool CMsgClientRegisterKey::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientRegisterKey::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientRegisterKey::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientRegisterKey::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
const ::std::string& CMsgClientRegisterKey::key() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRegisterKey.key)
  return key_.GetNoArena();
}
void CMsgClientRegisterKey::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRegisterKey.key)
}
#if LANG_CXX11
void CMsgClientRegisterKey::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRegisterKey.key)
}
#endif
void CMsgClientRegisterKey::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRegisterKey.key)
}
void CMsgClientRegisterKey::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRegisterKey.key)
}
::std::string* CMsgClientRegisterKey::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRegisterKey.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRegisterKey::release_key() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRegisterKey.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRegisterKey::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRegisterKey.key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPurchaseResponse::kEresultFieldNumber;
const int CMsgClientPurchaseResponse::kPurchaseResultDetailsFieldNumber;
const int CMsgClientPurchaseResponse::kPurchaseReceiptInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPurchaseResponse::CMsgClientPurchaseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientPurchaseResponse)
}
CMsgClientPurchaseResponse::CMsgClientPurchaseResponse(const CMsgClientPurchaseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  purchase_receipt_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_purchase_receipt_info()) {
    purchase_receipt_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.purchase_receipt_info_);
  }
  ::memcpy(&purchase_result_details_, &from.purchase_result_details_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&purchase_result_details_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientPurchaseResponse)
}

void CMsgClientPurchaseResponse::SharedCtor() {
  _cached_size_ = 0;
  purchase_receipt_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  purchase_result_details_ = 0;
  eresult_ = 2;
}

CMsgClientPurchaseResponse::~CMsgClientPurchaseResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientPurchaseResponse)
  SharedDtor();
}

void CMsgClientPurchaseResponse::SharedDtor() {
  purchase_receipt_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientPurchaseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientPurchaseResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPurchaseResponse& CMsgClientPurchaseResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientPurchaseResponse* CMsgClientPurchaseResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientPurchaseResponse* n = new CMsgClientPurchaseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientPurchaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientPurchaseResponse)
  if (has_purchase_receipt_info()) {
    GOOGLE_DCHECK(!purchase_receipt_info_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*purchase_receipt_info_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    purchase_result_details_ = 0;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPurchaseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientPurchaseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 purchase_result_details = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_purchase_result_details();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &purchase_result_details_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes purchase_receipt_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_purchase_receipt_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientPurchaseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientPurchaseResponse)
  return false;
#undef DO_
}

void CMsgClientPurchaseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientPurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 purchase_result_details = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->purchase_result_details(), output);
  }

  // optional bytes purchase_receipt_info = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->purchase_receipt_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientPurchaseResponse)
}

::google::protobuf::uint8* CMsgClientPurchaseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientPurchaseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 purchase_result_details = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->purchase_result_details(), target);
  }

  // optional bytes purchase_receipt_info = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->purchase_receipt_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientPurchaseResponse)
  return target;
}

size_t CMsgClientPurchaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientPurchaseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes purchase_receipt_info = 3;
    if (has_purchase_receipt_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->purchase_receipt_info());
    }

    // optional int32 purchase_result_details = 2;
    if (has_purchase_result_details()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->purchase_result_details());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientPurchaseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientPurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPurchaseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPurchaseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientPurchaseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientPurchaseResponse)
    MergeFrom(*source);
  }
}

void CMsgClientPurchaseResponse::MergeFrom(const CMsgClientPurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientPurchaseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_purchase_receipt_info();
      purchase_receipt_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.purchase_receipt_info_);
    }
    if (cached_has_bits & 0x00000002u) {
      purchase_result_details_ = from.purchase_result_details_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPurchaseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientPurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPurchaseResponse::CopyFrom(const CMsgClientPurchaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientPurchaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPurchaseResponse::IsInitialized() const {
  return true;
}

void CMsgClientPurchaseResponse::Swap(CMsgClientPurchaseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPurchaseResponse::InternalSwap(CMsgClientPurchaseResponse* other) {
  purchase_receipt_info_.Swap(&other->purchase_receipt_info_);
  std::swap(purchase_result_details_, other->purchase_result_details_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientPurchaseResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientPurchaseResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientPurchaseResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientPurchaseResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientPurchaseResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientPurchaseResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientPurchaseResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPurchaseResponse.eresult)
  return eresult_;
}
void CMsgClientPurchaseResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPurchaseResponse.eresult)
}

// optional int32 purchase_result_details = 2;
bool CMsgClientPurchaseResponse::has_purchase_result_details() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientPurchaseResponse::set_has_purchase_result_details() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientPurchaseResponse::clear_has_purchase_result_details() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientPurchaseResponse::clear_purchase_result_details() {
  purchase_result_details_ = 0;
  clear_has_purchase_result_details();
}
::google::protobuf::int32 CMsgClientPurchaseResponse::purchase_result_details() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPurchaseResponse.purchase_result_details)
  return purchase_result_details_;
}
void CMsgClientPurchaseResponse::set_purchase_result_details(::google::protobuf::int32 value) {
  set_has_purchase_result_details();
  purchase_result_details_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPurchaseResponse.purchase_result_details)
}

// optional bytes purchase_receipt_info = 3;
bool CMsgClientPurchaseResponse::has_purchase_receipt_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientPurchaseResponse::set_has_purchase_receipt_info() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientPurchaseResponse::clear_has_purchase_receipt_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientPurchaseResponse::clear_purchase_receipt_info() {
  purchase_receipt_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_purchase_receipt_info();
}
const ::std::string& CMsgClientPurchaseResponse::purchase_receipt_info() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPurchaseResponse.purchase_receipt_info)
  return purchase_receipt_info_.GetNoArena();
}
void CMsgClientPurchaseResponse::set_purchase_receipt_info(const ::std::string& value) {
  set_has_purchase_receipt_info();
  purchase_receipt_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPurchaseResponse.purchase_receipt_info)
}
#if LANG_CXX11
void CMsgClientPurchaseResponse::set_purchase_receipt_info(::std::string&& value) {
  set_has_purchase_receipt_info();
  purchase_receipt_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientPurchaseResponse.purchase_receipt_info)
}
#endif
void CMsgClientPurchaseResponse::set_purchase_receipt_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_purchase_receipt_info();
  purchase_receipt_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientPurchaseResponse.purchase_receipt_info)
}
void CMsgClientPurchaseResponse::set_purchase_receipt_info(const void* value, size_t size) {
  set_has_purchase_receipt_info();
  purchase_receipt_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientPurchaseResponse.purchase_receipt_info)
}
::std::string* CMsgClientPurchaseResponse::mutable_purchase_receipt_info() {
  set_has_purchase_receipt_info();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientPurchaseResponse.purchase_receipt_info)
  return purchase_receipt_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientPurchaseResponse::release_purchase_receipt_info() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientPurchaseResponse.purchase_receipt_info)
  clear_has_purchase_receipt_info();
  return purchase_receipt_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientPurchaseResponse::set_allocated_purchase_receipt_info(::std::string* purchase_receipt_info) {
  if (purchase_receipt_info != NULL) {
    set_has_purchase_receipt_info();
  } else {
    clear_has_purchase_receipt_info();
  }
  purchase_receipt_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), purchase_receipt_info);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientPurchaseResponse.purchase_receipt_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientActivateOEMLicense::kBiosManufacturerFieldNumber;
const int CMsgClientActivateOEMLicense::kBiosSerialnumberFieldNumber;
const int CMsgClientActivateOEMLicense::kLicenseFileFieldNumber;
const int CMsgClientActivateOEMLicense::kMainboardManufacturerFieldNumber;
const int CMsgClientActivateOEMLicense::kMainboardProductFieldNumber;
const int CMsgClientActivateOEMLicense::kMainboardSerialnumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientActivateOEMLicense::CMsgClientActivateOEMLicense()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientActivateOEMLicense)
}
CMsgClientActivateOEMLicense::CMsgClientActivateOEMLicense(const CMsgClientActivateOEMLicense& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bios_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bios_manufacturer()) {
    bios_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bios_manufacturer_);
  }
  bios_serialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bios_serialnumber()) {
    bios_serialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bios_serialnumber_);
  }
  license_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_license_file()) {
    license_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_file_);
  }
  mainboard_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mainboard_manufacturer()) {
    mainboard_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_manufacturer_);
  }
  mainboard_product_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mainboard_product()) {
    mainboard_product_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_product_);
  }
  mainboard_serialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_mainboard_serialnumber()) {
    mainboard_serialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_serialnumber_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientActivateOEMLicense)
}

void CMsgClientActivateOEMLicense::SharedCtor() {
  _cached_size_ = 0;
  bios_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bios_serialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_manufacturer_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_product_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_serialnumber_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientActivateOEMLicense::~CMsgClientActivateOEMLicense() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientActivateOEMLicense)
  SharedDtor();
}

void CMsgClientActivateOEMLicense::SharedDtor() {
  bios_manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bios_serialnumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  license_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_manufacturer_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_product_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mainboard_serialnumber_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientActivateOEMLicense::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientActivateOEMLicense::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientActivateOEMLicense& CMsgClientActivateOEMLicense::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientActivateOEMLicense* CMsgClientActivateOEMLicense::New(::google::protobuf::Arena* arena) const {
  CMsgClientActivateOEMLicense* n = new CMsgClientActivateOEMLicense;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientActivateOEMLicense::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientActivateOEMLicense)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_bios_manufacturer()) {
      GOOGLE_DCHECK(!bios_manufacturer_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bios_manufacturer_.UnsafeRawStringPointer())->clear();
    }
    if (has_bios_serialnumber()) {
      GOOGLE_DCHECK(!bios_serialnumber_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bios_serialnumber_.UnsafeRawStringPointer())->clear();
    }
    if (has_license_file()) {
      GOOGLE_DCHECK(!license_file_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*license_file_.UnsafeRawStringPointer())->clear();
    }
    if (has_mainboard_manufacturer()) {
      GOOGLE_DCHECK(!mainboard_manufacturer_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mainboard_manufacturer_.UnsafeRawStringPointer())->clear();
    }
    if (has_mainboard_product()) {
      GOOGLE_DCHECK(!mainboard_product_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mainboard_product_.UnsafeRawStringPointer())->clear();
    }
    if (has_mainboard_serialnumber()) {
      GOOGLE_DCHECK(!mainboard_serialnumber_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*mainboard_serialnumber_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientActivateOEMLicense::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientActivateOEMLicense)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string bios_manufacturer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bios_manufacturer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bios_manufacturer().data(), this->bios_manufacturer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bios_serialnumber = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bios_serialnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bios_serialnumber().data(), this->bios_serialnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes license_file = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_license_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mainboard_manufacturer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mainboard_manufacturer()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mainboard_manufacturer().data(), this->mainboard_manufacturer().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mainboard_product = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mainboard_product()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mainboard_product().data(), this->mainboard_product().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientActivateOEMLicense.mainboard_product");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string mainboard_serialnumber = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mainboard_serialnumber()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->mainboard_serialnumber().data(), this->mainboard_serialnumber().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientActivateOEMLicense)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientActivateOEMLicense)
  return false;
#undef DO_
}

void CMsgClientActivateOEMLicense::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientActivateOEMLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string bios_manufacturer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bios_manufacturer().data(), this->bios_manufacturer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->bios_manufacturer(), output);
  }

  // optional string bios_serialnumber = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bios_serialnumber().data(), this->bios_serialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bios_serialnumber(), output);
  }

  // optional bytes license_file = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->license_file(), output);
  }

  // optional string mainboard_manufacturer = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_manufacturer().data(), this->mainboard_manufacturer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mainboard_manufacturer(), output);
  }

  // optional string mainboard_product = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_product().data(), this->mainboard_product().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.mainboard_product");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->mainboard_product(), output);
  }

  // optional string mainboard_serialnumber = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_serialnumber().data(), this->mainboard_serialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->mainboard_serialnumber(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientActivateOEMLicense)
}

::google::protobuf::uint8* CMsgClientActivateOEMLicense::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientActivateOEMLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string bios_manufacturer = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bios_manufacturer().data(), this->bios_manufacturer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->bios_manufacturer(), target);
  }

  // optional string bios_serialnumber = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bios_serialnumber().data(), this->bios_serialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bios_serialnumber(), target);
  }

  // optional bytes license_file = 3;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->license_file(), target);
  }

  // optional string mainboard_manufacturer = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_manufacturer().data(), this->mainboard_manufacturer().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mainboard_manufacturer(), target);
  }

  // optional string mainboard_product = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_product().data(), this->mainboard_product().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.mainboard_product");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->mainboard_product(), target);
  }

  // optional string mainboard_serialnumber = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->mainboard_serialnumber().data(), this->mainboard_serialnumber().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->mainboard_serialnumber(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientActivateOEMLicense)
  return target;
}

size_t CMsgClientActivateOEMLicense::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientActivateOEMLicense)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string bios_manufacturer = 1;
    if (has_bios_manufacturer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bios_manufacturer());
    }

    // optional string bios_serialnumber = 2;
    if (has_bios_serialnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bios_serialnumber());
    }

    // optional bytes license_file = 3;
    if (has_license_file()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->license_file());
    }

    // optional string mainboard_manufacturer = 4;
    if (has_mainboard_manufacturer()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mainboard_manufacturer());
    }

    // optional string mainboard_product = 5;
    if (has_mainboard_product()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mainboard_product());
    }

    // optional string mainboard_serialnumber = 6;
    if (has_mainboard_serialnumber()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->mainboard_serialnumber());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientActivateOEMLicense::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientActivateOEMLicense)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientActivateOEMLicense* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientActivateOEMLicense>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientActivateOEMLicense)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientActivateOEMLicense)
    MergeFrom(*source);
  }
}

void CMsgClientActivateOEMLicense::MergeFrom(const CMsgClientActivateOEMLicense& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientActivateOEMLicense)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bios_manufacturer();
      bios_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bios_manufacturer_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bios_serialnumber();
      bios_serialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bios_serialnumber_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_license_file();
      license_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.license_file_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_mainboard_manufacturer();
      mainboard_manufacturer_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_manufacturer_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_mainboard_product();
      mainboard_product_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_product_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_mainboard_serialnumber();
      mainboard_serialnumber_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mainboard_serialnumber_);
    }
  }
}

void CMsgClientActivateOEMLicense::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientActivateOEMLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientActivateOEMLicense::CopyFrom(const CMsgClientActivateOEMLicense& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientActivateOEMLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientActivateOEMLicense::IsInitialized() const {
  return true;
}

void CMsgClientActivateOEMLicense::Swap(CMsgClientActivateOEMLicense* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientActivateOEMLicense::InternalSwap(CMsgClientActivateOEMLicense* other) {
  bios_manufacturer_.Swap(&other->bios_manufacturer_);
  bios_serialnumber_.Swap(&other->bios_serialnumber_);
  license_file_.Swap(&other->license_file_);
  mainboard_manufacturer_.Swap(&other->mainboard_manufacturer_);
  mainboard_product_.Swap(&other->mainboard_product_);
  mainboard_serialnumber_.Swap(&other->mainboard_serialnumber_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientActivateOEMLicense::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientActivateOEMLicense

// optional string bios_manufacturer = 1;
bool CMsgClientActivateOEMLicense::has_bios_manufacturer() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientActivateOEMLicense::set_has_bios_manufacturer() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientActivateOEMLicense::clear_has_bios_manufacturer() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientActivateOEMLicense::clear_bios_manufacturer() {
  bios_manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bios_manufacturer();
}
const ::std::string& CMsgClientActivateOEMLicense::bios_manufacturer() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer)
  return bios_manufacturer_.GetNoArena();
}
void CMsgClientActivateOEMLicense::set_bios_manufacturer(const ::std::string& value) {
  set_has_bios_manufacturer();
  bios_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer)
}
#if LANG_CXX11
void CMsgClientActivateOEMLicense::set_bios_manufacturer(::std::string&& value) {
  set_has_bios_manufacturer();
  bios_manufacturer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer)
}
#endif
void CMsgClientActivateOEMLicense::set_bios_manufacturer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bios_manufacturer();
  bios_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer)
}
void CMsgClientActivateOEMLicense::set_bios_manufacturer(const char* value, size_t size) {
  set_has_bios_manufacturer();
  bios_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer)
}
::std::string* CMsgClientActivateOEMLicense::mutable_bios_manufacturer() {
  set_has_bios_manufacturer();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer)
  return bios_manufacturer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientActivateOEMLicense::release_bios_manufacturer() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer)
  clear_has_bios_manufacturer();
  return bios_manufacturer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientActivateOEMLicense::set_allocated_bios_manufacturer(::std::string* bios_manufacturer) {
  if (bios_manufacturer != NULL) {
    set_has_bios_manufacturer();
  } else {
    clear_has_bios_manufacturer();
  }
  bios_manufacturer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bios_manufacturer);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientActivateOEMLicense.bios_manufacturer)
}

// optional string bios_serialnumber = 2;
bool CMsgClientActivateOEMLicense::has_bios_serialnumber() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientActivateOEMLicense::set_has_bios_serialnumber() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientActivateOEMLicense::clear_has_bios_serialnumber() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientActivateOEMLicense::clear_bios_serialnumber() {
  bios_serialnumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bios_serialnumber();
}
const ::std::string& CMsgClientActivateOEMLicense::bios_serialnumber() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber)
  return bios_serialnumber_.GetNoArena();
}
void CMsgClientActivateOEMLicense::set_bios_serialnumber(const ::std::string& value) {
  set_has_bios_serialnumber();
  bios_serialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber)
}
#if LANG_CXX11
void CMsgClientActivateOEMLicense::set_bios_serialnumber(::std::string&& value) {
  set_has_bios_serialnumber();
  bios_serialnumber_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber)
}
#endif
void CMsgClientActivateOEMLicense::set_bios_serialnumber(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bios_serialnumber();
  bios_serialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber)
}
void CMsgClientActivateOEMLicense::set_bios_serialnumber(const char* value, size_t size) {
  set_has_bios_serialnumber();
  bios_serialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber)
}
::std::string* CMsgClientActivateOEMLicense::mutable_bios_serialnumber() {
  set_has_bios_serialnumber();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber)
  return bios_serialnumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientActivateOEMLicense::release_bios_serialnumber() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber)
  clear_has_bios_serialnumber();
  return bios_serialnumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientActivateOEMLicense::set_allocated_bios_serialnumber(::std::string* bios_serialnumber) {
  if (bios_serialnumber != NULL) {
    set_has_bios_serialnumber();
  } else {
    clear_has_bios_serialnumber();
  }
  bios_serialnumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bios_serialnumber);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientActivateOEMLicense.bios_serialnumber)
}

// optional bytes license_file = 3;
bool CMsgClientActivateOEMLicense::has_license_file() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientActivateOEMLicense::set_has_license_file() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientActivateOEMLicense::clear_has_license_file() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientActivateOEMLicense::clear_license_file() {
  license_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_license_file();
}
const ::std::string& CMsgClientActivateOEMLicense::license_file() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientActivateOEMLicense.license_file)
  return license_file_.GetNoArena();
}
void CMsgClientActivateOEMLicense::set_license_file(const ::std::string& value) {
  set_has_license_file();
  license_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientActivateOEMLicense.license_file)
}
#if LANG_CXX11
void CMsgClientActivateOEMLicense::set_license_file(::std::string&& value) {
  set_has_license_file();
  license_file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientActivateOEMLicense.license_file)
}
#endif
void CMsgClientActivateOEMLicense::set_license_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_license_file();
  license_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientActivateOEMLicense.license_file)
}
void CMsgClientActivateOEMLicense::set_license_file(const void* value, size_t size) {
  set_has_license_file();
  license_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientActivateOEMLicense.license_file)
}
::std::string* CMsgClientActivateOEMLicense::mutable_license_file() {
  set_has_license_file();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientActivateOEMLicense.license_file)
  return license_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientActivateOEMLicense::release_license_file() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientActivateOEMLicense.license_file)
  clear_has_license_file();
  return license_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientActivateOEMLicense::set_allocated_license_file(::std::string* license_file) {
  if (license_file != NULL) {
    set_has_license_file();
  } else {
    clear_has_license_file();
  }
  license_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), license_file);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientActivateOEMLicense.license_file)
}

// optional string mainboard_manufacturer = 4;
bool CMsgClientActivateOEMLicense::has_mainboard_manufacturer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientActivateOEMLicense::set_has_mainboard_manufacturer() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientActivateOEMLicense::clear_has_mainboard_manufacturer() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientActivateOEMLicense::clear_mainboard_manufacturer() {
  mainboard_manufacturer_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mainboard_manufacturer();
}
const ::std::string& CMsgClientActivateOEMLicense::mainboard_manufacturer() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer)
  return mainboard_manufacturer_.GetNoArena();
}
void CMsgClientActivateOEMLicense::set_mainboard_manufacturer(const ::std::string& value) {
  set_has_mainboard_manufacturer();
  mainboard_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer)
}
#if LANG_CXX11
void CMsgClientActivateOEMLicense::set_mainboard_manufacturer(::std::string&& value) {
  set_has_mainboard_manufacturer();
  mainboard_manufacturer_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer)
}
#endif
void CMsgClientActivateOEMLicense::set_mainboard_manufacturer(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mainboard_manufacturer();
  mainboard_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer)
}
void CMsgClientActivateOEMLicense::set_mainboard_manufacturer(const char* value, size_t size) {
  set_has_mainboard_manufacturer();
  mainboard_manufacturer_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer)
}
::std::string* CMsgClientActivateOEMLicense::mutable_mainboard_manufacturer() {
  set_has_mainboard_manufacturer();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer)
  return mainboard_manufacturer_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientActivateOEMLicense::release_mainboard_manufacturer() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer)
  clear_has_mainboard_manufacturer();
  return mainboard_manufacturer_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientActivateOEMLicense::set_allocated_mainboard_manufacturer(::std::string* mainboard_manufacturer) {
  if (mainboard_manufacturer != NULL) {
    set_has_mainboard_manufacturer();
  } else {
    clear_has_mainboard_manufacturer();
  }
  mainboard_manufacturer_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mainboard_manufacturer);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientActivateOEMLicense.mainboard_manufacturer)
}

// optional string mainboard_product = 5;
bool CMsgClientActivateOEMLicense::has_mainboard_product() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientActivateOEMLicense::set_has_mainboard_product() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientActivateOEMLicense::clear_has_mainboard_product() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientActivateOEMLicense::clear_mainboard_product() {
  mainboard_product_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mainboard_product();
}
const ::std::string& CMsgClientActivateOEMLicense::mainboard_product() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientActivateOEMLicense.mainboard_product)
  return mainboard_product_.GetNoArena();
}
void CMsgClientActivateOEMLicense::set_mainboard_product(const ::std::string& value) {
  set_has_mainboard_product();
  mainboard_product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientActivateOEMLicense.mainboard_product)
}
#if LANG_CXX11
void CMsgClientActivateOEMLicense::set_mainboard_product(::std::string&& value) {
  set_has_mainboard_product();
  mainboard_product_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientActivateOEMLicense.mainboard_product)
}
#endif
void CMsgClientActivateOEMLicense::set_mainboard_product(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mainboard_product();
  mainboard_product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientActivateOEMLicense.mainboard_product)
}
void CMsgClientActivateOEMLicense::set_mainboard_product(const char* value, size_t size) {
  set_has_mainboard_product();
  mainboard_product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientActivateOEMLicense.mainboard_product)
}
::std::string* CMsgClientActivateOEMLicense::mutable_mainboard_product() {
  set_has_mainboard_product();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientActivateOEMLicense.mainboard_product)
  return mainboard_product_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientActivateOEMLicense::release_mainboard_product() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientActivateOEMLicense.mainboard_product)
  clear_has_mainboard_product();
  return mainboard_product_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientActivateOEMLicense::set_allocated_mainboard_product(::std::string* mainboard_product) {
  if (mainboard_product != NULL) {
    set_has_mainboard_product();
  } else {
    clear_has_mainboard_product();
  }
  mainboard_product_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mainboard_product);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientActivateOEMLicense.mainboard_product)
}

// optional string mainboard_serialnumber = 6;
bool CMsgClientActivateOEMLicense::has_mainboard_serialnumber() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientActivateOEMLicense::set_has_mainboard_serialnumber() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientActivateOEMLicense::clear_has_mainboard_serialnumber() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientActivateOEMLicense::clear_mainboard_serialnumber() {
  mainboard_serialnumber_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mainboard_serialnumber();
}
const ::std::string& CMsgClientActivateOEMLicense::mainboard_serialnumber() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber)
  return mainboard_serialnumber_.GetNoArena();
}
void CMsgClientActivateOEMLicense::set_mainboard_serialnumber(const ::std::string& value) {
  set_has_mainboard_serialnumber();
  mainboard_serialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber)
}
#if LANG_CXX11
void CMsgClientActivateOEMLicense::set_mainboard_serialnumber(::std::string&& value) {
  set_has_mainboard_serialnumber();
  mainboard_serialnumber_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber)
}
#endif
void CMsgClientActivateOEMLicense::set_mainboard_serialnumber(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mainboard_serialnumber();
  mainboard_serialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber)
}
void CMsgClientActivateOEMLicense::set_mainboard_serialnumber(const char* value, size_t size) {
  set_has_mainboard_serialnumber();
  mainboard_serialnumber_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber)
}
::std::string* CMsgClientActivateOEMLicense::mutable_mainboard_serialnumber() {
  set_has_mainboard_serialnumber();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber)
  return mainboard_serialnumber_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientActivateOEMLicense::release_mainboard_serialnumber() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber)
  clear_has_mainboard_serialnumber();
  return mainboard_serialnumber_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientActivateOEMLicense::set_allocated_mainboard_serialnumber(::std::string* mainboard_serialnumber) {
  if (mainboard_serialnumber != NULL) {
    set_has_mainboard_serialnumber();
  } else {
    clear_has_mainboard_serialnumber();
  }
  mainboard_serialnumber_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mainboard_serialnumber);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientActivateOEMLicense.mainboard_serialnumber)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRegisterOEMMachine::kOemRegisterFileFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRegisterOEMMachine::CMsgClientRegisterOEMMachine()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRegisterOEMMachine)
}
CMsgClientRegisterOEMMachine::CMsgClientRegisterOEMMachine(const CMsgClientRegisterOEMMachine& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oem_register_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_oem_register_file()) {
    oem_register_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oem_register_file_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRegisterOEMMachine)
}

void CMsgClientRegisterOEMMachine::SharedCtor() {
  _cached_size_ = 0;
  oem_register_file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientRegisterOEMMachine::~CMsgClientRegisterOEMMachine() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRegisterOEMMachine)
  SharedDtor();
}

void CMsgClientRegisterOEMMachine::SharedDtor() {
  oem_register_file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRegisterOEMMachine::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRegisterOEMMachine::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRegisterOEMMachine& CMsgClientRegisterOEMMachine::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRegisterOEMMachine* CMsgClientRegisterOEMMachine::New(::google::protobuf::Arena* arena) const {
  CMsgClientRegisterOEMMachine* n = new CMsgClientRegisterOEMMachine;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRegisterOEMMachine::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRegisterOEMMachine)
  if (has_oem_register_file()) {
    GOOGLE_DCHECK(!oem_register_file_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*oem_register_file_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRegisterOEMMachine::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRegisterOEMMachine)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes oem_register_file = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oem_register_file()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRegisterOEMMachine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRegisterOEMMachine)
  return false;
#undef DO_
}

void CMsgClientRegisterOEMMachine::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRegisterOEMMachine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes oem_register_file = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->oem_register_file(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRegisterOEMMachine)
}

::google::protobuf::uint8* CMsgClientRegisterOEMMachine::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRegisterOEMMachine)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes oem_register_file = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->oem_register_file(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRegisterOEMMachine)
  return target;
}

size_t CMsgClientRegisterOEMMachine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRegisterOEMMachine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional bytes oem_register_file = 1;
  if (has_oem_register_file()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->oem_register_file());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRegisterOEMMachine::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRegisterOEMMachine)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRegisterOEMMachine* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRegisterOEMMachine>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRegisterOEMMachine)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRegisterOEMMachine)
    MergeFrom(*source);
  }
}

void CMsgClientRegisterOEMMachine::MergeFrom(const CMsgClientRegisterOEMMachine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRegisterOEMMachine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_oem_register_file()) {
    set_has_oem_register_file();
    oem_register_file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oem_register_file_);
  }
}

void CMsgClientRegisterOEMMachine::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRegisterOEMMachine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRegisterOEMMachine::CopyFrom(const CMsgClientRegisterOEMMachine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRegisterOEMMachine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRegisterOEMMachine::IsInitialized() const {
  return true;
}

void CMsgClientRegisterOEMMachine::Swap(CMsgClientRegisterOEMMachine* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRegisterOEMMachine::InternalSwap(CMsgClientRegisterOEMMachine* other) {
  oem_register_file_.Swap(&other->oem_register_file_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRegisterOEMMachine::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRegisterOEMMachine

// optional bytes oem_register_file = 1;
bool CMsgClientRegisterOEMMachine::has_oem_register_file() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientRegisterOEMMachine::set_has_oem_register_file() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientRegisterOEMMachine::clear_has_oem_register_file() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientRegisterOEMMachine::clear_oem_register_file() {
  oem_register_file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_oem_register_file();
}
const ::std::string& CMsgClientRegisterOEMMachine::oem_register_file() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRegisterOEMMachine.oem_register_file)
  return oem_register_file_.GetNoArena();
}
void CMsgClientRegisterOEMMachine::set_oem_register_file(const ::std::string& value) {
  set_has_oem_register_file();
  oem_register_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRegisterOEMMachine.oem_register_file)
}
#if LANG_CXX11
void CMsgClientRegisterOEMMachine::set_oem_register_file(::std::string&& value) {
  set_has_oem_register_file();
  oem_register_file_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRegisterOEMMachine.oem_register_file)
}
#endif
void CMsgClientRegisterOEMMachine::set_oem_register_file(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_oem_register_file();
  oem_register_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRegisterOEMMachine.oem_register_file)
}
void CMsgClientRegisterOEMMachine::set_oem_register_file(const void* value, size_t size) {
  set_has_oem_register_file();
  oem_register_file_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRegisterOEMMachine.oem_register_file)
}
::std::string* CMsgClientRegisterOEMMachine::mutable_oem_register_file() {
  set_has_oem_register_file();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRegisterOEMMachine.oem_register_file)
  return oem_register_file_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRegisterOEMMachine::release_oem_register_file() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRegisterOEMMachine.oem_register_file)
  clear_has_oem_register_file();
  return oem_register_file_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRegisterOEMMachine::set_allocated_oem_register_file(::std::string* oem_register_file) {
  if (oem_register_file != NULL) {
    set_has_oem_register_file();
  } else {
    clear_has_oem_register_file();
  }
  oem_register_file_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oem_register_file);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRegisterOEMMachine.oem_register_file)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRegisterOEMMachineResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRegisterOEMMachineResponse::CMsgClientRegisterOEMMachineResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRegisterOEMMachineResponse)
}
CMsgClientRegisterOEMMachineResponse::CMsgClientRegisterOEMMachineResponse(const CMsgClientRegisterOEMMachineResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRegisterOEMMachineResponse)
}

void CMsgClientRegisterOEMMachineResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 0u;
}

CMsgClientRegisterOEMMachineResponse::~CMsgClientRegisterOEMMachineResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRegisterOEMMachineResponse)
  SharedDtor();
}

void CMsgClientRegisterOEMMachineResponse::SharedDtor() {
}

void CMsgClientRegisterOEMMachineResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRegisterOEMMachineResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRegisterOEMMachineResponse& CMsgClientRegisterOEMMachineResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRegisterOEMMachineResponse* CMsgClientRegisterOEMMachineResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientRegisterOEMMachineResponse* n = new CMsgClientRegisterOEMMachineResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRegisterOEMMachineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  eresult_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRegisterOEMMachineResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRegisterOEMMachineResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRegisterOEMMachineResponse)
  return false;
#undef DO_
}

void CMsgClientRegisterOEMMachineResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRegisterOEMMachineResponse)
}

::google::protobuf::uint8* CMsgClientRegisterOEMMachineResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRegisterOEMMachineResponse)
  return target;
}

size_t CMsgClientRegisterOEMMachineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 eresult = 1;
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRegisterOEMMachineResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRegisterOEMMachineResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRegisterOEMMachineResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRegisterOEMMachineResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRegisterOEMMachineResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRegisterOEMMachineResponse::MergeFrom(const CMsgClientRegisterOEMMachineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientRegisterOEMMachineResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRegisterOEMMachineResponse::CopyFrom(const CMsgClientRegisterOEMMachineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRegisterOEMMachineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRegisterOEMMachineResponse::IsInitialized() const {
  return true;
}

void CMsgClientRegisterOEMMachineResponse::Swap(CMsgClientRegisterOEMMachineResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRegisterOEMMachineResponse::InternalSwap(CMsgClientRegisterOEMMachineResponse* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRegisterOEMMachineResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRegisterOEMMachineResponse

// optional uint32 eresult = 1;
bool CMsgClientRegisterOEMMachineResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientRegisterOEMMachineResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientRegisterOEMMachineResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientRegisterOEMMachineResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgClientRegisterOEMMachineResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRegisterOEMMachineResponse.eresult)
  return eresult_;
}
void CMsgClientRegisterOEMMachineResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRegisterOEMMachineResponse.eresult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPurchaseWithMachineID::kPackageIdFieldNumber;
const int CMsgClientPurchaseWithMachineID::kMachineInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPurchaseWithMachineID::CMsgClientPurchaseWithMachineID()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientPurchaseWithMachineID)
}
CMsgClientPurchaseWithMachineID::CMsgClientPurchaseWithMachineID(const CMsgClientPurchaseWithMachineID& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  machine_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_machine_info()) {
    machine_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_info_);
  }
  package_id_ = from.package_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientPurchaseWithMachineID)
}

void CMsgClientPurchaseWithMachineID::SharedCtor() {
  _cached_size_ = 0;
  machine_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  package_id_ = 0u;
}

CMsgClientPurchaseWithMachineID::~CMsgClientPurchaseWithMachineID() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientPurchaseWithMachineID)
  SharedDtor();
}

void CMsgClientPurchaseWithMachineID::SharedDtor() {
  machine_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientPurchaseWithMachineID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientPurchaseWithMachineID::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPurchaseWithMachineID& CMsgClientPurchaseWithMachineID::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientPurchaseWithMachineID* CMsgClientPurchaseWithMachineID::New(::google::protobuf::Arena* arena) const {
  CMsgClientPurchaseWithMachineID* n = new CMsgClientPurchaseWithMachineID;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientPurchaseWithMachineID::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientPurchaseWithMachineID)
  if (has_machine_info()) {
    GOOGLE_DCHECK(!machine_info_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*machine_info_.UnsafeRawStringPointer())->clear();
  }
  package_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPurchaseWithMachineID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientPurchaseWithMachineID)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 package_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_package_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes machine_info = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_machine_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientPurchaseWithMachineID)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientPurchaseWithMachineID)
  return false;
#undef DO_
}

void CMsgClientPurchaseWithMachineID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientPurchaseWithMachineID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 package_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->package_id(), output);
  }

  // optional bytes machine_info = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->machine_info(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientPurchaseWithMachineID)
}

::google::protobuf::uint8* CMsgClientPurchaseWithMachineID::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientPurchaseWithMachineID)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 package_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->package_id(), target);
  }

  // optional bytes machine_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->machine_info(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientPurchaseWithMachineID)
  return target;
}

size_t CMsgClientPurchaseWithMachineID::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientPurchaseWithMachineID)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes machine_info = 2;
    if (has_machine_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->machine_info());
    }

    // optional uint32 package_id = 1;
    if (has_package_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientPurchaseWithMachineID::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientPurchaseWithMachineID)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPurchaseWithMachineID* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPurchaseWithMachineID>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientPurchaseWithMachineID)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientPurchaseWithMachineID)
    MergeFrom(*source);
  }
}

void CMsgClientPurchaseWithMachineID::MergeFrom(const CMsgClientPurchaseWithMachineID& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientPurchaseWithMachineID)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_machine_info();
      machine_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.machine_info_);
    }
    if (cached_has_bits & 0x00000002u) {
      package_id_ = from.package_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPurchaseWithMachineID::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientPurchaseWithMachineID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPurchaseWithMachineID::CopyFrom(const CMsgClientPurchaseWithMachineID& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientPurchaseWithMachineID)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPurchaseWithMachineID::IsInitialized() const {
  return true;
}

void CMsgClientPurchaseWithMachineID::Swap(CMsgClientPurchaseWithMachineID* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPurchaseWithMachineID::InternalSwap(CMsgClientPurchaseWithMachineID* other) {
  machine_info_.Swap(&other->machine_info_);
  std::swap(package_id_, other->package_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientPurchaseWithMachineID::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientPurchaseWithMachineID

// optional uint32 package_id = 1;
bool CMsgClientPurchaseWithMachineID::has_package_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientPurchaseWithMachineID::set_has_package_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientPurchaseWithMachineID::clear_has_package_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientPurchaseWithMachineID::clear_package_id() {
  package_id_ = 0u;
  clear_has_package_id();
}
::google::protobuf::uint32 CMsgClientPurchaseWithMachineID::package_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPurchaseWithMachineID.package_id)
  return package_id_;
}
void CMsgClientPurchaseWithMachineID::set_package_id(::google::protobuf::uint32 value) {
  set_has_package_id();
  package_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPurchaseWithMachineID.package_id)
}

// optional bytes machine_info = 2;
bool CMsgClientPurchaseWithMachineID::has_machine_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientPurchaseWithMachineID::set_has_machine_info() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientPurchaseWithMachineID::clear_has_machine_info() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientPurchaseWithMachineID::clear_machine_info() {
  machine_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_machine_info();
}
const ::std::string& CMsgClientPurchaseWithMachineID::machine_info() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPurchaseWithMachineID.machine_info)
  return machine_info_.GetNoArena();
}
void CMsgClientPurchaseWithMachineID::set_machine_info(const ::std::string& value) {
  set_has_machine_info();
  machine_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPurchaseWithMachineID.machine_info)
}
#if LANG_CXX11
void CMsgClientPurchaseWithMachineID::set_machine_info(::std::string&& value) {
  set_has_machine_info();
  machine_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientPurchaseWithMachineID.machine_info)
}
#endif
void CMsgClientPurchaseWithMachineID::set_machine_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_machine_info();
  machine_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientPurchaseWithMachineID.machine_info)
}
void CMsgClientPurchaseWithMachineID::set_machine_info(const void* value, size_t size) {
  set_has_machine_info();
  machine_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientPurchaseWithMachineID.machine_info)
}
::std::string* CMsgClientPurchaseWithMachineID::mutable_machine_info() {
  set_has_machine_info();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientPurchaseWithMachineID.machine_info)
  return machine_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientPurchaseWithMachineID::release_machine_info() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientPurchaseWithMachineID.machine_info)
  clear_has_machine_info();
  return machine_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientPurchaseWithMachineID::set_allocated_machine_info(::std::string* machine_info) {
  if (machine_info != NULL) {
    set_has_machine_info();
  } else {
    clear_has_machine_info();
  }
  machine_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine_info);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientPurchaseWithMachineID.machine_info)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTrading_InitiateTradeRequest::kTradeRequestIdFieldNumber;
const int CMsgTrading_InitiateTradeRequest::kOtherSteamidFieldNumber;
const int CMsgTrading_InitiateTradeRequest::kOtherNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTrading_InitiateTradeRequest::CMsgTrading_InitiateTradeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgTrading_InitiateTradeRequest)
}
CMsgTrading_InitiateTradeRequest::CMsgTrading_InitiateTradeRequest(const CMsgTrading_InitiateTradeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  other_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_other_name()) {
    other_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_name_);
  }
  ::memcpy(&other_steamid_, &from.other_steamid_,
    reinterpret_cast<char*>(&trade_request_id_) -
    reinterpret_cast<char*>(&other_steamid_) + sizeof(trade_request_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgTrading_InitiateTradeRequest)
}

void CMsgTrading_InitiateTradeRequest::SharedCtor() {
  _cached_size_ = 0;
  other_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&other_steamid_, 0, reinterpret_cast<char*>(&trade_request_id_) -
    reinterpret_cast<char*>(&other_steamid_) + sizeof(trade_request_id_));
}

CMsgTrading_InitiateTradeRequest::~CMsgTrading_InitiateTradeRequest() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgTrading_InitiateTradeRequest)
  SharedDtor();
}

void CMsgTrading_InitiateTradeRequest::SharedDtor() {
  other_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgTrading_InitiateTradeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgTrading_InitiateTradeRequest::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgTrading_InitiateTradeRequest& CMsgTrading_InitiateTradeRequest::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgTrading_InitiateTradeRequest* CMsgTrading_InitiateTradeRequest::New(::google::protobuf::Arena* arena) const {
  CMsgTrading_InitiateTradeRequest* n = new CMsgTrading_InitiateTradeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgTrading_InitiateTradeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  if (has_other_name()) {
    GOOGLE_DCHECK(!other_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*other_name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&other_steamid_, 0, reinterpret_cast<char*>(&trade_request_id_) -
      reinterpret_cast<char*>(&other_steamid_) + sizeof(trade_request_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgTrading_InitiateTradeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 trade_request_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_trade_request_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trade_request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 other_steamid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_other_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &other_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string other_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_other_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->other_name().data(), this->other_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgTrading_InitiateTradeRequest.other_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgTrading_InitiateTradeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgTrading_InitiateTradeRequest)
  return false;
#undef DO_
}

void CMsgTrading_InitiateTradeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 trade_request_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->trade_request_id(), output);
  }

  // optional uint64 other_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->other_steamid(), output);
  }

  // optional string other_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->other_name().data(), this->other_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgTrading_InitiateTradeRequest.other_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->other_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgTrading_InitiateTradeRequest)
}

::google::protobuf::uint8* CMsgTrading_InitiateTradeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 trade_request_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->trade_request_id(), target);
  }

  // optional uint64 other_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->other_steamid(), target);
  }

  // optional string other_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->other_name().data(), this->other_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgTrading_InitiateTradeRequest.other_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->other_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgTrading_InitiateTradeRequest)
  return target;
}

size_t CMsgTrading_InitiateTradeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string other_name = 3;
    if (has_other_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->other_name());
    }

    // optional uint64 other_steamid = 2;
    if (has_other_steamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->other_steamid());
    }

    // optional uint32 trade_request_id = 1;
    if (has_trade_request_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->trade_request_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgTrading_InitiateTradeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTrading_InitiateTradeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgTrading_InitiateTradeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgTrading_InitiateTradeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgTrading_InitiateTradeRequest)
    MergeFrom(*source);
  }
}

void CMsgTrading_InitiateTradeRequest::MergeFrom(const CMsgTrading_InitiateTradeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_other_name();
      other_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.other_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      other_steamid_ = from.other_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      trade_request_id_ = from.trade_request_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgTrading_InitiateTradeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTrading_InitiateTradeRequest::CopyFrom(const CMsgTrading_InitiateTradeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgTrading_InitiateTradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTrading_InitiateTradeRequest::IsInitialized() const {
  return true;
}

void CMsgTrading_InitiateTradeRequest::Swap(CMsgTrading_InitiateTradeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTrading_InitiateTradeRequest::InternalSwap(CMsgTrading_InitiateTradeRequest* other) {
  other_name_.Swap(&other->other_name_);
  std::swap(other_steamid_, other->other_steamid_);
  std::swap(trade_request_id_, other->trade_request_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgTrading_InitiateTradeRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgTrading_InitiateTradeRequest

// optional uint32 trade_request_id = 1;
bool CMsgTrading_InitiateTradeRequest::has_trade_request_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgTrading_InitiateTradeRequest::set_has_trade_request_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgTrading_InitiateTradeRequest::clear_has_trade_request_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgTrading_InitiateTradeRequest::clear_trade_request_id() {
  trade_request_id_ = 0u;
  clear_has_trade_request_id();
}
::google::protobuf::uint32 CMsgTrading_InitiateTradeRequest::trade_request_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTrading_InitiateTradeRequest.trade_request_id)
  return trade_request_id_;
}
void CMsgTrading_InitiateTradeRequest::set_trade_request_id(::google::protobuf::uint32 value) {
  set_has_trade_request_id();
  trade_request_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTrading_InitiateTradeRequest.trade_request_id)
}

// optional uint64 other_steamid = 2;
bool CMsgTrading_InitiateTradeRequest::has_other_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgTrading_InitiateTradeRequest::set_has_other_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgTrading_InitiateTradeRequest::clear_has_other_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgTrading_InitiateTradeRequest::clear_other_steamid() {
  other_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_other_steamid();
}
::google::protobuf::uint64 CMsgTrading_InitiateTradeRequest::other_steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTrading_InitiateTradeRequest.other_steamid)
  return other_steamid_;
}
void CMsgTrading_InitiateTradeRequest::set_other_steamid(::google::protobuf::uint64 value) {
  set_has_other_steamid();
  other_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTrading_InitiateTradeRequest.other_steamid)
}

// optional string other_name = 3;
bool CMsgTrading_InitiateTradeRequest::has_other_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgTrading_InitiateTradeRequest::set_has_other_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgTrading_InitiateTradeRequest::clear_has_other_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgTrading_InitiateTradeRequest::clear_other_name() {
  other_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_other_name();
}
const ::std::string& CMsgTrading_InitiateTradeRequest::other_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTrading_InitiateTradeRequest.other_name)
  return other_name_.GetNoArena();
}
void CMsgTrading_InitiateTradeRequest::set_other_name(const ::std::string& value) {
  set_has_other_name();
  other_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTrading_InitiateTradeRequest.other_name)
}
#if LANG_CXX11
void CMsgTrading_InitiateTradeRequest::set_other_name(::std::string&& value) {
  set_has_other_name();
  other_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgTrading_InitiateTradeRequest.other_name)
}
#endif
void CMsgTrading_InitiateTradeRequest::set_other_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_other_name();
  other_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgTrading_InitiateTradeRequest.other_name)
}
void CMsgTrading_InitiateTradeRequest::set_other_name(const char* value, size_t size) {
  set_has_other_name();
  other_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgTrading_InitiateTradeRequest.other_name)
}
::std::string* CMsgTrading_InitiateTradeRequest::mutable_other_name() {
  set_has_other_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgTrading_InitiateTradeRequest.other_name)
  return other_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgTrading_InitiateTradeRequest::release_other_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgTrading_InitiateTradeRequest.other_name)
  clear_has_other_name();
  return other_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgTrading_InitiateTradeRequest::set_allocated_other_name(::std::string* other_name) {
  if (other_name != NULL) {
    set_has_other_name();
  } else {
    clear_has_other_name();
  }
  other_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), other_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgTrading_InitiateTradeRequest.other_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTrading_InitiateTradeResponse::kResponseFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kTradeRequestIdFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kOtherSteamidFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kSteamguardRequiredDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kNewDeviceCooldownDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kDefaultPasswordResetProbationDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kPasswordResetProbationDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kDefaultEmailChangeProbationDaysFieldNumber;
const int CMsgTrading_InitiateTradeResponse::kEmailChangeProbationDaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTrading_InitiateTradeResponse::CMsgTrading_InitiateTradeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgTrading_InitiateTradeResponse)
}
CMsgTrading_InitiateTradeResponse::CMsgTrading_InitiateTradeResponse(const CMsgTrading_InitiateTradeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&response_, &from.response_,
    reinterpret_cast<char*>(&email_change_probation_days_) -
    reinterpret_cast<char*>(&response_) + sizeof(email_change_probation_days_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgTrading_InitiateTradeResponse)
}

void CMsgTrading_InitiateTradeResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&response_, 0, reinterpret_cast<char*>(&email_change_probation_days_) -
    reinterpret_cast<char*>(&response_) + sizeof(email_change_probation_days_));
}

CMsgTrading_InitiateTradeResponse::~CMsgTrading_InitiateTradeResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgTrading_InitiateTradeResponse)
  SharedDtor();
}

void CMsgTrading_InitiateTradeResponse::SharedDtor() {
}

void CMsgTrading_InitiateTradeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgTrading_InitiateTradeResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgTrading_InitiateTradeResponse& CMsgTrading_InitiateTradeResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgTrading_InitiateTradeResponse* CMsgTrading_InitiateTradeResponse::New(::google::protobuf::Arena* arena) const {
  CMsgTrading_InitiateTradeResponse* n = new CMsgTrading_InitiateTradeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgTrading_InitiateTradeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  if (_has_bits_[0 / 32] & 255u) {
    ::memset(&response_, 0, reinterpret_cast<char*>(&default_email_change_probation_days_) -
      reinterpret_cast<char*>(&response_) + sizeof(default_email_change_probation_days_));
  }
  email_change_probation_days_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgTrading_InitiateTradeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 response = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_response();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &response_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 trade_request_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_trade_request_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &trade_request_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 other_steamid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_other_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &other_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 steamguard_required_days = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_steamguard_required_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &steamguard_required_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 new_device_cooldown_days = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_new_device_cooldown_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_device_cooldown_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 default_password_reset_probation_days = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_default_password_reset_probation_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default_password_reset_probation_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 password_reset_probation_days = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_password_reset_probation_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &password_reset_probation_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 default_email_change_probation_days = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_default_email_change_probation_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &default_email_change_probation_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 email_change_probation_days = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_email_change_probation_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &email_change_probation_days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgTrading_InitiateTradeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgTrading_InitiateTradeResponse)
  return false;
#undef DO_
}

void CMsgTrading_InitiateTradeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->response(), output);
  }

  // optional uint32 trade_request_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->trade_request_id(), output);
  }

  // optional uint64 other_steamid = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->other_steamid(), output);
  }

  // optional uint32 steamguard_required_days = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->steamguard_required_days(), output);
  }

  // optional uint32 new_device_cooldown_days = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->new_device_cooldown_days(), output);
  }

  // optional uint32 default_password_reset_probation_days = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->default_password_reset_probation_days(), output);
  }

  // optional uint32 password_reset_probation_days = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->password_reset_probation_days(), output);
  }

  // optional uint32 default_email_change_probation_days = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->default_email_change_probation_days(), output);
  }

  // optional uint32 email_change_probation_days = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->email_change_probation_days(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgTrading_InitiateTradeResponse)
}

::google::protobuf::uint8* CMsgTrading_InitiateTradeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 response = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->response(), target);
  }

  // optional uint32 trade_request_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->trade_request_id(), target);
  }

  // optional uint64 other_steamid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->other_steamid(), target);
  }

  // optional uint32 steamguard_required_days = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->steamguard_required_days(), target);
  }

  // optional uint32 new_device_cooldown_days = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->new_device_cooldown_days(), target);
  }

  // optional uint32 default_password_reset_probation_days = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->default_password_reset_probation_days(), target);
  }

  // optional uint32 password_reset_probation_days = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->password_reset_probation_days(), target);
  }

  // optional uint32 default_email_change_probation_days = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->default_email_change_probation_days(), target);
  }

  // optional uint32 email_change_probation_days = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->email_change_probation_days(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgTrading_InitiateTradeResponse)
  return target;
}

size_t CMsgTrading_InitiateTradeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional uint32 response = 1;
    if (has_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->response());
    }

    // optional uint32 trade_request_id = 2;
    if (has_trade_request_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->trade_request_id());
    }

    // optional uint64 other_steamid = 3;
    if (has_other_steamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->other_steamid());
    }

    // optional uint32 steamguard_required_days = 4;
    if (has_steamguard_required_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->steamguard_required_days());
    }

    // optional uint32 new_device_cooldown_days = 5;
    if (has_new_device_cooldown_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_device_cooldown_days());
    }

    // optional uint32 default_password_reset_probation_days = 6;
    if (has_default_password_reset_probation_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->default_password_reset_probation_days());
    }

    // optional uint32 password_reset_probation_days = 7;
    if (has_password_reset_probation_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->password_reset_probation_days());
    }

    // optional uint32 default_email_change_probation_days = 8;
    if (has_default_email_change_probation_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->default_email_change_probation_days());
    }

  }
  // optional uint32 email_change_probation_days = 9;
  if (has_email_change_probation_days()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->email_change_probation_days());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgTrading_InitiateTradeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTrading_InitiateTradeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgTrading_InitiateTradeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgTrading_InitiateTradeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgTrading_InitiateTradeResponse)
    MergeFrom(*source);
  }
}

void CMsgTrading_InitiateTradeResponse::MergeFrom(const CMsgTrading_InitiateTradeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      response_ = from.response_;
    }
    if (cached_has_bits & 0x00000002u) {
      trade_request_id_ = from.trade_request_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      other_steamid_ = from.other_steamid_;
    }
    if (cached_has_bits & 0x00000008u) {
      steamguard_required_days_ = from.steamguard_required_days_;
    }
    if (cached_has_bits & 0x00000010u) {
      new_device_cooldown_days_ = from.new_device_cooldown_days_;
    }
    if (cached_has_bits & 0x00000020u) {
      default_password_reset_probation_days_ = from.default_password_reset_probation_days_;
    }
    if (cached_has_bits & 0x00000040u) {
      password_reset_probation_days_ = from.password_reset_probation_days_;
    }
    if (cached_has_bits & 0x00000080u) {
      default_email_change_probation_days_ = from.default_email_change_probation_days_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_email_change_probation_days(from.email_change_probation_days());
  }
}

void CMsgTrading_InitiateTradeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTrading_InitiateTradeResponse::CopyFrom(const CMsgTrading_InitiateTradeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgTrading_InitiateTradeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTrading_InitiateTradeResponse::IsInitialized() const {
  return true;
}

void CMsgTrading_InitiateTradeResponse::Swap(CMsgTrading_InitiateTradeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTrading_InitiateTradeResponse::InternalSwap(CMsgTrading_InitiateTradeResponse* other) {
  std::swap(response_, other->response_);
  std::swap(trade_request_id_, other->trade_request_id_);
  std::swap(other_steamid_, other->other_steamid_);
  std::swap(steamguard_required_days_, other->steamguard_required_days_);
  std::swap(new_device_cooldown_days_, other->new_device_cooldown_days_);
  std::swap(default_password_reset_probation_days_, other->default_password_reset_probation_days_);
  std::swap(password_reset_probation_days_, other->password_reset_probation_days_);
  std::swap(default_email_change_probation_days_, other->default_email_change_probation_days_);
  std::swap(email_change_probation_days_, other->email_change_probation_days_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgTrading_InitiateTradeResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgTrading_InitiateTradeResponse

// optional uint32 response = 1;
bool CMsgTrading_InitiateTradeResponse::has_response() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgTrading_InitiateTradeResponse::set_has_response() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgTrading_InitiateTradeResponse::clear_has_response() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgTrading_InitiateTradeResponse::clear_response() {
  response_ = 0u;
  clear_has_response();
}
::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::response() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTrading_InitiateTradeResponse.response)
  return response_;
}
void CMsgTrading_InitiateTradeResponse::set_response(::google::protobuf::uint32 value) {
  set_has_response();
  response_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTrading_InitiateTradeResponse.response)
}

// optional uint32 trade_request_id = 2;
bool CMsgTrading_InitiateTradeResponse::has_trade_request_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgTrading_InitiateTradeResponse::set_has_trade_request_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgTrading_InitiateTradeResponse::clear_has_trade_request_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgTrading_InitiateTradeResponse::clear_trade_request_id() {
  trade_request_id_ = 0u;
  clear_has_trade_request_id();
}
::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::trade_request_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTrading_InitiateTradeResponse.trade_request_id)
  return trade_request_id_;
}
void CMsgTrading_InitiateTradeResponse::set_trade_request_id(::google::protobuf::uint32 value) {
  set_has_trade_request_id();
  trade_request_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTrading_InitiateTradeResponse.trade_request_id)
}

// optional uint64 other_steamid = 3;
bool CMsgTrading_InitiateTradeResponse::has_other_steamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgTrading_InitiateTradeResponse::set_has_other_steamid() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgTrading_InitiateTradeResponse::clear_has_other_steamid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgTrading_InitiateTradeResponse::clear_other_steamid() {
  other_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_other_steamid();
}
::google::protobuf::uint64 CMsgTrading_InitiateTradeResponse::other_steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTrading_InitiateTradeResponse.other_steamid)
  return other_steamid_;
}
void CMsgTrading_InitiateTradeResponse::set_other_steamid(::google::protobuf::uint64 value) {
  set_has_other_steamid();
  other_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTrading_InitiateTradeResponse.other_steamid)
}

// optional uint32 steamguard_required_days = 4;
bool CMsgTrading_InitiateTradeResponse::has_steamguard_required_days() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgTrading_InitiateTradeResponse::set_has_steamguard_required_days() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgTrading_InitiateTradeResponse::clear_has_steamguard_required_days() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgTrading_InitiateTradeResponse::clear_steamguard_required_days() {
  steamguard_required_days_ = 0u;
  clear_has_steamguard_required_days();
}
::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::steamguard_required_days() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTrading_InitiateTradeResponse.steamguard_required_days)
  return steamguard_required_days_;
}
void CMsgTrading_InitiateTradeResponse::set_steamguard_required_days(::google::protobuf::uint32 value) {
  set_has_steamguard_required_days();
  steamguard_required_days_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTrading_InitiateTradeResponse.steamguard_required_days)
}

// optional uint32 new_device_cooldown_days = 5;
bool CMsgTrading_InitiateTradeResponse::has_new_device_cooldown_days() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgTrading_InitiateTradeResponse::set_has_new_device_cooldown_days() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgTrading_InitiateTradeResponse::clear_has_new_device_cooldown_days() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgTrading_InitiateTradeResponse::clear_new_device_cooldown_days() {
  new_device_cooldown_days_ = 0u;
  clear_has_new_device_cooldown_days();
}
::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::new_device_cooldown_days() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTrading_InitiateTradeResponse.new_device_cooldown_days)
  return new_device_cooldown_days_;
}
void CMsgTrading_InitiateTradeResponse::set_new_device_cooldown_days(::google::protobuf::uint32 value) {
  set_has_new_device_cooldown_days();
  new_device_cooldown_days_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTrading_InitiateTradeResponse.new_device_cooldown_days)
}

// optional uint32 default_password_reset_probation_days = 6;
bool CMsgTrading_InitiateTradeResponse::has_default_password_reset_probation_days() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgTrading_InitiateTradeResponse::set_has_default_password_reset_probation_days() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgTrading_InitiateTradeResponse::clear_has_default_password_reset_probation_days() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgTrading_InitiateTradeResponse::clear_default_password_reset_probation_days() {
  default_password_reset_probation_days_ = 0u;
  clear_has_default_password_reset_probation_days();
}
::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::default_password_reset_probation_days() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTrading_InitiateTradeResponse.default_password_reset_probation_days)
  return default_password_reset_probation_days_;
}
void CMsgTrading_InitiateTradeResponse::set_default_password_reset_probation_days(::google::protobuf::uint32 value) {
  set_has_default_password_reset_probation_days();
  default_password_reset_probation_days_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTrading_InitiateTradeResponse.default_password_reset_probation_days)
}

// optional uint32 password_reset_probation_days = 7;
bool CMsgTrading_InitiateTradeResponse::has_password_reset_probation_days() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgTrading_InitiateTradeResponse::set_has_password_reset_probation_days() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgTrading_InitiateTradeResponse::clear_has_password_reset_probation_days() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgTrading_InitiateTradeResponse::clear_password_reset_probation_days() {
  password_reset_probation_days_ = 0u;
  clear_has_password_reset_probation_days();
}
::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::password_reset_probation_days() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTrading_InitiateTradeResponse.password_reset_probation_days)
  return password_reset_probation_days_;
}
void CMsgTrading_InitiateTradeResponse::set_password_reset_probation_days(::google::protobuf::uint32 value) {
  set_has_password_reset_probation_days();
  password_reset_probation_days_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTrading_InitiateTradeResponse.password_reset_probation_days)
}

// optional uint32 default_email_change_probation_days = 8;
bool CMsgTrading_InitiateTradeResponse::has_default_email_change_probation_days() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgTrading_InitiateTradeResponse::set_has_default_email_change_probation_days() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgTrading_InitiateTradeResponse::clear_has_default_email_change_probation_days() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgTrading_InitiateTradeResponse::clear_default_email_change_probation_days() {
  default_email_change_probation_days_ = 0u;
  clear_has_default_email_change_probation_days();
}
::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::default_email_change_probation_days() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTrading_InitiateTradeResponse.default_email_change_probation_days)
  return default_email_change_probation_days_;
}
void CMsgTrading_InitiateTradeResponse::set_default_email_change_probation_days(::google::protobuf::uint32 value) {
  set_has_default_email_change_probation_days();
  default_email_change_probation_days_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTrading_InitiateTradeResponse.default_email_change_probation_days)
}

// optional uint32 email_change_probation_days = 9;
bool CMsgTrading_InitiateTradeResponse::has_email_change_probation_days() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgTrading_InitiateTradeResponse::set_has_email_change_probation_days() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgTrading_InitiateTradeResponse::clear_has_email_change_probation_days() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgTrading_InitiateTradeResponse::clear_email_change_probation_days() {
  email_change_probation_days_ = 0u;
  clear_has_email_change_probation_days();
}
::google::protobuf::uint32 CMsgTrading_InitiateTradeResponse::email_change_probation_days() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTrading_InitiateTradeResponse.email_change_probation_days)
  return email_change_probation_days_;
}
void CMsgTrading_InitiateTradeResponse::set_email_change_probation_days(::google::protobuf::uint32 value) {
  set_has_email_change_probation_days();
  email_change_probation_days_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTrading_InitiateTradeResponse.email_change_probation_days)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTrading_CancelTradeRequest::kOtherSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTrading_CancelTradeRequest::CMsgTrading_CancelTradeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgTrading_CancelTradeRequest)
}
CMsgTrading_CancelTradeRequest::CMsgTrading_CancelTradeRequest(const CMsgTrading_CancelTradeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  other_steamid_ = from.other_steamid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgTrading_CancelTradeRequest)
}

void CMsgTrading_CancelTradeRequest::SharedCtor() {
  _cached_size_ = 0;
  other_steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgTrading_CancelTradeRequest::~CMsgTrading_CancelTradeRequest() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgTrading_CancelTradeRequest)
  SharedDtor();
}

void CMsgTrading_CancelTradeRequest::SharedDtor() {
}

void CMsgTrading_CancelTradeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgTrading_CancelTradeRequest::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgTrading_CancelTradeRequest& CMsgTrading_CancelTradeRequest::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgTrading_CancelTradeRequest* CMsgTrading_CancelTradeRequest::New(::google::protobuf::Arena* arena) const {
  CMsgTrading_CancelTradeRequest* n = new CMsgTrading_CancelTradeRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgTrading_CancelTradeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgTrading_CancelTradeRequest)
  other_steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgTrading_CancelTradeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgTrading_CancelTradeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 other_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_other_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &other_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgTrading_CancelTradeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgTrading_CancelTradeRequest)
  return false;
#undef DO_
}

void CMsgTrading_CancelTradeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgTrading_CancelTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 other_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->other_steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgTrading_CancelTradeRequest)
}

::google::protobuf::uint8* CMsgTrading_CancelTradeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgTrading_CancelTradeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 other_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->other_steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgTrading_CancelTradeRequest)
  return target;
}

size_t CMsgTrading_CancelTradeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgTrading_CancelTradeRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint64 other_steamid = 1;
  if (has_other_steamid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->other_steamid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgTrading_CancelTradeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgTrading_CancelTradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTrading_CancelTradeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgTrading_CancelTradeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgTrading_CancelTradeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgTrading_CancelTradeRequest)
    MergeFrom(*source);
  }
}

void CMsgTrading_CancelTradeRequest::MergeFrom(const CMsgTrading_CancelTradeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgTrading_CancelTradeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_other_steamid()) {
    set_other_steamid(from.other_steamid());
  }
}

void CMsgTrading_CancelTradeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgTrading_CancelTradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTrading_CancelTradeRequest::CopyFrom(const CMsgTrading_CancelTradeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgTrading_CancelTradeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTrading_CancelTradeRequest::IsInitialized() const {
  return true;
}

void CMsgTrading_CancelTradeRequest::Swap(CMsgTrading_CancelTradeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTrading_CancelTradeRequest::InternalSwap(CMsgTrading_CancelTradeRequest* other) {
  std::swap(other_steamid_, other->other_steamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgTrading_CancelTradeRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgTrading_CancelTradeRequest

// optional uint64 other_steamid = 1;
bool CMsgTrading_CancelTradeRequest::has_other_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgTrading_CancelTradeRequest::set_has_other_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgTrading_CancelTradeRequest::clear_has_other_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgTrading_CancelTradeRequest::clear_other_steamid() {
  other_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_other_steamid();
}
::google::protobuf::uint64 CMsgTrading_CancelTradeRequest::other_steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTrading_CancelTradeRequest.other_steamid)
  return other_steamid_;
}
void CMsgTrading_CancelTradeRequest::set_other_steamid(::google::protobuf::uint64 value) {
  set_has_other_steamid();
  other_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTrading_CancelTradeRequest.other_steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgTrading_StartSession::kOtherSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgTrading_StartSession::CMsgTrading_StartSession()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgTrading_StartSession)
}
CMsgTrading_StartSession::CMsgTrading_StartSession(const CMsgTrading_StartSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  other_steamid_ = from.other_steamid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgTrading_StartSession)
}

void CMsgTrading_StartSession::SharedCtor() {
  _cached_size_ = 0;
  other_steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgTrading_StartSession::~CMsgTrading_StartSession() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgTrading_StartSession)
  SharedDtor();
}

void CMsgTrading_StartSession::SharedDtor() {
}

void CMsgTrading_StartSession::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgTrading_StartSession::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgTrading_StartSession& CMsgTrading_StartSession::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgTrading_StartSession* CMsgTrading_StartSession::New(::google::protobuf::Arena* arena) const {
  CMsgTrading_StartSession* n = new CMsgTrading_StartSession;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgTrading_StartSession::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgTrading_StartSession)
  other_steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgTrading_StartSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgTrading_StartSession)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 other_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_other_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &other_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgTrading_StartSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgTrading_StartSession)
  return false;
#undef DO_
}

void CMsgTrading_StartSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgTrading_StartSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 other_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->other_steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgTrading_StartSession)
}

::google::protobuf::uint8* CMsgTrading_StartSession::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgTrading_StartSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 other_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->other_steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgTrading_StartSession)
  return target;
}

size_t CMsgTrading_StartSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgTrading_StartSession)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint64 other_steamid = 1;
  if (has_other_steamid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->other_steamid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgTrading_StartSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgTrading_StartSession)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgTrading_StartSession* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgTrading_StartSession>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgTrading_StartSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgTrading_StartSession)
    MergeFrom(*source);
  }
}

void CMsgTrading_StartSession::MergeFrom(const CMsgTrading_StartSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgTrading_StartSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_other_steamid()) {
    set_other_steamid(from.other_steamid());
  }
}

void CMsgTrading_StartSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgTrading_StartSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgTrading_StartSession::CopyFrom(const CMsgTrading_StartSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgTrading_StartSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgTrading_StartSession::IsInitialized() const {
  return true;
}

void CMsgTrading_StartSession::Swap(CMsgTrading_StartSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgTrading_StartSession::InternalSwap(CMsgTrading_StartSession* other) {
  std::swap(other_steamid_, other->other_steamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgTrading_StartSession::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgTrading_StartSession

// optional uint64 other_steamid = 1;
bool CMsgTrading_StartSession::has_other_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgTrading_StartSession::set_has_other_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgTrading_StartSession::clear_has_other_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgTrading_StartSession::clear_other_steamid() {
  other_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_other_steamid();
}
::google::protobuf::uint64 CMsgTrading_StartSession::other_steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgTrading_StartSession.other_steamid)
  return other_steamid_;
}
void CMsgTrading_StartSession::set_other_steamid(::google::protobuf::uint64 value) {
  set_has_other_steamid();
  other_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgTrading_StartSession.other_steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientEmailChange::kPasswordFieldNumber;
const int CMsgClientEmailChange::kEmailFieldNumber;
const int CMsgClientEmailChange::kCodeFieldNumber;
const int CMsgClientEmailChange::kFinalFieldNumber;
const int CMsgClientEmailChange::kNewmethodFieldNumber;
const int CMsgClientEmailChange::kTwofactorCodeFieldNumber;
const int CMsgClientEmailChange::kSmsCodeFieldNumber;
const int CMsgClientEmailChange::kClientSupportsSmsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientEmailChange::CMsgClientEmailChange()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientEmailChange)
}
CMsgClientEmailChange::CMsgClientEmailChange(const CMsgClientEmailChange& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_code()) {
    code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
  }
  twofactor_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_twofactor_code()) {
    twofactor_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.twofactor_code_);
  }
  sms_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sms_code()) {
    sms_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sms_code_);
  }
  ::memcpy(&final_, &from.final_,
    reinterpret_cast<char*>(&client_supports_sms_) -
    reinterpret_cast<char*>(&final_) + sizeof(client_supports_sms_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientEmailChange)
}

void CMsgClientEmailChange::SharedCtor() {
  _cached_size_ = 0;
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  twofactor_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sms_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&final_, 0, reinterpret_cast<char*>(&client_supports_sms_) -
    reinterpret_cast<char*>(&final_) + sizeof(client_supports_sms_));
}

CMsgClientEmailChange::~CMsgClientEmailChange() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientEmailChange)
  SharedDtor();
}

void CMsgClientEmailChange::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  twofactor_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sms_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientEmailChange::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientEmailChange::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientEmailChange& CMsgClientEmailChange::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientEmailChange* CMsgClientEmailChange::New(::google::protobuf::Arena* arena) const {
  CMsgClientEmailChange* n = new CMsgClientEmailChange;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientEmailChange::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientEmailChange)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_email()) {
      GOOGLE_DCHECK(!email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*email_.UnsafeRawStringPointer())->clear();
    }
    if (has_code()) {
      GOOGLE_DCHECK(!code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*code_.UnsafeRawStringPointer())->clear();
    }
    if (has_twofactor_code()) {
      GOOGLE_DCHECK(!twofactor_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*twofactor_code_.UnsafeRawStringPointer())->clear();
    }
    if (has_sms_code()) {
      GOOGLE_DCHECK(!sms_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sms_code_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 224u) {
    ::memset(&final_, 0, reinterpret_cast<char*>(&client_supports_sms_) -
      reinterpret_cast<char*>(&final_) + sizeof(client_supports_sms_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientEmailChange::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientEmailChange)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientEmailChange.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string email = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientEmailChange.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientEmailChange.code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool final = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_final();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &final_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool newmethod = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_newmethod();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &newmethod_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string twofactor_code = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_twofactor_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->twofactor_code().data(), this->twofactor_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientEmailChange.twofactor_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sms_code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sms_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sms_code().data(), this->sms_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientEmailChange.sms_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool client_supports_sms = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_client_supports_sms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &client_supports_sms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientEmailChange)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientEmailChange)
  return false;
#undef DO_
}

void CMsgClientEmailChange::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientEmailChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientEmailChange.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional string email = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientEmailChange.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->email(), output);
  }

  // optional string code = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientEmailChange.code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  // optional bool final = 4;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->final(), output);
  }

  // optional bool newmethod = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->newmethod(), output);
  }

  // optional string twofactor_code = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->twofactor_code().data(), this->twofactor_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientEmailChange.twofactor_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->twofactor_code(), output);
  }

  // optional string sms_code = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sms_code().data(), this->sms_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientEmailChange.sms_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->sms_code(), output);
  }

  // optional bool client_supports_sms = 8;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->client_supports_sms(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientEmailChange)
}

::google::protobuf::uint8* CMsgClientEmailChange::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientEmailChange)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientEmailChange.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional string email = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientEmailChange.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->email(), target);
  }

  // optional string code = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientEmailChange.code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  // optional bool final = 4;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->final(), target);
  }

  // optional bool newmethod = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->newmethod(), target);
  }

  // optional string twofactor_code = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->twofactor_code().data(), this->twofactor_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientEmailChange.twofactor_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->twofactor_code(), target);
  }

  // optional string sms_code = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sms_code().data(), this->sms_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientEmailChange.sms_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->sms_code(), target);
  }

  // optional bool client_supports_sms = 8;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->client_supports_sms(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientEmailChange)
  return target;
}

size_t CMsgClientEmailChange::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientEmailChange)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string password = 1;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string email = 2;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional string code = 3;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional string twofactor_code = 6;
    if (has_twofactor_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->twofactor_code());
    }

    // optional string sms_code = 7;
    if (has_sms_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sms_code());
    }

    // optional bool final = 4;
    if (has_final()) {
      total_size += 1 + 1;
    }

    // optional bool newmethod = 5;
    if (has_newmethod()) {
      total_size += 1 + 1;
    }

    // optional bool client_supports_sms = 8;
    if (has_client_supports_sms()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientEmailChange::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientEmailChange)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientEmailChange* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientEmailChange>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientEmailChange)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientEmailChange)
    MergeFrom(*source);
  }
}

void CMsgClientEmailChange::MergeFrom(const CMsgClientEmailChange& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientEmailChange)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_code();
      code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.code_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_twofactor_code();
      twofactor_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.twofactor_code_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_sms_code();
      sms_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sms_code_);
    }
    if (cached_has_bits & 0x00000020u) {
      final_ = from.final_;
    }
    if (cached_has_bits & 0x00000040u) {
      newmethod_ = from.newmethod_;
    }
    if (cached_has_bits & 0x00000080u) {
      client_supports_sms_ = from.client_supports_sms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientEmailChange::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientEmailChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientEmailChange::CopyFrom(const CMsgClientEmailChange& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientEmailChange)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientEmailChange::IsInitialized() const {
  return true;
}

void CMsgClientEmailChange::Swap(CMsgClientEmailChange* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientEmailChange::InternalSwap(CMsgClientEmailChange* other) {
  password_.Swap(&other->password_);
  email_.Swap(&other->email_);
  code_.Swap(&other->code_);
  twofactor_code_.Swap(&other->twofactor_code_);
  sms_code_.Swap(&other->sms_code_);
  std::swap(final_, other->final_);
  std::swap(newmethod_, other->newmethod_);
  std::swap(client_supports_sms_, other->client_supports_sms_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientEmailChange::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientEmailChange

// optional string password = 1;
bool CMsgClientEmailChange::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientEmailChange::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientEmailChange::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientEmailChange::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CMsgClientEmailChange::password() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailChange.password)
  return password_.GetNoArena();
}
void CMsgClientEmailChange::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailChange.password)
}
#if LANG_CXX11
void CMsgClientEmailChange::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientEmailChange.password)
}
#endif
void CMsgClientEmailChange::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientEmailChange.password)
}
void CMsgClientEmailChange::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientEmailChange.password)
}
::std::string* CMsgClientEmailChange::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientEmailChange.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientEmailChange::release_password() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientEmailChange.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientEmailChange::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientEmailChange.password)
}

// optional string email = 2;
bool CMsgClientEmailChange::has_email() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientEmailChange::set_has_email() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientEmailChange::clear_has_email() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientEmailChange::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
const ::std::string& CMsgClientEmailChange::email() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailChange.email)
  return email_.GetNoArena();
}
void CMsgClientEmailChange::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailChange.email)
}
#if LANG_CXX11
void CMsgClientEmailChange::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientEmailChange.email)
}
#endif
void CMsgClientEmailChange::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientEmailChange.email)
}
void CMsgClientEmailChange::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientEmailChange.email)
}
::std::string* CMsgClientEmailChange::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientEmailChange.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientEmailChange::release_email() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientEmailChange.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientEmailChange::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientEmailChange.email)
}

// optional string code = 3;
bool CMsgClientEmailChange::has_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientEmailChange::set_has_code() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientEmailChange::clear_has_code() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientEmailChange::clear_code() {
  code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_code();
}
const ::std::string& CMsgClientEmailChange::code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailChange.code)
  return code_.GetNoArena();
}
void CMsgClientEmailChange::set_code(const ::std::string& value) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailChange.code)
}
#if LANG_CXX11
void CMsgClientEmailChange::set_code(::std::string&& value) {
  set_has_code();
  code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientEmailChange.code)
}
#endif
void CMsgClientEmailChange::set_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientEmailChange.code)
}
void CMsgClientEmailChange::set_code(const char* value, size_t size) {
  set_has_code();
  code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientEmailChange.code)
}
::std::string* CMsgClientEmailChange::mutable_code() {
  set_has_code();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientEmailChange.code)
  return code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientEmailChange::release_code() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientEmailChange.code)
  clear_has_code();
  return code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientEmailChange::set_allocated_code(::std::string* code) {
  if (code != NULL) {
    set_has_code();
  } else {
    clear_has_code();
  }
  code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), code);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientEmailChange.code)
}

// optional bool final = 4;
bool CMsgClientEmailChange::has_final() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientEmailChange::set_has_final() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientEmailChange::clear_has_final() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientEmailChange::clear_final() {
  final_ = false;
  clear_has_final();
}
bool CMsgClientEmailChange::final() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailChange.final)
  return final_;
}
void CMsgClientEmailChange::set_final(bool value) {
  set_has_final();
  final_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailChange.final)
}

// optional bool newmethod = 5;
bool CMsgClientEmailChange::has_newmethod() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientEmailChange::set_has_newmethod() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientEmailChange::clear_has_newmethod() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientEmailChange::clear_newmethod() {
  newmethod_ = false;
  clear_has_newmethod();
}
bool CMsgClientEmailChange::newmethod() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailChange.newmethod)
  return newmethod_;
}
void CMsgClientEmailChange::set_newmethod(bool value) {
  set_has_newmethod();
  newmethod_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailChange.newmethod)
}

// optional string twofactor_code = 6;
bool CMsgClientEmailChange::has_twofactor_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientEmailChange::set_has_twofactor_code() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientEmailChange::clear_has_twofactor_code() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientEmailChange::clear_twofactor_code() {
  twofactor_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_twofactor_code();
}
const ::std::string& CMsgClientEmailChange::twofactor_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailChange.twofactor_code)
  return twofactor_code_.GetNoArena();
}
void CMsgClientEmailChange::set_twofactor_code(const ::std::string& value) {
  set_has_twofactor_code();
  twofactor_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailChange.twofactor_code)
}
#if LANG_CXX11
void CMsgClientEmailChange::set_twofactor_code(::std::string&& value) {
  set_has_twofactor_code();
  twofactor_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientEmailChange.twofactor_code)
}
#endif
void CMsgClientEmailChange::set_twofactor_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_twofactor_code();
  twofactor_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientEmailChange.twofactor_code)
}
void CMsgClientEmailChange::set_twofactor_code(const char* value, size_t size) {
  set_has_twofactor_code();
  twofactor_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientEmailChange.twofactor_code)
}
::std::string* CMsgClientEmailChange::mutable_twofactor_code() {
  set_has_twofactor_code();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientEmailChange.twofactor_code)
  return twofactor_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientEmailChange::release_twofactor_code() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientEmailChange.twofactor_code)
  clear_has_twofactor_code();
  return twofactor_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientEmailChange::set_allocated_twofactor_code(::std::string* twofactor_code) {
  if (twofactor_code != NULL) {
    set_has_twofactor_code();
  } else {
    clear_has_twofactor_code();
  }
  twofactor_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), twofactor_code);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientEmailChange.twofactor_code)
}

// optional string sms_code = 7;
bool CMsgClientEmailChange::has_sms_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientEmailChange::set_has_sms_code() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientEmailChange::clear_has_sms_code() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientEmailChange::clear_sms_code() {
  sms_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sms_code();
}
const ::std::string& CMsgClientEmailChange::sms_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailChange.sms_code)
  return sms_code_.GetNoArena();
}
void CMsgClientEmailChange::set_sms_code(const ::std::string& value) {
  set_has_sms_code();
  sms_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailChange.sms_code)
}
#if LANG_CXX11
void CMsgClientEmailChange::set_sms_code(::std::string&& value) {
  set_has_sms_code();
  sms_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientEmailChange.sms_code)
}
#endif
void CMsgClientEmailChange::set_sms_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sms_code();
  sms_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientEmailChange.sms_code)
}
void CMsgClientEmailChange::set_sms_code(const char* value, size_t size) {
  set_has_sms_code();
  sms_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientEmailChange.sms_code)
}
::std::string* CMsgClientEmailChange::mutable_sms_code() {
  set_has_sms_code();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientEmailChange.sms_code)
  return sms_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientEmailChange::release_sms_code() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientEmailChange.sms_code)
  clear_has_sms_code();
  return sms_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientEmailChange::set_allocated_sms_code(::std::string* sms_code) {
  if (sms_code != NULL) {
    set_has_sms_code();
  } else {
    clear_has_sms_code();
  }
  sms_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sms_code);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientEmailChange.sms_code)
}

// optional bool client_supports_sms = 8;
bool CMsgClientEmailChange::has_client_supports_sms() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgClientEmailChange::set_has_client_supports_sms() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgClientEmailChange::clear_has_client_supports_sms() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgClientEmailChange::clear_client_supports_sms() {
  client_supports_sms_ = false;
  clear_has_client_supports_sms();
}
bool CMsgClientEmailChange::client_supports_sms() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailChange.client_supports_sms)
  return client_supports_sms_;
}
void CMsgClientEmailChange::set_client_supports_sms(bool value) {
  set_has_client_supports_sms();
  client_supports_sms_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailChange.client_supports_sms)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientEmailChangeResponse::kEresultFieldNumber;
const int CMsgClientEmailChangeResponse::kRequiresSmsCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientEmailChangeResponse::CMsgClientEmailChangeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientEmailChangeResponse)
}
CMsgClientEmailChangeResponse::CMsgClientEmailChangeResponse(const CMsgClientEmailChangeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&requires_sms_code_, &from.requires_sms_code_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&requires_sms_code_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientEmailChangeResponse)
}

void CMsgClientEmailChangeResponse::SharedCtor() {
  _cached_size_ = 0;
  requires_sms_code_ = false;
  eresult_ = 2;
}

CMsgClientEmailChangeResponse::~CMsgClientEmailChangeResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientEmailChangeResponse)
  SharedDtor();
}

void CMsgClientEmailChangeResponse::SharedDtor() {
}

void CMsgClientEmailChangeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientEmailChangeResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientEmailChangeResponse& CMsgClientEmailChangeResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientEmailChangeResponse* CMsgClientEmailChangeResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientEmailChangeResponse* n = new CMsgClientEmailChangeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientEmailChangeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientEmailChangeResponse)
  if (_has_bits_[0 / 32] & 3u) {
    requires_sms_code_ = false;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientEmailChangeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientEmailChangeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool requires_sms_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_requires_sms_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &requires_sms_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientEmailChangeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientEmailChangeResponse)
  return false;
#undef DO_
}

void CMsgClientEmailChangeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientEmailChangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional bool requires_sms_code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->requires_sms_code(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientEmailChangeResponse)
}

::google::protobuf::uint8* CMsgClientEmailChangeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientEmailChangeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional bool requires_sms_code = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->requires_sms_code(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientEmailChangeResponse)
  return target;
}

size_t CMsgClientEmailChangeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientEmailChangeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool requires_sms_code = 2;
    if (has_requires_sms_code()) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientEmailChangeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientEmailChangeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientEmailChangeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientEmailChangeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientEmailChangeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientEmailChangeResponse)
    MergeFrom(*source);
  }
}

void CMsgClientEmailChangeResponse::MergeFrom(const CMsgClientEmailChangeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientEmailChangeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      requires_sms_code_ = from.requires_sms_code_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientEmailChangeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientEmailChangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientEmailChangeResponse::CopyFrom(const CMsgClientEmailChangeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientEmailChangeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientEmailChangeResponse::IsInitialized() const {
  return true;
}

void CMsgClientEmailChangeResponse::Swap(CMsgClientEmailChangeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientEmailChangeResponse::InternalSwap(CMsgClientEmailChangeResponse* other) {
  std::swap(requires_sms_code_, other->requires_sms_code_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientEmailChangeResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientEmailChangeResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientEmailChangeResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientEmailChangeResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientEmailChangeResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientEmailChangeResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientEmailChangeResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailChangeResponse.eresult)
  return eresult_;
}
void CMsgClientEmailChangeResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailChangeResponse.eresult)
}

// optional bool requires_sms_code = 2;
bool CMsgClientEmailChangeResponse::has_requires_sms_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientEmailChangeResponse::set_has_requires_sms_code() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientEmailChangeResponse::clear_has_requires_sms_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientEmailChangeResponse::clear_requires_sms_code() {
  requires_sms_code_ = false;
  clear_has_requires_sms_code();
}
bool CMsgClientEmailChangeResponse::requires_sms_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailChangeResponse.requires_sms_code)
  return requires_sms_code_;
}
void CMsgClientEmailChangeResponse::set_requires_sms_code(bool value) {
  set_has_requires_sms_code();
  requires_sms_code_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailChangeResponse.requires_sms_code)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetCDNAuthToken::kDepotIdFieldNumber;
const int CMsgClientGetCDNAuthToken::kHostNameFieldNumber;
const int CMsgClientGetCDNAuthToken::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetCDNAuthToken::CMsgClientGetCDNAuthToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetCDNAuthToken)
}
CMsgClientGetCDNAuthToken::CMsgClientGetCDNAuthToken(const CMsgClientGetCDNAuthToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host_name()) {
    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
  ::memcpy(&depot_id_, &from.depot_id_,
    reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&depot_id_) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetCDNAuthToken)
}

void CMsgClientGetCDNAuthToken::SharedCtor() {
  _cached_size_ = 0;
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&depot_id_, 0, reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&depot_id_) + sizeof(app_id_));
}

CMsgClientGetCDNAuthToken::~CMsgClientGetCDNAuthToken() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetCDNAuthToken)
  SharedDtor();
}

void CMsgClientGetCDNAuthToken::SharedDtor() {
  host_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetCDNAuthToken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientGetCDNAuthToken::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetCDNAuthToken& CMsgClientGetCDNAuthToken::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientGetCDNAuthToken* CMsgClientGetCDNAuthToken::New(::google::protobuf::Arena* arena) const {
  CMsgClientGetCDNAuthToken* n = new CMsgClientGetCDNAuthToken;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientGetCDNAuthToken::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetCDNAuthToken)
  if (has_host_name()) {
    GOOGLE_DCHECK(!host_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*host_name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&depot_id_, 0, reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&depot_id_) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetCDNAuthToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetCDNAuthToken)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 depot_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_depot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string host_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_name().data(), this->host_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientGetCDNAuthToken.host_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetCDNAuthToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetCDNAuthToken)
  return false;
#undef DO_
}

void CMsgClientGetCDNAuthToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetCDNAuthToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 depot_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->depot_id(), output);
  }

  // optional string host_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), this->host_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGetCDNAuthToken.host_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->host_name(), output);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetCDNAuthToken)
}

::google::protobuf::uint8* CMsgClientGetCDNAuthToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetCDNAuthToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 depot_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->depot_id(), target);
  }

  // optional string host_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), this->host_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGetCDNAuthToken.host_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->host_name(), target);
  }

  // optional uint32 app_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetCDNAuthToken)
  return target;
}

size_t CMsgClientGetCDNAuthToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetCDNAuthToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string host_name = 2;
    if (has_host_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_name());
    }

    // optional uint32 depot_id = 1;
    if (has_depot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depot_id());
    }

    // optional uint32 app_id = 3;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientGetCDNAuthToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetCDNAuthToken)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetCDNAuthToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetCDNAuthToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetCDNAuthToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetCDNAuthToken)
    MergeFrom(*source);
  }
}

void CMsgClientGetCDNAuthToken::MergeFrom(const CMsgClientGetCDNAuthToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetCDNAuthToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_host_name();
      host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      depot_id_ = from.depot_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetCDNAuthToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetCDNAuthToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetCDNAuthToken::CopyFrom(const CMsgClientGetCDNAuthToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetCDNAuthToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetCDNAuthToken::IsInitialized() const {
  return true;
}

void CMsgClientGetCDNAuthToken::Swap(CMsgClientGetCDNAuthToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetCDNAuthToken::InternalSwap(CMsgClientGetCDNAuthToken* other) {
  host_name_.Swap(&other->host_name_);
  std::swap(depot_id_, other->depot_id_);
  std::swap(app_id_, other->app_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientGetCDNAuthToken::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientGetCDNAuthToken

// optional uint32 depot_id = 1;
bool CMsgClientGetCDNAuthToken::has_depot_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientGetCDNAuthToken::set_has_depot_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientGetCDNAuthToken::clear_has_depot_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientGetCDNAuthToken::clear_depot_id() {
  depot_id_ = 0u;
  clear_has_depot_id();
}
::google::protobuf::uint32 CMsgClientGetCDNAuthToken::depot_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetCDNAuthToken.depot_id)
  return depot_id_;
}
void CMsgClientGetCDNAuthToken::set_depot_id(::google::protobuf::uint32 value) {
  set_has_depot_id();
  depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetCDNAuthToken.depot_id)
}

// optional string host_name = 2;
bool CMsgClientGetCDNAuthToken::has_host_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientGetCDNAuthToken::set_has_host_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientGetCDNAuthToken::clear_has_host_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientGetCDNAuthToken::clear_host_name() {
  host_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_name();
}
const ::std::string& CMsgClientGetCDNAuthToken::host_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetCDNAuthToken.host_name)
  return host_name_.GetNoArena();
}
void CMsgClientGetCDNAuthToken::set_host_name(const ::std::string& value) {
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetCDNAuthToken.host_name)
}
#if LANG_CXX11
void CMsgClientGetCDNAuthToken::set_host_name(::std::string&& value) {
  set_has_host_name();
  host_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientGetCDNAuthToken.host_name)
}
#endif
void CMsgClientGetCDNAuthToken::set_host_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientGetCDNAuthToken.host_name)
}
void CMsgClientGetCDNAuthToken::set_host_name(const char* value, size_t size) {
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientGetCDNAuthToken.host_name)
}
::std::string* CMsgClientGetCDNAuthToken::mutable_host_name() {
  set_has_host_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientGetCDNAuthToken.host_name)
  return host_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientGetCDNAuthToken::release_host_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientGetCDNAuthToken.host_name)
  clear_has_host_name();
  return host_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientGetCDNAuthToken::set_allocated_host_name(::std::string* host_name) {
  if (host_name != NULL) {
    set_has_host_name();
  } else {
    clear_has_host_name();
  }
  host_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientGetCDNAuthToken.host_name)
}

// optional uint32 app_id = 3;
bool CMsgClientGetCDNAuthToken::has_app_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientGetCDNAuthToken::set_has_app_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientGetCDNAuthToken::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientGetCDNAuthToken::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientGetCDNAuthToken::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetCDNAuthToken.app_id)
  return app_id_;
}
void CMsgClientGetCDNAuthToken::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetCDNAuthToken.app_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetDepotDecryptionKey::kDepotIdFieldNumber;
const int CMsgClientGetDepotDecryptionKey::kAppIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetDepotDecryptionKey::CMsgClientGetDepotDecryptionKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetDepotDecryptionKey)
}
CMsgClientGetDepotDecryptionKey::CMsgClientGetDepotDecryptionKey(const CMsgClientGetDepotDecryptionKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&depot_id_, &from.depot_id_,
    reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&depot_id_) + sizeof(app_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetDepotDecryptionKey)
}

void CMsgClientGetDepotDecryptionKey::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&depot_id_, 0, reinterpret_cast<char*>(&app_id_) -
    reinterpret_cast<char*>(&depot_id_) + sizeof(app_id_));
}

CMsgClientGetDepotDecryptionKey::~CMsgClientGetDepotDecryptionKey() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetDepotDecryptionKey)
  SharedDtor();
}

void CMsgClientGetDepotDecryptionKey::SharedDtor() {
}

void CMsgClientGetDepotDecryptionKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientGetDepotDecryptionKey::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetDepotDecryptionKey& CMsgClientGetDepotDecryptionKey::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientGetDepotDecryptionKey* CMsgClientGetDepotDecryptionKey::New(::google::protobuf::Arena* arena) const {
  CMsgClientGetDepotDecryptionKey* n = new CMsgClientGetDepotDecryptionKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientGetDepotDecryptionKey::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&depot_id_, 0, reinterpret_cast<char*>(&app_id_) -
      reinterpret_cast<char*>(&depot_id_) + sizeof(app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetDepotDecryptionKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 depot_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_depot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetDepotDecryptionKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetDepotDecryptionKey)
  return false;
#undef DO_
}

void CMsgClientGetDepotDecryptionKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 depot_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->depot_id(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetDepotDecryptionKey)
}

::google::protobuf::uint8* CMsgClientGetDepotDecryptionKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 depot_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->depot_id(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetDepotDecryptionKey)
  return target;
}

size_t CMsgClientGetDepotDecryptionKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 depot_id = 1;
    if (has_depot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depot_id());
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientGetDepotDecryptionKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetDepotDecryptionKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetDepotDecryptionKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetDepotDecryptionKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetDepotDecryptionKey)
    MergeFrom(*source);
  }
}

void CMsgClientGetDepotDecryptionKey::MergeFrom(const CMsgClientGetDepotDecryptionKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      depot_id_ = from.depot_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetDepotDecryptionKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetDepotDecryptionKey::CopyFrom(const CMsgClientGetDepotDecryptionKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetDepotDecryptionKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetDepotDecryptionKey::IsInitialized() const {
  return true;
}

void CMsgClientGetDepotDecryptionKey::Swap(CMsgClientGetDepotDecryptionKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetDepotDecryptionKey::InternalSwap(CMsgClientGetDepotDecryptionKey* other) {
  std::swap(depot_id_, other->depot_id_);
  std::swap(app_id_, other->app_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientGetDepotDecryptionKey::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientGetDepotDecryptionKey

// optional uint32 depot_id = 1;
bool CMsgClientGetDepotDecryptionKey::has_depot_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientGetDepotDecryptionKey::set_has_depot_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientGetDepotDecryptionKey::clear_has_depot_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientGetDepotDecryptionKey::clear_depot_id() {
  depot_id_ = 0u;
  clear_has_depot_id();
}
::google::protobuf::uint32 CMsgClientGetDepotDecryptionKey::depot_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetDepotDecryptionKey.depot_id)
  return depot_id_;
}
void CMsgClientGetDepotDecryptionKey::set_depot_id(::google::protobuf::uint32 value) {
  set_has_depot_id();
  depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetDepotDecryptionKey.depot_id)
}

// optional uint32 app_id = 2;
bool CMsgClientGetDepotDecryptionKey::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientGetDepotDecryptionKey::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientGetDepotDecryptionKey::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientGetDepotDecryptionKey::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientGetDepotDecryptionKey::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetDepotDecryptionKey.app_id)
  return app_id_;
}
void CMsgClientGetDepotDecryptionKey::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetDepotDecryptionKey.app_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetDepotDecryptionKeyResponse::kEresultFieldNumber;
const int CMsgClientGetDepotDecryptionKeyResponse::kDepotIdFieldNumber;
const int CMsgClientGetDepotDecryptionKeyResponse::kDepotEncryptionKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetDepotDecryptionKeyResponse::CMsgClientGetDepotDecryptionKeyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
}
CMsgClientGetDepotDecryptionKeyResponse::CMsgClientGetDepotDecryptionKeyResponse(const CMsgClientGetDepotDecryptionKeyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  depot_encryption_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_depot_encryption_key()) {
    depot_encryption_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.depot_encryption_key_);
  }
  ::memcpy(&depot_id_, &from.depot_id_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&depot_id_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
}

void CMsgClientGetDepotDecryptionKeyResponse::SharedCtor() {
  _cached_size_ = 0;
  depot_encryption_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  depot_id_ = 0u;
  eresult_ = 2;
}

CMsgClientGetDepotDecryptionKeyResponse::~CMsgClientGetDepotDecryptionKeyResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  SharedDtor();
}

void CMsgClientGetDepotDecryptionKeyResponse::SharedDtor() {
  depot_encryption_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetDepotDecryptionKeyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientGetDepotDecryptionKeyResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetDepotDecryptionKeyResponse& CMsgClientGetDepotDecryptionKeyResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientGetDepotDecryptionKeyResponse* CMsgClientGetDepotDecryptionKeyResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientGetDepotDecryptionKeyResponse* n = new CMsgClientGetDepotDecryptionKeyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientGetDepotDecryptionKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  if (has_depot_encryption_key()) {
    GOOGLE_DCHECK(!depot_encryption_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*depot_encryption_key_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    depot_id_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetDepotDecryptionKeyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 depot_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_depot_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &depot_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes depot_encryption_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_depot_encryption_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  return false;
#undef DO_
}

void CMsgClientGetDepotDecryptionKeyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 depot_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->depot_id(), output);
  }

  // optional bytes depot_encryption_key = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->depot_encryption_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
}

::google::protobuf::uint8* CMsgClientGetDepotDecryptionKeyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 depot_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->depot_id(), target);
  }

  // optional bytes depot_encryption_key = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->depot_encryption_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  return target;
}

size_t CMsgClientGetDepotDecryptionKeyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes depot_encryption_key = 3;
    if (has_depot_encryption_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->depot_encryption_key());
    }

    // optional uint32 depot_id = 2;
    if (has_depot_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->depot_id());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientGetDepotDecryptionKeyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetDepotDecryptionKeyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetDepotDecryptionKeyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetDepotDecryptionKeyResponse::MergeFrom(const CMsgClientGetDepotDecryptionKeyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_depot_encryption_key();
      depot_encryption_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.depot_encryption_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      depot_id_ = from.depot_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetDepotDecryptionKeyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetDepotDecryptionKeyResponse::CopyFrom(const CMsgClientGetDepotDecryptionKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetDepotDecryptionKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetDepotDecryptionKeyResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetDepotDecryptionKeyResponse::Swap(CMsgClientGetDepotDecryptionKeyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetDepotDecryptionKeyResponse::InternalSwap(CMsgClientGetDepotDecryptionKeyResponse* other) {
  depot_encryption_key_.Swap(&other->depot_encryption_key_);
  std::swap(depot_id_, other->depot_id_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientGetDepotDecryptionKeyResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientGetDepotDecryptionKeyResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientGetDepotDecryptionKeyResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientGetDepotDecryptionKeyResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientGetDepotDecryptionKeyResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientGetDepotDecryptionKeyResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientGetDepotDecryptionKeyResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetDepotDecryptionKeyResponse.eresult)
  return eresult_;
}
void CMsgClientGetDepotDecryptionKeyResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetDepotDecryptionKeyResponse.eresult)
}

// optional uint32 depot_id = 2;
bool CMsgClientGetDepotDecryptionKeyResponse::has_depot_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientGetDepotDecryptionKeyResponse::set_has_depot_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientGetDepotDecryptionKeyResponse::clear_has_depot_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientGetDepotDecryptionKeyResponse::clear_depot_id() {
  depot_id_ = 0u;
  clear_has_depot_id();
}
::google::protobuf::uint32 CMsgClientGetDepotDecryptionKeyResponse::depot_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetDepotDecryptionKeyResponse.depot_id)
  return depot_id_;
}
void CMsgClientGetDepotDecryptionKeyResponse::set_depot_id(::google::protobuf::uint32 value) {
  set_has_depot_id();
  depot_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetDepotDecryptionKeyResponse.depot_id)
}

// optional bytes depot_encryption_key = 3;
bool CMsgClientGetDepotDecryptionKeyResponse::has_depot_encryption_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientGetDepotDecryptionKeyResponse::set_has_depot_encryption_key() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientGetDepotDecryptionKeyResponse::clear_has_depot_encryption_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientGetDepotDecryptionKeyResponse::clear_depot_encryption_key() {
  depot_encryption_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_depot_encryption_key();
}
const ::std::string& CMsgClientGetDepotDecryptionKeyResponse::depot_encryption_key() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
  return depot_encryption_key_.GetNoArena();
}
void CMsgClientGetDepotDecryptionKeyResponse::set_depot_encryption_key(const ::std::string& value) {
  set_has_depot_encryption_key();
  depot_encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
}
#if LANG_CXX11
void CMsgClientGetDepotDecryptionKeyResponse::set_depot_encryption_key(::std::string&& value) {
  set_has_depot_encryption_key();
  depot_encryption_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
}
#endif
void CMsgClientGetDepotDecryptionKeyResponse::set_depot_encryption_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_depot_encryption_key();
  depot_encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
}
void CMsgClientGetDepotDecryptionKeyResponse::set_depot_encryption_key(const void* value, size_t size) {
  set_has_depot_encryption_key();
  depot_encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
}
::std::string* CMsgClientGetDepotDecryptionKeyResponse::mutable_depot_encryption_key() {
  set_has_depot_encryption_key();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
  return depot_encryption_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientGetDepotDecryptionKeyResponse::release_depot_encryption_key() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
  clear_has_depot_encryption_key();
  return depot_encryption_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientGetDepotDecryptionKeyResponse::set_allocated_depot_encryption_key(::std::string* depot_encryption_key) {
  if (depot_encryption_key != NULL) {
    set_has_depot_encryption_key();
  } else {
    clear_has_depot_encryption_key();
  }
  depot_encryption_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), depot_encryption_key);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientGetDepotDecryptionKeyResponse.depot_encryption_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckAppBetaPassword::kAppIdFieldNumber;
const int CMsgClientCheckAppBetaPassword::kBetapasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckAppBetaPassword::CMsgClientCheckAppBetaPassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientCheckAppBetaPassword)
}
CMsgClientCheckAppBetaPassword::CMsgClientCheckAppBetaPassword(const CMsgClientCheckAppBetaPassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  betapassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_betapassword()) {
    betapassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betapassword_);
  }
  app_id_ = from.app_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientCheckAppBetaPassword)
}

void CMsgClientCheckAppBetaPassword::SharedCtor() {
  _cached_size_ = 0;
  betapassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_id_ = 0u;
}

CMsgClientCheckAppBetaPassword::~CMsgClientCheckAppBetaPassword() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientCheckAppBetaPassword)
  SharedDtor();
}

void CMsgClientCheckAppBetaPassword::SharedDtor() {
  betapassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientCheckAppBetaPassword::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientCheckAppBetaPassword::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCheckAppBetaPassword& CMsgClientCheckAppBetaPassword::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientCheckAppBetaPassword* CMsgClientCheckAppBetaPassword::New(::google::protobuf::Arena* arena) const {
  CMsgClientCheckAppBetaPassword* n = new CMsgClientCheckAppBetaPassword;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientCheckAppBetaPassword::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientCheckAppBetaPassword)
  if (has_betapassword()) {
    GOOGLE_DCHECK(!betapassword_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*betapassword_.UnsafeRawStringPointer())->clear();
  }
  app_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCheckAppBetaPassword::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientCheckAppBetaPassword)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string betapassword = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_betapassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->betapassword().data(), this->betapassword().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientCheckAppBetaPassword.betapassword");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientCheckAppBetaPassword)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientCheckAppBetaPassword)
  return false;
#undef DO_
}

void CMsgClientCheckAppBetaPassword::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientCheckAppBetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional string betapassword = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betapassword().data(), this->betapassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckAppBetaPassword.betapassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->betapassword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientCheckAppBetaPassword)
}

::google::protobuf::uint8* CMsgClientCheckAppBetaPassword::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientCheckAppBetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional string betapassword = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betapassword().data(), this->betapassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckAppBetaPassword.betapassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->betapassword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientCheckAppBetaPassword)
  return target;
}

size_t CMsgClientCheckAppBetaPassword::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientCheckAppBetaPassword)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string betapassword = 2;
    if (has_betapassword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->betapassword());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientCheckAppBetaPassword::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientCheckAppBetaPassword)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckAppBetaPassword* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCheckAppBetaPassword>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientCheckAppBetaPassword)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientCheckAppBetaPassword)
    MergeFrom(*source);
  }
}

void CMsgClientCheckAppBetaPassword::MergeFrom(const CMsgClientCheckAppBetaPassword& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientCheckAppBetaPassword)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_betapassword();
      betapassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betapassword_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientCheckAppBetaPassword::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientCheckAppBetaPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckAppBetaPassword::CopyFrom(const CMsgClientCheckAppBetaPassword& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientCheckAppBetaPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckAppBetaPassword::IsInitialized() const {
  return true;
}

void CMsgClientCheckAppBetaPassword::Swap(CMsgClientCheckAppBetaPassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckAppBetaPassword::InternalSwap(CMsgClientCheckAppBetaPassword* other) {
  betapassword_.Swap(&other->betapassword_);
  std::swap(app_id_, other->app_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientCheckAppBetaPassword::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientCheckAppBetaPassword

// optional uint32 app_id = 1;
bool CMsgClientCheckAppBetaPassword::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientCheckAppBetaPassword::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientCheckAppBetaPassword::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientCheckAppBetaPassword::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientCheckAppBetaPassword::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckAppBetaPassword.app_id)
  return app_id_;
}
void CMsgClientCheckAppBetaPassword::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckAppBetaPassword.app_id)
}

// optional string betapassword = 2;
bool CMsgClientCheckAppBetaPassword::has_betapassword() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientCheckAppBetaPassword::set_has_betapassword() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientCheckAppBetaPassword::clear_has_betapassword() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientCheckAppBetaPassword::clear_betapassword() {
  betapassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_betapassword();
}
const ::std::string& CMsgClientCheckAppBetaPassword::betapassword() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckAppBetaPassword.betapassword)
  return betapassword_.GetNoArena();
}
void CMsgClientCheckAppBetaPassword::set_betapassword(const ::std::string& value) {
  set_has_betapassword();
  betapassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckAppBetaPassword.betapassword)
}
#if LANG_CXX11
void CMsgClientCheckAppBetaPassword::set_betapassword(::std::string&& value) {
  set_has_betapassword();
  betapassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientCheckAppBetaPassword.betapassword)
}
#endif
void CMsgClientCheckAppBetaPassword::set_betapassword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_betapassword();
  betapassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientCheckAppBetaPassword.betapassword)
}
void CMsgClientCheckAppBetaPassword::set_betapassword(const char* value, size_t size) {
  set_has_betapassword();
  betapassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientCheckAppBetaPassword.betapassword)
}
::std::string* CMsgClientCheckAppBetaPassword::mutable_betapassword() {
  set_has_betapassword();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientCheckAppBetaPassword.betapassword)
  return betapassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientCheckAppBetaPassword::release_betapassword() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientCheckAppBetaPassword.betapassword)
  clear_has_betapassword();
  return betapassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientCheckAppBetaPassword::set_allocated_betapassword(::std::string* betapassword) {
  if (betapassword != NULL) {
    set_has_betapassword();
  } else {
    clear_has_betapassword();
  }
  betapassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), betapassword);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientCheckAppBetaPassword.betapassword)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckAppBetaPasswordResponse_BetaPassword::kBetanameFieldNumber;
const int CMsgClientCheckAppBetaPasswordResponse_BetaPassword::kBetapasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckAppBetaPasswordResponse_BetaPassword::CMsgClientCheckAppBetaPasswordResponse_BetaPassword()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
}
CMsgClientCheckAppBetaPasswordResponse_BetaPassword::CMsgClientCheckAppBetaPasswordResponse_BetaPassword(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  betaname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_betaname()) {
    betaname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betaname_);
  }
  betapassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_betapassword()) {
    betapassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betapassword_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::SharedCtor() {
  _cached_size_ = 0;
  betaname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  betapassword_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientCheckAppBetaPasswordResponse_BetaPassword::~CMsgClientCheckAppBetaPasswordResponse_BetaPassword() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  SharedDtor();
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::SharedDtor() {
  betaname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  betapassword_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& CMsgClientCheckAppBetaPasswordResponse_BetaPassword::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientCheckAppBetaPasswordResponse_BetaPassword* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::New(::google::protobuf::Arena* arena) const {
  CMsgClientCheckAppBetaPasswordResponse_BetaPassword* n = new CMsgClientCheckAppBetaPasswordResponse_BetaPassword;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_betaname()) {
      GOOGLE_DCHECK(!betaname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*betaname_.UnsafeRawStringPointer())->clear();
    }
    if (has_betapassword()) {
      GOOGLE_DCHECK(!betapassword_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*betapassword_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string betaname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_betaname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->betaname().data(), this->betaname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string betapassword = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_betapassword()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->betapassword().data(), this->betapassword().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  return false;
#undef DO_
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string betaname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betaname().data(), this->betaname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->betaname(), output);
  }

  // optional string betapassword = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betapassword().data(), this->betapassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->betapassword(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
}

::google::protobuf::uint8* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string betaname = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betaname().data(), this->betaname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->betaname(), target);
  }

  // optional string betapassword = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->betapassword().data(), this->betapassword().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->betapassword(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  return target;
}

size_t CMsgClientCheckAppBetaPasswordResponse_BetaPassword::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string betaname = 1;
    if (has_betaname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->betaname());
    }

    // optional string betapassword = 2;
    if (has_betapassword()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->betapassword());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckAppBetaPasswordResponse_BetaPassword* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCheckAppBetaPasswordResponse_BetaPassword>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
    MergeFrom(*source);
  }
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::MergeFrom(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_betaname();
      betaname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betaname_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_betapassword();
      betapassword_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.betapassword_);
    }
  }
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::CopyFrom(const CMsgClientCheckAppBetaPasswordResponse_BetaPassword& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::IsInitialized() const {
  return true;
}

void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::Swap(CMsgClientCheckAppBetaPasswordResponse_BetaPassword* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::InternalSwap(CMsgClientCheckAppBetaPasswordResponse_BetaPassword* other) {
  betaname_.Swap(&other->betaname_);
  betapassword_.Swap(&other->betapassword_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientCheckAppBetaPasswordResponse_BetaPassword::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientCheckAppBetaPasswordResponse_BetaPassword

// optional string betaname = 1;
bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::has_betaname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_has_betaname() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::clear_has_betaname() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::clear_betaname() {
  betaname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_betaname();
}
const ::std::string& CMsgClientCheckAppBetaPasswordResponse_BetaPassword::betaname() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
  return betaname_.GetNoArena();
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betaname(const ::std::string& value) {
  set_has_betaname();
  betaname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
}
#if LANG_CXX11
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betaname(::std::string&& value) {
  set_has_betaname();
  betaname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
}
#endif
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betaname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_betaname();
  betaname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betaname(const char* value, size_t size) {
  set_has_betaname();
  betaname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
}
::std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::mutable_betaname() {
  set_has_betaname();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
  return betaname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::release_betaname() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
  clear_has_betaname();
  return betaname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_allocated_betaname(::std::string* betaname) {
  if (betaname != NULL) {
    set_has_betaname();
  } else {
    clear_has_betaname();
  }
  betaname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), betaname);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betaname)
}

// optional string betapassword = 2;
bool CMsgClientCheckAppBetaPasswordResponse_BetaPassword::has_betapassword() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_has_betapassword() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::clear_has_betapassword() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::clear_betapassword() {
  betapassword_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_betapassword();
}
const ::std::string& CMsgClientCheckAppBetaPasswordResponse_BetaPassword::betapassword() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
  return betapassword_.GetNoArena();
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betapassword(const ::std::string& value) {
  set_has_betapassword();
  betapassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
}
#if LANG_CXX11
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betapassword(::std::string&& value) {
  set_has_betapassword();
  betapassword_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
}
#endif
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betapassword(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_betapassword();
  betapassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_betapassword(const char* value, size_t size) {
  set_has_betapassword();
  betapassword_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
}
::std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::mutable_betapassword() {
  set_has_betapassword();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
  return betapassword_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientCheckAppBetaPasswordResponse_BetaPassword::release_betapassword() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
  clear_has_betapassword();
  return betapassword_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientCheckAppBetaPasswordResponse_BetaPassword::set_allocated_betapassword(::std::string* betapassword) {
  if (betapassword != NULL) {
    set_has_betapassword();
  } else {
    clear_has_betapassword();
  }
  betapassword_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), betapassword);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword.betapassword)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCheckAppBetaPasswordResponse::kEresultFieldNumber;
const int CMsgClientCheckAppBetaPasswordResponse::kBetapasswordsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCheckAppBetaPasswordResponse::CMsgClientCheckAppBetaPasswordResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
}
CMsgClientCheckAppBetaPasswordResponse::CMsgClientCheckAppBetaPasswordResponse(const CMsgClientCheckAppBetaPasswordResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      betapasswords_(from.betapasswords_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
}

void CMsgClientCheckAppBetaPasswordResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
}

CMsgClientCheckAppBetaPasswordResponse::~CMsgClientCheckAppBetaPasswordResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  SharedDtor();
}

void CMsgClientCheckAppBetaPasswordResponse::SharedDtor() {
}

void CMsgClientCheckAppBetaPasswordResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientCheckAppBetaPasswordResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCheckAppBetaPasswordResponse& CMsgClientCheckAppBetaPasswordResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientCheckAppBetaPasswordResponse* CMsgClientCheckAppBetaPasswordResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientCheckAppBetaPasswordResponse* n = new CMsgClientCheckAppBetaPasswordResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientCheckAppBetaPasswordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  betapasswords_.Clear();
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCheckAppBetaPasswordResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_betapasswords()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  return false;
#undef DO_
}

void CMsgClientCheckAppBetaPasswordResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
  for (unsigned int i = 0, n = this->betapasswords_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->betapasswords(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
}

::google::protobuf::uint8* CMsgClientCheckAppBetaPasswordResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
  for (unsigned int i = 0, n = this->betapasswords_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->betapasswords(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  return target;
}

size_t CMsgClientCheckAppBetaPasswordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
  {
    unsigned int count = this->betapasswords_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->betapasswords(i));
    }
  }

  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientCheckAppBetaPasswordResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCheckAppBetaPasswordResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCheckAppBetaPasswordResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
    MergeFrom(*source);
  }
}

void CMsgClientCheckAppBetaPasswordResponse::MergeFrom(const CMsgClientCheckAppBetaPasswordResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  betapasswords_.MergeFrom(from.betapasswords_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientCheckAppBetaPasswordResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCheckAppBetaPasswordResponse::CopyFrom(const CMsgClientCheckAppBetaPasswordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientCheckAppBetaPasswordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCheckAppBetaPasswordResponse::IsInitialized() const {
  return true;
}

void CMsgClientCheckAppBetaPasswordResponse::Swap(CMsgClientCheckAppBetaPasswordResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCheckAppBetaPasswordResponse::InternalSwap(CMsgClientCheckAppBetaPasswordResponse* other) {
  betapasswords_.InternalSwap(&other->betapasswords_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientCheckAppBetaPasswordResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientCheckAppBetaPasswordResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientCheckAppBetaPasswordResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientCheckAppBetaPasswordResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientCheckAppBetaPasswordResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientCheckAppBetaPasswordResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientCheckAppBetaPasswordResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckAppBetaPasswordResponse.eresult)
  return eresult_;
}
void CMsgClientCheckAppBetaPasswordResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCheckAppBetaPasswordResponse.eresult)
}

// repeated .proto.steam.CMsgClientCheckAppBetaPasswordResponse.BetaPassword betapasswords = 4;
int CMsgClientCheckAppBetaPasswordResponse::betapasswords_size() const {
  return betapasswords_.size();
}
void CMsgClientCheckAppBetaPasswordResponse::clear_betapasswords() {
  betapasswords_.Clear();
}
const ::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword& CMsgClientCheckAppBetaPasswordResponse::betapasswords(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCheckAppBetaPasswordResponse.betapasswords)
  return betapasswords_.Get(index);
}
::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* CMsgClientCheckAppBetaPasswordResponse::mutable_betapasswords(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientCheckAppBetaPasswordResponse.betapasswords)
  return betapasswords_.Mutable(index);
}
::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword* CMsgClientCheckAppBetaPasswordResponse::add_betapasswords() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientCheckAppBetaPasswordResponse.betapasswords)
  return betapasswords_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword >*
CMsgClientCheckAppBetaPasswordResponse::mutable_betapasswords() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientCheckAppBetaPasswordResponse.betapasswords)
  return &betapasswords_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientCheckAppBetaPasswordResponse_BetaPassword >&
CMsgClientCheckAppBetaPasswordResponse::betapasswords() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientCheckAppBetaPasswordResponse.betapasswords)
  return betapasswords_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUpdateAppJobReport::kAppIdFieldNumber;
const int CMsgClientUpdateAppJobReport::kDepotIdsFieldNumber;
const int CMsgClientUpdateAppJobReport::kAppStateFieldNumber;
const int CMsgClientUpdateAppJobReport::kJobAppErrorFieldNumber;
const int CMsgClientUpdateAppJobReport::kErrorDetailsFieldNumber;
const int CMsgClientUpdateAppJobReport::kJobDurationFieldNumber;
const int CMsgClientUpdateAppJobReport::kFilesValidationFailedFieldNumber;
const int CMsgClientUpdateAppJobReport::kJobBytesDownloadedFieldNumber;
const int CMsgClientUpdateAppJobReport::kJobBytesStagedFieldNumber;
const int CMsgClientUpdateAppJobReport::kBytesComittedFieldNumber;
const int CMsgClientUpdateAppJobReport::kStartAppStateFieldNumber;
const int CMsgClientUpdateAppJobReport::kStatsMachineIdFieldNumber;
const int CMsgClientUpdateAppJobReport::kBranchNameFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesDownloadedFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesStagedFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesRestoredFieldNumber;
const int CMsgClientUpdateAppJobReport::kIsBorrowedFieldNumber;
const int CMsgClientUpdateAppJobReport::kIsFreeWeekendFieldNumber;
const int CMsgClientUpdateAppJobReport::kTotalBytesLegacyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUpdateAppJobReport::CMsgClientUpdateAppJobReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUpdateAppJobReport)
}
CMsgClientUpdateAppJobReport::CMsgClientUpdateAppJobReport(const CMsgClientUpdateAppJobReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      depot_ids_(from.depot_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_details()) {
    error_details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_details_);
  }
  branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_branch_name()) {
    branch_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_name_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    reinterpret_cast<char*>(&is_free_weekend_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(is_free_weekend_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUpdateAppJobReport)
}

void CMsgClientUpdateAppJobReport::SharedCtor() {
  _cached_size_ = 0;
  error_details_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&is_free_weekend_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(is_free_weekend_));
}

CMsgClientUpdateAppJobReport::~CMsgClientUpdateAppJobReport() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUpdateAppJobReport)
  SharedDtor();
}

void CMsgClientUpdateAppJobReport::SharedDtor() {
  error_details_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  branch_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientUpdateAppJobReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUpdateAppJobReport::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUpdateAppJobReport& CMsgClientUpdateAppJobReport::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUpdateAppJobReport* CMsgClientUpdateAppJobReport::New(::google::protobuf::Arena* arena) const {
  CMsgClientUpdateAppJobReport* n = new CMsgClientUpdateAppJobReport;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUpdateAppJobReport::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUpdateAppJobReport)
  depot_ids_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_error_details()) {
      GOOGLE_DCHECK(!error_details_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*error_details_.UnsafeRawStringPointer())->clear();
    }
    if (has_branch_name()) {
      GOOGLE_DCHECK(!branch_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*branch_name_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 252u) {
    ::memset(&app_id_, 0, reinterpret_cast<char*>(&job_bytes_staged_) -
      reinterpret_cast<char*>(&app_id_) + sizeof(job_bytes_staged_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&files_validation_failed_, 0, reinterpret_cast<char*>(&total_bytes_legacy_) -
      reinterpret_cast<char*>(&files_validation_failed_) + sizeof(total_bytes_legacy_));
  }
  if (_has_bits_[16 / 32] & 196608u) {
    ::memset(&is_borrowed_, 0, reinterpret_cast<char*>(&is_free_weekend_) -
      reinterpret_cast<char*>(&is_borrowed_) + sizeof(is_free_weekend_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUpdateAppJobReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUpdateAppJobReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 depot_ids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_depot_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_depot_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_state = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_app_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 job_app_error = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_job_app_error();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_app_error_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error_details = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_details()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_details().data(), this->error_details().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUpdateAppJobReport.error_details");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 job_duration = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_job_duration();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &job_duration_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 files_validation_failed = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_files_validation_failed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &files_validation_failed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 job_bytes_downloaded = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_job_bytes_downloaded();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &job_bytes_downloaded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 job_bytes_staged = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_job_bytes_staged();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &job_bytes_staged_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes_comitted = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_bytes_comitted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_comitted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_app_state = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          set_has_start_app_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_app_state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 stats_machine_id = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u)) {
          set_has_stats_machine_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &stats_machine_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string branch_name = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_branch_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->branch_name().data(), this->branch_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientUpdateAppJobReport.branch_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_downloaded = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_total_bytes_downloaded();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_downloaded_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_staged = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has_total_bytes_staged();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_staged_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_restored = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has_total_bytes_restored();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_restored_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_borrowed = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          set_has_is_borrowed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_borrowed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_free_weekend = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          set_has_is_free_weekend();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_free_weekend_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 total_bytes_legacy = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {
          set_has_total_bytes_legacy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &total_bytes_legacy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUpdateAppJobReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUpdateAppJobReport)
  return false;
#undef DO_
}

void CMsgClientUpdateAppJobReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUpdateAppJobReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // repeated uint32 depot_ids = 2;
  for (int i = 0, n = this->depot_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->depot_ids(i), output);
  }

  // optional uint32 app_state = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->app_state(), output);
  }

  // optional uint32 job_app_error = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->job_app_error(), output);
  }

  // optional string error_details = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_details().data(), this->error_details().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateAppJobReport.error_details");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->error_details(), output);
  }

  // optional uint32 job_duration = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->job_duration(), output);
  }

  // optional uint32 files_validation_failed = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->files_validation_failed(), output);
  }

  // optional uint64 job_bytes_downloaded = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(8, this->job_bytes_downloaded(), output);
  }

  // optional uint64 job_bytes_staged = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->job_bytes_staged(), output);
  }

  // optional uint64 bytes_comitted = 10;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(10, this->bytes_comitted(), output);
  }

  // optional uint32 start_app_state = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->start_app_state(), output);
  }

  // optional fixed64 stats_machine_id = 12;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(12, this->stats_machine_id(), output);
  }

  // optional string branch_name = 13;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->branch_name().data(), this->branch_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateAppJobReport.branch_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->branch_name(), output);
  }

  // optional uint64 total_bytes_downloaded = 14;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(14, this->total_bytes_downloaded(), output);
  }

  // optional uint64 total_bytes_staged = 15;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->total_bytes_staged(), output);
  }

  // optional uint64 total_bytes_restored = 16;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(16, this->total_bytes_restored(), output);
  }

  // optional bool is_borrowed = 17;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(17, this->is_borrowed(), output);
  }

  // optional bool is_free_weekend = 18;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(18, this->is_free_weekend(), output);
  }

  // optional uint64 total_bytes_legacy = 19;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(19, this->total_bytes_legacy(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUpdateAppJobReport)
}

::google::protobuf::uint8* CMsgClientUpdateAppJobReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUpdateAppJobReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // repeated uint32 depot_ids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->depot_ids_, target);

  // optional uint32 app_state = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->app_state(), target);
  }

  // optional uint32 job_app_error = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->job_app_error(), target);
  }

  // optional string error_details = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_details().data(), this->error_details().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateAppJobReport.error_details");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->error_details(), target);
  }

  // optional uint32 job_duration = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->job_duration(), target);
  }

  // optional uint32 files_validation_failed = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->files_validation_failed(), target);
  }

  // optional uint64 job_bytes_downloaded = 8;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(8, this->job_bytes_downloaded(), target);
  }

  // optional uint64 job_bytes_staged = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->job_bytes_staged(), target);
  }

  // optional uint64 bytes_comitted = 10;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(10, this->bytes_comitted(), target);
  }

  // optional uint32 start_app_state = 11;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->start_app_state(), target);
  }

  // optional fixed64 stats_machine_id = 12;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(12, this->stats_machine_id(), target);
  }

  // optional string branch_name = 13;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->branch_name().data(), this->branch_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientUpdateAppJobReport.branch_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->branch_name(), target);
  }

  // optional uint64 total_bytes_downloaded = 14;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(14, this->total_bytes_downloaded(), target);
  }

  // optional uint64 total_bytes_staged = 15;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->total_bytes_staged(), target);
  }

  // optional uint64 total_bytes_restored = 16;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(16, this->total_bytes_restored(), target);
  }

  // optional bool is_borrowed = 17;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(17, this->is_borrowed(), target);
  }

  // optional bool is_free_weekend = 18;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(18, this->is_free_weekend(), target);
  }

  // optional uint64 total_bytes_legacy = 19;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(19, this->total_bytes_legacy(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUpdateAppJobReport)
  return target;
}

size_t CMsgClientUpdateAppJobReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUpdateAppJobReport)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 depot_ids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->depot_ids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->depot_ids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string error_details = 5;
    if (has_error_details()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_details());
    }

    // optional string branch_name = 13;
    if (has_branch_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->branch_name());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 app_state = 3;
    if (has_app_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_state());
    }

    // optional uint32 job_app_error = 4;
    if (has_job_app_error()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->job_app_error());
    }

    // optional uint32 job_duration = 6;
    if (has_job_duration()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->job_duration());
    }

    // optional uint64 job_bytes_downloaded = 8;
    if (has_job_bytes_downloaded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->job_bytes_downloaded());
    }

    // optional uint64 job_bytes_staged = 9;
    if (has_job_bytes_staged()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->job_bytes_staged());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 files_validation_failed = 7;
    if (has_files_validation_failed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->files_validation_failed());
    }

    // optional uint32 start_app_state = 11;
    if (has_start_app_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_app_state());
    }

    // optional uint64 bytes_comitted = 10;
    if (has_bytes_comitted()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes_comitted());
    }

    // optional fixed64 stats_machine_id = 12;
    if (has_stats_machine_id()) {
      total_size += 1 + 8;
    }

    // optional uint64 total_bytes_downloaded = 14;
    if (has_total_bytes_downloaded()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_downloaded());
    }

    // optional uint64 total_bytes_staged = 15;
    if (has_total_bytes_staged()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_staged());
    }

    // optional uint64 total_bytes_restored = 16;
    if (has_total_bytes_restored()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_restored());
    }

    // optional uint64 total_bytes_legacy = 19;
    if (has_total_bytes_legacy()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->total_bytes_legacy());
    }

  }
  if (_has_bits_[16 / 32] & 196608u) {
    // optional bool is_borrowed = 17;
    if (has_is_borrowed()) {
      total_size += 2 + 1;
    }

    // optional bool is_free_weekend = 18;
    if (has_is_free_weekend()) {
      total_size += 2 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUpdateAppJobReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUpdateAppJobReport)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUpdateAppJobReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUpdateAppJobReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUpdateAppJobReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUpdateAppJobReport)
    MergeFrom(*source);
  }
}

void CMsgClientUpdateAppJobReport::MergeFrom(const CMsgClientUpdateAppJobReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUpdateAppJobReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  depot_ids_.MergeFrom(from.depot_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_error_details();
      error_details_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_details_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_branch_name();
      branch_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.branch_name_);
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      app_state_ = from.app_state_;
    }
    if (cached_has_bits & 0x00000010u) {
      job_app_error_ = from.job_app_error_;
    }
    if (cached_has_bits & 0x00000020u) {
      job_duration_ = from.job_duration_;
    }
    if (cached_has_bits & 0x00000040u) {
      job_bytes_downloaded_ = from.job_bytes_downloaded_;
    }
    if (cached_has_bits & 0x00000080u) {
      job_bytes_staged_ = from.job_bytes_staged_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      files_validation_failed_ = from.files_validation_failed_;
    }
    if (cached_has_bits & 0x00000200u) {
      start_app_state_ = from.start_app_state_;
    }
    if (cached_has_bits & 0x00000400u) {
      bytes_comitted_ = from.bytes_comitted_;
    }
    if (cached_has_bits & 0x00000800u) {
      stats_machine_id_ = from.stats_machine_id_;
    }
    if (cached_has_bits & 0x00001000u) {
      total_bytes_downloaded_ = from.total_bytes_downloaded_;
    }
    if (cached_has_bits & 0x00002000u) {
      total_bytes_staged_ = from.total_bytes_staged_;
    }
    if (cached_has_bits & 0x00004000u) {
      total_bytes_restored_ = from.total_bytes_restored_;
    }
    if (cached_has_bits & 0x00008000u) {
      total_bytes_legacy_ = from.total_bytes_legacy_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 196608u) {
    if (cached_has_bits & 0x00010000u) {
      is_borrowed_ = from.is_borrowed_;
    }
    if (cached_has_bits & 0x00020000u) {
      is_free_weekend_ = from.is_free_weekend_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUpdateAppJobReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUpdateAppJobReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUpdateAppJobReport::CopyFrom(const CMsgClientUpdateAppJobReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUpdateAppJobReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUpdateAppJobReport::IsInitialized() const {
  return true;
}

void CMsgClientUpdateAppJobReport::Swap(CMsgClientUpdateAppJobReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUpdateAppJobReport::InternalSwap(CMsgClientUpdateAppJobReport* other) {
  depot_ids_.InternalSwap(&other->depot_ids_);
  error_details_.Swap(&other->error_details_);
  branch_name_.Swap(&other->branch_name_);
  std::swap(app_id_, other->app_id_);
  std::swap(app_state_, other->app_state_);
  std::swap(job_app_error_, other->job_app_error_);
  std::swap(job_duration_, other->job_duration_);
  std::swap(job_bytes_downloaded_, other->job_bytes_downloaded_);
  std::swap(job_bytes_staged_, other->job_bytes_staged_);
  std::swap(files_validation_failed_, other->files_validation_failed_);
  std::swap(start_app_state_, other->start_app_state_);
  std::swap(bytes_comitted_, other->bytes_comitted_);
  std::swap(stats_machine_id_, other->stats_machine_id_);
  std::swap(total_bytes_downloaded_, other->total_bytes_downloaded_);
  std::swap(total_bytes_staged_, other->total_bytes_staged_);
  std::swap(total_bytes_restored_, other->total_bytes_restored_);
  std::swap(total_bytes_legacy_, other->total_bytes_legacy_);
  std::swap(is_borrowed_, other->is_borrowed_);
  std::swap(is_free_weekend_, other->is_free_weekend_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUpdateAppJobReport::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUpdateAppJobReport

// optional uint32 app_id = 1;
bool CMsgClientUpdateAppJobReport::has_app_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_app_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUpdateAppJobReport::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUpdateAppJobReport::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientUpdateAppJobReport::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.app_id)
  return app_id_;
}
void CMsgClientUpdateAppJobReport::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.app_id)
}

// repeated uint32 depot_ids = 2;
int CMsgClientUpdateAppJobReport::depot_ids_size() const {
  return depot_ids_.size();
}
void CMsgClientUpdateAppJobReport::clear_depot_ids() {
  depot_ids_.Clear();
}
::google::protobuf::uint32 CMsgClientUpdateAppJobReport::depot_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.depot_ids)
  return depot_ids_.Get(index);
}
void CMsgClientUpdateAppJobReport::set_depot_ids(int index, ::google::protobuf::uint32 value) {
  depot_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.depot_ids)
}
void CMsgClientUpdateAppJobReport::add_depot_ids(::google::protobuf::uint32 value) {
  depot_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUpdateAppJobReport.depot_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientUpdateAppJobReport::depot_ids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUpdateAppJobReport.depot_ids)
  return depot_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientUpdateAppJobReport::mutable_depot_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUpdateAppJobReport.depot_ids)
  return &depot_ids_;
}

// optional uint32 app_state = 3;
bool CMsgClientUpdateAppJobReport::has_app_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_app_state() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientUpdateAppJobReport::clear_has_app_state() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientUpdateAppJobReport::clear_app_state() {
  app_state_ = 0u;
  clear_has_app_state();
}
::google::protobuf::uint32 CMsgClientUpdateAppJobReport::app_state() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.app_state)
  return app_state_;
}
void CMsgClientUpdateAppJobReport::set_app_state(::google::protobuf::uint32 value) {
  set_has_app_state();
  app_state_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.app_state)
}

// optional uint32 job_app_error = 4;
bool CMsgClientUpdateAppJobReport::has_job_app_error() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_job_app_error() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientUpdateAppJobReport::clear_has_job_app_error() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientUpdateAppJobReport::clear_job_app_error() {
  job_app_error_ = 0u;
  clear_has_job_app_error();
}
::google::protobuf::uint32 CMsgClientUpdateAppJobReport::job_app_error() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.job_app_error)
  return job_app_error_;
}
void CMsgClientUpdateAppJobReport::set_job_app_error(::google::protobuf::uint32 value) {
  set_has_job_app_error();
  job_app_error_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.job_app_error)
}

// optional string error_details = 5;
bool CMsgClientUpdateAppJobReport::has_error_details() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_error_details() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUpdateAppJobReport::clear_has_error_details() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUpdateAppJobReport::clear_error_details() {
  error_details_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_details();
}
const ::std::string& CMsgClientUpdateAppJobReport::error_details() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.error_details)
  return error_details_.GetNoArena();
}
void CMsgClientUpdateAppJobReport::set_error_details(const ::std::string& value) {
  set_has_error_details();
  error_details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.error_details)
}
#if LANG_CXX11
void CMsgClientUpdateAppJobReport::set_error_details(::std::string&& value) {
  set_has_error_details();
  error_details_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUpdateAppJobReport.error_details)
}
#endif
void CMsgClientUpdateAppJobReport::set_error_details(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_error_details();
  error_details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUpdateAppJobReport.error_details)
}
void CMsgClientUpdateAppJobReport::set_error_details(const char* value, size_t size) {
  set_has_error_details();
  error_details_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUpdateAppJobReport.error_details)
}
::std::string* CMsgClientUpdateAppJobReport::mutable_error_details() {
  set_has_error_details();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUpdateAppJobReport.error_details)
  return error_details_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUpdateAppJobReport::release_error_details() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUpdateAppJobReport.error_details)
  clear_has_error_details();
  return error_details_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUpdateAppJobReport::set_allocated_error_details(::std::string* error_details) {
  if (error_details != NULL) {
    set_has_error_details();
  } else {
    clear_has_error_details();
  }
  error_details_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_details);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUpdateAppJobReport.error_details)
}

// optional uint32 job_duration = 6;
bool CMsgClientUpdateAppJobReport::has_job_duration() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_job_duration() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientUpdateAppJobReport::clear_has_job_duration() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientUpdateAppJobReport::clear_job_duration() {
  job_duration_ = 0u;
  clear_has_job_duration();
}
::google::protobuf::uint32 CMsgClientUpdateAppJobReport::job_duration() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.job_duration)
  return job_duration_;
}
void CMsgClientUpdateAppJobReport::set_job_duration(::google::protobuf::uint32 value) {
  set_has_job_duration();
  job_duration_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.job_duration)
}

// optional uint32 files_validation_failed = 7;
bool CMsgClientUpdateAppJobReport::has_files_validation_failed() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_files_validation_failed() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgClientUpdateAppJobReport::clear_has_files_validation_failed() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgClientUpdateAppJobReport::clear_files_validation_failed() {
  files_validation_failed_ = 0u;
  clear_has_files_validation_failed();
}
::google::protobuf::uint32 CMsgClientUpdateAppJobReport::files_validation_failed() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.files_validation_failed)
  return files_validation_failed_;
}
void CMsgClientUpdateAppJobReport::set_files_validation_failed(::google::protobuf::uint32 value) {
  set_has_files_validation_failed();
  files_validation_failed_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.files_validation_failed)
}

// optional uint64 job_bytes_downloaded = 8;
bool CMsgClientUpdateAppJobReport::has_job_bytes_downloaded() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_job_bytes_downloaded() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientUpdateAppJobReport::clear_has_job_bytes_downloaded() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientUpdateAppJobReport::clear_job_bytes_downloaded() {
  job_bytes_downloaded_ = GOOGLE_ULONGLONG(0);
  clear_has_job_bytes_downloaded();
}
::google::protobuf::uint64 CMsgClientUpdateAppJobReport::job_bytes_downloaded() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.job_bytes_downloaded)
  return job_bytes_downloaded_;
}
void CMsgClientUpdateAppJobReport::set_job_bytes_downloaded(::google::protobuf::uint64 value) {
  set_has_job_bytes_downloaded();
  job_bytes_downloaded_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.job_bytes_downloaded)
}

// optional uint64 job_bytes_staged = 9;
bool CMsgClientUpdateAppJobReport::has_job_bytes_staged() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_job_bytes_staged() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgClientUpdateAppJobReport::clear_has_job_bytes_staged() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgClientUpdateAppJobReport::clear_job_bytes_staged() {
  job_bytes_staged_ = GOOGLE_ULONGLONG(0);
  clear_has_job_bytes_staged();
}
::google::protobuf::uint64 CMsgClientUpdateAppJobReport::job_bytes_staged() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.job_bytes_staged)
  return job_bytes_staged_;
}
void CMsgClientUpdateAppJobReport::set_job_bytes_staged(::google::protobuf::uint64 value) {
  set_has_job_bytes_staged();
  job_bytes_staged_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.job_bytes_staged)
}

// optional uint64 bytes_comitted = 10;
bool CMsgClientUpdateAppJobReport::has_bytes_comitted() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_bytes_comitted() {
  _has_bits_[0] |= 0x00000400u;
}
void CMsgClientUpdateAppJobReport::clear_has_bytes_comitted() {
  _has_bits_[0] &= ~0x00000400u;
}
void CMsgClientUpdateAppJobReport::clear_bytes_comitted() {
  bytes_comitted_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes_comitted();
}
::google::protobuf::uint64 CMsgClientUpdateAppJobReport::bytes_comitted() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.bytes_comitted)
  return bytes_comitted_;
}
void CMsgClientUpdateAppJobReport::set_bytes_comitted(::google::protobuf::uint64 value) {
  set_has_bytes_comitted();
  bytes_comitted_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.bytes_comitted)
}

// optional uint32 start_app_state = 11;
bool CMsgClientUpdateAppJobReport::has_start_app_state() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_start_app_state() {
  _has_bits_[0] |= 0x00000200u;
}
void CMsgClientUpdateAppJobReport::clear_has_start_app_state() {
  _has_bits_[0] &= ~0x00000200u;
}
void CMsgClientUpdateAppJobReport::clear_start_app_state() {
  start_app_state_ = 0u;
  clear_has_start_app_state();
}
::google::protobuf::uint32 CMsgClientUpdateAppJobReport::start_app_state() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.start_app_state)
  return start_app_state_;
}
void CMsgClientUpdateAppJobReport::set_start_app_state(::google::protobuf::uint32 value) {
  set_has_start_app_state();
  start_app_state_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.start_app_state)
}

// optional fixed64 stats_machine_id = 12;
bool CMsgClientUpdateAppJobReport::has_stats_machine_id() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_stats_machine_id() {
  _has_bits_[0] |= 0x00000800u;
}
void CMsgClientUpdateAppJobReport::clear_has_stats_machine_id() {
  _has_bits_[0] &= ~0x00000800u;
}
void CMsgClientUpdateAppJobReport::clear_stats_machine_id() {
  stats_machine_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stats_machine_id();
}
::google::protobuf::uint64 CMsgClientUpdateAppJobReport::stats_machine_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.stats_machine_id)
  return stats_machine_id_;
}
void CMsgClientUpdateAppJobReport::set_stats_machine_id(::google::protobuf::uint64 value) {
  set_has_stats_machine_id();
  stats_machine_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.stats_machine_id)
}

// optional string branch_name = 13;
bool CMsgClientUpdateAppJobReport::has_branch_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_branch_name() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUpdateAppJobReport::clear_has_branch_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUpdateAppJobReport::clear_branch_name() {
  branch_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_branch_name();
}
const ::std::string& CMsgClientUpdateAppJobReport::branch_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.branch_name)
  return branch_name_.GetNoArena();
}
void CMsgClientUpdateAppJobReport::set_branch_name(const ::std::string& value) {
  set_has_branch_name();
  branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.branch_name)
}
#if LANG_CXX11
void CMsgClientUpdateAppJobReport::set_branch_name(::std::string&& value) {
  set_has_branch_name();
  branch_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientUpdateAppJobReport.branch_name)
}
#endif
void CMsgClientUpdateAppJobReport::set_branch_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_branch_name();
  branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientUpdateAppJobReport.branch_name)
}
void CMsgClientUpdateAppJobReport::set_branch_name(const char* value, size_t size) {
  set_has_branch_name();
  branch_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientUpdateAppJobReport.branch_name)
}
::std::string* CMsgClientUpdateAppJobReport::mutable_branch_name() {
  set_has_branch_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUpdateAppJobReport.branch_name)
  return branch_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientUpdateAppJobReport::release_branch_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientUpdateAppJobReport.branch_name)
  clear_has_branch_name();
  return branch_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientUpdateAppJobReport::set_allocated_branch_name(::std::string* branch_name) {
  if (branch_name != NULL) {
    set_has_branch_name();
  } else {
    clear_has_branch_name();
  }
  branch_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), branch_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientUpdateAppJobReport.branch_name)
}

// optional uint64 total_bytes_downloaded = 14;
bool CMsgClientUpdateAppJobReport::has_total_bytes_downloaded() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_total_bytes_downloaded() {
  _has_bits_[0] |= 0x00001000u;
}
void CMsgClientUpdateAppJobReport::clear_has_total_bytes_downloaded() {
  _has_bits_[0] &= ~0x00001000u;
}
void CMsgClientUpdateAppJobReport::clear_total_bytes_downloaded() {
  total_bytes_downloaded_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_downloaded();
}
::google::protobuf::uint64 CMsgClientUpdateAppJobReport::total_bytes_downloaded() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.total_bytes_downloaded)
  return total_bytes_downloaded_;
}
void CMsgClientUpdateAppJobReport::set_total_bytes_downloaded(::google::protobuf::uint64 value) {
  set_has_total_bytes_downloaded();
  total_bytes_downloaded_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.total_bytes_downloaded)
}

// optional uint64 total_bytes_staged = 15;
bool CMsgClientUpdateAppJobReport::has_total_bytes_staged() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_total_bytes_staged() {
  _has_bits_[0] |= 0x00002000u;
}
void CMsgClientUpdateAppJobReport::clear_has_total_bytes_staged() {
  _has_bits_[0] &= ~0x00002000u;
}
void CMsgClientUpdateAppJobReport::clear_total_bytes_staged() {
  total_bytes_staged_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_staged();
}
::google::protobuf::uint64 CMsgClientUpdateAppJobReport::total_bytes_staged() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.total_bytes_staged)
  return total_bytes_staged_;
}
void CMsgClientUpdateAppJobReport::set_total_bytes_staged(::google::protobuf::uint64 value) {
  set_has_total_bytes_staged();
  total_bytes_staged_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.total_bytes_staged)
}

// optional uint64 total_bytes_restored = 16;
bool CMsgClientUpdateAppJobReport::has_total_bytes_restored() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_total_bytes_restored() {
  _has_bits_[0] |= 0x00004000u;
}
void CMsgClientUpdateAppJobReport::clear_has_total_bytes_restored() {
  _has_bits_[0] &= ~0x00004000u;
}
void CMsgClientUpdateAppJobReport::clear_total_bytes_restored() {
  total_bytes_restored_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_restored();
}
::google::protobuf::uint64 CMsgClientUpdateAppJobReport::total_bytes_restored() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.total_bytes_restored)
  return total_bytes_restored_;
}
void CMsgClientUpdateAppJobReport::set_total_bytes_restored(::google::protobuf::uint64 value) {
  set_has_total_bytes_restored();
  total_bytes_restored_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.total_bytes_restored)
}

// optional bool is_borrowed = 17;
bool CMsgClientUpdateAppJobReport::has_is_borrowed() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_is_borrowed() {
  _has_bits_[0] |= 0x00010000u;
}
void CMsgClientUpdateAppJobReport::clear_has_is_borrowed() {
  _has_bits_[0] &= ~0x00010000u;
}
void CMsgClientUpdateAppJobReport::clear_is_borrowed() {
  is_borrowed_ = false;
  clear_has_is_borrowed();
}
bool CMsgClientUpdateAppJobReport::is_borrowed() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.is_borrowed)
  return is_borrowed_;
}
void CMsgClientUpdateAppJobReport::set_is_borrowed(bool value) {
  set_has_is_borrowed();
  is_borrowed_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.is_borrowed)
}

// optional bool is_free_weekend = 18;
bool CMsgClientUpdateAppJobReport::has_is_free_weekend() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_is_free_weekend() {
  _has_bits_[0] |= 0x00020000u;
}
void CMsgClientUpdateAppJobReport::clear_has_is_free_weekend() {
  _has_bits_[0] &= ~0x00020000u;
}
void CMsgClientUpdateAppJobReport::clear_is_free_weekend() {
  is_free_weekend_ = false;
  clear_has_is_free_weekend();
}
bool CMsgClientUpdateAppJobReport::is_free_weekend() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.is_free_weekend)
  return is_free_weekend_;
}
void CMsgClientUpdateAppJobReport::set_is_free_weekend(bool value) {
  set_has_is_free_weekend();
  is_free_weekend_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.is_free_weekend)
}

// optional uint64 total_bytes_legacy = 19;
bool CMsgClientUpdateAppJobReport::has_total_bytes_legacy() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void CMsgClientUpdateAppJobReport::set_has_total_bytes_legacy() {
  _has_bits_[0] |= 0x00008000u;
}
void CMsgClientUpdateAppJobReport::clear_has_total_bytes_legacy() {
  _has_bits_[0] &= ~0x00008000u;
}
void CMsgClientUpdateAppJobReport::clear_total_bytes_legacy() {
  total_bytes_legacy_ = GOOGLE_ULONGLONG(0);
  clear_has_total_bytes_legacy();
}
::google::protobuf::uint64 CMsgClientUpdateAppJobReport::total_bytes_legacy() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUpdateAppJobReport.total_bytes_legacy)
  return total_bytes_legacy_;
}
void CMsgClientUpdateAppJobReport::set_total_bytes_legacy(::google::protobuf::uint64 value) {
  set_has_total_bytes_legacy();
  total_bytes_legacy_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUpdateAppJobReport.total_bytes_legacy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPContentStatsReport::kStatsMachineIdFieldNumber;
const int CMsgClientDPContentStatsReport::kCountryCodeFieldNumber;
const int CMsgClientDPContentStatsReport::kOsTypeFieldNumber;
const int CMsgClientDPContentStatsReport::kLanguageFieldNumber;
const int CMsgClientDPContentStatsReport::kNumInstallFoldersFieldNumber;
const int CMsgClientDPContentStatsReport::kNumInstalledGamesFieldNumber;
const int CMsgClientDPContentStatsReport::kSizeInstalledGamesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPContentStatsReport::CMsgClientDPContentStatsReport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientDPContentStatsReport)
}
CMsgClientDPContentStatsReport::CMsgClientDPContentStatsReport(const CMsgClientDPContentStatsReport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country_code()) {
    country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
  }
  ::memcpy(&stats_machine_id_, &from.stats_machine_id_,
    reinterpret_cast<char*>(&size_installed_games_) -
    reinterpret_cast<char*>(&stats_machine_id_) + sizeof(size_installed_games_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientDPContentStatsReport)
}

void CMsgClientDPContentStatsReport::SharedCtor() {
  _cached_size_ = 0;
  country_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&stats_machine_id_, 0, reinterpret_cast<char*>(&size_installed_games_) -
    reinterpret_cast<char*>(&stats_machine_id_) + sizeof(size_installed_games_));
}

CMsgClientDPContentStatsReport::~CMsgClientDPContentStatsReport() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientDPContentStatsReport)
  SharedDtor();
}

void CMsgClientDPContentStatsReport::SharedDtor() {
  country_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientDPContentStatsReport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientDPContentStatsReport::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDPContentStatsReport& CMsgClientDPContentStatsReport::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientDPContentStatsReport* CMsgClientDPContentStatsReport::New(::google::protobuf::Arena* arena) const {
  CMsgClientDPContentStatsReport* n = new CMsgClientDPContentStatsReport;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientDPContentStatsReport::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientDPContentStatsReport)
  if (has_country_code()) {
    GOOGLE_DCHECK(!country_code_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*country_code_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 126u) {
    ::memset(&stats_machine_id_, 0, reinterpret_cast<char*>(&size_installed_games_) -
      reinterpret_cast<char*>(&stats_machine_id_) + sizeof(size_installed_games_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDPContentStatsReport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientDPContentStatsReport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 stats_machine_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_stats_machine_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &stats_machine_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string country_code = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country_code().data(), this->country_code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientDPContentStatsReport.country_code");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 os_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_os_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &os_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 language = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_language();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_install_folders = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_num_install_folders();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_install_folders_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num_installed_games = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_num_installed_games();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_installed_games_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 size_installed_games = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_size_installed_games();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &size_installed_games_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientDPContentStatsReport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientDPContentStatsReport)
  return false;
#undef DO_
}

void CMsgClientDPContentStatsReport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientDPContentStatsReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 stats_machine_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->stats_machine_id(), output);
  }

  // optional string country_code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), this->country_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientDPContentStatsReport.country_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->country_code(), output);
  }

  // optional int32 os_type = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->os_type(), output);
  }

  // optional int32 language = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->language(), output);
  }

  // optional uint32 num_install_folders = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->num_install_folders(), output);
  }

  // optional uint32 num_installed_games = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->num_installed_games(), output);
  }

  // optional uint64 size_installed_games = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(7, this->size_installed_games(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientDPContentStatsReport)
}

::google::protobuf::uint8* CMsgClientDPContentStatsReport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientDPContentStatsReport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 stats_machine_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->stats_machine_id(), target);
  }

  // optional string country_code = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country_code().data(), this->country_code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientDPContentStatsReport.country_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->country_code(), target);
  }

  // optional int32 os_type = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->os_type(), target);
  }

  // optional int32 language = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->language(), target);
  }

  // optional uint32 num_install_folders = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->num_install_folders(), target);
  }

  // optional uint32 num_installed_games = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->num_installed_games(), target);
  }

  // optional uint64 size_installed_games = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(7, this->size_installed_games(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientDPContentStatsReport)
  return target;
}

size_t CMsgClientDPContentStatsReport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientDPContentStatsReport)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string country_code = 2;
    if (has_country_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country_code());
    }

    // optional fixed64 stats_machine_id = 1;
    if (has_stats_machine_id()) {
      total_size += 1 + 8;
    }

    // optional int32 os_type = 3;
    if (has_os_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->os_type());
    }

    // optional int32 language = 4;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->language());
    }

    // optional uint32 num_install_folders = 5;
    if (has_num_install_folders()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_install_folders());
    }

    // optional uint32 num_installed_games = 6;
    if (has_num_installed_games()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num_installed_games());
    }

    // optional uint64 size_installed_games = 7;
    if (has_size_installed_games()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->size_installed_games());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientDPContentStatsReport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientDPContentStatsReport)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPContentStatsReport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDPContentStatsReport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientDPContentStatsReport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientDPContentStatsReport)
    MergeFrom(*source);
  }
}

void CMsgClientDPContentStatsReport::MergeFrom(const CMsgClientDPContentStatsReport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientDPContentStatsReport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_country_code();
      country_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_code_);
    }
    if (cached_has_bits & 0x00000002u) {
      stats_machine_id_ = from.stats_machine_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      os_type_ = from.os_type_;
    }
    if (cached_has_bits & 0x00000008u) {
      language_ = from.language_;
    }
    if (cached_has_bits & 0x00000010u) {
      num_install_folders_ = from.num_install_folders_;
    }
    if (cached_has_bits & 0x00000020u) {
      num_installed_games_ = from.num_installed_games_;
    }
    if (cached_has_bits & 0x00000040u) {
      size_installed_games_ = from.size_installed_games_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDPContentStatsReport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientDPContentStatsReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPContentStatsReport::CopyFrom(const CMsgClientDPContentStatsReport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientDPContentStatsReport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPContentStatsReport::IsInitialized() const {
  return true;
}

void CMsgClientDPContentStatsReport::Swap(CMsgClientDPContentStatsReport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPContentStatsReport::InternalSwap(CMsgClientDPContentStatsReport* other) {
  country_code_.Swap(&other->country_code_);
  std::swap(stats_machine_id_, other->stats_machine_id_);
  std::swap(os_type_, other->os_type_);
  std::swap(language_, other->language_);
  std::swap(num_install_folders_, other->num_install_folders_);
  std::swap(num_installed_games_, other->num_installed_games_);
  std::swap(size_installed_games_, other->size_installed_games_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientDPContentStatsReport::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientDPContentStatsReport

// optional fixed64 stats_machine_id = 1;
bool CMsgClientDPContentStatsReport::has_stats_machine_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientDPContentStatsReport::set_has_stats_machine_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientDPContentStatsReport::clear_has_stats_machine_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientDPContentStatsReport::clear_stats_machine_id() {
  stats_machine_id_ = GOOGLE_ULONGLONG(0);
  clear_has_stats_machine_id();
}
::google::protobuf::uint64 CMsgClientDPContentStatsReport::stats_machine_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPContentStatsReport.stats_machine_id)
  return stats_machine_id_;
}
void CMsgClientDPContentStatsReport::set_stats_machine_id(::google::protobuf::uint64 value) {
  set_has_stats_machine_id();
  stats_machine_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPContentStatsReport.stats_machine_id)
}

// optional string country_code = 2;
bool CMsgClientDPContentStatsReport::has_country_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientDPContentStatsReport::set_has_country_code() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientDPContentStatsReport::clear_has_country_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientDPContentStatsReport::clear_country_code() {
  country_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country_code();
}
const ::std::string& CMsgClientDPContentStatsReport::country_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPContentStatsReport.country_code)
  return country_code_.GetNoArena();
}
void CMsgClientDPContentStatsReport::set_country_code(const ::std::string& value) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPContentStatsReport.country_code)
}
#if LANG_CXX11
void CMsgClientDPContentStatsReport::set_country_code(::std::string&& value) {
  set_has_country_code();
  country_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientDPContentStatsReport.country_code)
}
#endif
void CMsgClientDPContentStatsReport::set_country_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientDPContentStatsReport.country_code)
}
void CMsgClientDPContentStatsReport::set_country_code(const char* value, size_t size) {
  set_has_country_code();
  country_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientDPContentStatsReport.country_code)
}
::std::string* CMsgClientDPContentStatsReport::mutable_country_code() {
  set_has_country_code();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientDPContentStatsReport.country_code)
  return country_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientDPContentStatsReport::release_country_code() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientDPContentStatsReport.country_code)
  clear_has_country_code();
  return country_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientDPContentStatsReport::set_allocated_country_code(::std::string* country_code) {
  if (country_code != NULL) {
    set_has_country_code();
  } else {
    clear_has_country_code();
  }
  country_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_code);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientDPContentStatsReport.country_code)
}

// optional int32 os_type = 3;
bool CMsgClientDPContentStatsReport::has_os_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientDPContentStatsReport::set_has_os_type() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientDPContentStatsReport::clear_has_os_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientDPContentStatsReport::clear_os_type() {
  os_type_ = 0;
  clear_has_os_type();
}
::google::protobuf::int32 CMsgClientDPContentStatsReport::os_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPContentStatsReport.os_type)
  return os_type_;
}
void CMsgClientDPContentStatsReport::set_os_type(::google::protobuf::int32 value) {
  set_has_os_type();
  os_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPContentStatsReport.os_type)
}

// optional int32 language = 4;
bool CMsgClientDPContentStatsReport::has_language() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientDPContentStatsReport::set_has_language() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientDPContentStatsReport::clear_has_language() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientDPContentStatsReport::clear_language() {
  language_ = 0;
  clear_has_language();
}
::google::protobuf::int32 CMsgClientDPContentStatsReport::language() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPContentStatsReport.language)
  return language_;
}
void CMsgClientDPContentStatsReport::set_language(::google::protobuf::int32 value) {
  set_has_language();
  language_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPContentStatsReport.language)
}

// optional uint32 num_install_folders = 5;
bool CMsgClientDPContentStatsReport::has_num_install_folders() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientDPContentStatsReport::set_has_num_install_folders() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientDPContentStatsReport::clear_has_num_install_folders() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientDPContentStatsReport::clear_num_install_folders() {
  num_install_folders_ = 0u;
  clear_has_num_install_folders();
}
::google::protobuf::uint32 CMsgClientDPContentStatsReport::num_install_folders() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPContentStatsReport.num_install_folders)
  return num_install_folders_;
}
void CMsgClientDPContentStatsReport::set_num_install_folders(::google::protobuf::uint32 value) {
  set_has_num_install_folders();
  num_install_folders_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPContentStatsReport.num_install_folders)
}

// optional uint32 num_installed_games = 6;
bool CMsgClientDPContentStatsReport::has_num_installed_games() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientDPContentStatsReport::set_has_num_installed_games() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientDPContentStatsReport::clear_has_num_installed_games() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientDPContentStatsReport::clear_num_installed_games() {
  num_installed_games_ = 0u;
  clear_has_num_installed_games();
}
::google::protobuf::uint32 CMsgClientDPContentStatsReport::num_installed_games() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPContentStatsReport.num_installed_games)
  return num_installed_games_;
}
void CMsgClientDPContentStatsReport::set_num_installed_games(::google::protobuf::uint32 value) {
  set_has_num_installed_games();
  num_installed_games_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPContentStatsReport.num_installed_games)
}

// optional uint64 size_installed_games = 7;
bool CMsgClientDPContentStatsReport::has_size_installed_games() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientDPContentStatsReport::set_has_size_installed_games() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientDPContentStatsReport::clear_has_size_installed_games() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientDPContentStatsReport::clear_size_installed_games() {
  size_installed_games_ = GOOGLE_ULONGLONG(0);
  clear_has_size_installed_games();
}
::google::protobuf::uint64 CMsgClientDPContentStatsReport::size_installed_games() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPContentStatsReport.size_installed_games)
  return size_installed_games_;
}
void CMsgClientDPContentStatsReport::set_size_installed_games(::google::protobuf::uint64 value) {
  set_has_size_installed_games();
  size_installed_games_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPContentStatsReport.size_installed_games)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetCDNAuthTokenResponse::kEresultFieldNumber;
const int CMsgClientGetCDNAuthTokenResponse::kTokenFieldNumber;
const int CMsgClientGetCDNAuthTokenResponse::kExpirationTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetCDNAuthTokenResponse::CMsgClientGetCDNAuthTokenResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetCDNAuthTokenResponse)
}
CMsgClientGetCDNAuthTokenResponse::CMsgClientGetCDNAuthTokenResponse(const CMsgClientGetCDNAuthTokenResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&expiration_time_, &from.expiration_time_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&expiration_time_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetCDNAuthTokenResponse)
}

void CMsgClientGetCDNAuthTokenResponse::SharedCtor() {
  _cached_size_ = 0;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  expiration_time_ = 0u;
  eresult_ = 2u;
}

CMsgClientGetCDNAuthTokenResponse::~CMsgClientGetCDNAuthTokenResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  SharedDtor();
}

void CMsgClientGetCDNAuthTokenResponse::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetCDNAuthTokenResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientGetCDNAuthTokenResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetCDNAuthTokenResponse& CMsgClientGetCDNAuthTokenResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientGetCDNAuthTokenResponse* CMsgClientGetCDNAuthTokenResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientGetCDNAuthTokenResponse* n = new CMsgClientGetCDNAuthTokenResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientGetCDNAuthTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  if (has_token()) {
    GOOGLE_DCHECK(!token_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*token_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    expiration_time_ = 0u;
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetCDNAuthTokenResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientGetCDNAuthTokenResponse.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 expiration_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_expiration_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &expiration_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  return false;
#undef DO_
}

void CMsgClientGetCDNAuthTokenResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional string token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGetCDNAuthTokenResponse.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->token(), output);
  }

  // optional uint32 expiration_time = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->expiration_time(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetCDNAuthTokenResponse)
}

::google::protobuf::uint8* CMsgClientGetCDNAuthTokenResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional string token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGetCDNAuthTokenResponse.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->token(), target);
  }

  // optional uint32 expiration_time = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->expiration_time(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  return target;
}

size_t CMsgClientGetCDNAuthTokenResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string token = 2;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->token());
    }

    // optional uint32 expiration_time = 3;
    if (has_expiration_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->expiration_time());
    }

    // optional uint32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientGetCDNAuthTokenResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetCDNAuthTokenResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetCDNAuthTokenResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetCDNAuthTokenResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetCDNAuthTokenResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetCDNAuthTokenResponse::MergeFrom(const CMsgClientGetCDNAuthTokenResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      expiration_time_ = from.expiration_time_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetCDNAuthTokenResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetCDNAuthTokenResponse::CopyFrom(const CMsgClientGetCDNAuthTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetCDNAuthTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetCDNAuthTokenResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetCDNAuthTokenResponse::Swap(CMsgClientGetCDNAuthTokenResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetCDNAuthTokenResponse::InternalSwap(CMsgClientGetCDNAuthTokenResponse* other) {
  token_.Swap(&other->token_);
  std::swap(expiration_time_, other->expiration_time_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientGetCDNAuthTokenResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientGetCDNAuthTokenResponse

// optional uint32 eresult = 1 [default = 2];
bool CMsgClientGetCDNAuthTokenResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientGetCDNAuthTokenResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientGetCDNAuthTokenResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientGetCDNAuthTokenResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgClientGetCDNAuthTokenResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetCDNAuthTokenResponse.eresult)
  return eresult_;
}
void CMsgClientGetCDNAuthTokenResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetCDNAuthTokenResponse.eresult)
}

// optional string token = 2;
bool CMsgClientGetCDNAuthTokenResponse::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientGetCDNAuthTokenResponse::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientGetCDNAuthTokenResponse::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientGetCDNAuthTokenResponse::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
const ::std::string& CMsgClientGetCDNAuthTokenResponse::token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetCDNAuthTokenResponse.token)
  return token_.GetNoArena();
}
void CMsgClientGetCDNAuthTokenResponse::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetCDNAuthTokenResponse.token)
}
#if LANG_CXX11
void CMsgClientGetCDNAuthTokenResponse::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientGetCDNAuthTokenResponse.token)
}
#endif
void CMsgClientGetCDNAuthTokenResponse::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientGetCDNAuthTokenResponse.token)
}
void CMsgClientGetCDNAuthTokenResponse::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientGetCDNAuthTokenResponse.token)
}
::std::string* CMsgClientGetCDNAuthTokenResponse::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientGetCDNAuthTokenResponse.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientGetCDNAuthTokenResponse::release_token() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientGetCDNAuthTokenResponse.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientGetCDNAuthTokenResponse::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientGetCDNAuthTokenResponse.token)
}

// optional uint32 expiration_time = 3;
bool CMsgClientGetCDNAuthTokenResponse::has_expiration_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientGetCDNAuthTokenResponse::set_has_expiration_time() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientGetCDNAuthTokenResponse::clear_has_expiration_time() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientGetCDNAuthTokenResponse::clear_expiration_time() {
  expiration_time_ = 0u;
  clear_has_expiration_time();
}
::google::protobuf::uint32 CMsgClientGetCDNAuthTokenResponse::expiration_time() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetCDNAuthTokenResponse.expiration_time)
  return expiration_time_;
}
void CMsgClientGetCDNAuthTokenResponse::set_expiration_time(::google::protobuf::uint32 value) {
  set_has_expiration_time();
  expiration_time_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetCDNAuthTokenResponse.expiration_time)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDownloadRateStatistics_StatsInfo::kSourceTypeFieldNumber;
const int CMsgDownloadRateStatistics_StatsInfo::kSourceIdFieldNumber;
const int CMsgDownloadRateStatistics_StatsInfo::kSecondsFieldNumber;
const int CMsgDownloadRateStatistics_StatsInfo::kBytesFieldNumber;
const int CMsgDownloadRateStatistics_StatsInfo::kHostNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDownloadRateStatistics_StatsInfo::CMsgDownloadRateStatistics_StatsInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
}
CMsgDownloadRateStatistics_StatsInfo::CMsgDownloadRateStatistics_StatsInfo(const CMsgDownloadRateStatistics_StatsInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_host_name()) {
    host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
  }
  ::memcpy(&source_type_, &from.source_type_,
    reinterpret_cast<char*>(&seconds_) -
    reinterpret_cast<char*>(&source_type_) + sizeof(seconds_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
}

void CMsgDownloadRateStatistics_StatsInfo::SharedCtor() {
  _cached_size_ = 0;
  host_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&source_type_, 0, reinterpret_cast<char*>(&seconds_) -
    reinterpret_cast<char*>(&source_type_) + sizeof(seconds_));
}

CMsgDownloadRateStatistics_StatsInfo::~CMsgDownloadRateStatistics_StatsInfo() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  SharedDtor();
}

void CMsgDownloadRateStatistics_StatsInfo::SharedDtor() {
  host_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDownloadRateStatistics_StatsInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDownloadRateStatistics_StatsInfo::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDownloadRateStatistics_StatsInfo& CMsgDownloadRateStatistics_StatsInfo::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgDownloadRateStatistics_StatsInfo* CMsgDownloadRateStatistics_StatsInfo::New(::google::protobuf::Arena* arena) const {
  CMsgDownloadRateStatistics_StatsInfo* n = new CMsgDownloadRateStatistics_StatsInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgDownloadRateStatistics_StatsInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  if (has_host_name()) {
    GOOGLE_DCHECK(!host_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*host_name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 30u) {
    ::memset(&source_type_, 0, reinterpret_cast<char*>(&seconds_) -
      reinterpret_cast<char*>(&source_type_) + sizeof(seconds_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDownloadRateStatistics_StatsInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 source_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_source_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 source_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_source_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &source_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 seconds = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_seconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &seconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 bytes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_bytes();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bytes_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string host_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_host_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->host_name().data(), this->host_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  return false;
#undef DO_
}

void CMsgDownloadRateStatistics_StatsInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 source_type = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->source_type(), output);
  }

  // optional uint32 source_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->source_id(), output);
  }

  // optional uint32 seconds = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->seconds(), output);
  }

  // optional uint64 bytes = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->bytes(), output);
  }

  // optional string host_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), this->host_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->host_name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
}

::google::protobuf::uint8* CMsgDownloadRateStatistics_StatsInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 source_type = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->source_type(), target);
  }

  // optional uint32 source_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->source_id(), target);
  }

  // optional uint32 seconds = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->seconds(), target);
  }

  // optional uint64 bytes = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->bytes(), target);
  }

  // optional string host_name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->host_name().data(), this->host_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->host_name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  return target;
}

size_t CMsgDownloadRateStatistics_StatsInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string host_name = 5;
    if (has_host_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->host_name());
    }

    // optional uint32 source_type = 1;
    if (has_source_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source_type());
    }

    // optional uint32 source_id = 2;
    if (has_source_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->source_id());
    }

    // optional uint64 bytes = 4;
    if (has_bytes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->bytes());
    }

    // optional uint32 seconds = 3;
    if (has_seconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->seconds());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDownloadRateStatistics_StatsInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDownloadRateStatistics_StatsInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDownloadRateStatistics_StatsInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
    MergeFrom(*source);
  }
}

void CMsgDownloadRateStatistics_StatsInfo::MergeFrom(const CMsgDownloadRateStatistics_StatsInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_host_name();
      host_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.host_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      source_type_ = from.source_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      source_id_ = from.source_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      bytes_ = from.bytes_;
    }
    if (cached_has_bits & 0x00000010u) {
      seconds_ = from.seconds_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDownloadRateStatistics_StatsInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDownloadRateStatistics_StatsInfo::CopyFrom(const CMsgDownloadRateStatistics_StatsInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgDownloadRateStatistics.StatsInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDownloadRateStatistics_StatsInfo::IsInitialized() const {
  return true;
}

void CMsgDownloadRateStatistics_StatsInfo::Swap(CMsgDownloadRateStatistics_StatsInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDownloadRateStatistics_StatsInfo::InternalSwap(CMsgDownloadRateStatistics_StatsInfo* other) {
  host_name_.Swap(&other->host_name_);
  std::swap(source_type_, other->source_type_);
  std::swap(source_id_, other->source_id_);
  std::swap(bytes_, other->bytes_);
  std::swap(seconds_, other->seconds_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgDownloadRateStatistics_StatsInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgDownloadRateStatistics_StatsInfo

// optional uint32 source_type = 1;
bool CMsgDownloadRateStatistics_StatsInfo::has_source_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgDownloadRateStatistics_StatsInfo::set_has_source_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgDownloadRateStatistics_StatsInfo::clear_has_source_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgDownloadRateStatistics_StatsInfo::clear_source_type() {
  source_type_ = 0u;
  clear_has_source_type();
}
::google::protobuf::uint32 CMsgDownloadRateStatistics_StatsInfo::source_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDownloadRateStatistics.StatsInfo.source_type)
  return source_type_;
}
void CMsgDownloadRateStatistics_StatsInfo::set_source_type(::google::protobuf::uint32 value) {
  set_has_source_type();
  source_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDownloadRateStatistics.StatsInfo.source_type)
}

// optional uint32 source_id = 2;
bool CMsgDownloadRateStatistics_StatsInfo::has_source_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgDownloadRateStatistics_StatsInfo::set_has_source_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgDownloadRateStatistics_StatsInfo::clear_has_source_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgDownloadRateStatistics_StatsInfo::clear_source_id() {
  source_id_ = 0u;
  clear_has_source_id();
}
::google::protobuf::uint32 CMsgDownloadRateStatistics_StatsInfo::source_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDownloadRateStatistics.StatsInfo.source_id)
  return source_id_;
}
void CMsgDownloadRateStatistics_StatsInfo::set_source_id(::google::protobuf::uint32 value) {
  set_has_source_id();
  source_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDownloadRateStatistics.StatsInfo.source_id)
}

// optional uint32 seconds = 3;
bool CMsgDownloadRateStatistics_StatsInfo::has_seconds() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgDownloadRateStatistics_StatsInfo::set_has_seconds() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgDownloadRateStatistics_StatsInfo::clear_has_seconds() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgDownloadRateStatistics_StatsInfo::clear_seconds() {
  seconds_ = 0u;
  clear_has_seconds();
}
::google::protobuf::uint32 CMsgDownloadRateStatistics_StatsInfo::seconds() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDownloadRateStatistics.StatsInfo.seconds)
  return seconds_;
}
void CMsgDownloadRateStatistics_StatsInfo::set_seconds(::google::protobuf::uint32 value) {
  set_has_seconds();
  seconds_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDownloadRateStatistics.StatsInfo.seconds)
}

// optional uint64 bytes = 4;
bool CMsgDownloadRateStatistics_StatsInfo::has_bytes() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgDownloadRateStatistics_StatsInfo::set_has_bytes() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgDownloadRateStatistics_StatsInfo::clear_has_bytes() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgDownloadRateStatistics_StatsInfo::clear_bytes() {
  bytes_ = GOOGLE_ULONGLONG(0);
  clear_has_bytes();
}
::google::protobuf::uint64 CMsgDownloadRateStatistics_StatsInfo::bytes() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDownloadRateStatistics.StatsInfo.bytes)
  return bytes_;
}
void CMsgDownloadRateStatistics_StatsInfo::set_bytes(::google::protobuf::uint64 value) {
  set_has_bytes();
  bytes_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDownloadRateStatistics.StatsInfo.bytes)
}

// optional string host_name = 5;
bool CMsgDownloadRateStatistics_StatsInfo::has_host_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgDownloadRateStatistics_StatsInfo::set_has_host_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgDownloadRateStatistics_StatsInfo::clear_has_host_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgDownloadRateStatistics_StatsInfo::clear_host_name() {
  host_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host_name();
}
const ::std::string& CMsgDownloadRateStatistics_StatsInfo::host_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name)
  return host_name_.GetNoArena();
}
void CMsgDownloadRateStatistics_StatsInfo::set_host_name(const ::std::string& value) {
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name)
}
#if LANG_CXX11
void CMsgDownloadRateStatistics_StatsInfo::set_host_name(::std::string&& value) {
  set_has_host_name();
  host_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name)
}
#endif
void CMsgDownloadRateStatistics_StatsInfo::set_host_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name)
}
void CMsgDownloadRateStatistics_StatsInfo::set_host_name(const char* value, size_t size) {
  set_has_host_name();
  host_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name)
}
::std::string* CMsgDownloadRateStatistics_StatsInfo::mutable_host_name() {
  set_has_host_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name)
  return host_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgDownloadRateStatistics_StatsInfo::release_host_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name)
  clear_has_host_name();
  return host_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgDownloadRateStatistics_StatsInfo::set_allocated_host_name(::std::string* host_name) {
  if (host_name != NULL) {
    set_has_host_name();
  } else {
    clear_has_host_name();
  }
  host_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgDownloadRateStatistics.StatsInfo.host_name)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDownloadRateStatistics::kCellIdFieldNumber;
const int CMsgDownloadRateStatistics::kStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDownloadRateStatistics::CMsgDownloadRateStatistics()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgDownloadRateStatistics)
}
CMsgDownloadRateStatistics::CMsgDownloadRateStatistics(const CMsgDownloadRateStatistics& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cell_id_ = from.cell_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgDownloadRateStatistics)
}

void CMsgDownloadRateStatistics::SharedCtor() {
  _cached_size_ = 0;
  cell_id_ = 0u;
}

CMsgDownloadRateStatistics::~CMsgDownloadRateStatistics() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgDownloadRateStatistics)
  SharedDtor();
}

void CMsgDownloadRateStatistics::SharedDtor() {
}

void CMsgDownloadRateStatistics::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDownloadRateStatistics::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDownloadRateStatistics& CMsgDownloadRateStatistics::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgDownloadRateStatistics* CMsgDownloadRateStatistics::New(::google::protobuf::Arena* arena) const {
  CMsgDownloadRateStatistics* n = new CMsgDownloadRateStatistics;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgDownloadRateStatistics::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgDownloadRateStatistics)
  stats_.Clear();
  cell_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDownloadRateStatistics::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgDownloadRateStatistics)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 cell_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_cell_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cell_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgDownloadRateStatistics.StatsInfo stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgDownloadRateStatistics)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgDownloadRateStatistics)
  return false;
#undef DO_
}

void CMsgDownloadRateStatistics::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgDownloadRateStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 cell_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cell_id(), output);
  }

  // repeated .proto.steam.CMsgDownloadRateStatistics.StatsInfo stats = 2;
  for (unsigned int i = 0, n = this->stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->stats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgDownloadRateStatistics)
}

::google::protobuf::uint8* CMsgDownloadRateStatistics::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgDownloadRateStatistics)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 cell_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cell_id(), target);
  }

  // repeated .proto.steam.CMsgDownloadRateStatistics.StatsInfo stats = 2;
  for (unsigned int i = 0, n = this->stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->stats(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgDownloadRateStatistics)
  return target;
}

size_t CMsgDownloadRateStatistics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgDownloadRateStatistics)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgDownloadRateStatistics.StatsInfo stats = 2;
  {
    unsigned int count = this->stats_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stats(i));
    }
  }

  // optional uint32 cell_id = 1;
  if (has_cell_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->cell_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDownloadRateStatistics::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgDownloadRateStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDownloadRateStatistics* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDownloadRateStatistics>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgDownloadRateStatistics)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgDownloadRateStatistics)
    MergeFrom(*source);
  }
}

void CMsgDownloadRateStatistics::MergeFrom(const CMsgDownloadRateStatistics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgDownloadRateStatistics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
  if (from.has_cell_id()) {
    set_cell_id(from.cell_id());
  }
}

void CMsgDownloadRateStatistics::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgDownloadRateStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDownloadRateStatistics::CopyFrom(const CMsgDownloadRateStatistics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgDownloadRateStatistics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDownloadRateStatistics::IsInitialized() const {
  return true;
}

void CMsgDownloadRateStatistics::Swap(CMsgDownloadRateStatistics* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDownloadRateStatistics::InternalSwap(CMsgDownloadRateStatistics* other) {
  stats_.InternalSwap(&other->stats_);
  std::swap(cell_id_, other->cell_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgDownloadRateStatistics::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgDownloadRateStatistics

// optional uint32 cell_id = 1;
bool CMsgDownloadRateStatistics::has_cell_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgDownloadRateStatistics::set_has_cell_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgDownloadRateStatistics::clear_has_cell_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgDownloadRateStatistics::clear_cell_id() {
  cell_id_ = 0u;
  clear_has_cell_id();
}
::google::protobuf::uint32 CMsgDownloadRateStatistics::cell_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDownloadRateStatistics.cell_id)
  return cell_id_;
}
void CMsgDownloadRateStatistics::set_cell_id(::google::protobuf::uint32 value) {
  set_has_cell_id();
  cell_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDownloadRateStatistics.cell_id)
}

// repeated .proto.steam.CMsgDownloadRateStatistics.StatsInfo stats = 2;
int CMsgDownloadRateStatistics::stats_size() const {
  return stats_.size();
}
void CMsgDownloadRateStatistics::clear_stats() {
  stats_.Clear();
}
const ::proto::steam::CMsgDownloadRateStatistics_StatsInfo& CMsgDownloadRateStatistics::stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDownloadRateStatistics.stats)
  return stats_.Get(index);
}
::proto::steam::CMsgDownloadRateStatistics_StatsInfo* CMsgDownloadRateStatistics::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgDownloadRateStatistics.stats)
  return stats_.Mutable(index);
}
::proto::steam::CMsgDownloadRateStatistics_StatsInfo* CMsgDownloadRateStatistics::add_stats() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgDownloadRateStatistics.stats)
  return stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgDownloadRateStatistics_StatsInfo >*
CMsgDownloadRateStatistics::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgDownloadRateStatistics.stats)
  return &stats_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgDownloadRateStatistics_StatsInfo >&
CMsgDownloadRateStatistics::stats() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgDownloadRateStatistics.stats)
  return stats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestAccountData::kAccountOrEmailFieldNumber;
const int CMsgClientRequestAccountData::kActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestAccountData::CMsgClientRequestAccountData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestAccountData)
}
CMsgClientRequestAccountData::CMsgClientRequestAccountData(const CMsgClientRequestAccountData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_or_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_or_email()) {
    account_or_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_or_email_);
  }
  action_ = from.action_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestAccountData)
}

void CMsgClientRequestAccountData::SharedCtor() {
  _cached_size_ = 0;
  account_or_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  action_ = 0u;
}

CMsgClientRequestAccountData::~CMsgClientRequestAccountData() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestAccountData)
  SharedDtor();
}

void CMsgClientRequestAccountData::SharedDtor() {
  account_or_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRequestAccountData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRequestAccountData::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestAccountData& CMsgClientRequestAccountData::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRequestAccountData* CMsgClientRequestAccountData::New(::google::protobuf::Arena* arena) const {
  CMsgClientRequestAccountData* n = new CMsgClientRequestAccountData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRequestAccountData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestAccountData)
  if (has_account_or_email()) {
    GOOGLE_DCHECK(!account_or_email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_or_email_.UnsafeRawStringPointer())->clear();
  }
  action_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestAccountData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestAccountData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_or_email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_or_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_or_email().data(), this->account_or_email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestAccountData.account_or_email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 action = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestAccountData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestAccountData)
  return false;
#undef DO_
}

void CMsgClientRequestAccountData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestAccountData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account_or_email = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_or_email().data(), this->account_or_email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountData.account_or_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_or_email(), output);
  }

  // optional uint32 action = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->action(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestAccountData)
}

::google::protobuf::uint8* CMsgClientRequestAccountData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestAccountData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account_or_email = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_or_email().data(), this->account_or_email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountData.account_or_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_or_email(), target);
  }

  // optional uint32 action = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->action(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestAccountData)
  return target;
}

size_t CMsgClientRequestAccountData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestAccountData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string account_or_email = 1;
    if (has_account_or_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_or_email());
    }

    // optional uint32 action = 2;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->action());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRequestAccountData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestAccountData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestAccountData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestAccountData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestAccountData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestAccountData)
    MergeFrom(*source);
  }
}

void CMsgClientRequestAccountData::MergeFrom(const CMsgClientRequestAccountData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestAccountData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account_or_email();
      account_or_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_or_email_);
    }
    if (cached_has_bits & 0x00000002u) {
      action_ = from.action_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestAccountData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestAccountData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestAccountData::CopyFrom(const CMsgClientRequestAccountData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestAccountData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestAccountData::IsInitialized() const {
  return true;
}

void CMsgClientRequestAccountData::Swap(CMsgClientRequestAccountData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestAccountData::InternalSwap(CMsgClientRequestAccountData* other) {
  account_or_email_.Swap(&other->account_or_email_);
  std::swap(action_, other->action_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRequestAccountData::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRequestAccountData

// optional string account_or_email = 1;
bool CMsgClientRequestAccountData::has_account_or_email() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientRequestAccountData::set_has_account_or_email() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientRequestAccountData::clear_has_account_or_email() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientRequestAccountData::clear_account_or_email() {
  account_or_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account_or_email();
}
const ::std::string& CMsgClientRequestAccountData::account_or_email() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestAccountData.account_or_email)
  return account_or_email_.GetNoArena();
}
void CMsgClientRequestAccountData::set_account_or_email(const ::std::string& value) {
  set_has_account_or_email();
  account_or_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestAccountData.account_or_email)
}
#if LANG_CXX11
void CMsgClientRequestAccountData::set_account_or_email(::std::string&& value) {
  set_has_account_or_email();
  account_or_email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRequestAccountData.account_or_email)
}
#endif
void CMsgClientRequestAccountData::set_account_or_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account_or_email();
  account_or_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRequestAccountData.account_or_email)
}
void CMsgClientRequestAccountData::set_account_or_email(const char* value, size_t size) {
  set_has_account_or_email();
  account_or_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRequestAccountData.account_or_email)
}
::std::string* CMsgClientRequestAccountData::mutable_account_or_email() {
  set_has_account_or_email();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRequestAccountData.account_or_email)
  return account_or_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRequestAccountData::release_account_or_email() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRequestAccountData.account_or_email)
  clear_has_account_or_email();
  return account_or_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRequestAccountData::set_allocated_account_or_email(::std::string* account_or_email) {
  if (account_or_email != NULL) {
    set_has_account_or_email();
  } else {
    clear_has_account_or_email();
  }
  account_or_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_or_email);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRequestAccountData.account_or_email)
}

// optional uint32 action = 2;
bool CMsgClientRequestAccountData::has_action() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientRequestAccountData::set_has_action() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientRequestAccountData::clear_has_action() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientRequestAccountData::clear_action() {
  action_ = 0u;
  clear_has_action();
}
::google::protobuf::uint32 CMsgClientRequestAccountData::action() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestAccountData.action)
  return action_;
}
void CMsgClientRequestAccountData::set_action(::google::protobuf::uint32 value) {
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestAccountData.action)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestAccountDataResponse::kActionFieldNumber;
const int CMsgClientRequestAccountDataResponse::kEresultFieldNumber;
const int CMsgClientRequestAccountDataResponse::kAccountNameFieldNumber;
const int CMsgClientRequestAccountDataResponse::kCtMatchesFieldNumber;
const int CMsgClientRequestAccountDataResponse::kAccountNameSuggestion1FieldNumber;
const int CMsgClientRequestAccountDataResponse::kAccountNameSuggestion2FieldNumber;
const int CMsgClientRequestAccountDataResponse::kAccountNameSuggestion3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestAccountDataResponse::CMsgClientRequestAccountDataResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestAccountDataResponse)
}
CMsgClientRequestAccountDataResponse::CMsgClientRequestAccountDataResponse(const CMsgClientRequestAccountDataResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name()) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  account_name_suggestion1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name_suggestion1()) {
    account_name_suggestion1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion1_);
  }
  account_name_suggestion2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name_suggestion2()) {
    account_name_suggestion2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion2_);
  }
  account_name_suggestion3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name_suggestion3()) {
    account_name_suggestion3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion3_);
  }
  ::memcpy(&action_, &from.action_,
    reinterpret_cast<char*>(&ct_matches_) -
    reinterpret_cast<char*>(&action_) + sizeof(ct_matches_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestAccountDataResponse)
}

void CMsgClientRequestAccountDataResponse::SharedCtor() {
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&action_, 0, reinterpret_cast<char*>(&ct_matches_) -
    reinterpret_cast<char*>(&action_) + sizeof(ct_matches_));
}

CMsgClientRequestAccountDataResponse::~CMsgClientRequestAccountDataResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestAccountDataResponse)
  SharedDtor();
}

void CMsgClientRequestAccountDataResponse::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_name_suggestion3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRequestAccountDataResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRequestAccountDataResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestAccountDataResponse& CMsgClientRequestAccountDataResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRequestAccountDataResponse* CMsgClientRequestAccountDataResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientRequestAccountDataResponse* n = new CMsgClientRequestAccountDataResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRequestAccountDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestAccountDataResponse)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_account_name()) {
      GOOGLE_DCHECK(!account_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_account_name_suggestion1()) {
      GOOGLE_DCHECK(!account_name_suggestion1_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_name_suggestion1_.UnsafeRawStringPointer())->clear();
    }
    if (has_account_name_suggestion2()) {
      GOOGLE_DCHECK(!account_name_suggestion2_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_name_suggestion2_.UnsafeRawStringPointer())->clear();
    }
    if (has_account_name_suggestion3()) {
      GOOGLE_DCHECK(!account_name_suggestion3_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_name_suggestion3_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 112u) {
    ::memset(&action_, 0, reinterpret_cast<char*>(&ct_matches_) -
      reinterpret_cast<char*>(&action_) + sizeof(ct_matches_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestAccountDataResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestAccountDataResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 action = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_action();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &action_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestAccountDataResponse.account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ct_matches = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_ct_matches();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ct_matches_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name_suggestion1 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name_suggestion1()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name_suggestion1().data(), this->account_name_suggestion1().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name_suggestion2 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name_suggestion2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name_suggestion2().data(), this->account_name_suggestion2().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account_name_suggestion3 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name_suggestion3()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name_suggestion3().data(), this->account_name_suggestion3().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestAccountDataResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestAccountDataResponse)
  return false;
#undef DO_
}

void CMsgClientRequestAccountDataResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestAccountDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 action = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->action(), output);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  // optional string account_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->account_name(), output);
  }

  // optional uint32 ct_matches = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ct_matches(), output);
  }

  // optional string account_name_suggestion1 = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion1().data(), this->account_name_suggestion1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->account_name_suggestion1(), output);
  }

  // optional string account_name_suggestion2 = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion2().data(), this->account_name_suggestion2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->account_name_suggestion2(), output);
  }

  // optional string account_name_suggestion3 = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion3().data(), this->account_name_suggestion3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->account_name_suggestion3(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestAccountDataResponse)
}

::google::protobuf::uint8* CMsgClientRequestAccountDataResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestAccountDataResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 action = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->action(), target);
  }

  // optional uint32 eresult = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  // optional string account_name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->account_name(), target);
  }

  // optional uint32 ct_matches = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ct_matches(), target);
  }

  // optional string account_name_suggestion1 = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion1().data(), this->account_name_suggestion1().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->account_name_suggestion1(), target);
  }

  // optional string account_name_suggestion2 = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion2().data(), this->account_name_suggestion2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->account_name_suggestion2(), target);
  }

  // optional string account_name_suggestion3 = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name_suggestion3().data(), this->account_name_suggestion3().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->account_name_suggestion3(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestAccountDataResponse)
  return target;
}

size_t CMsgClientRequestAccountDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestAccountDataResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string account_name = 3;
    if (has_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // optional string account_name_suggestion1 = 5;
    if (has_account_name_suggestion1()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name_suggestion1());
    }

    // optional string account_name_suggestion2 = 6;
    if (has_account_name_suggestion2()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name_suggestion2());
    }

    // optional string account_name_suggestion3 = 7;
    if (has_account_name_suggestion3()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name_suggestion3());
    }

    // optional uint32 action = 1;
    if (has_action()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->action());
    }

    // optional uint32 eresult = 2;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional uint32 ct_matches = 4;
    if (has_ct_matches()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ct_matches());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRequestAccountDataResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestAccountDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestAccountDataResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestAccountDataResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestAccountDataResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestAccountDataResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRequestAccountDataResponse::MergeFrom(const CMsgClientRequestAccountDataResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestAccountDataResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 127u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account_name();
      account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_account_name_suggestion1();
      account_name_suggestion1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion1_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_account_name_suggestion2();
      account_name_suggestion2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion2_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_account_name_suggestion3();
      account_name_suggestion3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_suggestion3_);
    }
    if (cached_has_bits & 0x00000010u) {
      action_ = from.action_;
    }
    if (cached_has_bits & 0x00000020u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000040u) {
      ct_matches_ = from.ct_matches_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestAccountDataResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestAccountDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestAccountDataResponse::CopyFrom(const CMsgClientRequestAccountDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestAccountDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestAccountDataResponse::IsInitialized() const {
  return true;
}

void CMsgClientRequestAccountDataResponse::Swap(CMsgClientRequestAccountDataResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestAccountDataResponse::InternalSwap(CMsgClientRequestAccountDataResponse* other) {
  account_name_.Swap(&other->account_name_);
  account_name_suggestion1_.Swap(&other->account_name_suggestion1_);
  account_name_suggestion2_.Swap(&other->account_name_suggestion2_);
  account_name_suggestion3_.Swap(&other->account_name_suggestion3_);
  std::swap(action_, other->action_);
  std::swap(eresult_, other->eresult_);
  std::swap(ct_matches_, other->ct_matches_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRequestAccountDataResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRequestAccountDataResponse

// optional uint32 action = 1;
bool CMsgClientRequestAccountDataResponse::has_action() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientRequestAccountDataResponse::set_has_action() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientRequestAccountDataResponse::clear_has_action() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientRequestAccountDataResponse::clear_action() {
  action_ = 0u;
  clear_has_action();
}
::google::protobuf::uint32 CMsgClientRequestAccountDataResponse::action() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestAccountDataResponse.action)
  return action_;
}
void CMsgClientRequestAccountDataResponse::set_action(::google::protobuf::uint32 value) {
  set_has_action();
  action_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestAccountDataResponse.action)
}

// optional uint32 eresult = 2;
bool CMsgClientRequestAccountDataResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientRequestAccountDataResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientRequestAccountDataResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientRequestAccountDataResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgClientRequestAccountDataResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestAccountDataResponse.eresult)
  return eresult_;
}
void CMsgClientRequestAccountDataResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestAccountDataResponse.eresult)
}

// optional string account_name = 3;
bool CMsgClientRequestAccountDataResponse::has_account_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientRequestAccountDataResponse::set_has_account_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientRequestAccountDataResponse::clear_has_account_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientRequestAccountDataResponse::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account_name();
}
const ::std::string& CMsgClientRequestAccountDataResponse::account_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestAccountDataResponse.account_name)
  return account_name_.GetNoArena();
}
void CMsgClientRequestAccountDataResponse::set_account_name(const ::std::string& value) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestAccountDataResponse.account_name)
}
#if LANG_CXX11
void CMsgClientRequestAccountDataResponse::set_account_name(::std::string&& value) {
  set_has_account_name();
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRequestAccountDataResponse.account_name)
}
#endif
void CMsgClientRequestAccountDataResponse::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRequestAccountDataResponse.account_name)
}
void CMsgClientRequestAccountDataResponse::set_account_name(const char* value, size_t size) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRequestAccountDataResponse.account_name)
}
::std::string* CMsgClientRequestAccountDataResponse::mutable_account_name() {
  set_has_account_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRequestAccountDataResponse.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRequestAccountDataResponse::release_account_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRequestAccountDataResponse.account_name)
  clear_has_account_name();
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRequestAccountDataResponse::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    set_has_account_name();
  } else {
    clear_has_account_name();
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRequestAccountDataResponse.account_name)
}

// optional uint32 ct_matches = 4;
bool CMsgClientRequestAccountDataResponse::has_ct_matches() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientRequestAccountDataResponse::set_has_ct_matches() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientRequestAccountDataResponse::clear_has_ct_matches() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientRequestAccountDataResponse::clear_ct_matches() {
  ct_matches_ = 0u;
  clear_has_ct_matches();
}
::google::protobuf::uint32 CMsgClientRequestAccountDataResponse::ct_matches() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestAccountDataResponse.ct_matches)
  return ct_matches_;
}
void CMsgClientRequestAccountDataResponse::set_ct_matches(::google::protobuf::uint32 value) {
  set_has_ct_matches();
  ct_matches_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestAccountDataResponse.ct_matches)
}

// optional string account_name_suggestion1 = 5;
bool CMsgClientRequestAccountDataResponse::has_account_name_suggestion1() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientRequestAccountDataResponse::set_has_account_name_suggestion1() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientRequestAccountDataResponse::clear_has_account_name_suggestion1() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientRequestAccountDataResponse::clear_account_name_suggestion1() {
  account_name_suggestion1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account_name_suggestion1();
}
const ::std::string& CMsgClientRequestAccountDataResponse::account_name_suggestion1() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1)
  return account_name_suggestion1_.GetNoArena();
}
void CMsgClientRequestAccountDataResponse::set_account_name_suggestion1(const ::std::string& value) {
  set_has_account_name_suggestion1();
  account_name_suggestion1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1)
}
#if LANG_CXX11
void CMsgClientRequestAccountDataResponse::set_account_name_suggestion1(::std::string&& value) {
  set_has_account_name_suggestion1();
  account_name_suggestion1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1)
}
#endif
void CMsgClientRequestAccountDataResponse::set_account_name_suggestion1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account_name_suggestion1();
  account_name_suggestion1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1)
}
void CMsgClientRequestAccountDataResponse::set_account_name_suggestion1(const char* value, size_t size) {
  set_has_account_name_suggestion1();
  account_name_suggestion1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1)
}
::std::string* CMsgClientRequestAccountDataResponse::mutable_account_name_suggestion1() {
  set_has_account_name_suggestion1();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1)
  return account_name_suggestion1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRequestAccountDataResponse::release_account_name_suggestion1() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1)
  clear_has_account_name_suggestion1();
  return account_name_suggestion1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRequestAccountDataResponse::set_allocated_account_name_suggestion1(::std::string* account_name_suggestion1) {
  if (account_name_suggestion1 != NULL) {
    set_has_account_name_suggestion1();
  } else {
    clear_has_account_name_suggestion1();
  }
  account_name_suggestion1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name_suggestion1);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion1)
}

// optional string account_name_suggestion2 = 6;
bool CMsgClientRequestAccountDataResponse::has_account_name_suggestion2() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientRequestAccountDataResponse::set_has_account_name_suggestion2() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientRequestAccountDataResponse::clear_has_account_name_suggestion2() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientRequestAccountDataResponse::clear_account_name_suggestion2() {
  account_name_suggestion2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account_name_suggestion2();
}
const ::std::string& CMsgClientRequestAccountDataResponse::account_name_suggestion2() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2)
  return account_name_suggestion2_.GetNoArena();
}
void CMsgClientRequestAccountDataResponse::set_account_name_suggestion2(const ::std::string& value) {
  set_has_account_name_suggestion2();
  account_name_suggestion2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2)
}
#if LANG_CXX11
void CMsgClientRequestAccountDataResponse::set_account_name_suggestion2(::std::string&& value) {
  set_has_account_name_suggestion2();
  account_name_suggestion2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2)
}
#endif
void CMsgClientRequestAccountDataResponse::set_account_name_suggestion2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account_name_suggestion2();
  account_name_suggestion2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2)
}
void CMsgClientRequestAccountDataResponse::set_account_name_suggestion2(const char* value, size_t size) {
  set_has_account_name_suggestion2();
  account_name_suggestion2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2)
}
::std::string* CMsgClientRequestAccountDataResponse::mutable_account_name_suggestion2() {
  set_has_account_name_suggestion2();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2)
  return account_name_suggestion2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRequestAccountDataResponse::release_account_name_suggestion2() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2)
  clear_has_account_name_suggestion2();
  return account_name_suggestion2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRequestAccountDataResponse::set_allocated_account_name_suggestion2(::std::string* account_name_suggestion2) {
  if (account_name_suggestion2 != NULL) {
    set_has_account_name_suggestion2();
  } else {
    clear_has_account_name_suggestion2();
  }
  account_name_suggestion2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name_suggestion2);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion2)
}

// optional string account_name_suggestion3 = 7;
bool CMsgClientRequestAccountDataResponse::has_account_name_suggestion3() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientRequestAccountDataResponse::set_has_account_name_suggestion3() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientRequestAccountDataResponse::clear_has_account_name_suggestion3() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientRequestAccountDataResponse::clear_account_name_suggestion3() {
  account_name_suggestion3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account_name_suggestion3();
}
const ::std::string& CMsgClientRequestAccountDataResponse::account_name_suggestion3() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3)
  return account_name_suggestion3_.GetNoArena();
}
void CMsgClientRequestAccountDataResponse::set_account_name_suggestion3(const ::std::string& value) {
  set_has_account_name_suggestion3();
  account_name_suggestion3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3)
}
#if LANG_CXX11
void CMsgClientRequestAccountDataResponse::set_account_name_suggestion3(::std::string&& value) {
  set_has_account_name_suggestion3();
  account_name_suggestion3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3)
}
#endif
void CMsgClientRequestAccountDataResponse::set_account_name_suggestion3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account_name_suggestion3();
  account_name_suggestion3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3)
}
void CMsgClientRequestAccountDataResponse::set_account_name_suggestion3(const char* value, size_t size) {
  set_has_account_name_suggestion3();
  account_name_suggestion3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3)
}
::std::string* CMsgClientRequestAccountDataResponse::mutable_account_name_suggestion3() {
  set_has_account_name_suggestion3();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3)
  return account_name_suggestion3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRequestAccountDataResponse::release_account_name_suggestion3() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3)
  clear_has_account_name_suggestion3();
  return account_name_suggestion3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRequestAccountDataResponse::set_allocated_account_name_suggestion3(::std::string* account_name_suggestion3) {
  if (account_name_suggestion3 != NULL) {
    set_has_account_name_suggestion3();
  } else {
    clear_has_account_name_suggestion3();
  }
  account_name_suggestion3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name_suggestion3);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRequestAccountDataResponse.account_name_suggestion3)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUGSGetGlobalStats::kGameidFieldNumber;
const int CMsgClientUGSGetGlobalStats::kHistoryDaysRequestedFieldNumber;
const int CMsgClientUGSGetGlobalStats::kTimeLastRequestedFieldNumber;
const int CMsgClientUGSGetGlobalStats::kFirstDayCachedFieldNumber;
const int CMsgClientUGSGetGlobalStats::kDaysCachedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUGSGetGlobalStats::CMsgClientUGSGetGlobalStats()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUGSGetGlobalStats)
}
CMsgClientUGSGetGlobalStats::CMsgClientUGSGetGlobalStats(const CMsgClientUGSGetGlobalStats& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gameid_, &from.gameid_,
    reinterpret_cast<char*>(&days_cached_) -
    reinterpret_cast<char*>(&gameid_) + sizeof(days_cached_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUGSGetGlobalStats)
}

void CMsgClientUGSGetGlobalStats::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&gameid_, 0, reinterpret_cast<char*>(&days_cached_) -
    reinterpret_cast<char*>(&gameid_) + sizeof(days_cached_));
}

CMsgClientUGSGetGlobalStats::~CMsgClientUGSGetGlobalStats() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUGSGetGlobalStats)
  SharedDtor();
}

void CMsgClientUGSGetGlobalStats::SharedDtor() {
}

void CMsgClientUGSGetGlobalStats::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUGSGetGlobalStats::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUGSGetGlobalStats& CMsgClientUGSGetGlobalStats::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUGSGetGlobalStats* CMsgClientUGSGetGlobalStats::New(::google::protobuf::Arena* arena) const {
  CMsgClientUGSGetGlobalStats* n = new CMsgClientUGSGetGlobalStats;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUGSGetGlobalStats::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUGSGetGlobalStats)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&gameid_, 0, reinterpret_cast<char*>(&days_cached_) -
      reinterpret_cast<char*>(&gameid_) + sizeof(days_cached_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUGSGetGlobalStats::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUGSGetGlobalStats)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 gameid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_gameid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 history_days_requested = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_history_days_requested();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &history_days_requested_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 time_last_requested = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u)) {
          set_has_time_last_requested();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &time_last_requested_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 first_day_cached = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_first_day_cached();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &first_day_cached_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 days_cached = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_days_cached();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &days_cached_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUGSGetGlobalStats)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUGSGetGlobalStats)
  return false;
#undef DO_
}

void CMsgClientUGSGetGlobalStats::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUGSGetGlobalStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 gameid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gameid(), output);
  }

  // optional uint32 history_days_requested = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->history_days_requested(), output);
  }

  // optional fixed32 time_last_requested = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->time_last_requested(), output);
  }

  // optional uint32 first_day_cached = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->first_day_cached(), output);
  }

  // optional uint32 days_cached = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->days_cached(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUGSGetGlobalStats)
}

::google::protobuf::uint8* CMsgClientUGSGetGlobalStats::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUGSGetGlobalStats)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 gameid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gameid(), target);
  }

  // optional uint32 history_days_requested = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->history_days_requested(), target);
  }

  // optional fixed32 time_last_requested = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->time_last_requested(), target);
  }

  // optional uint32 first_day_cached = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->first_day_cached(), target);
  }

  // optional uint32 days_cached = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->days_cached(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUGSGetGlobalStats)
  return target;
}

size_t CMsgClientUGSGetGlobalStats::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUGSGetGlobalStats)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint64 gameid = 1;
    if (has_gameid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->gameid());
    }

    // optional uint32 history_days_requested = 2;
    if (has_history_days_requested()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->history_days_requested());
    }

    // optional fixed32 time_last_requested = 3;
    if (has_time_last_requested()) {
      total_size += 1 + 4;
    }

    // optional uint32 first_day_cached = 4;
    if (has_first_day_cached()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->first_day_cached());
    }

    // optional uint32 days_cached = 5;
    if (has_days_cached()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->days_cached());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUGSGetGlobalStats::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStats)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUGSGetGlobalStats* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUGSGetGlobalStats>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUGSGetGlobalStats)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUGSGetGlobalStats)
    MergeFrom(*source);
  }
}

void CMsgClientUGSGetGlobalStats::MergeFrom(const CMsgClientUGSGetGlobalStats& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStats)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      gameid_ = from.gameid_;
    }
    if (cached_has_bits & 0x00000002u) {
      history_days_requested_ = from.history_days_requested_;
    }
    if (cached_has_bits & 0x00000004u) {
      time_last_requested_ = from.time_last_requested_;
    }
    if (cached_has_bits & 0x00000008u) {
      first_day_cached_ = from.first_day_cached_;
    }
    if (cached_has_bits & 0x00000010u) {
      days_cached_ = from.days_cached_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUGSGetGlobalStats::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUGSGetGlobalStats::CopyFrom(const CMsgClientUGSGetGlobalStats& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStats)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUGSGetGlobalStats::IsInitialized() const {
  return true;
}

void CMsgClientUGSGetGlobalStats::Swap(CMsgClientUGSGetGlobalStats* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUGSGetGlobalStats::InternalSwap(CMsgClientUGSGetGlobalStats* other) {
  std::swap(gameid_, other->gameid_);
  std::swap(history_days_requested_, other->history_days_requested_);
  std::swap(time_last_requested_, other->time_last_requested_);
  std::swap(first_day_cached_, other->first_day_cached_);
  std::swap(days_cached_, other->days_cached_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUGSGetGlobalStats::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUGSGetGlobalStats

// optional uint64 gameid = 1;
bool CMsgClientUGSGetGlobalStats::has_gameid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUGSGetGlobalStats::set_has_gameid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUGSGetGlobalStats::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUGSGetGlobalStats::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
  clear_has_gameid();
}
::google::protobuf::uint64 CMsgClientUGSGetGlobalStats::gameid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUGSGetGlobalStats.gameid)
  return gameid_;
}
void CMsgClientUGSGetGlobalStats::set_gameid(::google::protobuf::uint64 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUGSGetGlobalStats.gameid)
}

// optional uint32 history_days_requested = 2;
bool CMsgClientUGSGetGlobalStats::has_history_days_requested() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUGSGetGlobalStats::set_has_history_days_requested() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUGSGetGlobalStats::clear_has_history_days_requested() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUGSGetGlobalStats::clear_history_days_requested() {
  history_days_requested_ = 0u;
  clear_has_history_days_requested();
}
::google::protobuf::uint32 CMsgClientUGSGetGlobalStats::history_days_requested() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUGSGetGlobalStats.history_days_requested)
  return history_days_requested_;
}
void CMsgClientUGSGetGlobalStats::set_history_days_requested(::google::protobuf::uint32 value) {
  set_has_history_days_requested();
  history_days_requested_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUGSGetGlobalStats.history_days_requested)
}

// optional fixed32 time_last_requested = 3;
bool CMsgClientUGSGetGlobalStats::has_time_last_requested() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUGSGetGlobalStats::set_has_time_last_requested() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUGSGetGlobalStats::clear_has_time_last_requested() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUGSGetGlobalStats::clear_time_last_requested() {
  time_last_requested_ = 0u;
  clear_has_time_last_requested();
}
::google::protobuf::uint32 CMsgClientUGSGetGlobalStats::time_last_requested() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUGSGetGlobalStats.time_last_requested)
  return time_last_requested_;
}
void CMsgClientUGSGetGlobalStats::set_time_last_requested(::google::protobuf::uint32 value) {
  set_has_time_last_requested();
  time_last_requested_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUGSGetGlobalStats.time_last_requested)
}

// optional uint32 first_day_cached = 4;
bool CMsgClientUGSGetGlobalStats::has_first_day_cached() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientUGSGetGlobalStats::set_has_first_day_cached() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientUGSGetGlobalStats::clear_has_first_day_cached() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientUGSGetGlobalStats::clear_first_day_cached() {
  first_day_cached_ = 0u;
  clear_has_first_day_cached();
}
::google::protobuf::uint32 CMsgClientUGSGetGlobalStats::first_day_cached() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUGSGetGlobalStats.first_day_cached)
  return first_day_cached_;
}
void CMsgClientUGSGetGlobalStats::set_first_day_cached(::google::protobuf::uint32 value) {
  set_has_first_day_cached();
  first_day_cached_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUGSGetGlobalStats.first_day_cached)
}

// optional uint32 days_cached = 5;
bool CMsgClientUGSGetGlobalStats::has_days_cached() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientUGSGetGlobalStats::set_has_days_cached() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientUGSGetGlobalStats::clear_has_days_cached() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientUGSGetGlobalStats::clear_days_cached() {
  days_cached_ = 0u;
  clear_has_days_cached();
}
::google::protobuf::uint32 CMsgClientUGSGetGlobalStats::days_cached() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUGSGetGlobalStats.days_cached)
  return days_cached_;
}
void CMsgClientUGSGetGlobalStats::set_days_cached(::google::protobuf::uint32 value) {
  set_has_days_cached();
  days_cached_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUGSGetGlobalStats.days_cached)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUGSGetGlobalStatsResponse_Day_Stat::kStatIdFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse_Day_Stat::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUGSGetGlobalStatsResponse_Day_Stat::CMsgClientUGSGetGlobalStatsResponse_Day_Stat()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
}
CMsgClientUGSGetGlobalStatsResponse_Day_Stat::CMsgClientUGSGetGlobalStatsResponse_Day_Stat(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&data_, &from.data_,
    reinterpret_cast<char*>(&stat_id_) -
    reinterpret_cast<char*>(&data_) + sizeof(stat_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&data_, 0, reinterpret_cast<char*>(&stat_id_) -
    reinterpret_cast<char*>(&data_) + sizeof(stat_id_));
}

CMsgClientUGSGetGlobalStatsResponse_Day_Stat::~CMsgClientUGSGetGlobalStatsResponse_Day_Stat() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  SharedDtor();
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::SharedDtor() {
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUGSGetGlobalStatsResponse_Day_Stat::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& CMsgClientUGSGetGlobalStatsResponse_Day_Stat::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUGSGetGlobalStatsResponse_Day_Stat* CMsgClientUGSGetGlobalStatsResponse_Day_Stat::New(::google::protobuf::Arena* arena) const {
  CMsgClientUGSGetGlobalStatsResponse_Day_Stat* n = new CMsgClientUGSGetGlobalStatsResponse_Day_Stat;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&data_, 0, reinterpret_cast<char*>(&stat_id_) -
      reinterpret_cast<char*>(&data_) + sizeof(stat_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUGSGetGlobalStatsResponse_Day_Stat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 stat_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_stat_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &stat_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int64 data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_data();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &data_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  return false;
#undef DO_
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 stat_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->stat_id(), output);
  }

  // optional int64 data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
}

::google::protobuf::uint8* CMsgClientUGSGetGlobalStatsResponse_Day_Stat::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 stat_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->stat_id(), target);
  }

  // optional int64 data = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  return target;
}

size_t CMsgClientUGSGetGlobalStatsResponse_Day_Stat::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int64 data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->data());
    }

    // optional int32 stat_id = 1;
    if (has_stat_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->stat_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUGSGetGlobalStatsResponse_Day_Stat* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUGSGetGlobalStatsResponse_Day_Stat>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
    MergeFrom(*source);
  }
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::MergeFrom(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      data_ = from.data_;
    }
    if (cached_has_bits & 0x00000002u) {
      stat_id_ = from.stat_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::CopyFrom(const CMsgClientUGSGetGlobalStatsResponse_Day_Stat& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUGSGetGlobalStatsResponse_Day_Stat::IsInitialized() const {
  return true;
}

void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::Swap(CMsgClientUGSGetGlobalStatsResponse_Day_Stat* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::InternalSwap(CMsgClientUGSGetGlobalStatsResponse_Day_Stat* other) {
  std::swap(data_, other->data_);
  std::swap(stat_id_, other->stat_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUGSGetGlobalStatsResponse_Day_Stat::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUGSGetGlobalStatsResponse_Day_Stat

// optional int32 stat_id = 1;
bool CMsgClientUGSGetGlobalStatsResponse_Day_Stat::has_stat_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::set_has_stat_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::clear_has_stat_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::clear_stat_id() {
  stat_id_ = 0;
  clear_has_stat_id();
}
::google::protobuf::int32 CMsgClientUGSGetGlobalStatsResponse_Day_Stat::stat_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat.stat_id)
  return stat_id_;
}
void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::set_stat_id(::google::protobuf::int32 value) {
  set_has_stat_id();
  stat_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat.stat_id)
}

// optional int64 data = 2;
bool CMsgClientUGSGetGlobalStatsResponse_Day_Stat::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::clear_data() {
  data_ = GOOGLE_LONGLONG(0);
  clear_has_data();
}
::google::protobuf::int64 CMsgClientUGSGetGlobalStatsResponse_Day_Stat::data() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat.data)
  return data_;
}
void CMsgClientUGSGetGlobalStatsResponse_Day_Stat::set_data(::google::protobuf::int64 value) {
  set_has_data();
  data_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUGSGetGlobalStatsResponse_Day::kDayIdFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse_Day::kStatsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUGSGetGlobalStatsResponse_Day::CMsgClientUGSGetGlobalStatsResponse_Day()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
}
CMsgClientUGSGetGlobalStatsResponse_Day::CMsgClientUGSGetGlobalStatsResponse_Day(const CMsgClientUGSGetGlobalStatsResponse_Day& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stats_(from.stats_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  day_id_ = from.day_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
}

void CMsgClientUGSGetGlobalStatsResponse_Day::SharedCtor() {
  _cached_size_ = 0;
  day_id_ = 0u;
}

CMsgClientUGSGetGlobalStatsResponse_Day::~CMsgClientUGSGetGlobalStatsResponse_Day() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  SharedDtor();
}

void CMsgClientUGSGetGlobalStatsResponse_Day::SharedDtor() {
}

void CMsgClientUGSGetGlobalStatsResponse_Day::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUGSGetGlobalStatsResponse_Day::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUGSGetGlobalStatsResponse_Day& CMsgClientUGSGetGlobalStatsResponse_Day::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUGSGetGlobalStatsResponse_Day* CMsgClientUGSGetGlobalStatsResponse_Day::New(::google::protobuf::Arena* arena) const {
  CMsgClientUGSGetGlobalStatsResponse_Day* n = new CMsgClientUGSGetGlobalStatsResponse_Day;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUGSGetGlobalStatsResponse_Day::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  stats_.Clear();
  day_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUGSGetGlobalStatsResponse_Day::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 day_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_day_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &day_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stats()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  return false;
#undef DO_
}

void CMsgClientUGSGetGlobalStatsResponse_Day::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 day_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->day_id(), output);
  }

  // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
  for (unsigned int i = 0, n = this->stats_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->stats(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
}

::google::protobuf::uint8* CMsgClientUGSGetGlobalStatsResponse_Day::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 day_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->day_id(), target);
  }

  // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
  for (unsigned int i = 0, n = this->stats_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->stats(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  return target;
}

size_t CMsgClientUGSGetGlobalStatsResponse_Day::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
  {
    unsigned int count = this->stats_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stats(i));
    }
  }

  // optional uint32 day_id = 1;
  if (has_day_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->day_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUGSGetGlobalStatsResponse_Day::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUGSGetGlobalStatsResponse_Day* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUGSGetGlobalStatsResponse_Day>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
    MergeFrom(*source);
  }
}

void CMsgClientUGSGetGlobalStatsResponse_Day::MergeFrom(const CMsgClientUGSGetGlobalStatsResponse_Day& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stats_.MergeFrom(from.stats_);
  if (from.has_day_id()) {
    set_day_id(from.day_id());
  }
}

void CMsgClientUGSGetGlobalStatsResponse_Day::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUGSGetGlobalStatsResponse_Day::CopyFrom(const CMsgClientUGSGetGlobalStatsResponse_Day& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUGSGetGlobalStatsResponse_Day::IsInitialized() const {
  return true;
}

void CMsgClientUGSGetGlobalStatsResponse_Day::Swap(CMsgClientUGSGetGlobalStatsResponse_Day* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUGSGetGlobalStatsResponse_Day::InternalSwap(CMsgClientUGSGetGlobalStatsResponse_Day* other) {
  stats_.InternalSwap(&other->stats_);
  std::swap(day_id_, other->day_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUGSGetGlobalStatsResponse_Day::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUGSGetGlobalStatsResponse_Day

// optional uint32 day_id = 1;
bool CMsgClientUGSGetGlobalStatsResponse_Day::has_day_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUGSGetGlobalStatsResponse_Day::set_has_day_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUGSGetGlobalStatsResponse_Day::clear_has_day_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUGSGetGlobalStatsResponse_Day::clear_day_id() {
  day_id_ = 0u;
  clear_has_day_id();
}
::google::protobuf::uint32 CMsgClientUGSGetGlobalStatsResponse_Day::day_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.day_id)
  return day_id_;
}
void CMsgClientUGSGetGlobalStatsResponse_Day::set_day_id(::google::protobuf::uint32 value) {
  set_has_day_id();
  day_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.day_id)
}

// repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.Stat stats = 2;
int CMsgClientUGSGetGlobalStatsResponse_Day::stats_size() const {
  return stats_.size();
}
void CMsgClientUGSGetGlobalStatsResponse_Day::clear_stats() {
  stats_.Clear();
}
const ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat& CMsgClientUGSGetGlobalStatsResponse_Day::stats(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.stats)
  return stats_.Get(index);
}
::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* CMsgClientUGSGetGlobalStatsResponse_Day::mutable_stats(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.stats)
  return stats_.Mutable(index);
}
::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat* CMsgClientUGSGetGlobalStatsResponse_Day::add_stats() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.stats)
  return stats_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat >*
CMsgClientUGSGetGlobalStatsResponse_Day::mutable_stats() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.stats)
  return &stats_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day_Stat >&
CMsgClientUGSGetGlobalStatsResponse_Day::stats() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day.stats)
  return stats_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUGSGetGlobalStatsResponse::kEresultFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse::kTimestampFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse::kDayCurrentFieldNumber;
const int CMsgClientUGSGetGlobalStatsResponse::kDaysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUGSGetGlobalStatsResponse::CMsgClientUGSGetGlobalStatsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
}
CMsgClientUGSGetGlobalStatsResponse::CMsgClientUGSGetGlobalStatsResponse(const CMsgClientUGSGetGlobalStatsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      days_(from.days_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&timestamp_, &from.timestamp_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
}

void CMsgClientUGSGetGlobalStatsResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&timestamp_, 0, reinterpret_cast<char*>(&day_current_) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(day_current_));
  eresult_ = 2;
}

CMsgClientUGSGetGlobalStatsResponse::~CMsgClientUGSGetGlobalStatsResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  SharedDtor();
}

void CMsgClientUGSGetGlobalStatsResponse::SharedDtor() {
}

void CMsgClientUGSGetGlobalStatsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUGSGetGlobalStatsResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUGSGetGlobalStatsResponse& CMsgClientUGSGetGlobalStatsResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUGSGetGlobalStatsResponse* CMsgClientUGSGetGlobalStatsResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientUGSGetGlobalStatsResponse* n = new CMsgClientUGSGetGlobalStatsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUGSGetGlobalStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  days_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&timestamp_, 0, reinterpret_cast<char*>(&day_current_) -
      reinterpret_cast<char*>(&timestamp_) + sizeof(day_current_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUGSGetGlobalStatsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed32 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 day_current = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_day_current();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_current_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_days()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  return false;
#undef DO_
}

void CMsgClientUGSGetGlobalStatsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed32 timestamp = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->timestamp(), output);
  }

  // optional int32 day_current = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->day_current(), output);
  }

  // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
  for (unsigned int i = 0, n = this->days_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->days(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
}

::google::protobuf::uint8* CMsgClientUGSGetGlobalStatsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed32 timestamp = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->timestamp(), target);
  }

  // optional int32 day_current = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->day_current(), target);
  }

  // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
  for (unsigned int i = 0, n = this->days_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->days(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  return target;
}

size_t CMsgClientUGSGetGlobalStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
  {
    unsigned int count = this->days_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->days(i));
    }
  }

  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed32 timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 + 4;
    }

    // optional int32 day_current = 3;
    if (has_day_current()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->day_current());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUGSGetGlobalStatsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUGSGetGlobalStatsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUGSGetGlobalStatsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientUGSGetGlobalStatsResponse::MergeFrom(const CMsgClientUGSGetGlobalStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  days_.MergeFrom(from.days_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000002u) {
      day_current_ = from.day_current_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUGSGetGlobalStatsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUGSGetGlobalStatsResponse::CopyFrom(const CMsgClientUGSGetGlobalStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUGSGetGlobalStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUGSGetGlobalStatsResponse::IsInitialized() const {
  return true;
}

void CMsgClientUGSGetGlobalStatsResponse::Swap(CMsgClientUGSGetGlobalStatsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUGSGetGlobalStatsResponse::InternalSwap(CMsgClientUGSGetGlobalStatsResponse* other) {
  days_.InternalSwap(&other->days_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(day_current_, other->day_current_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUGSGetGlobalStatsResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUGSGetGlobalStatsResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientUGSGetGlobalStatsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientUGSGetGlobalStatsResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientUGSGetGlobalStatsResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientUGSGetGlobalStatsResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientUGSGetGlobalStatsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUGSGetGlobalStatsResponse.eresult)
  return eresult_;
}
void CMsgClientUGSGetGlobalStatsResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUGSGetGlobalStatsResponse.eresult)
}

// optional fixed32 timestamp = 2;
bool CMsgClientUGSGetGlobalStatsResponse::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUGSGetGlobalStatsResponse::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUGSGetGlobalStatsResponse::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUGSGetGlobalStatsResponse::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
::google::protobuf::uint32 CMsgClientUGSGetGlobalStatsResponse::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUGSGetGlobalStatsResponse.timestamp)
  return timestamp_;
}
void CMsgClientUGSGetGlobalStatsResponse::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUGSGetGlobalStatsResponse.timestamp)
}

// optional int32 day_current = 3;
bool CMsgClientUGSGetGlobalStatsResponse::has_day_current() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUGSGetGlobalStatsResponse::set_has_day_current() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUGSGetGlobalStatsResponse::clear_has_day_current() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUGSGetGlobalStatsResponse::clear_day_current() {
  day_current_ = 0;
  clear_has_day_current();
}
::google::protobuf::int32 CMsgClientUGSGetGlobalStatsResponse::day_current() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUGSGetGlobalStatsResponse.day_current)
  return day_current_;
}
void CMsgClientUGSGetGlobalStatsResponse::set_day_current(::google::protobuf::int32 value) {
  set_has_day_current();
  day_current_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUGSGetGlobalStatsResponse.day_current)
}

// repeated .proto.steam.CMsgClientUGSGetGlobalStatsResponse.Day days = 4;
int CMsgClientUGSGetGlobalStatsResponse::days_size() const {
  return days_.size();
}
void CMsgClientUGSGetGlobalStatsResponse::clear_days() {
  days_.Clear();
}
const ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day& CMsgClientUGSGetGlobalStatsResponse::days(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUGSGetGlobalStatsResponse.days)
  return days_.Get(index);
}
::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day* CMsgClientUGSGetGlobalStatsResponse::mutable_days(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUGSGetGlobalStatsResponse.days)
  return days_.Mutable(index);
}
::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day* CMsgClientUGSGetGlobalStatsResponse::add_days() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUGSGetGlobalStatsResponse.days)
  return days_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day >*
CMsgClientUGSGetGlobalStatsResponse::mutable_days() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUGSGetGlobalStatsResponse.days)
  return &days_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUGSGetGlobalStatsResponse_Day >&
CMsgClientUGSGetGlobalStatsResponse::days() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUGSGetGlobalStatsResponse.days)
  return days_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerData_Player::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerData_Player::CMsgGameServerData_Player()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGameServerData.Player)
}
CMsgGameServerData_Player::CMsgGameServerData_Player(const CMsgGameServerData_Player& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGameServerData.Player)
}

void CMsgGameServerData_Player::SharedCtor() {
  _cached_size_ = 0;
  steam_id_ = GOOGLE_ULONGLONG(0);
}

CMsgGameServerData_Player::~CMsgGameServerData_Player() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGameServerData.Player)
  SharedDtor();
}

void CMsgGameServerData_Player::SharedDtor() {
}

void CMsgGameServerData_Player::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGameServerData_Player::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameServerData_Player& CMsgGameServerData_Player::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGameServerData_Player* CMsgGameServerData_Player::New(::google::protobuf::Arena* arena) const {
  CMsgGameServerData_Player* n = new CMsgGameServerData_Player;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGameServerData_Player::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGameServerData.Player)
  steam_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameServerData_Player::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGameServerData.Player)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGameServerData.Player)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGameServerData.Player)
  return false;
#undef DO_
}

void CMsgGameServerData_Player::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGameServerData.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGameServerData.Player)
}

::google::protobuf::uint8* CMsgGameServerData_Player::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGameServerData.Player)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGameServerData.Player)
  return target;
}

size_t CMsgGameServerData_Player::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGameServerData.Player)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGameServerData_Player::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGameServerData.Player)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerData_Player* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameServerData_Player>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGameServerData.Player)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGameServerData.Player)
    MergeFrom(*source);
  }
}

void CMsgGameServerData_Player::MergeFrom(const CMsgGameServerData_Player& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGameServerData.Player)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id()) {
    set_steam_id(from.steam_id());
  }
}

void CMsgGameServerData_Player::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGameServerData.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerData_Player::CopyFrom(const CMsgGameServerData_Player& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGameServerData.Player)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerData_Player::IsInitialized() const {
  return true;
}

void CMsgGameServerData_Player::Swap(CMsgGameServerData_Player* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerData_Player::InternalSwap(CMsgGameServerData_Player* other) {
  std::swap(steam_id_, other->steam_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGameServerData_Player::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGameServerData_Player

// optional fixed64 steam_id = 1;
bool CMsgGameServerData_Player::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGameServerData_Player::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGameServerData_Player::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGameServerData_Player::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
::google::protobuf::uint64 CMsgGameServerData_Player::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.Player.steam_id)
  return steam_id_;
}
void CMsgGameServerData_Player::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.Player.steam_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerData::kSteamIdGsFieldNumber;
const int CMsgGameServerData::kIpFieldNumber;
const int CMsgGameServerData::kQueryPortFieldNumber;
const int CMsgGameServerData::kGamePortFieldNumber;
const int CMsgGameServerData::kSourcetvPortFieldNumber;
const int CMsgGameServerData::kNameFieldNumber;
const int CMsgGameServerData::kAppIdFieldNumber;
const int CMsgGameServerData::kGamedirFieldNumber;
const int CMsgGameServerData::kVersionFieldNumber;
const int CMsgGameServerData::kProductFieldNumber;
const int CMsgGameServerData::kRegionFieldNumber;
const int CMsgGameServerData::kPlayersFieldNumber;
const int CMsgGameServerData::kMaxPlayersFieldNumber;
const int CMsgGameServerData::kBotCountFieldNumber;
const int CMsgGameServerData::kPasswordFieldNumber;
const int CMsgGameServerData::kSecureFieldNumber;
const int CMsgGameServerData::kDedicatedFieldNumber;
const int CMsgGameServerData::kOsFieldNumber;
const int CMsgGameServerData::kGameDataFieldNumber;
const int CMsgGameServerData::kGameDataVersionFieldNumber;
const int CMsgGameServerData::kGameTypeFieldNumber;
const int CMsgGameServerData::kMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerData::CMsgGameServerData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGameServerData)
}
CMsgGameServerData::CMsgGameServerData(const CMsgGameServerData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      players_(from.players_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gamedir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gamedir()) {
    gamedir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamedir_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_version()) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  product_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_product()) {
    product_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_);
  }
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_region()) {
    region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
  }
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_os()) {
    os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
  }
  game_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_data()) {
    game_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data_);
  }
  game_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_game_type()) {
    game_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_type_);
  }
  map_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_map()) {
    map_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&steam_id_gs_, &from.steam_id_gs_,
    reinterpret_cast<char*>(&game_data_version_) -
    reinterpret_cast<char*>(&steam_id_gs_) + sizeof(game_data_version_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGameServerData)
}

void CMsgGameServerData::SharedCtor() {
  _cached_size_ = 0;
  gamedir_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  map_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_gs_, 0, reinterpret_cast<char*>(&game_data_version_) -
    reinterpret_cast<char*>(&steam_id_gs_) + sizeof(game_data_version_));
}

CMsgGameServerData::~CMsgGameServerData() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGameServerData)
  SharedDtor();
}

void CMsgGameServerData::SharedDtor() {
  gamedir_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  region_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  game_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  map_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGameServerData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGameServerData::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameServerData& CMsgGameServerData::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGameServerData* CMsgGameServerData::New(::google::protobuf::Arena* arena) const {
  CMsgGameServerData* n = new CMsgGameServerData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGameServerData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGameServerData)
  players_.Clear();
  if (_has_bits_[0 / 32] & 255u) {
    if (has_gamedir()) {
      GOOGLE_DCHECK(!gamedir_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gamedir_.UnsafeRawStringPointer())->clear();
    }
    if (has_version()) {
      GOOGLE_DCHECK(!version_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*version_.UnsafeRawStringPointer())->clear();
    }
    if (has_product()) {
      GOOGLE_DCHECK(!product_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*product_.UnsafeRawStringPointer())->clear();
    }
    if (has_region()) {
      GOOGLE_DCHECK(!region_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*region_.UnsafeRawStringPointer())->clear();
    }
    if (has_os()) {
      GOOGLE_DCHECK(!os_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*os_.UnsafeRawStringPointer())->clear();
    }
    if (has_game_data()) {
      GOOGLE_DCHECK(!game_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*game_data_.UnsafeRawStringPointer())->clear();
    }
    if (has_game_type()) {
      GOOGLE_DCHECK(!game_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*game_type_.UnsafeRawStringPointer())->clear();
    }
    if (has_map()) {
      GOOGLE_DCHECK(!map_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*map_.UnsafeRawStringPointer())->clear();
    }
  }
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[8 / 32] & 65024u) {
    ::memset(&steam_id_gs_, 0, reinterpret_cast<char*>(&max_players_) -
      reinterpret_cast<char*>(&steam_id_gs_) + sizeof(max_players_));
  }
  if (_has_bits_[16 / 32] & 2031616u) {
    ::memset(&bot_count_, 0, reinterpret_cast<char*>(&game_data_version_) -
      reinterpret_cast<char*>(&bot_count_) + sizeof(game_data_version_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameServerData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGameServerData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_gs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steam_id_gs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_gs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 query_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_query_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &query_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_game_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sourcetv_port = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_sourcetv_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sourcetv_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gamedir = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gamedir()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gamedir().data(), this->gamedir().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.gamedir");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string version = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->version().data(), this->version().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.version");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string product = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_product()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->product().data(), this->product().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.product");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string region = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_region()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->region().data(), this->region().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.region");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgGameServerData.Player players = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_players = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          set_has_max_players();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_players_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bot_count = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_bot_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bot_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool password = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_password();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &password_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool secure = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has_secure();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &secure_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool dedicated = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has_dedicated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &dedicated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string os = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_os()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->os().data(), this->os().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.os");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string game_data = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_data()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->game_data().data(), this->game_data().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.game_data");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_data_version = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {
          set_has_game_data_version();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_data_version_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string game_type = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_game_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->game_type().data(), this->game_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.game_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string map = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_map()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->map().data(), this->map().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.map");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerData.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGameServerData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGameServerData)
  return false;
#undef DO_
}

void CMsgGameServerData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGameServerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_gs = 1;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_gs(), output);
  }

  // optional uint32 ip = 2;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ip(), output);
  }

  // optional uint32 query_port = 3;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->query_port(), output);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->game_port(), output);
  }

  // optional uint32 sourcetv_port = 5;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sourcetv_port(), output);
  }

  // optional uint32 app_id = 6;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->app_id(), output);
  }

  // optional string gamedir = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gamedir().data(), this->gamedir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.gamedir");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->gamedir(), output);
  }

  // optional string version = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->version(), output);
  }

  // optional string product = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product().data(), this->product().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.product");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->product(), output);
  }

  // optional string region = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.region");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->region(), output);
  }

  // repeated .proto.steam.CMsgGameServerData.Player players = 11;
  for (unsigned int i = 0, n = this->players_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->players(i), output);
  }

  // optional uint32 max_players = 12;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->max_players(), output);
  }

  // optional uint32 bot_count = 13;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->bot_count(), output);
  }

  // optional bool password = 14;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->password(), output);
  }

  // optional bool secure = 15;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->secure(), output);
  }

  // optional bool dedicated = 16;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(16, this->dedicated(), output);
  }

  // optional string os = 17;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->os().data(), this->os().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.os");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->os(), output);
  }

  // optional string game_data = 18;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_data().data(), this->game_data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.game_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->game_data(), output);
  }

  // optional uint32 game_data_version = 19;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->game_data_version(), output);
  }

  // optional string game_type = 20;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_type().data(), this->game_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.game_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->game_type(), output);
  }

  // optional string map = 21;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map().data(), this->map().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.map");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->map(), output);
  }

  // optional string name = 22;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->name(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGameServerData)
}

::google::protobuf::uint8* CMsgGameServerData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGameServerData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_gs = 1;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_gs(), target);
  }

  // optional uint32 ip = 2;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ip(), target);
  }

  // optional uint32 query_port = 3;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->query_port(), target);
  }

  // optional uint32 game_port = 4;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->game_port(), target);
  }

  // optional uint32 sourcetv_port = 5;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sourcetv_port(), target);
  }

  // optional uint32 app_id = 6;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->app_id(), target);
  }

  // optional string gamedir = 7;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gamedir().data(), this->gamedir().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.gamedir");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->gamedir(), target);
  }

  // optional string version = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->version().data(), this->version().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->version(), target);
  }

  // optional string product = 9;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->product().data(), this->product().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.product");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->product(), target);
  }

  // optional string region = 10;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->region().data(), this->region().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.region");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->region(), target);
  }

  // repeated .proto.steam.CMsgGameServerData.Player players = 11;
  for (unsigned int i = 0, n = this->players_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, this->players(i), deterministic, target);
  }

  // optional uint32 max_players = 12;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->max_players(), target);
  }

  // optional uint32 bot_count = 13;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->bot_count(), target);
  }

  // optional bool password = 14;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->password(), target);
  }

  // optional bool secure = 15;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->secure(), target);
  }

  // optional bool dedicated = 16;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(16, this->dedicated(), target);
  }

  // optional string os = 17;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->os().data(), this->os().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.os");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->os(), target);
  }

  // optional string game_data = 18;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_data().data(), this->game_data().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.game_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->game_data(), target);
  }

  // optional uint32 game_data_version = 19;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->game_data_version(), target);
  }

  // optional string game_type = 20;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->game_type().data(), this->game_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.game_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->game_type(), target);
  }

  // optional string map = 21;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->map().data(), this->map().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.map");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->map(), target);
  }

  // optional string name = 22;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerData.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->name(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGameServerData)
  return target;
}

size_t CMsgGameServerData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGameServerData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgGameServerData.Player players = 11;
  {
    unsigned int count = this->players_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->players(i));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string gamedir = 7;
    if (has_gamedir()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gamedir());
    }

    // optional string version = 8;
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->version());
    }

    // optional string product = 9;
    if (has_product()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->product());
    }

    // optional string region = 10;
    if (has_region()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->region());
    }

    // optional string os = 17;
    if (has_os()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->os());
    }

    // optional string game_data = 18;
    if (has_game_data()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->game_data());
    }

    // optional string game_type = 20;
    if (has_game_type()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->game_type());
    }

    // optional string map = 21;
    if (has_map()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->map());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional string name = 22;
    if (has_name()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional fixed64 steam_id_gs = 1;
    if (has_steam_id_gs()) {
      total_size += 1 + 8;
    }

    // optional uint32 ip = 2;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ip());
    }

    // optional uint32 query_port = 3;
    if (has_query_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->query_port());
    }

    // optional uint32 game_port = 4;
    if (has_game_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_port());
    }

    // optional uint32 sourcetv_port = 5;
    if (has_sourcetv_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sourcetv_port());
    }

    // optional uint32 app_id = 6;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 max_players = 12;
    if (has_max_players()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_players());
    }

  }
  if (_has_bits_[16 / 32] & 2031616u) {
    // optional uint32 bot_count = 13;
    if (has_bot_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bot_count());
    }

    // optional bool password = 14;
    if (has_password()) {
      total_size += 1 + 1;
    }

    // optional bool secure = 15;
    if (has_secure()) {
      total_size += 1 + 1;
    }

    // optional bool dedicated = 16;
    if (has_dedicated()) {
      total_size += 2 + 1;
    }

    // optional uint32 game_data_version = 19;
    if (has_game_data_version()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_data_version());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGameServerData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGameServerData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameServerData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGameServerData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGameServerData)
    MergeFrom(*source);
  }
}

void CMsgGameServerData::MergeFrom(const CMsgGameServerData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGameServerData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  players_.MergeFrom(from.players_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_gamedir();
      gamedir_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gamedir_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_version();
      version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_product();
      product_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.product_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_region();
      region_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.region_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_os();
      os_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_game_data();
      game_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_data_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_game_type();
      game_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.game_type_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_map();
      map_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.map_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000200u) {
      steam_id_gs_ = from.steam_id_gs_;
    }
    if (cached_has_bits & 0x00000400u) {
      ip_ = from.ip_;
    }
    if (cached_has_bits & 0x00000800u) {
      query_port_ = from.query_port_;
    }
    if (cached_has_bits & 0x00001000u) {
      game_port_ = from.game_port_;
    }
    if (cached_has_bits & 0x00002000u) {
      sourcetv_port_ = from.sourcetv_port_;
    }
    if (cached_has_bits & 0x00004000u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00008000u) {
      max_players_ = from.max_players_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 2031616u) {
    if (cached_has_bits & 0x00010000u) {
      bot_count_ = from.bot_count_;
    }
    if (cached_has_bits & 0x00020000u) {
      password_ = from.password_;
    }
    if (cached_has_bits & 0x00040000u) {
      secure_ = from.secure_;
    }
    if (cached_has_bits & 0x00080000u) {
      dedicated_ = from.dedicated_;
    }
    if (cached_has_bits & 0x00100000u) {
      game_data_version_ = from.game_data_version_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGameServerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerData::CopyFrom(const CMsgGameServerData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGameServerData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerData::IsInitialized() const {
  return true;
}

void CMsgGameServerData::Swap(CMsgGameServerData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerData::InternalSwap(CMsgGameServerData* other) {
  players_.InternalSwap(&other->players_);
  gamedir_.Swap(&other->gamedir_);
  version_.Swap(&other->version_);
  product_.Swap(&other->product_);
  region_.Swap(&other->region_);
  os_.Swap(&other->os_);
  game_data_.Swap(&other->game_data_);
  game_type_.Swap(&other->game_type_);
  map_.Swap(&other->map_);
  name_.Swap(&other->name_);
  std::swap(steam_id_gs_, other->steam_id_gs_);
  std::swap(ip_, other->ip_);
  std::swap(query_port_, other->query_port_);
  std::swap(game_port_, other->game_port_);
  std::swap(sourcetv_port_, other->sourcetv_port_);
  std::swap(app_id_, other->app_id_);
  std::swap(max_players_, other->max_players_);
  std::swap(bot_count_, other->bot_count_);
  std::swap(password_, other->password_);
  std::swap(secure_, other->secure_);
  std::swap(dedicated_, other->dedicated_);
  std::swap(game_data_version_, other->game_data_version_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGameServerData::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGameServerData

// optional fixed64 steam_id_gs = 1;
bool CMsgGameServerData::has_steam_id_gs() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CMsgGameServerData::set_has_steam_id_gs() {
  _has_bits_[0] |= 0x00000200u;
}
void CMsgGameServerData::clear_has_steam_id_gs() {
  _has_bits_[0] &= ~0x00000200u;
}
void CMsgGameServerData::clear_steam_id_gs() {
  steam_id_gs_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id_gs();
}
::google::protobuf::uint64 CMsgGameServerData::steam_id_gs() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.steam_id_gs)
  return steam_id_gs_;
}
void CMsgGameServerData::set_steam_id_gs(::google::protobuf::uint64 value) {
  set_has_steam_id_gs();
  steam_id_gs_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.steam_id_gs)
}

// optional uint32 ip = 2;
bool CMsgGameServerData::has_ip() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CMsgGameServerData::set_has_ip() {
  _has_bits_[0] |= 0x00000400u;
}
void CMsgGameServerData::clear_has_ip() {
  _has_bits_[0] &= ~0x00000400u;
}
void CMsgGameServerData::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
::google::protobuf::uint32 CMsgGameServerData::ip() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.ip)
  return ip_;
}
void CMsgGameServerData::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.ip)
}

// optional uint32 query_port = 3;
bool CMsgGameServerData::has_query_port() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CMsgGameServerData::set_has_query_port() {
  _has_bits_[0] |= 0x00000800u;
}
void CMsgGameServerData::clear_has_query_port() {
  _has_bits_[0] &= ~0x00000800u;
}
void CMsgGameServerData::clear_query_port() {
  query_port_ = 0u;
  clear_has_query_port();
}
::google::protobuf::uint32 CMsgGameServerData::query_port() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.query_port)
  return query_port_;
}
void CMsgGameServerData::set_query_port(::google::protobuf::uint32 value) {
  set_has_query_port();
  query_port_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.query_port)
}

// optional uint32 game_port = 4;
bool CMsgGameServerData::has_game_port() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CMsgGameServerData::set_has_game_port() {
  _has_bits_[0] |= 0x00001000u;
}
void CMsgGameServerData::clear_has_game_port() {
  _has_bits_[0] &= ~0x00001000u;
}
void CMsgGameServerData::clear_game_port() {
  game_port_ = 0u;
  clear_has_game_port();
}
::google::protobuf::uint32 CMsgGameServerData::game_port() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.game_port)
  return game_port_;
}
void CMsgGameServerData::set_game_port(::google::protobuf::uint32 value) {
  set_has_game_port();
  game_port_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.game_port)
}

// optional uint32 sourcetv_port = 5;
bool CMsgGameServerData::has_sourcetv_port() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CMsgGameServerData::set_has_sourcetv_port() {
  _has_bits_[0] |= 0x00002000u;
}
void CMsgGameServerData::clear_has_sourcetv_port() {
  _has_bits_[0] &= ~0x00002000u;
}
void CMsgGameServerData::clear_sourcetv_port() {
  sourcetv_port_ = 0u;
  clear_has_sourcetv_port();
}
::google::protobuf::uint32 CMsgGameServerData::sourcetv_port() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.sourcetv_port)
  return sourcetv_port_;
}
void CMsgGameServerData::set_sourcetv_port(::google::protobuf::uint32 value) {
  set_has_sourcetv_port();
  sourcetv_port_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.sourcetv_port)
}

// optional string name = 22;
bool CMsgGameServerData::has_name() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgGameServerData::set_has_name() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgGameServerData::clear_has_name() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgGameServerData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& CMsgGameServerData::name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.name)
  return name_.GetNoArena();
}
void CMsgGameServerData::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.name)
}
#if LANG_CXX11
void CMsgGameServerData::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGameServerData.name)
}
#endif
void CMsgGameServerData::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGameServerData.name)
}
void CMsgGameServerData::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGameServerData.name)
}
::std::string* CMsgGameServerData::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGameServerData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGameServerData::release_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGameServerData.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGameServerData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGameServerData.name)
}

// optional uint32 app_id = 6;
bool CMsgGameServerData::has_app_id() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void CMsgGameServerData::set_has_app_id() {
  _has_bits_[0] |= 0x00004000u;
}
void CMsgGameServerData::clear_has_app_id() {
  _has_bits_[0] &= ~0x00004000u;
}
void CMsgGameServerData::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgGameServerData::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.app_id)
  return app_id_;
}
void CMsgGameServerData::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.app_id)
}

// optional string gamedir = 7;
bool CMsgGameServerData::has_gamedir() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGameServerData::set_has_gamedir() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGameServerData::clear_has_gamedir() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGameServerData::clear_gamedir() {
  gamedir_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gamedir();
}
const ::std::string& CMsgGameServerData::gamedir() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.gamedir)
  return gamedir_.GetNoArena();
}
void CMsgGameServerData::set_gamedir(const ::std::string& value) {
  set_has_gamedir();
  gamedir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.gamedir)
}
#if LANG_CXX11
void CMsgGameServerData::set_gamedir(::std::string&& value) {
  set_has_gamedir();
  gamedir_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGameServerData.gamedir)
}
#endif
void CMsgGameServerData::set_gamedir(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gamedir();
  gamedir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGameServerData.gamedir)
}
void CMsgGameServerData::set_gamedir(const char* value, size_t size) {
  set_has_gamedir();
  gamedir_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGameServerData.gamedir)
}
::std::string* CMsgGameServerData::mutable_gamedir() {
  set_has_gamedir();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGameServerData.gamedir)
  return gamedir_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGameServerData::release_gamedir() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGameServerData.gamedir)
  clear_has_gamedir();
  return gamedir_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGameServerData::set_allocated_gamedir(::std::string* gamedir) {
  if (gamedir != NULL) {
    set_has_gamedir();
  } else {
    clear_has_gamedir();
  }
  gamedir_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gamedir);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGameServerData.gamedir)
}

// optional string version = 8;
bool CMsgGameServerData::has_version() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGameServerData::set_has_version() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGameServerData::clear_has_version() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGameServerData::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_version();
}
const ::std::string& CMsgGameServerData::version() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.version)
  return version_.GetNoArena();
}
void CMsgGameServerData::set_version(const ::std::string& value) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.version)
}
#if LANG_CXX11
void CMsgGameServerData::set_version(::std::string&& value) {
  set_has_version();
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGameServerData.version)
}
#endif
void CMsgGameServerData::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGameServerData.version)
}
void CMsgGameServerData::set_version(const char* value, size_t size) {
  set_has_version();
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGameServerData.version)
}
::std::string* CMsgGameServerData::mutable_version() {
  set_has_version();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGameServerData.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGameServerData::release_version() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGameServerData.version)
  clear_has_version();
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGameServerData::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    set_has_version();
  } else {
    clear_has_version();
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGameServerData.version)
}

// optional string product = 9;
bool CMsgGameServerData::has_product() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGameServerData::set_has_product() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGameServerData::clear_has_product() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGameServerData::clear_product() {
  product_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_product();
}
const ::std::string& CMsgGameServerData::product() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.product)
  return product_.GetNoArena();
}
void CMsgGameServerData::set_product(const ::std::string& value) {
  set_has_product();
  product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.product)
}
#if LANG_CXX11
void CMsgGameServerData::set_product(::std::string&& value) {
  set_has_product();
  product_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGameServerData.product)
}
#endif
void CMsgGameServerData::set_product(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_product();
  product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGameServerData.product)
}
void CMsgGameServerData::set_product(const char* value, size_t size) {
  set_has_product();
  product_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGameServerData.product)
}
::std::string* CMsgGameServerData::mutable_product() {
  set_has_product();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGameServerData.product)
  return product_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGameServerData::release_product() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGameServerData.product)
  clear_has_product();
  return product_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGameServerData::set_allocated_product(::std::string* product) {
  if (product != NULL) {
    set_has_product();
  } else {
    clear_has_product();
  }
  product_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), product);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGameServerData.product)
}

// optional string region = 10;
bool CMsgGameServerData::has_region() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgGameServerData::set_has_region() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgGameServerData::clear_has_region() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgGameServerData::clear_region() {
  region_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_region();
}
const ::std::string& CMsgGameServerData::region() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.region)
  return region_.GetNoArena();
}
void CMsgGameServerData::set_region(const ::std::string& value) {
  set_has_region();
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.region)
}
#if LANG_CXX11
void CMsgGameServerData::set_region(::std::string&& value) {
  set_has_region();
  region_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGameServerData.region)
}
#endif
void CMsgGameServerData::set_region(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_region();
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGameServerData.region)
}
void CMsgGameServerData::set_region(const char* value, size_t size) {
  set_has_region();
  region_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGameServerData.region)
}
::std::string* CMsgGameServerData::mutable_region() {
  set_has_region();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGameServerData.region)
  return region_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGameServerData::release_region() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGameServerData.region)
  clear_has_region();
  return region_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGameServerData::set_allocated_region(::std::string* region) {
  if (region != NULL) {
    set_has_region();
  } else {
    clear_has_region();
  }
  region_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), region);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGameServerData.region)
}

// repeated .proto.steam.CMsgGameServerData.Player players = 11;
int CMsgGameServerData::players_size() const {
  return players_.size();
}
void CMsgGameServerData::clear_players() {
  players_.Clear();
}
const ::proto::steam::CMsgGameServerData_Player& CMsgGameServerData::players(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.players)
  return players_.Get(index);
}
::proto::steam::CMsgGameServerData_Player* CMsgGameServerData::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGameServerData.players)
  return players_.Mutable(index);
}
::proto::steam::CMsgGameServerData_Player* CMsgGameServerData::add_players() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgGameServerData.players)
  return players_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgGameServerData_Player >*
CMsgGameServerData::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgGameServerData.players)
  return &players_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgGameServerData_Player >&
CMsgGameServerData::players() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgGameServerData.players)
  return players_;
}

// optional uint32 max_players = 12;
bool CMsgGameServerData::has_max_players() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void CMsgGameServerData::set_has_max_players() {
  _has_bits_[0] |= 0x00008000u;
}
void CMsgGameServerData::clear_has_max_players() {
  _has_bits_[0] &= ~0x00008000u;
}
void CMsgGameServerData::clear_max_players() {
  max_players_ = 0u;
  clear_has_max_players();
}
::google::protobuf::uint32 CMsgGameServerData::max_players() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.max_players)
  return max_players_;
}
void CMsgGameServerData::set_max_players(::google::protobuf::uint32 value) {
  set_has_max_players();
  max_players_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.max_players)
}

// optional uint32 bot_count = 13;
bool CMsgGameServerData::has_bot_count() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void CMsgGameServerData::set_has_bot_count() {
  _has_bits_[0] |= 0x00010000u;
}
void CMsgGameServerData::clear_has_bot_count() {
  _has_bits_[0] &= ~0x00010000u;
}
void CMsgGameServerData::clear_bot_count() {
  bot_count_ = 0u;
  clear_has_bot_count();
}
::google::protobuf::uint32 CMsgGameServerData::bot_count() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.bot_count)
  return bot_count_;
}
void CMsgGameServerData::set_bot_count(::google::protobuf::uint32 value) {
  set_has_bot_count();
  bot_count_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.bot_count)
}

// optional bool password = 14;
bool CMsgGameServerData::has_password() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void CMsgGameServerData::set_has_password() {
  _has_bits_[0] |= 0x00020000u;
}
void CMsgGameServerData::clear_has_password() {
  _has_bits_[0] &= ~0x00020000u;
}
void CMsgGameServerData::clear_password() {
  password_ = false;
  clear_has_password();
}
bool CMsgGameServerData::password() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.password)
  return password_;
}
void CMsgGameServerData::set_password(bool value) {
  set_has_password();
  password_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.password)
}

// optional bool secure = 15;
bool CMsgGameServerData::has_secure() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void CMsgGameServerData::set_has_secure() {
  _has_bits_[0] |= 0x00040000u;
}
void CMsgGameServerData::clear_has_secure() {
  _has_bits_[0] &= ~0x00040000u;
}
void CMsgGameServerData::clear_secure() {
  secure_ = false;
  clear_has_secure();
}
bool CMsgGameServerData::secure() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.secure)
  return secure_;
}
void CMsgGameServerData::set_secure(bool value) {
  set_has_secure();
  secure_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.secure)
}

// optional bool dedicated = 16;
bool CMsgGameServerData::has_dedicated() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void CMsgGameServerData::set_has_dedicated() {
  _has_bits_[0] |= 0x00080000u;
}
void CMsgGameServerData::clear_has_dedicated() {
  _has_bits_[0] &= ~0x00080000u;
}
void CMsgGameServerData::clear_dedicated() {
  dedicated_ = false;
  clear_has_dedicated();
}
bool CMsgGameServerData::dedicated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.dedicated)
  return dedicated_;
}
void CMsgGameServerData::set_dedicated(bool value) {
  set_has_dedicated();
  dedicated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.dedicated)
}

// optional string os = 17;
bool CMsgGameServerData::has_os() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgGameServerData::set_has_os() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgGameServerData::clear_has_os() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgGameServerData::clear_os() {
  os_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os();
}
const ::std::string& CMsgGameServerData::os() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.os)
  return os_.GetNoArena();
}
void CMsgGameServerData::set_os(const ::std::string& value) {
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.os)
}
#if LANG_CXX11
void CMsgGameServerData::set_os(::std::string&& value) {
  set_has_os();
  os_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGameServerData.os)
}
#endif
void CMsgGameServerData::set_os(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGameServerData.os)
}
void CMsgGameServerData::set_os(const char* value, size_t size) {
  set_has_os();
  os_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGameServerData.os)
}
::std::string* CMsgGameServerData::mutable_os() {
  set_has_os();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGameServerData.os)
  return os_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGameServerData::release_os() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGameServerData.os)
  clear_has_os();
  return os_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGameServerData::set_allocated_os(::std::string* os) {
  if (os != NULL) {
    set_has_os();
  } else {
    clear_has_os();
  }
  os_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGameServerData.os)
}

// optional string game_data = 18;
bool CMsgGameServerData::has_game_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgGameServerData::set_has_game_data() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgGameServerData::clear_has_game_data() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgGameServerData::clear_game_data() {
  game_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_data();
}
const ::std::string& CMsgGameServerData::game_data() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.game_data)
  return game_data_.GetNoArena();
}
void CMsgGameServerData::set_game_data(const ::std::string& value) {
  set_has_game_data();
  game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.game_data)
}
#if LANG_CXX11
void CMsgGameServerData::set_game_data(::std::string&& value) {
  set_has_game_data();
  game_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGameServerData.game_data)
}
#endif
void CMsgGameServerData::set_game_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_data();
  game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGameServerData.game_data)
}
void CMsgGameServerData::set_game_data(const char* value, size_t size) {
  set_has_game_data();
  game_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGameServerData.game_data)
}
::std::string* CMsgGameServerData::mutable_game_data() {
  set_has_game_data();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGameServerData.game_data)
  return game_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGameServerData::release_game_data() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGameServerData.game_data)
  clear_has_game_data();
  return game_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGameServerData::set_allocated_game_data(::std::string* game_data) {
  if (game_data != NULL) {
    set_has_game_data();
  } else {
    clear_has_game_data();
  }
  game_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_data);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGameServerData.game_data)
}

// optional uint32 game_data_version = 19;
bool CMsgGameServerData::has_game_data_version() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void CMsgGameServerData::set_has_game_data_version() {
  _has_bits_[0] |= 0x00100000u;
}
void CMsgGameServerData::clear_has_game_data_version() {
  _has_bits_[0] &= ~0x00100000u;
}
void CMsgGameServerData::clear_game_data_version() {
  game_data_version_ = 0u;
  clear_has_game_data_version();
}
::google::protobuf::uint32 CMsgGameServerData::game_data_version() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.game_data_version)
  return game_data_version_;
}
void CMsgGameServerData::set_game_data_version(::google::protobuf::uint32 value) {
  set_has_game_data_version();
  game_data_version_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.game_data_version)
}

// optional string game_type = 20;
bool CMsgGameServerData::has_game_type() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgGameServerData::set_has_game_type() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgGameServerData::clear_has_game_type() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgGameServerData::clear_game_type() {
  game_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_type();
}
const ::std::string& CMsgGameServerData::game_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.game_type)
  return game_type_.GetNoArena();
}
void CMsgGameServerData::set_game_type(const ::std::string& value) {
  set_has_game_type();
  game_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.game_type)
}
#if LANG_CXX11
void CMsgGameServerData::set_game_type(::std::string&& value) {
  set_has_game_type();
  game_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGameServerData.game_type)
}
#endif
void CMsgGameServerData::set_game_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_type();
  game_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGameServerData.game_type)
}
void CMsgGameServerData::set_game_type(const char* value, size_t size) {
  set_has_game_type();
  game_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGameServerData.game_type)
}
::std::string* CMsgGameServerData::mutable_game_type() {
  set_has_game_type();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGameServerData.game_type)
  return game_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGameServerData::release_game_type() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGameServerData.game_type)
  clear_has_game_type();
  return game_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGameServerData::set_allocated_game_type(::std::string* game_type) {
  if (game_type != NULL) {
    set_has_game_type();
  } else {
    clear_has_game_type();
  }
  game_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_type);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGameServerData.game_type)
}

// optional string map = 21;
bool CMsgGameServerData::has_map() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgGameServerData::set_has_map() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgGameServerData::clear_has_map() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgGameServerData::clear_map() {
  map_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_map();
}
const ::std::string& CMsgGameServerData::map() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerData.map)
  return map_.GetNoArena();
}
void CMsgGameServerData::set_map(const ::std::string& value) {
  set_has_map();
  map_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerData.map)
}
#if LANG_CXX11
void CMsgGameServerData::set_map(::std::string&& value) {
  set_has_map();
  map_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGameServerData.map)
}
#endif
void CMsgGameServerData::set_map(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_map();
  map_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGameServerData.map)
}
void CMsgGameServerData::set_map(const char* value, size_t size) {
  set_has_map();
  map_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGameServerData.map)
}
::std::string* CMsgGameServerData::mutable_map() {
  set_has_map();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGameServerData.map)
  return map_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGameServerData::release_map() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGameServerData.map)
  clear_has_map();
  return map_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGameServerData::set_allocated_map(::std::string* map) {
  if (map != NULL) {
    set_has_map();
  } else {
    clear_has_map();
  }
  map_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), map);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGameServerData.map)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerRemove::kSteamIdFieldNumber;
const int CMsgGameServerRemove::kIpFieldNumber;
const int CMsgGameServerRemove::kQueryPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerRemove::CMsgGameServerRemove()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGameServerRemove)
}
CMsgGameServerRemove::CMsgGameServerRemove(const CMsgGameServerRemove& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_, &from.steam_id_,
    reinterpret_cast<char*>(&query_port_) -
    reinterpret_cast<char*>(&steam_id_) + sizeof(query_port_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGameServerRemove)
}

void CMsgGameServerRemove::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steam_id_, 0, reinterpret_cast<char*>(&query_port_) -
    reinterpret_cast<char*>(&steam_id_) + sizeof(query_port_));
}

CMsgGameServerRemove::~CMsgGameServerRemove() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGameServerRemove)
  SharedDtor();
}

void CMsgGameServerRemove::SharedDtor() {
}

void CMsgGameServerRemove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGameServerRemove::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameServerRemove& CMsgGameServerRemove::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGameServerRemove* CMsgGameServerRemove::New(::google::protobuf::Arena* arena) const {
  CMsgGameServerRemove* n = new CMsgGameServerRemove;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGameServerRemove::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGameServerRemove)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&steam_id_, 0, reinterpret_cast<char*>(&query_port_) -
      reinterpret_cast<char*>(&steam_id_) + sizeof(query_port_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameServerRemove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGameServerRemove)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 query_port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_query_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &query_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGameServerRemove)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGameServerRemove)
  return false;
#undef DO_
}

void CMsgGameServerRemove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGameServerRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  // optional uint32 ip = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ip(), output);
  }

  // optional uint32 query_port = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->query_port(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGameServerRemove)
}

::google::protobuf::uint8* CMsgGameServerRemove::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGameServerRemove)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  // optional uint32 ip = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ip(), target);
  }

  // optional uint32 query_port = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->query_port(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGameServerRemove)
  return target;
}

size_t CMsgGameServerRemove::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGameServerRemove)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed64 steam_id = 1;
    if (has_steam_id()) {
      total_size += 1 + 8;
    }

    // optional uint32 ip = 2;
    if (has_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ip());
    }

    // optional uint32 query_port = 3;
    if (has_query_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->query_port());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGameServerRemove::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGameServerRemove)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerRemove* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameServerRemove>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGameServerRemove)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGameServerRemove)
    MergeFrom(*source);
  }
}

void CMsgGameServerRemove::MergeFrom(const CMsgGameServerRemove& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGameServerRemove)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_ = from.steam_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      ip_ = from.ip_;
    }
    if (cached_has_bits & 0x00000004u) {
      query_port_ = from.query_port_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerRemove::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGameServerRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerRemove::CopyFrom(const CMsgGameServerRemove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGameServerRemove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerRemove::IsInitialized() const {
  return true;
}

void CMsgGameServerRemove::Swap(CMsgGameServerRemove* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerRemove::InternalSwap(CMsgGameServerRemove* other) {
  std::swap(steam_id_, other->steam_id_);
  std::swap(ip_, other->ip_);
  std::swap(query_port_, other->query_port_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGameServerRemove::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGameServerRemove

// optional fixed64 steam_id = 1;
bool CMsgGameServerRemove::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGameServerRemove::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGameServerRemove::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGameServerRemove::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
::google::protobuf::uint64 CMsgGameServerRemove::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerRemove.steam_id)
  return steam_id_;
}
void CMsgGameServerRemove::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerRemove.steam_id)
}

// optional uint32 ip = 2;
bool CMsgGameServerRemove::has_ip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGameServerRemove::set_has_ip() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGameServerRemove::clear_has_ip() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGameServerRemove::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
::google::protobuf::uint32 CMsgGameServerRemove::ip() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerRemove.ip)
  return ip_;
}
void CMsgGameServerRemove::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerRemove.ip)
}

// optional uint32 query_port = 3;
bool CMsgGameServerRemove::has_query_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGameServerRemove::set_has_query_port() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGameServerRemove::clear_has_query_port() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGameServerRemove::clear_query_port() {
  query_port_ = 0u;
  clear_has_query_port();
}
::google::protobuf::uint32 CMsgGameServerRemove::query_port() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerRemove.query_port)
  return query_port_;
}
void CMsgGameServerRemove::set_query_port(::google::protobuf::uint32 value) {
  set_has_query_port();
  query_port_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerRemove.query_port)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGMSServerQuery::kAppIdFieldNumber;
const int CMsgClientGMSServerQuery::kGeoLocationIpFieldNumber;
const int CMsgClientGMSServerQuery::kRegionCodeFieldNumber;
const int CMsgClientGMSServerQuery::kFilterTextFieldNumber;
const int CMsgClientGMSServerQuery::kMaxServersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGMSServerQuery::CMsgClientGMSServerQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGMSServerQuery)
}
CMsgClientGMSServerQuery::CMsgClientGMSServerQuery(const CMsgClientGMSServerQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filter_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_filter_text()) {
    filter_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_text_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    reinterpret_cast<char*>(&max_servers_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(max_servers_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGMSServerQuery)
}

void CMsgClientGMSServerQuery::SharedCtor() {
  _cached_size_ = 0;
  filter_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&max_servers_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(max_servers_));
}

CMsgClientGMSServerQuery::~CMsgClientGMSServerQuery() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGMSServerQuery)
  SharedDtor();
}

void CMsgClientGMSServerQuery::SharedDtor() {
  filter_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGMSServerQuery::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientGMSServerQuery::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGMSServerQuery& CMsgClientGMSServerQuery::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientGMSServerQuery* CMsgClientGMSServerQuery::New(::google::protobuf::Arena* arena) const {
  CMsgClientGMSServerQuery* n = new CMsgClientGMSServerQuery;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientGMSServerQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGMSServerQuery)
  if (has_filter_text()) {
    GOOGLE_DCHECK(!filter_text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*filter_text_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 30u) {
    ::memset(&app_id_, 0, reinterpret_cast<char*>(&max_servers_) -
      reinterpret_cast<char*>(&app_id_) + sizeof(max_servers_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGMSServerQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGMSServerQuery)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 geo_location_ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_geo_location_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &geo_location_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 region_code = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_region_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &region_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string filter_text = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filter_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filter_text().data(), this->filter_text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientGMSServerQuery.filter_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_servers = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_max_servers();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_servers_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGMSServerQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGMSServerQuery)
  return false;
#undef DO_
}

void CMsgClientGMSServerQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGMSServerQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 geo_location_ip = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->geo_location_ip(), output);
  }

  // optional uint32 region_code = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->region_code(), output);
  }

  // optional string filter_text = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filter_text().data(), this->filter_text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGMSServerQuery.filter_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->filter_text(), output);
  }

  // optional uint32 max_servers = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->max_servers(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGMSServerQuery)
}

::google::protobuf::uint8* CMsgClientGMSServerQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGMSServerQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 geo_location_ip = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->geo_location_ip(), target);
  }

  // optional uint32 region_code = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->region_code(), target);
  }

  // optional string filter_text = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filter_text().data(), this->filter_text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGMSServerQuery.filter_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->filter_text(), target);
  }

  // optional uint32 max_servers = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->max_servers(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGMSServerQuery)
  return target;
}

size_t CMsgClientGMSServerQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGMSServerQuery)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string filter_text = 4;
    if (has_filter_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filter_text());
    }

    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 geo_location_ip = 2;
    if (has_geo_location_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->geo_location_ip());
    }

    // optional uint32 region_code = 3;
    if (has_region_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->region_code());
    }

    // optional uint32 max_servers = 5;
    if (has_max_servers()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_servers());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientGMSServerQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGMSServerQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGMSServerQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGMSServerQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGMSServerQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGMSServerQuery)
    MergeFrom(*source);
  }
}

void CMsgClientGMSServerQuery::MergeFrom(const CMsgClientGMSServerQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGMSServerQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_filter_text();
      filter_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.filter_text_);
    }
    if (cached_has_bits & 0x00000002u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      geo_location_ip_ = from.geo_location_ip_;
    }
    if (cached_has_bits & 0x00000008u) {
      region_code_ = from.region_code_;
    }
    if (cached_has_bits & 0x00000010u) {
      max_servers_ = from.max_servers_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGMSServerQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGMSServerQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGMSServerQuery::CopyFrom(const CMsgClientGMSServerQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGMSServerQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGMSServerQuery::IsInitialized() const {
  return true;
}

void CMsgClientGMSServerQuery::Swap(CMsgClientGMSServerQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGMSServerQuery::InternalSwap(CMsgClientGMSServerQuery* other) {
  filter_text_.Swap(&other->filter_text_);
  std::swap(app_id_, other->app_id_);
  std::swap(geo_location_ip_, other->geo_location_ip_);
  std::swap(region_code_, other->region_code_);
  std::swap(max_servers_, other->max_servers_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientGMSServerQuery::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientGMSServerQuery

// optional uint32 app_id = 1;
bool CMsgClientGMSServerQuery::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientGMSServerQuery::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientGMSServerQuery::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientGMSServerQuery::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientGMSServerQuery::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGMSServerQuery.app_id)
  return app_id_;
}
void CMsgClientGMSServerQuery::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGMSServerQuery.app_id)
}

// optional uint32 geo_location_ip = 2;
bool CMsgClientGMSServerQuery::has_geo_location_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientGMSServerQuery::set_has_geo_location_ip() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientGMSServerQuery::clear_has_geo_location_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientGMSServerQuery::clear_geo_location_ip() {
  geo_location_ip_ = 0u;
  clear_has_geo_location_ip();
}
::google::protobuf::uint32 CMsgClientGMSServerQuery::geo_location_ip() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGMSServerQuery.geo_location_ip)
  return geo_location_ip_;
}
void CMsgClientGMSServerQuery::set_geo_location_ip(::google::protobuf::uint32 value) {
  set_has_geo_location_ip();
  geo_location_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGMSServerQuery.geo_location_ip)
}

// optional uint32 region_code = 3;
bool CMsgClientGMSServerQuery::has_region_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientGMSServerQuery::set_has_region_code() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientGMSServerQuery::clear_has_region_code() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientGMSServerQuery::clear_region_code() {
  region_code_ = 0u;
  clear_has_region_code();
}
::google::protobuf::uint32 CMsgClientGMSServerQuery::region_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGMSServerQuery.region_code)
  return region_code_;
}
void CMsgClientGMSServerQuery::set_region_code(::google::protobuf::uint32 value) {
  set_has_region_code();
  region_code_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGMSServerQuery.region_code)
}

// optional string filter_text = 4;
bool CMsgClientGMSServerQuery::has_filter_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientGMSServerQuery::set_has_filter_text() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientGMSServerQuery::clear_has_filter_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientGMSServerQuery::clear_filter_text() {
  filter_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filter_text();
}
const ::std::string& CMsgClientGMSServerQuery::filter_text() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGMSServerQuery.filter_text)
  return filter_text_.GetNoArena();
}
void CMsgClientGMSServerQuery::set_filter_text(const ::std::string& value) {
  set_has_filter_text();
  filter_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGMSServerQuery.filter_text)
}
#if LANG_CXX11
void CMsgClientGMSServerQuery::set_filter_text(::std::string&& value) {
  set_has_filter_text();
  filter_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientGMSServerQuery.filter_text)
}
#endif
void CMsgClientGMSServerQuery::set_filter_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filter_text();
  filter_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientGMSServerQuery.filter_text)
}
void CMsgClientGMSServerQuery::set_filter_text(const char* value, size_t size) {
  set_has_filter_text();
  filter_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientGMSServerQuery.filter_text)
}
::std::string* CMsgClientGMSServerQuery::mutable_filter_text() {
  set_has_filter_text();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientGMSServerQuery.filter_text)
  return filter_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientGMSServerQuery::release_filter_text() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientGMSServerQuery.filter_text)
  clear_has_filter_text();
  return filter_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientGMSServerQuery::set_allocated_filter_text(::std::string* filter_text) {
  if (filter_text != NULL) {
    set_has_filter_text();
  } else {
    clear_has_filter_text();
  }
  filter_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filter_text);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientGMSServerQuery.filter_text)
}

// optional uint32 max_servers = 5;
bool CMsgClientGMSServerQuery::has_max_servers() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientGMSServerQuery::set_has_max_servers() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientGMSServerQuery::clear_has_max_servers() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientGMSServerQuery::clear_max_servers() {
  max_servers_ = 0u;
  clear_has_max_servers();
}
::google::protobuf::uint32 CMsgClientGMSServerQuery::max_servers() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGMSServerQuery.max_servers)
  return max_servers_;
}
void CMsgClientGMSServerQuery::set_max_servers(::google::protobuf::uint32 value) {
  set_has_max_servers();
  max_servers_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGMSServerQuery.max_servers)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGMSClientServerQueryResponse_Server::kServerIpFieldNumber;
const int CMsgGMSClientServerQueryResponse_Server::kServerPortFieldNumber;
const int CMsgGMSClientServerQueryResponse_Server::kAuthPlayersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGMSClientServerQueryResponse_Server::CMsgGMSClientServerQueryResponse_Server()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGMSClientServerQueryResponse.Server)
}
CMsgGMSClientServerQueryResponse_Server::CMsgGMSClientServerQueryResponse_Server(const CMsgGMSClientServerQueryResponse_Server& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&server_ip_, &from.server_ip_,
    reinterpret_cast<char*>(&auth_players_) -
    reinterpret_cast<char*>(&server_ip_) + sizeof(auth_players_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGMSClientServerQueryResponse.Server)
}

void CMsgGMSClientServerQueryResponse_Server::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&server_ip_, 0, reinterpret_cast<char*>(&auth_players_) -
    reinterpret_cast<char*>(&server_ip_) + sizeof(auth_players_));
}

CMsgGMSClientServerQueryResponse_Server::~CMsgGMSClientServerQueryResponse_Server() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  SharedDtor();
}

void CMsgGMSClientServerQueryResponse_Server::SharedDtor() {
}

void CMsgGMSClientServerQueryResponse_Server::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGMSClientServerQueryResponse_Server::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGMSClientServerQueryResponse_Server& CMsgGMSClientServerQueryResponse_Server::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGMSClientServerQueryResponse_Server* CMsgGMSClientServerQueryResponse_Server::New(::google::protobuf::Arena* arena) const {
  CMsgGMSClientServerQueryResponse_Server* n = new CMsgGMSClientServerQueryResponse_Server;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGMSClientServerQueryResponse_Server::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&server_ip_, 0, reinterpret_cast<char*>(&auth_players_) -
      reinterpret_cast<char*>(&server_ip_) + sizeof(auth_players_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGMSClientServerQueryResponse_Server::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 server_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_server_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 server_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_server_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &server_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 auth_players = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_auth_players();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &auth_players_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  return false;
#undef DO_
}

void CMsgGMSClientServerQueryResponse_Server::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 server_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->server_ip(), output);
  }

  // optional uint32 server_port = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->server_port(), output);
  }

  // optional uint32 auth_players = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->auth_players(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGMSClientServerQueryResponse.Server)
}

::google::protobuf::uint8* CMsgGMSClientServerQueryResponse_Server::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 server_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->server_ip(), target);
  }

  // optional uint32 server_port = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->server_port(), target);
  }

  // optional uint32 auth_players = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->auth_players(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  return target;
}

size_t CMsgGMSClientServerQueryResponse_Server::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 server_ip = 1;
    if (has_server_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_ip());
    }

    // optional uint32 server_port = 2;
    if (has_server_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->server_port());
    }

    // optional uint32 auth_players = 3;
    if (has_auth_players()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->auth_players());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGMSClientServerQueryResponse_Server::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGMSClientServerQueryResponse_Server* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGMSClientServerQueryResponse_Server>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGMSClientServerQueryResponse.Server)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGMSClientServerQueryResponse.Server)
    MergeFrom(*source);
  }
}

void CMsgGMSClientServerQueryResponse_Server::MergeFrom(const CMsgGMSClientServerQueryResponse_Server& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      server_ip_ = from.server_ip_;
    }
    if (cached_has_bits & 0x00000002u) {
      server_port_ = from.server_port_;
    }
    if (cached_has_bits & 0x00000004u) {
      auth_players_ = from.auth_players_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGMSClientServerQueryResponse_Server::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGMSClientServerQueryResponse_Server::CopyFrom(const CMsgGMSClientServerQueryResponse_Server& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGMSClientServerQueryResponse.Server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGMSClientServerQueryResponse_Server::IsInitialized() const {
  return true;
}

void CMsgGMSClientServerQueryResponse_Server::Swap(CMsgGMSClientServerQueryResponse_Server* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGMSClientServerQueryResponse_Server::InternalSwap(CMsgGMSClientServerQueryResponse_Server* other) {
  std::swap(server_ip_, other->server_ip_);
  std::swap(server_port_, other->server_port_);
  std::swap(auth_players_, other->auth_players_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGMSClientServerQueryResponse_Server::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGMSClientServerQueryResponse_Server

// optional uint32 server_ip = 1;
bool CMsgGMSClientServerQueryResponse_Server::has_server_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGMSClientServerQueryResponse_Server::set_has_server_ip() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGMSClientServerQueryResponse_Server::clear_has_server_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGMSClientServerQueryResponse_Server::clear_server_ip() {
  server_ip_ = 0u;
  clear_has_server_ip();
}
::google::protobuf::uint32 CMsgGMSClientServerQueryResponse_Server::server_ip() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGMSClientServerQueryResponse.Server.server_ip)
  return server_ip_;
}
void CMsgGMSClientServerQueryResponse_Server::set_server_ip(::google::protobuf::uint32 value) {
  set_has_server_ip();
  server_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGMSClientServerQueryResponse.Server.server_ip)
}

// optional uint32 server_port = 2;
bool CMsgGMSClientServerQueryResponse_Server::has_server_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGMSClientServerQueryResponse_Server::set_has_server_port() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGMSClientServerQueryResponse_Server::clear_has_server_port() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGMSClientServerQueryResponse_Server::clear_server_port() {
  server_port_ = 0u;
  clear_has_server_port();
}
::google::protobuf::uint32 CMsgGMSClientServerQueryResponse_Server::server_port() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGMSClientServerQueryResponse.Server.server_port)
  return server_port_;
}
void CMsgGMSClientServerQueryResponse_Server::set_server_port(::google::protobuf::uint32 value) {
  set_has_server_port();
  server_port_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGMSClientServerQueryResponse.Server.server_port)
}

// optional uint32 auth_players = 3;
bool CMsgGMSClientServerQueryResponse_Server::has_auth_players() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGMSClientServerQueryResponse_Server::set_has_auth_players() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGMSClientServerQueryResponse_Server::clear_has_auth_players() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGMSClientServerQueryResponse_Server::clear_auth_players() {
  auth_players_ = 0u;
  clear_has_auth_players();
}
::google::protobuf::uint32 CMsgGMSClientServerQueryResponse_Server::auth_players() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGMSClientServerQueryResponse.Server.auth_players)
  return auth_players_;
}
void CMsgGMSClientServerQueryResponse_Server::set_auth_players(::google::protobuf::uint32 value) {
  set_has_auth_players();
  auth_players_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGMSClientServerQueryResponse.Server.auth_players)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGMSClientServerQueryResponse::kServersFieldNumber;
const int CMsgGMSClientServerQueryResponse::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGMSClientServerQueryResponse::CMsgGMSClientServerQueryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGMSClientServerQueryResponse)
}
CMsgGMSClientServerQueryResponse::CMsgGMSClientServerQueryResponse(const CMsgGMSClientServerQueryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      servers_(from.servers_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error()) {
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGMSClientServerQueryResponse)
}

void CMsgGMSClientServerQueryResponse::SharedCtor() {
  _cached_size_ = 0;
  error_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgGMSClientServerQueryResponse::~CMsgGMSClientServerQueryResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGMSClientServerQueryResponse)
  SharedDtor();
}

void CMsgGMSClientServerQueryResponse::SharedDtor() {
  error_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGMSClientServerQueryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGMSClientServerQueryResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGMSClientServerQueryResponse& CMsgGMSClientServerQueryResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGMSClientServerQueryResponse* CMsgGMSClientServerQueryResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGMSClientServerQueryResponse* n = new CMsgGMSClientServerQueryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGMSClientServerQueryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGMSClientServerQueryResponse)
  servers_.Clear();
  if (has_error()) {
    GOOGLE_DCHECK(!error_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*error_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGMSClientServerQueryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGMSClientServerQueryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.steam.CMsgGMSClientServerQueryResponse.Server servers = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_servers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error().data(), this->error().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGMSClientServerQueryResponse.error");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGMSClientServerQueryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGMSClientServerQueryResponse)
  return false;
#undef DO_
}

void CMsgGMSClientServerQueryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGMSClientServerQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgGMSClientServerQueryResponse.Server servers = 1;
  for (unsigned int i = 0, n = this->servers_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->servers(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGMSClientServerQueryResponse.error");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGMSClientServerQueryResponse)
}

::google::protobuf::uint8* CMsgGMSClientServerQueryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGMSClientServerQueryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgGMSClientServerQueryResponse.Server servers = 1;
  for (unsigned int i = 0, n = this->servers_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->servers(i), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional string error = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error().data(), this->error().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGMSClientServerQueryResponse.error");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGMSClientServerQueryResponse)
  return target;
}

size_t CMsgGMSClientServerQueryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGMSClientServerQueryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgGMSClientServerQueryResponse.Server servers = 1;
  {
    unsigned int count = this->servers_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->servers(i));
    }
  }

  // optional string error = 2;
  if (has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->error());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGMSClientServerQueryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGMSClientServerQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGMSClientServerQueryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGMSClientServerQueryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGMSClientServerQueryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGMSClientServerQueryResponse)
    MergeFrom(*source);
  }
}

void CMsgGMSClientServerQueryResponse::MergeFrom(const CMsgGMSClientServerQueryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGMSClientServerQueryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  servers_.MergeFrom(from.servers_);
  if (from.has_error()) {
    set_has_error();
    error_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_);
  }
}

void CMsgGMSClientServerQueryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGMSClientServerQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGMSClientServerQueryResponse::CopyFrom(const CMsgGMSClientServerQueryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGMSClientServerQueryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGMSClientServerQueryResponse::IsInitialized() const {
  return true;
}

void CMsgGMSClientServerQueryResponse::Swap(CMsgGMSClientServerQueryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGMSClientServerQueryResponse::InternalSwap(CMsgGMSClientServerQueryResponse* other) {
  servers_.InternalSwap(&other->servers_);
  error_.Swap(&other->error_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGMSClientServerQueryResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGMSClientServerQueryResponse

// repeated .proto.steam.CMsgGMSClientServerQueryResponse.Server servers = 1;
int CMsgGMSClientServerQueryResponse::servers_size() const {
  return servers_.size();
}
void CMsgGMSClientServerQueryResponse::clear_servers() {
  servers_.Clear();
}
const ::proto::steam::CMsgGMSClientServerQueryResponse_Server& CMsgGMSClientServerQueryResponse::servers(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGMSClientServerQueryResponse.servers)
  return servers_.Get(index);
}
::proto::steam::CMsgGMSClientServerQueryResponse_Server* CMsgGMSClientServerQueryResponse::mutable_servers(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGMSClientServerQueryResponse.servers)
  return servers_.Mutable(index);
}
::proto::steam::CMsgGMSClientServerQueryResponse_Server* CMsgGMSClientServerQueryResponse::add_servers() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgGMSClientServerQueryResponse.servers)
  return servers_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgGMSClientServerQueryResponse_Server >*
CMsgGMSClientServerQueryResponse::mutable_servers() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgGMSClientServerQueryResponse.servers)
  return &servers_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgGMSClientServerQueryResponse_Server >&
CMsgGMSClientServerQueryResponse::servers() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgGMSClientServerQueryResponse.servers)
  return servers_;
}

// optional string error = 2;
bool CMsgGMSClientServerQueryResponse::has_error() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGMSClientServerQueryResponse::set_has_error() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGMSClientServerQueryResponse::clear_has_error() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGMSClientServerQueryResponse::clear_error() {
  error_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error();
}
const ::std::string& CMsgGMSClientServerQueryResponse::error() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGMSClientServerQueryResponse.error)
  return error_.GetNoArena();
}
void CMsgGMSClientServerQueryResponse::set_error(const ::std::string& value) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGMSClientServerQueryResponse.error)
}
#if LANG_CXX11
void CMsgGMSClientServerQueryResponse::set_error(::std::string&& value) {
  set_has_error();
  error_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGMSClientServerQueryResponse.error)
}
#endif
void CMsgGMSClientServerQueryResponse::set_error(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGMSClientServerQueryResponse.error)
}
void CMsgGMSClientServerQueryResponse::set_error(const char* value, size_t size) {
  set_has_error();
  error_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGMSClientServerQueryResponse.error)
}
::std::string* CMsgGMSClientServerQueryResponse::mutable_error() {
  set_has_error();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGMSClientServerQueryResponse.error)
  return error_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGMSClientServerQueryResponse::release_error() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGMSClientServerQueryResponse.error)
  clear_has_error();
  return error_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGMSClientServerQueryResponse::set_allocated_error(::std::string* error) {
  if (error != NULL) {
    set_has_error();
  } else {
    clear_has_error();
  }
  error_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGMSClientServerQueryResponse.error)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerOutOfDate::kSteamIdGsFieldNumber;
const int CMsgGameServerOutOfDate::kRejectFieldNumber;
const int CMsgGameServerOutOfDate::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerOutOfDate::CMsgGameServerOutOfDate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGameServerOutOfDate)
}
CMsgGameServerOutOfDate::CMsgGameServerOutOfDate(const CMsgGameServerOutOfDate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&steam_id_gs_, &from.steam_id_gs_,
    reinterpret_cast<char*>(&reject_) -
    reinterpret_cast<char*>(&steam_id_gs_) + sizeof(reject_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGameServerOutOfDate)
}

void CMsgGameServerOutOfDate::SharedCtor() {
  _cached_size_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steam_id_gs_, 0, reinterpret_cast<char*>(&reject_) -
    reinterpret_cast<char*>(&steam_id_gs_) + sizeof(reject_));
}

CMsgGameServerOutOfDate::~CMsgGameServerOutOfDate() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGameServerOutOfDate)
  SharedDtor();
}

void CMsgGameServerOutOfDate::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGameServerOutOfDate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGameServerOutOfDate::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameServerOutOfDate& CMsgGameServerOutOfDate::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGameServerOutOfDate* CMsgGameServerOutOfDate::New(::google::protobuf::Arena* arena) const {
  CMsgGameServerOutOfDate* n = new CMsgGameServerOutOfDate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGameServerOutOfDate::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGameServerOutOfDate)
  if (has_message()) {
    GOOGLE_DCHECK(!message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*message_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&steam_id_gs_, 0, reinterpret_cast<char*>(&reject_) -
      reinterpret_cast<char*>(&steam_id_gs_) + sizeof(reject_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameServerOutOfDate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGameServerOutOfDate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_gs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steam_id_gs();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_gs_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool reject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_reject();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reject_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGameServerOutOfDate.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGameServerOutOfDate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGameServerOutOfDate)
  return false;
#undef DO_
}

void CMsgGameServerOutOfDate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGameServerOutOfDate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_gs = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_gs(), output);
  }

  // optional bool reject = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->reject(), output);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerOutOfDate.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGameServerOutOfDate)
}

::google::protobuf::uint8* CMsgGameServerOutOfDate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGameServerOutOfDate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_gs = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_gs(), target);
  }

  // optional bool reject = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->reject(), target);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGameServerOutOfDate.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGameServerOutOfDate)
  return target;
}

size_t CMsgGameServerOutOfDate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGameServerOutOfDate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional fixed64 steam_id_gs = 1;
    if (has_steam_id_gs()) {
      total_size += 1 + 8;
    }

    // optional bool reject = 2;
    if (has_reject()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGameServerOutOfDate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGameServerOutOfDate)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerOutOfDate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameServerOutOfDate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGameServerOutOfDate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGameServerOutOfDate)
    MergeFrom(*source);
  }
}

void CMsgGameServerOutOfDate::MergeFrom(const CMsgGameServerOutOfDate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGameServerOutOfDate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      steam_id_gs_ = from.steam_id_gs_;
    }
    if (cached_has_bits & 0x00000004u) {
      reject_ = from.reject_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerOutOfDate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGameServerOutOfDate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerOutOfDate::CopyFrom(const CMsgGameServerOutOfDate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGameServerOutOfDate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerOutOfDate::IsInitialized() const {
  return true;
}

void CMsgGameServerOutOfDate::Swap(CMsgGameServerOutOfDate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerOutOfDate::InternalSwap(CMsgGameServerOutOfDate* other) {
  message_.Swap(&other->message_);
  std::swap(steam_id_gs_, other->steam_id_gs_);
  std::swap(reject_, other->reject_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGameServerOutOfDate::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGameServerOutOfDate

// optional fixed64 steam_id_gs = 1;
bool CMsgGameServerOutOfDate::has_steam_id_gs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGameServerOutOfDate::set_has_steam_id_gs() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGameServerOutOfDate::clear_has_steam_id_gs() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGameServerOutOfDate::clear_steam_id_gs() {
  steam_id_gs_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id_gs();
}
::google::protobuf::uint64 CMsgGameServerOutOfDate::steam_id_gs() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerOutOfDate.steam_id_gs)
  return steam_id_gs_;
}
void CMsgGameServerOutOfDate::set_steam_id_gs(::google::protobuf::uint64 value) {
  set_has_steam_id_gs();
  steam_id_gs_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerOutOfDate.steam_id_gs)
}

// optional bool reject = 2;
bool CMsgGameServerOutOfDate::has_reject() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGameServerOutOfDate::set_has_reject() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGameServerOutOfDate::clear_has_reject() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGameServerOutOfDate::clear_reject() {
  reject_ = false;
  clear_has_reject();
}
bool CMsgGameServerOutOfDate::reject() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerOutOfDate.reject)
  return reject_;
}
void CMsgGameServerOutOfDate::set_reject(bool value) {
  set_has_reject();
  reject_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerOutOfDate.reject)
}

// optional string message = 3;
bool CMsgGameServerOutOfDate::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGameServerOutOfDate::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGameServerOutOfDate::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGameServerOutOfDate::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
const ::std::string& CMsgGameServerOutOfDate::message() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerOutOfDate.message)
  return message_.GetNoArena();
}
void CMsgGameServerOutOfDate::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerOutOfDate.message)
}
#if LANG_CXX11
void CMsgGameServerOutOfDate::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGameServerOutOfDate.message)
}
#endif
void CMsgGameServerOutOfDate::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGameServerOutOfDate.message)
}
void CMsgGameServerOutOfDate::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGameServerOutOfDate.message)
}
::std::string* CMsgGameServerOutOfDate::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGameServerOutOfDate.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGameServerOutOfDate::release_message() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGameServerOutOfDate.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGameServerOutOfDate::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGameServerOutOfDate.message)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRedeemGuestPass::kGuestPassIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRedeemGuestPass::CMsgClientRedeemGuestPass()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRedeemGuestPass)
}
CMsgClientRedeemGuestPass::CMsgClientRedeemGuestPass(const CMsgClientRedeemGuestPass& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guest_pass_id_ = from.guest_pass_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRedeemGuestPass)
}

void CMsgClientRedeemGuestPass::SharedCtor() {
  _cached_size_ = 0;
  guest_pass_id_ = GOOGLE_ULONGLONG(0);
}

CMsgClientRedeemGuestPass::~CMsgClientRedeemGuestPass() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRedeemGuestPass)
  SharedDtor();
}

void CMsgClientRedeemGuestPass::SharedDtor() {
}

void CMsgClientRedeemGuestPass::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRedeemGuestPass::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRedeemGuestPass& CMsgClientRedeemGuestPass::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRedeemGuestPass* CMsgClientRedeemGuestPass::New(::google::protobuf::Arena* arena) const {
  CMsgClientRedeemGuestPass* n = new CMsgClientRedeemGuestPass;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRedeemGuestPass::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRedeemGuestPass)
  guest_pass_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRedeemGuestPass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRedeemGuestPass)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 guest_pass_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_guest_pass_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &guest_pass_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRedeemGuestPass)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRedeemGuestPass)
  return false;
#undef DO_
}

void CMsgClientRedeemGuestPass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRedeemGuestPass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 guest_pass_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->guest_pass_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRedeemGuestPass)
}

::google::protobuf::uint8* CMsgClientRedeemGuestPass::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRedeemGuestPass)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 guest_pass_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->guest_pass_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRedeemGuestPass)
  return target;
}

size_t CMsgClientRedeemGuestPass::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRedeemGuestPass)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 guest_pass_id = 1;
  if (has_guest_pass_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRedeemGuestPass::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRedeemGuestPass)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRedeemGuestPass* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRedeemGuestPass>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRedeemGuestPass)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRedeemGuestPass)
    MergeFrom(*source);
  }
}

void CMsgClientRedeemGuestPass::MergeFrom(const CMsgClientRedeemGuestPass& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRedeemGuestPass)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_guest_pass_id()) {
    set_guest_pass_id(from.guest_pass_id());
  }
}

void CMsgClientRedeemGuestPass::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRedeemGuestPass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRedeemGuestPass::CopyFrom(const CMsgClientRedeemGuestPass& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRedeemGuestPass)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRedeemGuestPass::IsInitialized() const {
  return true;
}

void CMsgClientRedeemGuestPass::Swap(CMsgClientRedeemGuestPass* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRedeemGuestPass::InternalSwap(CMsgClientRedeemGuestPass* other) {
  std::swap(guest_pass_id_, other->guest_pass_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRedeemGuestPass::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRedeemGuestPass

// optional fixed64 guest_pass_id = 1;
bool CMsgClientRedeemGuestPass::has_guest_pass_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientRedeemGuestPass::set_has_guest_pass_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientRedeemGuestPass::clear_has_guest_pass_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientRedeemGuestPass::clear_guest_pass_id() {
  guest_pass_id_ = GOOGLE_ULONGLONG(0);
  clear_has_guest_pass_id();
}
::google::protobuf::uint64 CMsgClientRedeemGuestPass::guest_pass_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRedeemGuestPass.guest_pass_id)
  return guest_pass_id_;
}
void CMsgClientRedeemGuestPass::set_guest_pass_id(::google::protobuf::uint64 value) {
  set_has_guest_pass_id();
  guest_pass_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRedeemGuestPass.guest_pass_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRedeemGuestPassResponse::kEresultFieldNumber;
const int CMsgClientRedeemGuestPassResponse::kPackageIdFieldNumber;
const int CMsgClientRedeemGuestPassResponse::kMustOwnAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRedeemGuestPassResponse::CMsgClientRedeemGuestPassResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRedeemGuestPassResponse)
}
CMsgClientRedeemGuestPassResponse::CMsgClientRedeemGuestPassResponse(const CMsgClientRedeemGuestPassResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&package_id_, &from.package_id_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&package_id_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRedeemGuestPassResponse)
}

void CMsgClientRedeemGuestPassResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&package_id_, 0, reinterpret_cast<char*>(&must_own_appid_) -
    reinterpret_cast<char*>(&package_id_) + sizeof(must_own_appid_));
  eresult_ = 2u;
}

CMsgClientRedeemGuestPassResponse::~CMsgClientRedeemGuestPassResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRedeemGuestPassResponse)
  SharedDtor();
}

void CMsgClientRedeemGuestPassResponse::SharedDtor() {
}

void CMsgClientRedeemGuestPassResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRedeemGuestPassResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRedeemGuestPassResponse& CMsgClientRedeemGuestPassResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRedeemGuestPassResponse* CMsgClientRedeemGuestPassResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientRedeemGuestPassResponse* n = new CMsgClientRedeemGuestPassResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRedeemGuestPassResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&package_id_, 0, reinterpret_cast<char*>(&must_own_appid_) -
      reinterpret_cast<char*>(&package_id_) + sizeof(must_own_appid_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRedeemGuestPassResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 package_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_package_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &package_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 must_own_appid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_must_own_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &must_own_appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRedeemGuestPassResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRedeemGuestPassResponse)
  return false;
#undef DO_
}

void CMsgClientRedeemGuestPassResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional uint32 package_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->package_id(), output);
  }

  // optional uint32 must_own_appid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->must_own_appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRedeemGuestPassResponse)
}

::google::protobuf::uint8* CMsgClientRedeemGuestPassResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 package_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->package_id(), target);
  }

  // optional uint32 must_own_appid = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->must_own_appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRedeemGuestPassResponse)
  return target;
}

size_t CMsgClientRedeemGuestPassResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 package_id = 2;
    if (has_package_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->package_id());
    }

    // optional uint32 must_own_appid = 3;
    if (has_must_own_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->must_own_appid());
    }

    // optional uint32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRedeemGuestPassResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRedeemGuestPassResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRedeemGuestPassResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRedeemGuestPassResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRedeemGuestPassResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRedeemGuestPassResponse::MergeFrom(const CMsgClientRedeemGuestPassResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      package_id_ = from.package_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      must_own_appid_ = from.must_own_appid_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRedeemGuestPassResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRedeemGuestPassResponse::CopyFrom(const CMsgClientRedeemGuestPassResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRedeemGuestPassResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRedeemGuestPassResponse::IsInitialized() const {
  return true;
}

void CMsgClientRedeemGuestPassResponse::Swap(CMsgClientRedeemGuestPassResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRedeemGuestPassResponse::InternalSwap(CMsgClientRedeemGuestPassResponse* other) {
  std::swap(package_id_, other->package_id_);
  std::swap(must_own_appid_, other->must_own_appid_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRedeemGuestPassResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRedeemGuestPassResponse

// optional uint32 eresult = 1 [default = 2];
bool CMsgClientRedeemGuestPassResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientRedeemGuestPassResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientRedeemGuestPassResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientRedeemGuestPassResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgClientRedeemGuestPassResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRedeemGuestPassResponse.eresult)
  return eresult_;
}
void CMsgClientRedeemGuestPassResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRedeemGuestPassResponse.eresult)
}

// optional uint32 package_id = 2;
bool CMsgClientRedeemGuestPassResponse::has_package_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientRedeemGuestPassResponse::set_has_package_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientRedeemGuestPassResponse::clear_has_package_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientRedeemGuestPassResponse::clear_package_id() {
  package_id_ = 0u;
  clear_has_package_id();
}
::google::protobuf::uint32 CMsgClientRedeemGuestPassResponse::package_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRedeemGuestPassResponse.package_id)
  return package_id_;
}
void CMsgClientRedeemGuestPassResponse::set_package_id(::google::protobuf::uint32 value) {
  set_has_package_id();
  package_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRedeemGuestPassResponse.package_id)
}

// optional uint32 must_own_appid = 3;
bool CMsgClientRedeemGuestPassResponse::has_must_own_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientRedeemGuestPassResponse::set_has_must_own_appid() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientRedeemGuestPassResponse::clear_has_must_own_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientRedeemGuestPassResponse::clear_must_own_appid() {
  must_own_appid_ = 0u;
  clear_has_must_own_appid();
}
::google::protobuf::uint32 CMsgClientRedeemGuestPassResponse::must_own_appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRedeemGuestPassResponse.must_own_appid)
  return must_own_appid_;
}
void CMsgClientRedeemGuestPassResponse::set_must_own_appid(::google::protobuf::uint32 value) {
  set_has_must_own_appid();
  must_own_appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRedeemGuestPassResponse.must_own_appid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetClanActivityCounts::kSteamidClansFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetClanActivityCounts::CMsgClientGetClanActivityCounts()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetClanActivityCounts)
}
CMsgClientGetClanActivityCounts::CMsgClientGetClanActivityCounts(const CMsgClientGetClanActivityCounts& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      steamid_clans_(from.steamid_clans_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetClanActivityCounts)
}

void CMsgClientGetClanActivityCounts::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientGetClanActivityCounts::~CMsgClientGetClanActivityCounts() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetClanActivityCounts)
  SharedDtor();
}

void CMsgClientGetClanActivityCounts::SharedDtor() {
}

void CMsgClientGetClanActivityCounts::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientGetClanActivityCounts::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetClanActivityCounts& CMsgClientGetClanActivityCounts::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientGetClanActivityCounts* CMsgClientGetClanActivityCounts::New(::google::protobuf::Arena* arena) const {
  CMsgClientGetClanActivityCounts* n = new CMsgClientGetClanActivityCounts;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientGetClanActivityCounts::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetClanActivityCounts)
  steamid_clans_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetClanActivityCounts::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetClanActivityCounts)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 steamid_clans = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_steamid_clans())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_steamid_clans())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetClanActivityCounts)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetClanActivityCounts)
  return false;
#undef DO_
}

void CMsgClientGetClanActivityCounts::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetClanActivityCounts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 steamid_clans = 1;
  for (int i = 0, n = this->steamid_clans_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->steamid_clans(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetClanActivityCounts)
}

::google::protobuf::uint8* CMsgClientGetClanActivityCounts::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetClanActivityCounts)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint64 steamid_clans = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(1, this->steamid_clans_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetClanActivityCounts)
  return target;
}

size_t CMsgClientGetClanActivityCounts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetClanActivityCounts)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint64 steamid_clans = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->steamid_clans_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steamid_clans_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientGetClanActivityCounts::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetClanActivityCounts)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetClanActivityCounts* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetClanActivityCounts>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetClanActivityCounts)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetClanActivityCounts)
    MergeFrom(*source);
  }
}

void CMsgClientGetClanActivityCounts::MergeFrom(const CMsgClientGetClanActivityCounts& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetClanActivityCounts)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steamid_clans_.MergeFrom(from.steamid_clans_);
}

void CMsgClientGetClanActivityCounts::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetClanActivityCounts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetClanActivityCounts::CopyFrom(const CMsgClientGetClanActivityCounts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetClanActivityCounts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetClanActivityCounts::IsInitialized() const {
  return true;
}

void CMsgClientGetClanActivityCounts::Swap(CMsgClientGetClanActivityCounts* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetClanActivityCounts::InternalSwap(CMsgClientGetClanActivityCounts* other) {
  steamid_clans_.InternalSwap(&other->steamid_clans_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientGetClanActivityCounts::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientGetClanActivityCounts

// repeated uint64 steamid_clans = 1;
int CMsgClientGetClanActivityCounts::steamid_clans_size() const {
  return steamid_clans_.size();
}
void CMsgClientGetClanActivityCounts::clear_steamid_clans() {
  steamid_clans_.Clear();
}
::google::protobuf::uint64 CMsgClientGetClanActivityCounts::steamid_clans(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetClanActivityCounts.steamid_clans)
  return steamid_clans_.Get(index);
}
void CMsgClientGetClanActivityCounts::set_steamid_clans(int index, ::google::protobuf::uint64 value) {
  steamid_clans_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetClanActivityCounts.steamid_clans)
}
void CMsgClientGetClanActivityCounts::add_steamid_clans(::google::protobuf::uint64 value) {
  steamid_clans_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientGetClanActivityCounts.steamid_clans)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientGetClanActivityCounts::steamid_clans() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientGetClanActivityCounts.steamid_clans)
  return steamid_clans_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientGetClanActivityCounts::mutable_steamid_clans() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientGetClanActivityCounts.steamid_clans)
  return &steamid_clans_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetClanActivityCountsResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetClanActivityCountsResponse::CMsgClientGetClanActivityCountsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetClanActivityCountsResponse)
}
CMsgClientGetClanActivityCountsResponse::CMsgClientGetClanActivityCountsResponse(const CMsgClientGetClanActivityCountsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetClanActivityCountsResponse)
}

void CMsgClientGetClanActivityCountsResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2u;
}

CMsgClientGetClanActivityCountsResponse::~CMsgClientGetClanActivityCountsResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetClanActivityCountsResponse)
  SharedDtor();
}

void CMsgClientGetClanActivityCountsResponse::SharedDtor() {
}

void CMsgClientGetClanActivityCountsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientGetClanActivityCountsResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetClanActivityCountsResponse& CMsgClientGetClanActivityCountsResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientGetClanActivityCountsResponse* CMsgClientGetClanActivityCountsResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientGetClanActivityCountsResponse* n = new CMsgClientGetClanActivityCountsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientGetClanActivityCountsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  eresult_ = 2u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetClanActivityCountsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetClanActivityCountsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetClanActivityCountsResponse)
  return false;
#undef DO_
}

void CMsgClientGetClanActivityCountsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetClanActivityCountsResponse)
}

::google::protobuf::uint8* CMsgClientGetClanActivityCountsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetClanActivityCountsResponse)
  return target;
}

size_t CMsgClientGetClanActivityCountsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientGetClanActivityCountsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetClanActivityCountsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetClanActivityCountsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetClanActivityCountsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetClanActivityCountsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetClanActivityCountsResponse::MergeFrom(const CMsgClientGetClanActivityCountsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientGetClanActivityCountsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetClanActivityCountsResponse::CopyFrom(const CMsgClientGetClanActivityCountsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetClanActivityCountsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetClanActivityCountsResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetClanActivityCountsResponse::Swap(CMsgClientGetClanActivityCountsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetClanActivityCountsResponse::InternalSwap(CMsgClientGetClanActivityCountsResponse* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientGetClanActivityCountsResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientGetClanActivityCountsResponse

// optional uint32 eresult = 1 [default = 2];
bool CMsgClientGetClanActivityCountsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientGetClanActivityCountsResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientGetClanActivityCountsResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientGetClanActivityCountsResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgClientGetClanActivityCountsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetClanActivityCountsResponse.eresult)
  return eresult_;
}
void CMsgClientGetClanActivityCountsResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetClanActivityCountsResponse.eresult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientOGSReportString::kAccumulatedFieldNumber;
const int CMsgClientOGSReportString::kSessionidFieldNumber;
const int CMsgClientOGSReportString::kSeverityFieldNumber;
const int CMsgClientOGSReportString::kFormatterFieldNumber;
const int CMsgClientOGSReportString::kVarargsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientOGSReportString::CMsgClientOGSReportString()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientOGSReportString)
}
CMsgClientOGSReportString::CMsgClientOGSReportString(const CMsgClientOGSReportString& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  formatter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_formatter()) {
    formatter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.formatter_);
  }
  varargs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_varargs()) {
    varargs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.varargs_);
  }
  ::memcpy(&sessionid_, &from.sessionid_,
    reinterpret_cast<char*>(&severity_) -
    reinterpret_cast<char*>(&sessionid_) + sizeof(severity_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientOGSReportString)
}

void CMsgClientOGSReportString::SharedCtor() {
  _cached_size_ = 0;
  formatter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  varargs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&sessionid_, 0, reinterpret_cast<char*>(&severity_) -
    reinterpret_cast<char*>(&sessionid_) + sizeof(severity_));
}

CMsgClientOGSReportString::~CMsgClientOGSReportString() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientOGSReportString)
  SharedDtor();
}

void CMsgClientOGSReportString::SharedDtor() {
  formatter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  varargs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientOGSReportString::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientOGSReportString::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientOGSReportString& CMsgClientOGSReportString::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientOGSReportString* CMsgClientOGSReportString::New(::google::protobuf::Arena* arena) const {
  CMsgClientOGSReportString* n = new CMsgClientOGSReportString;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientOGSReportString::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientOGSReportString)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_formatter()) {
      GOOGLE_DCHECK(!formatter_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*formatter_.UnsafeRawStringPointer())->clear();
    }
    if (has_varargs()) {
      GOOGLE_DCHECK(!varargs_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*varargs_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&sessionid_, 0, reinterpret_cast<char*>(&severity_) -
      reinterpret_cast<char*>(&sessionid_) + sizeof(severity_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientOGSReportString::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientOGSReportString)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool accumulated = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_accumulated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &accumulated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 sessionid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_sessionid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 severity = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_severity();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &severity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string formatter = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_formatter()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->formatter().data(), this->formatter().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientOGSReportString.formatter");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes varargs = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_varargs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientOGSReportString)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientOGSReportString)
  return false;
#undef DO_
}

void CMsgClientOGSReportString::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientOGSReportString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool accumulated = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->accumulated(), output);
  }

  // optional uint64 sessionid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->sessionid(), output);
  }

  // optional int32 severity = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->severity(), output);
  }

  // optional string formatter = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->formatter().data(), this->formatter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientOGSReportString.formatter");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->formatter(), output);
  }

  // optional bytes varargs = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->varargs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientOGSReportString)
}

::google::protobuf::uint8* CMsgClientOGSReportString::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientOGSReportString)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool accumulated = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->accumulated(), target);
  }

  // optional uint64 sessionid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->sessionid(), target);
  }

  // optional int32 severity = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->severity(), target);
  }

  // optional string formatter = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->formatter().data(), this->formatter().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientOGSReportString.formatter");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->formatter(), target);
  }

  // optional bytes varargs = 5;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->varargs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientOGSReportString)
  return target;
}

size_t CMsgClientOGSReportString::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientOGSReportString)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string formatter = 4;
    if (has_formatter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->formatter());
    }

    // optional bytes varargs = 5;
    if (has_varargs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->varargs());
    }

    // optional uint64 sessionid = 2;
    if (has_sessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sessionid());
    }

    // optional bool accumulated = 1;
    if (has_accumulated()) {
      total_size += 1 + 1;
    }

    // optional int32 severity = 3;
    if (has_severity()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->severity());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientOGSReportString::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientOGSReportString)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientOGSReportString* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientOGSReportString>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientOGSReportString)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientOGSReportString)
    MergeFrom(*source);
  }
}

void CMsgClientOGSReportString::MergeFrom(const CMsgClientOGSReportString& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientOGSReportString)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_formatter();
      formatter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.formatter_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_varargs();
      varargs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.varargs_);
    }
    if (cached_has_bits & 0x00000004u) {
      sessionid_ = from.sessionid_;
    }
    if (cached_has_bits & 0x00000008u) {
      accumulated_ = from.accumulated_;
    }
    if (cached_has_bits & 0x00000010u) {
      severity_ = from.severity_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientOGSReportString::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientOGSReportString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientOGSReportString::CopyFrom(const CMsgClientOGSReportString& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientOGSReportString)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientOGSReportString::IsInitialized() const {
  return true;
}

void CMsgClientOGSReportString::Swap(CMsgClientOGSReportString* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientOGSReportString::InternalSwap(CMsgClientOGSReportString* other) {
  formatter_.Swap(&other->formatter_);
  varargs_.Swap(&other->varargs_);
  std::swap(sessionid_, other->sessionid_);
  std::swap(accumulated_, other->accumulated_);
  std::swap(severity_, other->severity_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientOGSReportString::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientOGSReportString

// optional bool accumulated = 1;
bool CMsgClientOGSReportString::has_accumulated() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientOGSReportString::set_has_accumulated() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientOGSReportString::clear_has_accumulated() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientOGSReportString::clear_accumulated() {
  accumulated_ = false;
  clear_has_accumulated();
}
bool CMsgClientOGSReportString::accumulated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientOGSReportString.accumulated)
  return accumulated_;
}
void CMsgClientOGSReportString::set_accumulated(bool value) {
  set_has_accumulated();
  accumulated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientOGSReportString.accumulated)
}

// optional uint64 sessionid = 2;
bool CMsgClientOGSReportString::has_sessionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientOGSReportString::set_has_sessionid() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientOGSReportString::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientOGSReportString::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
  clear_has_sessionid();
}
::google::protobuf::uint64 CMsgClientOGSReportString::sessionid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientOGSReportString.sessionid)
  return sessionid_;
}
void CMsgClientOGSReportString::set_sessionid(::google::protobuf::uint64 value) {
  set_has_sessionid();
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientOGSReportString.sessionid)
}

// optional int32 severity = 3;
bool CMsgClientOGSReportString::has_severity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientOGSReportString::set_has_severity() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientOGSReportString::clear_has_severity() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientOGSReportString::clear_severity() {
  severity_ = 0;
  clear_has_severity();
}
::google::protobuf::int32 CMsgClientOGSReportString::severity() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientOGSReportString.severity)
  return severity_;
}
void CMsgClientOGSReportString::set_severity(::google::protobuf::int32 value) {
  set_has_severity();
  severity_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientOGSReportString.severity)
}

// optional string formatter = 4;
bool CMsgClientOGSReportString::has_formatter() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientOGSReportString::set_has_formatter() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientOGSReportString::clear_has_formatter() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientOGSReportString::clear_formatter() {
  formatter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_formatter();
}
const ::std::string& CMsgClientOGSReportString::formatter() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientOGSReportString.formatter)
  return formatter_.GetNoArena();
}
void CMsgClientOGSReportString::set_formatter(const ::std::string& value) {
  set_has_formatter();
  formatter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientOGSReportString.formatter)
}
#if LANG_CXX11
void CMsgClientOGSReportString::set_formatter(::std::string&& value) {
  set_has_formatter();
  formatter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientOGSReportString.formatter)
}
#endif
void CMsgClientOGSReportString::set_formatter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_formatter();
  formatter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientOGSReportString.formatter)
}
void CMsgClientOGSReportString::set_formatter(const char* value, size_t size) {
  set_has_formatter();
  formatter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientOGSReportString.formatter)
}
::std::string* CMsgClientOGSReportString::mutable_formatter() {
  set_has_formatter();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientOGSReportString.formatter)
  return formatter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientOGSReportString::release_formatter() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientOGSReportString.formatter)
  clear_has_formatter();
  return formatter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientOGSReportString::set_allocated_formatter(::std::string* formatter) {
  if (formatter != NULL) {
    set_has_formatter();
  } else {
    clear_has_formatter();
  }
  formatter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), formatter);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientOGSReportString.formatter)
}

// optional bytes varargs = 5;
bool CMsgClientOGSReportString::has_varargs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientOGSReportString::set_has_varargs() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientOGSReportString::clear_has_varargs() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientOGSReportString::clear_varargs() {
  varargs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_varargs();
}
const ::std::string& CMsgClientOGSReportString::varargs() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientOGSReportString.varargs)
  return varargs_.GetNoArena();
}
void CMsgClientOGSReportString::set_varargs(const ::std::string& value) {
  set_has_varargs();
  varargs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientOGSReportString.varargs)
}
#if LANG_CXX11
void CMsgClientOGSReportString::set_varargs(::std::string&& value) {
  set_has_varargs();
  varargs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientOGSReportString.varargs)
}
#endif
void CMsgClientOGSReportString::set_varargs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_varargs();
  varargs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientOGSReportString.varargs)
}
void CMsgClientOGSReportString::set_varargs(const void* value, size_t size) {
  set_has_varargs();
  varargs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientOGSReportString.varargs)
}
::std::string* CMsgClientOGSReportString::mutable_varargs() {
  set_has_varargs();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientOGSReportString.varargs)
  return varargs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientOGSReportString::release_varargs() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientOGSReportString.varargs)
  clear_has_varargs();
  return varargs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientOGSReportString::set_allocated_varargs(::std::string* varargs) {
  if (varargs != NULL) {
    set_has_varargs();
  } else {
    clear_has_varargs();
  }
  varargs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), varargs);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientOGSReportString.varargs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientOGSReportBug::kSessionidFieldNumber;
const int CMsgClientOGSReportBug::kBugtextFieldNumber;
const int CMsgClientOGSReportBug::kScreenshotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientOGSReportBug::CMsgClientOGSReportBug()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientOGSReportBug)
}
CMsgClientOGSReportBug::CMsgClientOGSReportBug(const CMsgClientOGSReportBug& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bugtext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bugtext()) {
    bugtext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bugtext_);
  }
  screenshot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_screenshot()) {
    screenshot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenshot_);
  }
  sessionid_ = from.sessionid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientOGSReportBug)
}

void CMsgClientOGSReportBug::SharedCtor() {
  _cached_size_ = 0;
  bugtext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  screenshot_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_ = GOOGLE_ULONGLONG(0);
}

CMsgClientOGSReportBug::~CMsgClientOGSReportBug() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientOGSReportBug)
  SharedDtor();
}

void CMsgClientOGSReportBug::SharedDtor() {
  bugtext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  screenshot_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientOGSReportBug::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientOGSReportBug::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientOGSReportBug& CMsgClientOGSReportBug::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientOGSReportBug* CMsgClientOGSReportBug::New(::google::protobuf::Arena* arena) const {
  CMsgClientOGSReportBug* n = new CMsgClientOGSReportBug;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientOGSReportBug::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientOGSReportBug)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_bugtext()) {
      GOOGLE_DCHECK(!bugtext_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bugtext_.UnsafeRawStringPointer())->clear();
    }
    if (has_screenshot()) {
      GOOGLE_DCHECK(!screenshot_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*screenshot_.UnsafeRawStringPointer())->clear();
    }
  }
  sessionid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientOGSReportBug::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientOGSReportBug)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 sessionid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_sessionid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string bugtext = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bugtext()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bugtext().data(), this->bugtext().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientOGSReportBug.bugtext");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes screenshot = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_screenshot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientOGSReportBug)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientOGSReportBug)
  return false;
#undef DO_
}

void CMsgClientOGSReportBug::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientOGSReportBug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 sessionid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sessionid(), output);
  }

  // optional string bugtext = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bugtext().data(), this->bugtext().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientOGSReportBug.bugtext");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->bugtext(), output);
  }

  // optional bytes screenshot = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->screenshot(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientOGSReportBug)
}

::google::protobuf::uint8* CMsgClientOGSReportBug::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientOGSReportBug)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 sessionid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sessionid(), target);
  }

  // optional string bugtext = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bugtext().data(), this->bugtext().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientOGSReportBug.bugtext");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->bugtext(), target);
  }

  // optional bytes screenshot = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->screenshot(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientOGSReportBug)
  return target;
}

size_t CMsgClientOGSReportBug::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientOGSReportBug)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string bugtext = 2;
    if (has_bugtext()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->bugtext());
    }

    // optional bytes screenshot = 3;
    if (has_screenshot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->screenshot());
    }

    // optional uint64 sessionid = 1;
    if (has_sessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->sessionid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientOGSReportBug::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientOGSReportBug)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientOGSReportBug* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientOGSReportBug>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientOGSReportBug)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientOGSReportBug)
    MergeFrom(*source);
  }
}

void CMsgClientOGSReportBug::MergeFrom(const CMsgClientOGSReportBug& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientOGSReportBug)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_bugtext();
      bugtext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bugtext_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_screenshot();
      screenshot_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.screenshot_);
    }
    if (cached_has_bits & 0x00000004u) {
      sessionid_ = from.sessionid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientOGSReportBug::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientOGSReportBug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientOGSReportBug::CopyFrom(const CMsgClientOGSReportBug& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientOGSReportBug)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientOGSReportBug::IsInitialized() const {
  return true;
}

void CMsgClientOGSReportBug::Swap(CMsgClientOGSReportBug* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientOGSReportBug::InternalSwap(CMsgClientOGSReportBug* other) {
  bugtext_.Swap(&other->bugtext_);
  screenshot_.Swap(&other->screenshot_);
  std::swap(sessionid_, other->sessionid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientOGSReportBug::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientOGSReportBug

// optional uint64 sessionid = 1;
bool CMsgClientOGSReportBug::has_sessionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientOGSReportBug::set_has_sessionid() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientOGSReportBug::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientOGSReportBug::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
  clear_has_sessionid();
}
::google::protobuf::uint64 CMsgClientOGSReportBug::sessionid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientOGSReportBug.sessionid)
  return sessionid_;
}
void CMsgClientOGSReportBug::set_sessionid(::google::protobuf::uint64 value) {
  set_has_sessionid();
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientOGSReportBug.sessionid)
}

// optional string bugtext = 2;
bool CMsgClientOGSReportBug::has_bugtext() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientOGSReportBug::set_has_bugtext() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientOGSReportBug::clear_has_bugtext() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientOGSReportBug::clear_bugtext() {
  bugtext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bugtext();
}
const ::std::string& CMsgClientOGSReportBug::bugtext() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientOGSReportBug.bugtext)
  return bugtext_.GetNoArena();
}
void CMsgClientOGSReportBug::set_bugtext(const ::std::string& value) {
  set_has_bugtext();
  bugtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientOGSReportBug.bugtext)
}
#if LANG_CXX11
void CMsgClientOGSReportBug::set_bugtext(::std::string&& value) {
  set_has_bugtext();
  bugtext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientOGSReportBug.bugtext)
}
#endif
void CMsgClientOGSReportBug::set_bugtext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bugtext();
  bugtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientOGSReportBug.bugtext)
}
void CMsgClientOGSReportBug::set_bugtext(const char* value, size_t size) {
  set_has_bugtext();
  bugtext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientOGSReportBug.bugtext)
}
::std::string* CMsgClientOGSReportBug::mutable_bugtext() {
  set_has_bugtext();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientOGSReportBug.bugtext)
  return bugtext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientOGSReportBug::release_bugtext() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientOGSReportBug.bugtext)
  clear_has_bugtext();
  return bugtext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientOGSReportBug::set_allocated_bugtext(::std::string* bugtext) {
  if (bugtext != NULL) {
    set_has_bugtext();
  } else {
    clear_has_bugtext();
  }
  bugtext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bugtext);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientOGSReportBug.bugtext)
}

// optional bytes screenshot = 3;
bool CMsgClientOGSReportBug::has_screenshot() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientOGSReportBug::set_has_screenshot() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientOGSReportBug::clear_has_screenshot() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientOGSReportBug::clear_screenshot() {
  screenshot_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_screenshot();
}
const ::std::string& CMsgClientOGSReportBug::screenshot() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientOGSReportBug.screenshot)
  return screenshot_.GetNoArena();
}
void CMsgClientOGSReportBug::set_screenshot(const ::std::string& value) {
  set_has_screenshot();
  screenshot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientOGSReportBug.screenshot)
}
#if LANG_CXX11
void CMsgClientOGSReportBug::set_screenshot(::std::string&& value) {
  set_has_screenshot();
  screenshot_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientOGSReportBug.screenshot)
}
#endif
void CMsgClientOGSReportBug::set_screenshot(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_screenshot();
  screenshot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientOGSReportBug.screenshot)
}
void CMsgClientOGSReportBug::set_screenshot(const void* value, size_t size) {
  set_has_screenshot();
  screenshot_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientOGSReportBug.screenshot)
}
::std::string* CMsgClientOGSReportBug::mutable_screenshot() {
  set_has_screenshot();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientOGSReportBug.screenshot)
  return screenshot_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientOGSReportBug::release_screenshot() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientOGSReportBug.screenshot)
  clear_has_screenshot();
  return screenshot_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientOGSReportBug::set_allocated_screenshot(::std::string* screenshot) {
  if (screenshot != NULL) {
    set_has_screenshot();
  } else {
    clear_has_screenshot();
  }
  screenshot_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), screenshot);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientOGSReportBug.screenshot)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSAssociateWithClan::kSteamIdClanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSAssociateWithClan::CMsgGSAssociateWithClan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGSAssociateWithClan)
}
CMsgGSAssociateWithClan::CMsgGSAssociateWithClan(const CMsgGSAssociateWithClan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_clan_ = from.steam_id_clan_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGSAssociateWithClan)
}

void CMsgGSAssociateWithClan::SharedCtor() {
  _cached_size_ = 0;
  steam_id_clan_ = GOOGLE_ULONGLONG(0);
}

CMsgGSAssociateWithClan::~CMsgGSAssociateWithClan() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGSAssociateWithClan)
  SharedDtor();
}

void CMsgGSAssociateWithClan::SharedDtor() {
}

void CMsgGSAssociateWithClan::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGSAssociateWithClan::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSAssociateWithClan& CMsgGSAssociateWithClan::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGSAssociateWithClan* CMsgGSAssociateWithClan::New(::google::protobuf::Arena* arena) const {
  CMsgGSAssociateWithClan* n = new CMsgGSAssociateWithClan;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGSAssociateWithClan::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGSAssociateWithClan)
  steam_id_clan_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSAssociateWithClan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGSAssociateWithClan)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_clan = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steam_id_clan();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_clan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGSAssociateWithClan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGSAssociateWithClan)
  return false;
#undef DO_
}

void CMsgGSAssociateWithClan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGSAssociateWithClan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_clan = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_clan(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGSAssociateWithClan)
}

::google::protobuf::uint8* CMsgGSAssociateWithClan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGSAssociateWithClan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_clan = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_clan(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGSAssociateWithClan)
  return target;
}

size_t CMsgGSAssociateWithClan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGSAssociateWithClan)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 steam_id_clan = 1;
  if (has_steam_id_clan()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGSAssociateWithClan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGSAssociateWithClan)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSAssociateWithClan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSAssociateWithClan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGSAssociateWithClan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGSAssociateWithClan)
    MergeFrom(*source);
  }
}

void CMsgGSAssociateWithClan::MergeFrom(const CMsgGSAssociateWithClan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGSAssociateWithClan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id_clan()) {
    set_steam_id_clan(from.steam_id_clan());
  }
}

void CMsgGSAssociateWithClan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGSAssociateWithClan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSAssociateWithClan::CopyFrom(const CMsgGSAssociateWithClan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGSAssociateWithClan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSAssociateWithClan::IsInitialized() const {
  return true;
}

void CMsgGSAssociateWithClan::Swap(CMsgGSAssociateWithClan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSAssociateWithClan::InternalSwap(CMsgGSAssociateWithClan* other) {
  std::swap(steam_id_clan_, other->steam_id_clan_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGSAssociateWithClan::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGSAssociateWithClan

// optional fixed64 steam_id_clan = 1;
bool CMsgGSAssociateWithClan::has_steam_id_clan() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGSAssociateWithClan::set_has_steam_id_clan() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGSAssociateWithClan::clear_has_steam_id_clan() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGSAssociateWithClan::clear_steam_id_clan() {
  steam_id_clan_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id_clan();
}
::google::protobuf::uint64 CMsgGSAssociateWithClan::steam_id_clan() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGSAssociateWithClan.steam_id_clan)
  return steam_id_clan_;
}
void CMsgGSAssociateWithClan::set_steam_id_clan(::google::protobuf::uint64 value) {
  set_has_steam_id_clan();
  steam_id_clan_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGSAssociateWithClan.steam_id_clan)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSAssociateWithClanResponse::kSteamIdClanFieldNumber;
const int CMsgGSAssociateWithClanResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSAssociateWithClanResponse::CMsgGSAssociateWithClanResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGSAssociateWithClanResponse)
}
CMsgGSAssociateWithClanResponse::CMsgGSAssociateWithClanResponse(const CMsgGSAssociateWithClanResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_clan_, &from.steam_id_clan_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steam_id_clan_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGSAssociateWithClanResponse)
}

void CMsgGSAssociateWithClanResponse::SharedCtor() {
  _cached_size_ = 0;
  steam_id_clan_ = GOOGLE_ULONGLONG(0);
  eresult_ = 2u;
}

CMsgGSAssociateWithClanResponse::~CMsgGSAssociateWithClanResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGSAssociateWithClanResponse)
  SharedDtor();
}

void CMsgGSAssociateWithClanResponse::SharedDtor() {
}

void CMsgGSAssociateWithClanResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGSAssociateWithClanResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSAssociateWithClanResponse& CMsgGSAssociateWithClanResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGSAssociateWithClanResponse* CMsgGSAssociateWithClanResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGSAssociateWithClanResponse* n = new CMsgGSAssociateWithClanResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGSAssociateWithClanResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGSAssociateWithClanResponse)
  if (_has_bits_[0 / 32] & 3u) {
    steam_id_clan_ = GOOGLE_ULONGLONG(0);
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSAssociateWithClanResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGSAssociateWithClanResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_clan = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steam_id_clan();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_clan_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2 [default = 2];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGSAssociateWithClanResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGSAssociateWithClanResponse)
  return false;
#undef DO_
}

void CMsgGSAssociateWithClanResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGSAssociateWithClanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_clan = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_clan(), output);
  }

  // optional uint32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGSAssociateWithClanResponse)
}

::google::protobuf::uint8* CMsgGSAssociateWithClanResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGSAssociateWithClanResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_clan = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_clan(), target);
  }

  // optional uint32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGSAssociateWithClanResponse)
  return target;
}

size_t CMsgGSAssociateWithClanResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGSAssociateWithClanResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steam_id_clan = 1;
    if (has_steam_id_clan()) {
      total_size += 1 + 8;
    }

    // optional uint32 eresult = 2 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGSAssociateWithClanResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGSAssociateWithClanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSAssociateWithClanResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSAssociateWithClanResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGSAssociateWithClanResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGSAssociateWithClanResponse)
    MergeFrom(*source);
  }
}

void CMsgGSAssociateWithClanResponse::MergeFrom(const CMsgGSAssociateWithClanResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGSAssociateWithClanResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_clan_ = from.steam_id_clan_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGSAssociateWithClanResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGSAssociateWithClanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSAssociateWithClanResponse::CopyFrom(const CMsgGSAssociateWithClanResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGSAssociateWithClanResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSAssociateWithClanResponse::IsInitialized() const {
  return true;
}

void CMsgGSAssociateWithClanResponse::Swap(CMsgGSAssociateWithClanResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSAssociateWithClanResponse::InternalSwap(CMsgGSAssociateWithClanResponse* other) {
  std::swap(steam_id_clan_, other->steam_id_clan_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGSAssociateWithClanResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGSAssociateWithClanResponse

// optional fixed64 steam_id_clan = 1;
bool CMsgGSAssociateWithClanResponse::has_steam_id_clan() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGSAssociateWithClanResponse::set_has_steam_id_clan() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGSAssociateWithClanResponse::clear_has_steam_id_clan() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGSAssociateWithClanResponse::clear_steam_id_clan() {
  steam_id_clan_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id_clan();
}
::google::protobuf::uint64 CMsgGSAssociateWithClanResponse::steam_id_clan() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGSAssociateWithClanResponse.steam_id_clan)
  return steam_id_clan_;
}
void CMsgGSAssociateWithClanResponse::set_steam_id_clan(::google::protobuf::uint64 value) {
  set_has_steam_id_clan();
  steam_id_clan_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGSAssociateWithClanResponse.steam_id_clan)
}

// optional uint32 eresult = 2 [default = 2];
bool CMsgGSAssociateWithClanResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGSAssociateWithClanResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGSAssociateWithClanResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGSAssociateWithClanResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgGSAssociateWithClanResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGSAssociateWithClanResponse.eresult)
  return eresult_;
}
void CMsgGSAssociateWithClanResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGSAssociateWithClanResponse.eresult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSComputeNewPlayerCompatibility::kSteamIdCandidateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSComputeNewPlayerCompatibility::CMsgGSComputeNewPlayerCompatibility()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGSComputeNewPlayerCompatibility)
}
CMsgGSComputeNewPlayerCompatibility::CMsgGSComputeNewPlayerCompatibility(const CMsgGSComputeNewPlayerCompatibility& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_candidate_ = from.steam_id_candidate_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGSComputeNewPlayerCompatibility)
}

void CMsgGSComputeNewPlayerCompatibility::SharedCtor() {
  _cached_size_ = 0;
  steam_id_candidate_ = GOOGLE_ULONGLONG(0);
}

CMsgGSComputeNewPlayerCompatibility::~CMsgGSComputeNewPlayerCompatibility() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  SharedDtor();
}

void CMsgGSComputeNewPlayerCompatibility::SharedDtor() {
}

void CMsgGSComputeNewPlayerCompatibility::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGSComputeNewPlayerCompatibility::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSComputeNewPlayerCompatibility& CMsgGSComputeNewPlayerCompatibility::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGSComputeNewPlayerCompatibility* CMsgGSComputeNewPlayerCompatibility::New(::google::protobuf::Arena* arena) const {
  CMsgGSComputeNewPlayerCompatibility* n = new CMsgGSComputeNewPlayerCompatibility;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGSComputeNewPlayerCompatibility::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  steam_id_candidate_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSComputeNewPlayerCompatibility::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_candidate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steam_id_candidate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_candidate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  return false;
#undef DO_
}

void CMsgGSComputeNewPlayerCompatibility::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_candidate = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_candidate(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGSComputeNewPlayerCompatibility)
}

::google::protobuf::uint8* CMsgGSComputeNewPlayerCompatibility::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_candidate = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_candidate(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  return target;
}

size_t CMsgGSComputeNewPlayerCompatibility::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 steam_id_candidate = 1;
  if (has_steam_id_candidate()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGSComputeNewPlayerCompatibility::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSComputeNewPlayerCompatibility* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSComputeNewPlayerCompatibility>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGSComputeNewPlayerCompatibility)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGSComputeNewPlayerCompatibility)
    MergeFrom(*source);
  }
}

void CMsgGSComputeNewPlayerCompatibility::MergeFrom(const CMsgGSComputeNewPlayerCompatibility& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id_candidate()) {
    set_steam_id_candidate(from.steam_id_candidate());
  }
}

void CMsgGSComputeNewPlayerCompatibility::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSComputeNewPlayerCompatibility::CopyFrom(const CMsgGSComputeNewPlayerCompatibility& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibility)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSComputeNewPlayerCompatibility::IsInitialized() const {
  return true;
}

void CMsgGSComputeNewPlayerCompatibility::Swap(CMsgGSComputeNewPlayerCompatibility* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSComputeNewPlayerCompatibility::InternalSwap(CMsgGSComputeNewPlayerCompatibility* other) {
  std::swap(steam_id_candidate_, other->steam_id_candidate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGSComputeNewPlayerCompatibility::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGSComputeNewPlayerCompatibility

// optional fixed64 steam_id_candidate = 1;
bool CMsgGSComputeNewPlayerCompatibility::has_steam_id_candidate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGSComputeNewPlayerCompatibility::set_has_steam_id_candidate() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGSComputeNewPlayerCompatibility::clear_has_steam_id_candidate() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGSComputeNewPlayerCompatibility::clear_steam_id_candidate() {
  steam_id_candidate_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id_candidate();
}
::google::protobuf::uint64 CMsgGSComputeNewPlayerCompatibility::steam_id_candidate() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGSComputeNewPlayerCompatibility.steam_id_candidate)
  return steam_id_candidate_;
}
void CMsgGSComputeNewPlayerCompatibility::set_steam_id_candidate(::google::protobuf::uint64 value) {
  set_has_steam_id_candidate();
  steam_id_candidate_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGSComputeNewPlayerCompatibility.steam_id_candidate)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGSComputeNewPlayerCompatibilityResponse::kSteamIdCandidateFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kEresultFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kIsClanMemberFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kCtDontLikeYouFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kCtYouDontLikeFieldNumber;
const int CMsgGSComputeNewPlayerCompatibilityResponse::kCtClanmembersDontLikeYouFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGSComputeNewPlayerCompatibilityResponse::CMsgGSComputeNewPlayerCompatibilityResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
}
CMsgGSComputeNewPlayerCompatibilityResponse::CMsgGSComputeNewPlayerCompatibilityResponse(const CMsgGSComputeNewPlayerCompatibilityResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steam_id_candidate_, &from.steam_id_candidate_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steam_id_candidate_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
}

void CMsgGSComputeNewPlayerCompatibilityResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steam_id_candidate_, 0, reinterpret_cast<char*>(&ct_clanmembers_dont_like_you_) -
    reinterpret_cast<char*>(&steam_id_candidate_) + sizeof(ct_clanmembers_dont_like_you_));
  eresult_ = 2u;
}

CMsgGSComputeNewPlayerCompatibilityResponse::~CMsgGSComputeNewPlayerCompatibilityResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  SharedDtor();
}

void CMsgGSComputeNewPlayerCompatibilityResponse::SharedDtor() {
}

void CMsgGSComputeNewPlayerCompatibilityResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGSComputeNewPlayerCompatibilityResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGSComputeNewPlayerCompatibilityResponse& CMsgGSComputeNewPlayerCompatibilityResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGSComputeNewPlayerCompatibilityResponse* CMsgGSComputeNewPlayerCompatibilityResponse::New(::google::protobuf::Arena* arena) const {
  CMsgGSComputeNewPlayerCompatibilityResponse* n = new CMsgGSComputeNewPlayerCompatibilityResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGSComputeNewPlayerCompatibilityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&steam_id_candidate_, 0, reinterpret_cast<char*>(&ct_clanmembers_dont_like_you_) -
      reinterpret_cast<char*>(&steam_id_candidate_) + sizeof(ct_clanmembers_dont_like_you_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGSComputeNewPlayerCompatibilityResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id_candidate = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steam_id_candidate();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_candidate_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 eresult = 2 [default = 2];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_clan_member = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_is_clan_member();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_clan_member_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ct_dont_like_you = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_ct_dont_like_you();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ct_dont_like_you_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ct_you_dont_like = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_ct_you_dont_like();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ct_you_dont_like_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 ct_clanmembers_dont_like_you = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_ct_clanmembers_dont_like_you();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ct_clanmembers_dont_like_you_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  return false;
#undef DO_
}

void CMsgGSComputeNewPlayerCompatibilityResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_candidate = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id_candidate(), output);
  }

  // optional uint32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->eresult(), output);
  }

  // optional bool is_clan_member = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_clan_member(), output);
  }

  // optional int32 ct_dont_like_you = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->ct_dont_like_you(), output);
  }

  // optional int32 ct_you_dont_like = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ct_you_dont_like(), output);
  }

  // optional int32 ct_clanmembers_dont_like_you = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->ct_clanmembers_dont_like_you(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
}

::google::protobuf::uint8* CMsgGSComputeNewPlayerCompatibilityResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id_candidate = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id_candidate(), target);
  }

  // optional uint32 eresult = 2 [default = 2];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->eresult(), target);
  }

  // optional bool is_clan_member = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_clan_member(), target);
  }

  // optional int32 ct_dont_like_you = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->ct_dont_like_you(), target);
  }

  // optional int32 ct_you_dont_like = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ct_you_dont_like(), target);
  }

  // optional int32 ct_clanmembers_dont_like_you = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->ct_clanmembers_dont_like_you(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  return target;
}

size_t CMsgGSComputeNewPlayerCompatibilityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional fixed64 steam_id_candidate = 1;
    if (has_steam_id_candidate()) {
      total_size += 1 + 8;
    }

    // optional bool is_clan_member = 3;
    if (has_is_clan_member()) {
      total_size += 1 + 1;
    }

    // optional int32 ct_dont_like_you = 4;
    if (has_ct_dont_like_you()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ct_dont_like_you());
    }

    // optional int32 ct_you_dont_like = 5;
    if (has_ct_you_dont_like()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ct_you_dont_like());
    }

    // optional int32 ct_clanmembers_dont_like_you = 6;
    if (has_ct_clanmembers_dont_like_you()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->ct_clanmembers_dont_like_you());
    }

    // optional uint32 eresult = 2 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGSComputeNewPlayerCompatibilityResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGSComputeNewPlayerCompatibilityResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGSComputeNewPlayerCompatibilityResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
    MergeFrom(*source);
  }
}

void CMsgGSComputeNewPlayerCompatibilityResponse::MergeFrom(const CMsgGSComputeNewPlayerCompatibilityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      steam_id_candidate_ = from.steam_id_candidate_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_clan_member_ = from.is_clan_member_;
    }
    if (cached_has_bits & 0x00000004u) {
      ct_dont_like_you_ = from.ct_dont_like_you_;
    }
    if (cached_has_bits & 0x00000008u) {
      ct_you_dont_like_ = from.ct_you_dont_like_;
    }
    if (cached_has_bits & 0x00000010u) {
      ct_clanmembers_dont_like_you_ = from.ct_clanmembers_dont_like_you_;
    }
    if (cached_has_bits & 0x00000020u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGSComputeNewPlayerCompatibilityResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGSComputeNewPlayerCompatibilityResponse::CopyFrom(const CMsgGSComputeNewPlayerCompatibilityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGSComputeNewPlayerCompatibilityResponse::IsInitialized() const {
  return true;
}

void CMsgGSComputeNewPlayerCompatibilityResponse::Swap(CMsgGSComputeNewPlayerCompatibilityResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGSComputeNewPlayerCompatibilityResponse::InternalSwap(CMsgGSComputeNewPlayerCompatibilityResponse* other) {
  std::swap(steam_id_candidate_, other->steam_id_candidate_);
  std::swap(is_clan_member_, other->is_clan_member_);
  std::swap(ct_dont_like_you_, other->ct_dont_like_you_);
  std::swap(ct_you_dont_like_, other->ct_you_dont_like_);
  std::swap(ct_clanmembers_dont_like_you_, other->ct_clanmembers_dont_like_you_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGSComputeNewPlayerCompatibilityResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGSComputeNewPlayerCompatibilityResponse

// optional fixed64 steam_id_candidate = 1;
bool CMsgGSComputeNewPlayerCompatibilityResponse::has_steam_id_candidate() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::set_has_steam_id_candidate() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::clear_has_steam_id_candidate() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::clear_steam_id_candidate() {
  steam_id_candidate_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id_candidate();
}
::google::protobuf::uint64 CMsgGSComputeNewPlayerCompatibilityResponse::steam_id_candidate() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse.steam_id_candidate)
  return steam_id_candidate_;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::set_steam_id_candidate(::google::protobuf::uint64 value) {
  set_has_steam_id_candidate();
  steam_id_candidate_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse.steam_id_candidate)
}

// optional uint32 eresult = 2 [default = 2];
bool CMsgGSComputeNewPlayerCompatibilityResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgGSComputeNewPlayerCompatibilityResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse.eresult)
  return eresult_;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse.eresult)
}

// optional bool is_clan_member = 3;
bool CMsgGSComputeNewPlayerCompatibilityResponse::has_is_clan_member() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::set_has_is_clan_member() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::clear_has_is_clan_member() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::clear_is_clan_member() {
  is_clan_member_ = false;
  clear_has_is_clan_member();
}
bool CMsgGSComputeNewPlayerCompatibilityResponse::is_clan_member() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse.is_clan_member)
  return is_clan_member_;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::set_is_clan_member(bool value) {
  set_has_is_clan_member();
  is_clan_member_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse.is_clan_member)
}

// optional int32 ct_dont_like_you = 4;
bool CMsgGSComputeNewPlayerCompatibilityResponse::has_ct_dont_like_you() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::set_has_ct_dont_like_you() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::clear_has_ct_dont_like_you() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::clear_ct_dont_like_you() {
  ct_dont_like_you_ = 0;
  clear_has_ct_dont_like_you();
}
::google::protobuf::int32 CMsgGSComputeNewPlayerCompatibilityResponse::ct_dont_like_you() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse.ct_dont_like_you)
  return ct_dont_like_you_;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::set_ct_dont_like_you(::google::protobuf::int32 value) {
  set_has_ct_dont_like_you();
  ct_dont_like_you_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse.ct_dont_like_you)
}

// optional int32 ct_you_dont_like = 5;
bool CMsgGSComputeNewPlayerCompatibilityResponse::has_ct_you_dont_like() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::set_has_ct_you_dont_like() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::clear_has_ct_you_dont_like() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::clear_ct_you_dont_like() {
  ct_you_dont_like_ = 0;
  clear_has_ct_you_dont_like();
}
::google::protobuf::int32 CMsgGSComputeNewPlayerCompatibilityResponse::ct_you_dont_like() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse.ct_you_dont_like)
  return ct_you_dont_like_;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::set_ct_you_dont_like(::google::protobuf::int32 value) {
  set_has_ct_you_dont_like();
  ct_you_dont_like_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse.ct_you_dont_like)
}

// optional int32 ct_clanmembers_dont_like_you = 6;
bool CMsgGSComputeNewPlayerCompatibilityResponse::has_ct_clanmembers_dont_like_you() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::set_has_ct_clanmembers_dont_like_you() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::clear_has_ct_clanmembers_dont_like_you() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::clear_ct_clanmembers_dont_like_you() {
  ct_clanmembers_dont_like_you_ = 0;
  clear_has_ct_clanmembers_dont_like_you();
}
::google::protobuf::int32 CMsgGSComputeNewPlayerCompatibilityResponse::ct_clanmembers_dont_like_you() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse.ct_clanmembers_dont_like_you)
  return ct_clanmembers_dont_like_you_;
}
void CMsgGSComputeNewPlayerCompatibilityResponse::set_ct_clanmembers_dont_like_you(::google::protobuf::int32 value) {
  set_has_ct_clanmembers_dont_like_you();
  ct_clanmembers_dont_like_you_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGSComputeNewPlayerCompatibilityResponse.ct_clanmembers_dont_like_you)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSentLogs::CMsgClientSentLogs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientSentLogs)
}
CMsgClientSentLogs::CMsgClientSentLogs(const CMsgClientSentLogs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientSentLogs)
}

void CMsgClientSentLogs::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientSentLogs::~CMsgClientSentLogs() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientSentLogs)
  SharedDtor();
}

void CMsgClientSentLogs::SharedDtor() {
}

void CMsgClientSentLogs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientSentLogs::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSentLogs& CMsgClientSentLogs::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientSentLogs* CMsgClientSentLogs::New(::google::protobuf::Arena* arena) const {
  CMsgClientSentLogs* n = new CMsgClientSentLogs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientSentLogs::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientSentLogs)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSentLogs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientSentLogs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientSentLogs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientSentLogs)
  return false;
#undef DO_
}

void CMsgClientSentLogs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientSentLogs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientSentLogs)
}

::google::protobuf::uint8* CMsgClientSentLogs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientSentLogs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientSentLogs)
  return target;
}

size_t CMsgClientSentLogs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientSentLogs)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientSentLogs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientSentLogs)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSentLogs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSentLogs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientSentLogs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientSentLogs)
    MergeFrom(*source);
  }
}

void CMsgClientSentLogs::MergeFrom(const CMsgClientSentLogs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientSentLogs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientSentLogs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientSentLogs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSentLogs::CopyFrom(const CMsgClientSentLogs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientSentLogs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSentLogs::IsInitialized() const {
  return true;
}

void CMsgClientSentLogs::Swap(CMsgClientSentLogs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSentLogs::InternalSwap(CMsgClientSentLogs* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientSentLogs::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientSentLogs

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGCClient::kAppidFieldNumber;
const int CMsgGCClient::kMsgtypeFieldNumber;
const int CMsgGCClient::kPayloadFieldNumber;
const int CMsgGCClient::kSteamidFieldNumber;
const int CMsgGCClient::kGcnameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGCClient::CMsgGCClient()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGCClient)
}
CMsgGCClient::CMsgGCClient(const CMsgGCClient& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_payload()) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  gcname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_gcname()) {
    gcname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcname_);
  }
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&appid_) + sizeof(steamid_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGCClient)
}

void CMsgGCClient::SharedCtor() {
  _cached_size_ = 0;
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&appid_) + sizeof(steamid_));
}

CMsgGCClient::~CMsgGCClient() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGCClient)
  SharedDtor();
}

void CMsgGCClient::SharedDtor() {
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgGCClient::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGCClient::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGCClient& CMsgGCClient::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGCClient* CMsgGCClient::New(::google::protobuf::Arena* arena) const {
  CMsgGCClient* n = new CMsgGCClient;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGCClient::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGCClient)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_payload()) {
      GOOGLE_DCHECK(!payload_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*payload_.UnsafeRawStringPointer())->clear();
    }
    if (has_gcname()) {
      GOOGLE_DCHECK(!gcname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*gcname_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&appid_, 0, reinterpret_cast<char*>(&steamid_) -
      reinterpret_cast<char*>(&appid_) + sizeof(steamid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGCClient::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGCClient)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 msgtype = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_msgtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes payload = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string gcname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->gcname().data(), this->gcname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgGCClient.gcname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGCClient)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGCClient)
  return false;
#undef DO_
}

void CMsgGCClient::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGCClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional uint32 msgtype = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->msgtype(), output);
  }

  // optional bytes payload = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->payload(), output);
  }

  // optional fixed64 steamid = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->steamid(), output);
  }

  // optional string gcname = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gcname().data(), this->gcname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGCClient.gcname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->gcname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGCClient)
}

::google::protobuf::uint8* CMsgGCClient::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGCClient)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional uint32 msgtype = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->msgtype(), target);
  }

  // optional bytes payload = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->payload(), target);
  }

  // optional fixed64 steamid = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(4, this->steamid(), target);
  }

  // optional string gcname = 5;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->gcname().data(), this->gcname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgGCClient.gcname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->gcname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGCClient)
  return target;
}

size_t CMsgGCClient::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGCClient)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes payload = 3;
    if (has_payload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->payload());
    }

    // optional string gcname = 5;
    if (has_gcname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->gcname());
    }

    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional uint32 msgtype = 2;
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msgtype());
    }

    // optional fixed64 steamid = 4;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGCClient::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGCClient)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGCClient* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGCClient>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGCClient)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGCClient)
    MergeFrom(*source);
  }
}

void CMsgGCClient::MergeFrom(const CMsgGCClient& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGCClient)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_payload();
      payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_gcname();
      gcname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcname_);
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000008u) {
      msgtype_ = from.msgtype_;
    }
    if (cached_has_bits & 0x00000010u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGCClient::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGCClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGCClient::CopyFrom(const CMsgGCClient& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGCClient)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGCClient::IsInitialized() const {
  return true;
}

void CMsgGCClient::Swap(CMsgGCClient* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGCClient::InternalSwap(CMsgGCClient* other) {
  payload_.Swap(&other->payload_);
  gcname_.Swap(&other->gcname_);
  std::swap(appid_, other->appid_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(steamid_, other->steamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGCClient::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGCClient

// optional uint32 appid = 1;
bool CMsgGCClient::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGCClient::set_has_appid() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGCClient::clear_has_appid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGCClient::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
::google::protobuf::uint32 CMsgGCClient::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGCClient.appid)
  return appid_;
}
void CMsgGCClient::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGCClient.appid)
}

// optional uint32 msgtype = 2;
bool CMsgGCClient::has_msgtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgGCClient::set_has_msgtype() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgGCClient::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgGCClient::clear_msgtype() {
  msgtype_ = 0u;
  clear_has_msgtype();
}
::google::protobuf::uint32 CMsgGCClient::msgtype() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGCClient.msgtype)
  return msgtype_;
}
void CMsgGCClient::set_msgtype(::google::protobuf::uint32 value) {
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGCClient.msgtype)
}

// optional bytes payload = 3;
bool CMsgGCClient::has_payload() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGCClient::set_has_payload() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGCClient::clear_has_payload() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGCClient::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_payload();
}
const ::std::string& CMsgGCClient::payload() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGCClient.payload)
  return payload_.GetNoArena();
}
void CMsgGCClient::set_payload(const ::std::string& value) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGCClient.payload)
}
#if LANG_CXX11
void CMsgGCClient::set_payload(::std::string&& value) {
  set_has_payload();
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGCClient.payload)
}
#endif
void CMsgGCClient::set_payload(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGCClient.payload)
}
void CMsgGCClient::set_payload(const void* value, size_t size) {
  set_has_payload();
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGCClient.payload)
}
::std::string* CMsgGCClient::mutable_payload() {
  set_has_payload();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGCClient.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGCClient::release_payload() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGCClient.payload)
  clear_has_payload();
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGCClient::set_allocated_payload(::std::string* payload) {
  if (payload != NULL) {
    set_has_payload();
  } else {
    clear_has_payload();
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGCClient.payload)
}

// optional fixed64 steamid = 4;
bool CMsgGCClient::has_steamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgGCClient::set_has_steamid() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgGCClient::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgGCClient::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
::google::protobuf::uint64 CMsgGCClient::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGCClient.steamid)
  return steamid_;
}
void CMsgGCClient::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGCClient.steamid)
}

// optional string gcname = 5;
bool CMsgGCClient::has_gcname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGCClient::set_has_gcname() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGCClient::clear_has_gcname() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGCClient::clear_gcname() {
  gcname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_gcname();
}
const ::std::string& CMsgGCClient::gcname() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGCClient.gcname)
  return gcname_.GetNoArena();
}
void CMsgGCClient::set_gcname(const ::std::string& value) {
  set_has_gcname();
  gcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGCClient.gcname)
}
#if LANG_CXX11
void CMsgGCClient::set_gcname(::std::string&& value) {
  set_has_gcname();
  gcname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGCClient.gcname)
}
#endif
void CMsgGCClient::set_gcname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_gcname();
  gcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGCClient.gcname)
}
void CMsgGCClient::set_gcname(const char* value, size_t size) {
  set_has_gcname();
  gcname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGCClient.gcname)
}
::std::string* CMsgGCClient::mutable_gcname() {
  set_has_gcname();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGCClient.gcname)
  return gcname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgGCClient::release_gcname() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGCClient.gcname)
  clear_has_gcname();
  return gcname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgGCClient::set_allocated_gcname(::std::string* gcname) {
  if (gcname != NULL) {
    set_has_gcname();
  } else {
    clear_has_gcname();
  }
  gcname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), gcname);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGCClient.gcname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestFreeLicense::kAppidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestFreeLicense::CMsgClientRequestFreeLicense()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestFreeLicense)
}
CMsgClientRequestFreeLicense::CMsgClientRequestFreeLicense(const CMsgClientRequestFreeLicense& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      appids_(from.appids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestFreeLicense)
}

void CMsgClientRequestFreeLicense::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientRequestFreeLicense::~CMsgClientRequestFreeLicense() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestFreeLicense)
  SharedDtor();
}

void CMsgClientRequestFreeLicense::SharedDtor() {
}

void CMsgClientRequestFreeLicense::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRequestFreeLicense::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestFreeLicense& CMsgClientRequestFreeLicense::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRequestFreeLicense* CMsgClientRequestFreeLicense::New(::google::protobuf::Arena* arena) const {
  CMsgClientRequestFreeLicense* n = new CMsgClientRequestFreeLicense;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRequestFreeLicense::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestFreeLicense)
  appids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestFreeLicense::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestFreeLicense)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 appids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_appids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_appids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestFreeLicense)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestFreeLicense)
  return false;
#undef DO_
}

void CMsgClientRequestFreeLicense::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestFreeLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 appids = 2;
  for (int i = 0, n = this->appids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->appids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestFreeLicense)
}

::google::protobuf::uint8* CMsgClientRequestFreeLicense::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestFreeLicense)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 appids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->appids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestFreeLicense)
  return target;
}

size_t CMsgClientRequestFreeLicense::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestFreeLicense)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 appids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->appids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->appids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRequestFreeLicense::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestFreeLicense)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestFreeLicense* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestFreeLicense>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestFreeLicense)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestFreeLicense)
    MergeFrom(*source);
  }
}

void CMsgClientRequestFreeLicense::MergeFrom(const CMsgClientRequestFreeLicense& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestFreeLicense)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  appids_.MergeFrom(from.appids_);
}

void CMsgClientRequestFreeLicense::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestFreeLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestFreeLicense::CopyFrom(const CMsgClientRequestFreeLicense& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestFreeLicense)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestFreeLicense::IsInitialized() const {
  return true;
}

void CMsgClientRequestFreeLicense::Swap(CMsgClientRequestFreeLicense* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestFreeLicense::InternalSwap(CMsgClientRequestFreeLicense* other) {
  appids_.InternalSwap(&other->appids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRequestFreeLicense::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRequestFreeLicense

// repeated uint32 appids = 2;
int CMsgClientRequestFreeLicense::appids_size() const {
  return appids_.size();
}
void CMsgClientRequestFreeLicense::clear_appids() {
  appids_.Clear();
}
::google::protobuf::uint32 CMsgClientRequestFreeLicense::appids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestFreeLicense.appids)
  return appids_.Get(index);
}
void CMsgClientRequestFreeLicense::set_appids(int index, ::google::protobuf::uint32 value) {
  appids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestFreeLicense.appids)
}
void CMsgClientRequestFreeLicense::add_appids(::google::protobuf::uint32 value) {
  appids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientRequestFreeLicense.appids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientRequestFreeLicense::appids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientRequestFreeLicense.appids)
  return appids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientRequestFreeLicense::mutable_appids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientRequestFreeLicense.appids)
  return &appids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestFreeLicenseResponse::kEresultFieldNumber;
const int CMsgClientRequestFreeLicenseResponse::kGrantedPackageidsFieldNumber;
const int CMsgClientRequestFreeLicenseResponse::kGrantedAppidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestFreeLicenseResponse::CMsgClientRequestFreeLicenseResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestFreeLicenseResponse)
}
CMsgClientRequestFreeLicenseResponse::CMsgClientRequestFreeLicenseResponse(const CMsgClientRequestFreeLicenseResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      granted_packageids_(from.granted_packageids_),
      granted_appids_(from.granted_appids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestFreeLicenseResponse)
}

void CMsgClientRequestFreeLicenseResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2u;
}

CMsgClientRequestFreeLicenseResponse::~CMsgClientRequestFreeLicenseResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestFreeLicenseResponse)
  SharedDtor();
}

void CMsgClientRequestFreeLicenseResponse::SharedDtor() {
}

void CMsgClientRequestFreeLicenseResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRequestFreeLicenseResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestFreeLicenseResponse& CMsgClientRequestFreeLicenseResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRequestFreeLicenseResponse* CMsgClientRequestFreeLicenseResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientRequestFreeLicenseResponse* n = new CMsgClientRequestFreeLicenseResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRequestFreeLicenseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  granted_packageids_.Clear();
  granted_appids_.Clear();
  eresult_ = 2u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestFreeLicenseResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 granted_packageids = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_granted_packageids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_granted_packageids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 granted_appids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 24u, input, this->mutable_granted_appids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_granted_appids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestFreeLicenseResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestFreeLicenseResponse)
  return false;
#undef DO_
}

void CMsgClientRequestFreeLicenseResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // repeated uint32 granted_packageids = 2;
  for (int i = 0, n = this->granted_packageids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->granted_packageids(i), output);
  }

  // repeated uint32 granted_appids = 3;
  for (int i = 0, n = this->granted_appids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      3, this->granted_appids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestFreeLicenseResponse)
}

::google::protobuf::uint8* CMsgClientRequestFreeLicenseResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // repeated uint32 granted_packageids = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->granted_packageids_, target);

  // repeated uint32 granted_appids = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(3, this->granted_appids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestFreeLicenseResponse)
  return target;
}

size_t CMsgClientRequestFreeLicenseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 granted_packageids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->granted_packageids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->granted_packageids_size());
    total_size += data_size;
  }

  // repeated uint32 granted_appids = 3;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->granted_appids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->granted_appids_size());
    total_size += data_size;
  }

  // optional uint32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRequestFreeLicenseResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestFreeLicenseResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestFreeLicenseResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestFreeLicenseResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestFreeLicenseResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRequestFreeLicenseResponse::MergeFrom(const CMsgClientRequestFreeLicenseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  granted_packageids_.MergeFrom(from.granted_packageids_);
  granted_appids_.MergeFrom(from.granted_appids_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientRequestFreeLicenseResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestFreeLicenseResponse::CopyFrom(const CMsgClientRequestFreeLicenseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestFreeLicenseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestFreeLicenseResponse::IsInitialized() const {
  return true;
}

void CMsgClientRequestFreeLicenseResponse::Swap(CMsgClientRequestFreeLicenseResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestFreeLicenseResponse::InternalSwap(CMsgClientRequestFreeLicenseResponse* other) {
  granted_packageids_.InternalSwap(&other->granted_packageids_);
  granted_appids_.InternalSwap(&other->granted_appids_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRequestFreeLicenseResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRequestFreeLicenseResponse

// optional uint32 eresult = 1 [default = 2];
bool CMsgClientRequestFreeLicenseResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientRequestFreeLicenseResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientRequestFreeLicenseResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientRequestFreeLicenseResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgClientRequestFreeLicenseResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestFreeLicenseResponse.eresult)
  return eresult_;
}
void CMsgClientRequestFreeLicenseResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestFreeLicenseResponse.eresult)
}

// repeated uint32 granted_packageids = 2;
int CMsgClientRequestFreeLicenseResponse::granted_packageids_size() const {
  return granted_packageids_.size();
}
void CMsgClientRequestFreeLicenseResponse::clear_granted_packageids() {
  granted_packageids_.Clear();
}
::google::protobuf::uint32 CMsgClientRequestFreeLicenseResponse::granted_packageids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestFreeLicenseResponse.granted_packageids)
  return granted_packageids_.Get(index);
}
void CMsgClientRequestFreeLicenseResponse::set_granted_packageids(int index, ::google::protobuf::uint32 value) {
  granted_packageids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestFreeLicenseResponse.granted_packageids)
}
void CMsgClientRequestFreeLicenseResponse::add_granted_packageids(::google::protobuf::uint32 value) {
  granted_packageids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientRequestFreeLicenseResponse.granted_packageids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientRequestFreeLicenseResponse::granted_packageids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientRequestFreeLicenseResponse.granted_packageids)
  return granted_packageids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientRequestFreeLicenseResponse::mutable_granted_packageids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientRequestFreeLicenseResponse.granted_packageids)
  return &granted_packageids_;
}

// repeated uint32 granted_appids = 3;
int CMsgClientRequestFreeLicenseResponse::granted_appids_size() const {
  return granted_appids_.size();
}
void CMsgClientRequestFreeLicenseResponse::clear_granted_appids() {
  granted_appids_.Clear();
}
::google::protobuf::uint32 CMsgClientRequestFreeLicenseResponse::granted_appids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestFreeLicenseResponse.granted_appids)
  return granted_appids_.Get(index);
}
void CMsgClientRequestFreeLicenseResponse::set_granted_appids(int index, ::google::protobuf::uint32 value) {
  granted_appids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestFreeLicenseResponse.granted_appids)
}
void CMsgClientRequestFreeLicenseResponse::add_granted_appids(::google::protobuf::uint32 value) {
  granted_appids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientRequestFreeLicenseResponse.granted_appids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientRequestFreeLicenseResponse::granted_appids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientRequestFreeLicenseResponse.granted_appids)
  return granted_appids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientRequestFreeLicenseResponse::mutable_granted_appids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientRequestFreeLicenseResponse.granted_appids)
  return &granted_appids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDRMDownloadRequestWithCrashData::kDownloadFlagsFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kDownloadTypesKnownFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kGuidDrmFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kGuidSplitFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kGuidMergeFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kModuleNameFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kModulePathFieldNumber;
const int CMsgDRMDownloadRequestWithCrashData::kCrashDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDRMDownloadRequestWithCrashData::CMsgDRMDownloadRequestWithCrashData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgDRMDownloadRequestWithCrashData)
}
CMsgDRMDownloadRequestWithCrashData::CMsgDRMDownloadRequestWithCrashData(const CMsgDRMDownloadRequestWithCrashData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  guid_drm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid_drm()) {
    guid_drm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_drm_);
  }
  guid_split_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid_split()) {
    guid_split_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_split_);
  }
  guid_merge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_guid_merge()) {
    guid_merge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_merge_);
  }
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_name()) {
    module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
  }
  module_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_path()) {
    module_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_path_);
  }
  crash_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_crash_data()) {
    crash_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crash_data_);
  }
  ::memcpy(&download_flags_, &from.download_flags_,
    reinterpret_cast<char*>(&download_types_known_) -
    reinterpret_cast<char*>(&download_flags_) + sizeof(download_types_known_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgDRMDownloadRequestWithCrashData)
}

void CMsgDRMDownloadRequestWithCrashData::SharedCtor() {
  _cached_size_ = 0;
  guid_drm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_split_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_merge_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crash_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&download_flags_, 0, reinterpret_cast<char*>(&download_types_known_) -
    reinterpret_cast<char*>(&download_flags_) + sizeof(download_types_known_));
}

CMsgDRMDownloadRequestWithCrashData::~CMsgDRMDownloadRequestWithCrashData() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  SharedDtor();
}

void CMsgDRMDownloadRequestWithCrashData::SharedDtor() {
  guid_drm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_split_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  guid_merge_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  crash_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDRMDownloadRequestWithCrashData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDRMDownloadRequestWithCrashData::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDRMDownloadRequestWithCrashData& CMsgDRMDownloadRequestWithCrashData::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgDRMDownloadRequestWithCrashData* CMsgDRMDownloadRequestWithCrashData::New(::google::protobuf::Arena* arena) const {
  CMsgDRMDownloadRequestWithCrashData* n = new CMsgDRMDownloadRequestWithCrashData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgDRMDownloadRequestWithCrashData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_guid_drm()) {
      GOOGLE_DCHECK(!guid_drm_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guid_drm_.UnsafeRawStringPointer())->clear();
    }
    if (has_guid_split()) {
      GOOGLE_DCHECK(!guid_split_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guid_split_.UnsafeRawStringPointer())->clear();
    }
    if (has_guid_merge()) {
      GOOGLE_DCHECK(!guid_merge_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*guid_merge_.UnsafeRawStringPointer())->clear();
    }
    if (has_module_name()) {
      GOOGLE_DCHECK(!module_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*module_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_module_path()) {
      GOOGLE_DCHECK(!module_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*module_path_.UnsafeRawStringPointer())->clear();
    }
    if (has_crash_data()) {
      GOOGLE_DCHECK(!crash_data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*crash_data_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 192u) {
    ::memset(&download_flags_, 0, reinterpret_cast<char*>(&download_types_known_) -
      reinterpret_cast<char*>(&download_flags_) + sizeof(download_types_known_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDRMDownloadRequestWithCrashData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 download_flags = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_download_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_types_known = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_download_types_known();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_types_known_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes guid_drm = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid_drm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes guid_split = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid_split()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes guid_merge = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_guid_merge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string module_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->module_name().data(), this->module_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string module_path = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->module_path().data(), this->module_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes crash_data = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_crash_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  return false;
#undef DO_
}

void CMsgDRMDownloadRequestWithCrashData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 download_flags = 1;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->download_flags(), output);
  }

  // optional uint32 download_types_known = 2;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->download_types_known(), output);
  }

  // optional bytes guid_drm = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->guid_drm(), output);
  }

  // optional bytes guid_split = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->guid_split(), output);
  }

  // optional bytes guid_merge = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->guid_merge(), output);
  }

  // optional string module_name = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_name().data(), this->module_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->module_name(), output);
  }

  // optional string module_path = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_path().data(), this->module_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->module_path(), output);
  }

  // optional bytes crash_data = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->crash_data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgDRMDownloadRequestWithCrashData)
}

::google::protobuf::uint8* CMsgDRMDownloadRequestWithCrashData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 download_flags = 1;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->download_flags(), target);
  }

  // optional uint32 download_types_known = 2;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->download_types_known(), target);
  }

  // optional bytes guid_drm = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->guid_drm(), target);
  }

  // optional bytes guid_split = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->guid_split(), target);
  }

  // optional bytes guid_merge = 5;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->guid_merge(), target);
  }

  // optional string module_name = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_name().data(), this->module_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->module_name(), target);
  }

  // optional string module_path = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_path().data(), this->module_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->module_path(), target);
  }

  // optional bytes crash_data = 8;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->crash_data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  return target;
}

size_t CMsgDRMDownloadRequestWithCrashData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes guid_drm = 3;
    if (has_guid_drm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->guid_drm());
    }

    // optional bytes guid_split = 4;
    if (has_guid_split()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->guid_split());
    }

    // optional bytes guid_merge = 5;
    if (has_guid_merge()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->guid_merge());
    }

    // optional string module_name = 6;
    if (has_module_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->module_name());
    }

    // optional string module_path = 7;
    if (has_module_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->module_path());
    }

    // optional bytes crash_data = 8;
    if (has_crash_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->crash_data());
    }

    // optional uint32 download_flags = 1;
    if (has_download_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_flags());
    }

    // optional uint32 download_types_known = 2;
    if (has_download_types_known()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_types_known());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDRMDownloadRequestWithCrashData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDRMDownloadRequestWithCrashData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDRMDownloadRequestWithCrashData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgDRMDownloadRequestWithCrashData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgDRMDownloadRequestWithCrashData)
    MergeFrom(*source);
  }
}

void CMsgDRMDownloadRequestWithCrashData::MergeFrom(const CMsgDRMDownloadRequestWithCrashData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_guid_drm();
      guid_drm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_drm_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_guid_split();
      guid_split_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_split_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_guid_merge();
      guid_merge_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.guid_merge_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_module_name();
      module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_module_path();
      module_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_path_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_crash_data();
      crash_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.crash_data_);
    }
    if (cached_has_bits & 0x00000040u) {
      download_flags_ = from.download_flags_;
    }
    if (cached_has_bits & 0x00000080u) {
      download_types_known_ = from.download_types_known_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDRMDownloadRequestWithCrashData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDRMDownloadRequestWithCrashData::CopyFrom(const CMsgDRMDownloadRequestWithCrashData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgDRMDownloadRequestWithCrashData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDRMDownloadRequestWithCrashData::IsInitialized() const {
  return true;
}

void CMsgDRMDownloadRequestWithCrashData::Swap(CMsgDRMDownloadRequestWithCrashData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDRMDownloadRequestWithCrashData::InternalSwap(CMsgDRMDownloadRequestWithCrashData* other) {
  guid_drm_.Swap(&other->guid_drm_);
  guid_split_.Swap(&other->guid_split_);
  guid_merge_.Swap(&other->guid_merge_);
  module_name_.Swap(&other->module_name_);
  module_path_.Swap(&other->module_path_);
  crash_data_.Swap(&other->crash_data_);
  std::swap(download_flags_, other->download_flags_);
  std::swap(download_types_known_, other->download_types_known_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgDRMDownloadRequestWithCrashData::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgDRMDownloadRequestWithCrashData

// optional uint32 download_flags = 1;
bool CMsgDRMDownloadRequestWithCrashData::has_download_flags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgDRMDownloadRequestWithCrashData::set_has_download_flags() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_has_download_flags() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_download_flags() {
  download_flags_ = 0u;
  clear_has_download_flags();
}
::google::protobuf::uint32 CMsgDRMDownloadRequestWithCrashData::download_flags() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadRequestWithCrashData.download_flags)
  return download_flags_;
}
void CMsgDRMDownloadRequestWithCrashData::set_download_flags(::google::protobuf::uint32 value) {
  set_has_download_flags();
  download_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadRequestWithCrashData.download_flags)
}

// optional uint32 download_types_known = 2;
bool CMsgDRMDownloadRequestWithCrashData::has_download_types_known() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgDRMDownloadRequestWithCrashData::set_has_download_types_known() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_has_download_types_known() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_download_types_known() {
  download_types_known_ = 0u;
  clear_has_download_types_known();
}
::google::protobuf::uint32 CMsgDRMDownloadRequestWithCrashData::download_types_known() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadRequestWithCrashData.download_types_known)
  return download_types_known_;
}
void CMsgDRMDownloadRequestWithCrashData::set_download_types_known(::google::protobuf::uint32 value) {
  set_has_download_types_known();
  download_types_known_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadRequestWithCrashData.download_types_known)
}

// optional bytes guid_drm = 3;
bool CMsgDRMDownloadRequestWithCrashData::has_guid_drm() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgDRMDownloadRequestWithCrashData::set_has_guid_drm() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_has_guid_drm() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_guid_drm() {
  guid_drm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid_drm();
}
const ::std::string& CMsgDRMDownloadRequestWithCrashData::guid_drm() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_drm)
  return guid_drm_.GetNoArena();
}
void CMsgDRMDownloadRequestWithCrashData::set_guid_drm(const ::std::string& value) {
  set_has_guid_drm();
  guid_drm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_drm)
}
#if LANG_CXX11
void CMsgDRMDownloadRequestWithCrashData::set_guid_drm(::std::string&& value) {
  set_has_guid_drm();
  guid_drm_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_drm)
}
#endif
void CMsgDRMDownloadRequestWithCrashData::set_guid_drm(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid_drm();
  guid_drm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_drm)
}
void CMsgDRMDownloadRequestWithCrashData::set_guid_drm(const void* value, size_t size) {
  set_has_guid_drm();
  guid_drm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_drm)
}
::std::string* CMsgDRMDownloadRequestWithCrashData::mutable_guid_drm() {
  set_has_guid_drm();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_drm)
  return guid_drm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgDRMDownloadRequestWithCrashData::release_guid_drm() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_drm)
  clear_has_guid_drm();
  return guid_drm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgDRMDownloadRequestWithCrashData::set_allocated_guid_drm(::std::string* guid_drm) {
  if (guid_drm != NULL) {
    set_has_guid_drm();
  } else {
    clear_has_guid_drm();
  }
  guid_drm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid_drm);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_drm)
}

// optional bytes guid_split = 4;
bool CMsgDRMDownloadRequestWithCrashData::has_guid_split() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgDRMDownloadRequestWithCrashData::set_has_guid_split() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_has_guid_split() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_guid_split() {
  guid_split_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid_split();
}
const ::std::string& CMsgDRMDownloadRequestWithCrashData::guid_split() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_split)
  return guid_split_.GetNoArena();
}
void CMsgDRMDownloadRequestWithCrashData::set_guid_split(const ::std::string& value) {
  set_has_guid_split();
  guid_split_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_split)
}
#if LANG_CXX11
void CMsgDRMDownloadRequestWithCrashData::set_guid_split(::std::string&& value) {
  set_has_guid_split();
  guid_split_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_split)
}
#endif
void CMsgDRMDownloadRequestWithCrashData::set_guid_split(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid_split();
  guid_split_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_split)
}
void CMsgDRMDownloadRequestWithCrashData::set_guid_split(const void* value, size_t size) {
  set_has_guid_split();
  guid_split_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_split)
}
::std::string* CMsgDRMDownloadRequestWithCrashData::mutable_guid_split() {
  set_has_guid_split();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_split)
  return guid_split_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgDRMDownloadRequestWithCrashData::release_guid_split() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_split)
  clear_has_guid_split();
  return guid_split_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgDRMDownloadRequestWithCrashData::set_allocated_guid_split(::std::string* guid_split) {
  if (guid_split != NULL) {
    set_has_guid_split();
  } else {
    clear_has_guid_split();
  }
  guid_split_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid_split);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_split)
}

// optional bytes guid_merge = 5;
bool CMsgDRMDownloadRequestWithCrashData::has_guid_merge() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgDRMDownloadRequestWithCrashData::set_has_guid_merge() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_has_guid_merge() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_guid_merge() {
  guid_merge_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_guid_merge();
}
const ::std::string& CMsgDRMDownloadRequestWithCrashData::guid_merge() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_merge)
  return guid_merge_.GetNoArena();
}
void CMsgDRMDownloadRequestWithCrashData::set_guid_merge(const ::std::string& value) {
  set_has_guid_merge();
  guid_merge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_merge)
}
#if LANG_CXX11
void CMsgDRMDownloadRequestWithCrashData::set_guid_merge(::std::string&& value) {
  set_has_guid_merge();
  guid_merge_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_merge)
}
#endif
void CMsgDRMDownloadRequestWithCrashData::set_guid_merge(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_guid_merge();
  guid_merge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_merge)
}
void CMsgDRMDownloadRequestWithCrashData::set_guid_merge(const void* value, size_t size) {
  set_has_guid_merge();
  guid_merge_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_merge)
}
::std::string* CMsgDRMDownloadRequestWithCrashData::mutable_guid_merge() {
  set_has_guid_merge();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_merge)
  return guid_merge_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgDRMDownloadRequestWithCrashData::release_guid_merge() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_merge)
  clear_has_guid_merge();
  return guid_merge_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgDRMDownloadRequestWithCrashData::set_allocated_guid_merge(::std::string* guid_merge) {
  if (guid_merge != NULL) {
    set_has_guid_merge();
  } else {
    clear_has_guid_merge();
  }
  guid_merge_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), guid_merge);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgDRMDownloadRequestWithCrashData.guid_merge)
}

// optional string module_name = 6;
bool CMsgDRMDownloadRequestWithCrashData::has_module_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgDRMDownloadRequestWithCrashData::set_has_module_name() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_has_module_name() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_module_name() {
  module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_module_name();
}
const ::std::string& CMsgDRMDownloadRequestWithCrashData::module_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name)
  return module_name_.GetNoArena();
}
void CMsgDRMDownloadRequestWithCrashData::set_module_name(const ::std::string& value) {
  set_has_module_name();
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name)
}
#if LANG_CXX11
void CMsgDRMDownloadRequestWithCrashData::set_module_name(::std::string&& value) {
  set_has_module_name();
  module_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name)
}
#endif
void CMsgDRMDownloadRequestWithCrashData::set_module_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_module_name();
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name)
}
void CMsgDRMDownloadRequestWithCrashData::set_module_name(const char* value, size_t size) {
  set_has_module_name();
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name)
}
::std::string* CMsgDRMDownloadRequestWithCrashData::mutable_module_name() {
  set_has_module_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name)
  return module_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgDRMDownloadRequestWithCrashData::release_module_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name)
  clear_has_module_name();
  return module_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgDRMDownloadRequestWithCrashData::set_allocated_module_name(::std::string* module_name) {
  if (module_name != NULL) {
    set_has_module_name();
  } else {
    clear_has_module_name();
  }
  module_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_name)
}

// optional string module_path = 7;
bool CMsgDRMDownloadRequestWithCrashData::has_module_path() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgDRMDownloadRequestWithCrashData::set_has_module_path() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_has_module_path() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_module_path() {
  module_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_module_path();
}
const ::std::string& CMsgDRMDownloadRequestWithCrashData::module_path() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path)
  return module_path_.GetNoArena();
}
void CMsgDRMDownloadRequestWithCrashData::set_module_path(const ::std::string& value) {
  set_has_module_path();
  module_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path)
}
#if LANG_CXX11
void CMsgDRMDownloadRequestWithCrashData::set_module_path(::std::string&& value) {
  set_has_module_path();
  module_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path)
}
#endif
void CMsgDRMDownloadRequestWithCrashData::set_module_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_module_path();
  module_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path)
}
void CMsgDRMDownloadRequestWithCrashData::set_module_path(const char* value, size_t size) {
  set_has_module_path();
  module_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path)
}
::std::string* CMsgDRMDownloadRequestWithCrashData::mutable_module_path() {
  set_has_module_path();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path)
  return module_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgDRMDownloadRequestWithCrashData::release_module_path() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path)
  clear_has_module_path();
  return module_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgDRMDownloadRequestWithCrashData::set_allocated_module_path(::std::string* module_path) {
  if (module_path != NULL) {
    set_has_module_path();
  } else {
    clear_has_module_path();
  }
  module_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_path);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgDRMDownloadRequestWithCrashData.module_path)
}

// optional bytes crash_data = 8;
bool CMsgDRMDownloadRequestWithCrashData::has_crash_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgDRMDownloadRequestWithCrashData::set_has_crash_data() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_has_crash_data() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgDRMDownloadRequestWithCrashData::clear_crash_data() {
  crash_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_crash_data();
}
const ::std::string& CMsgDRMDownloadRequestWithCrashData::crash_data() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadRequestWithCrashData.crash_data)
  return crash_data_.GetNoArena();
}
void CMsgDRMDownloadRequestWithCrashData::set_crash_data(const ::std::string& value) {
  set_has_crash_data();
  crash_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadRequestWithCrashData.crash_data)
}
#if LANG_CXX11
void CMsgDRMDownloadRequestWithCrashData::set_crash_data(::std::string&& value) {
  set_has_crash_data();
  crash_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgDRMDownloadRequestWithCrashData.crash_data)
}
#endif
void CMsgDRMDownloadRequestWithCrashData::set_crash_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_crash_data();
  crash_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgDRMDownloadRequestWithCrashData.crash_data)
}
void CMsgDRMDownloadRequestWithCrashData::set_crash_data(const void* value, size_t size) {
  set_has_crash_data();
  crash_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgDRMDownloadRequestWithCrashData.crash_data)
}
::std::string* CMsgDRMDownloadRequestWithCrashData::mutable_crash_data() {
  set_has_crash_data();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgDRMDownloadRequestWithCrashData.crash_data)
  return crash_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgDRMDownloadRequestWithCrashData::release_crash_data() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgDRMDownloadRequestWithCrashData.crash_data)
  clear_has_crash_data();
  return crash_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgDRMDownloadRequestWithCrashData::set_allocated_crash_data(::std::string* crash_data) {
  if (crash_data != NULL) {
    set_has_crash_data();
  } else {
    clear_has_crash_data();
  }
  crash_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), crash_data);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgDRMDownloadRequestWithCrashData.crash_data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDRMDownloadResponse::kEresultFieldNumber;
const int CMsgDRMDownloadResponse::kAppIdFieldNumber;
const int CMsgDRMDownloadResponse::kBlobDownloadTypeFieldNumber;
const int CMsgDRMDownloadResponse::kMergeGuidFieldNumber;
const int CMsgDRMDownloadResponse::kDownloadFileDfsIpFieldNumber;
const int CMsgDRMDownloadResponse::kDownloadFileDfsPortFieldNumber;
const int CMsgDRMDownloadResponse::kDownloadFileUrlFieldNumber;
const int CMsgDRMDownloadResponse::kModulePathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDRMDownloadResponse::CMsgDRMDownloadResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgDRMDownloadResponse)
}
CMsgDRMDownloadResponse::CMsgDRMDownloadResponse(const CMsgDRMDownloadResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  merge_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_merge_guid()) {
    merge_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merge_guid_);
  }
  download_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_download_file_url()) {
    download_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_file_url_);
  }
  module_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_path()) {
    module_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_path_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgDRMDownloadResponse)
}

void CMsgDRMDownloadResponse::SharedCtor() {
  _cached_size_ = 0;
  merge_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_path_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&download_file_dfs_port_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(download_file_dfs_port_));
  eresult_ = 2u;
}

CMsgDRMDownloadResponse::~CMsgDRMDownloadResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgDRMDownloadResponse)
  SharedDtor();
}

void CMsgDRMDownloadResponse::SharedDtor() {
  merge_guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_file_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_path_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDRMDownloadResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDRMDownloadResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDRMDownloadResponse& CMsgDRMDownloadResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgDRMDownloadResponse* CMsgDRMDownloadResponse::New(::google::protobuf::Arena* arena) const {
  CMsgDRMDownloadResponse* n = new CMsgDRMDownloadResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgDRMDownloadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgDRMDownloadResponse)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_merge_guid()) {
      GOOGLE_DCHECK(!merge_guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*merge_guid_.UnsafeRawStringPointer())->clear();
    }
    if (has_download_file_url()) {
      GOOGLE_DCHECK(!download_file_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*download_file_url_.UnsafeRawStringPointer())->clear();
    }
    if (has_module_path()) {
      GOOGLE_DCHECK(!module_path_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*module_path_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 248u) {
    ::memset(&app_id_, 0, reinterpret_cast<char*>(&download_file_dfs_port_) -
      reinterpret_cast<char*>(&app_id_) + sizeof(download_file_dfs_port_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDRMDownloadResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgDRMDownloadResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 blob_download_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_blob_download_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blob_download_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes merge_guid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_merge_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_file_dfs_ip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_download_file_dfs_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_file_dfs_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_file_dfs_port = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_download_file_dfs_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_file_dfs_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string download_file_url = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_download_file_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->download_file_url().data(), this->download_file_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgDRMDownloadResponse.download_file_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string module_path = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->module_path().data(), this->module_path().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgDRMDownloadResponse.module_path");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgDRMDownloadResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgDRMDownloadResponse)
  return false;
#undef DO_
}

void CMsgDRMDownloadResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgDRMDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional uint32 blob_download_type = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->blob_download_type(), output);
  }

  // optional bytes merge_guid = 4;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->merge_guid(), output);
  }

  // optional uint32 download_file_dfs_ip = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->download_file_dfs_ip(), output);
  }

  // optional uint32 download_file_dfs_port = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->download_file_dfs_port(), output);
  }

  // optional string download_file_url = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->download_file_url().data(), this->download_file_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadResponse.download_file_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->download_file_url(), output);
  }

  // optional string module_path = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_path().data(), this->module_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadResponse.module_path");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->module_path(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgDRMDownloadResponse)
}

::google::protobuf::uint8* CMsgDRMDownloadResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgDRMDownloadResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional uint32 blob_download_type = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->blob_download_type(), target);
  }

  // optional bytes merge_guid = 4;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->merge_guid(), target);
  }

  // optional uint32 download_file_dfs_ip = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->download_file_dfs_ip(), target);
  }

  // optional uint32 download_file_dfs_port = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->download_file_dfs_port(), target);
  }

  // optional string download_file_url = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->download_file_url().data(), this->download_file_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadResponse.download_file_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->download_file_url(), target);
  }

  // optional string module_path = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->module_path().data(), this->module_path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMDownloadResponse.module_path");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->module_path(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgDRMDownloadResponse)
  return target;
}

size_t CMsgDRMDownloadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgDRMDownloadResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes merge_guid = 4;
    if (has_merge_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->merge_guid());
    }

    // optional string download_file_url = 7;
    if (has_download_file_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->download_file_url());
    }

    // optional string module_path = 8;
    if (has_module_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->module_path());
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 blob_download_type = 3;
    if (has_blob_download_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->blob_download_type());
    }

    // optional uint32 download_file_dfs_ip = 5;
    if (has_download_file_dfs_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_file_dfs_ip());
    }

    // optional uint32 download_file_dfs_port = 6;
    if (has_download_file_dfs_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_file_dfs_port());
    }

    // optional uint32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDRMDownloadResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgDRMDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDRMDownloadResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDRMDownloadResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgDRMDownloadResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgDRMDownloadResponse)
    MergeFrom(*source);
  }
}

void CMsgDRMDownloadResponse::MergeFrom(const CMsgDRMDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgDRMDownloadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_merge_guid();
      merge_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merge_guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_download_file_url();
      download_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_file_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_module_path();
      module_path_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_path_);
    }
    if (cached_has_bits & 0x00000008u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      blob_download_type_ = from.blob_download_type_;
    }
    if (cached_has_bits & 0x00000020u) {
      download_file_dfs_ip_ = from.download_file_dfs_ip_;
    }
    if (cached_has_bits & 0x00000040u) {
      download_file_dfs_port_ = from.download_file_dfs_port_;
    }
    if (cached_has_bits & 0x00000080u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDRMDownloadResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgDRMDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDRMDownloadResponse::CopyFrom(const CMsgDRMDownloadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgDRMDownloadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDRMDownloadResponse::IsInitialized() const {
  return true;
}

void CMsgDRMDownloadResponse::Swap(CMsgDRMDownloadResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDRMDownloadResponse::InternalSwap(CMsgDRMDownloadResponse* other) {
  merge_guid_.Swap(&other->merge_guid_);
  download_file_url_.Swap(&other->download_file_url_);
  module_path_.Swap(&other->module_path_);
  std::swap(app_id_, other->app_id_);
  std::swap(blob_download_type_, other->blob_download_type_);
  std::swap(download_file_dfs_ip_, other->download_file_dfs_ip_);
  std::swap(download_file_dfs_port_, other->download_file_dfs_port_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgDRMDownloadResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgDRMDownloadResponse

// optional uint32 eresult = 1 [default = 2];
bool CMsgDRMDownloadResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgDRMDownloadResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgDRMDownloadResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgDRMDownloadResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgDRMDownloadResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadResponse.eresult)
  return eresult_;
}
void CMsgDRMDownloadResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadResponse.eresult)
}

// optional uint32 app_id = 2;
bool CMsgDRMDownloadResponse::has_app_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgDRMDownloadResponse::set_has_app_id() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgDRMDownloadResponse::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgDRMDownloadResponse::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgDRMDownloadResponse::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadResponse.app_id)
  return app_id_;
}
void CMsgDRMDownloadResponse::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadResponse.app_id)
}

// optional uint32 blob_download_type = 3;
bool CMsgDRMDownloadResponse::has_blob_download_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgDRMDownloadResponse::set_has_blob_download_type() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgDRMDownloadResponse::clear_has_blob_download_type() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgDRMDownloadResponse::clear_blob_download_type() {
  blob_download_type_ = 0u;
  clear_has_blob_download_type();
}
::google::protobuf::uint32 CMsgDRMDownloadResponse::blob_download_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadResponse.blob_download_type)
  return blob_download_type_;
}
void CMsgDRMDownloadResponse::set_blob_download_type(::google::protobuf::uint32 value) {
  set_has_blob_download_type();
  blob_download_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadResponse.blob_download_type)
}

// optional bytes merge_guid = 4;
bool CMsgDRMDownloadResponse::has_merge_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgDRMDownloadResponse::set_has_merge_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgDRMDownloadResponse::clear_has_merge_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgDRMDownloadResponse::clear_merge_guid() {
  merge_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_merge_guid();
}
const ::std::string& CMsgDRMDownloadResponse::merge_guid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadResponse.merge_guid)
  return merge_guid_.GetNoArena();
}
void CMsgDRMDownloadResponse::set_merge_guid(const ::std::string& value) {
  set_has_merge_guid();
  merge_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadResponse.merge_guid)
}
#if LANG_CXX11
void CMsgDRMDownloadResponse::set_merge_guid(::std::string&& value) {
  set_has_merge_guid();
  merge_guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgDRMDownloadResponse.merge_guid)
}
#endif
void CMsgDRMDownloadResponse::set_merge_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_merge_guid();
  merge_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgDRMDownloadResponse.merge_guid)
}
void CMsgDRMDownloadResponse::set_merge_guid(const void* value, size_t size) {
  set_has_merge_guid();
  merge_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgDRMDownloadResponse.merge_guid)
}
::std::string* CMsgDRMDownloadResponse::mutable_merge_guid() {
  set_has_merge_guid();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgDRMDownloadResponse.merge_guid)
  return merge_guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgDRMDownloadResponse::release_merge_guid() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgDRMDownloadResponse.merge_guid)
  clear_has_merge_guid();
  return merge_guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgDRMDownloadResponse::set_allocated_merge_guid(::std::string* merge_guid) {
  if (merge_guid != NULL) {
    set_has_merge_guid();
  } else {
    clear_has_merge_guid();
  }
  merge_guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), merge_guid);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgDRMDownloadResponse.merge_guid)
}

// optional uint32 download_file_dfs_ip = 5;
bool CMsgDRMDownloadResponse::has_download_file_dfs_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgDRMDownloadResponse::set_has_download_file_dfs_ip() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgDRMDownloadResponse::clear_has_download_file_dfs_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgDRMDownloadResponse::clear_download_file_dfs_ip() {
  download_file_dfs_ip_ = 0u;
  clear_has_download_file_dfs_ip();
}
::google::protobuf::uint32 CMsgDRMDownloadResponse::download_file_dfs_ip() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadResponse.download_file_dfs_ip)
  return download_file_dfs_ip_;
}
void CMsgDRMDownloadResponse::set_download_file_dfs_ip(::google::protobuf::uint32 value) {
  set_has_download_file_dfs_ip();
  download_file_dfs_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadResponse.download_file_dfs_ip)
}

// optional uint32 download_file_dfs_port = 6;
bool CMsgDRMDownloadResponse::has_download_file_dfs_port() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgDRMDownloadResponse::set_has_download_file_dfs_port() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgDRMDownloadResponse::clear_has_download_file_dfs_port() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgDRMDownloadResponse::clear_download_file_dfs_port() {
  download_file_dfs_port_ = 0u;
  clear_has_download_file_dfs_port();
}
::google::protobuf::uint32 CMsgDRMDownloadResponse::download_file_dfs_port() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadResponse.download_file_dfs_port)
  return download_file_dfs_port_;
}
void CMsgDRMDownloadResponse::set_download_file_dfs_port(::google::protobuf::uint32 value) {
  set_has_download_file_dfs_port();
  download_file_dfs_port_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadResponse.download_file_dfs_port)
}

// optional string download_file_url = 7;
bool CMsgDRMDownloadResponse::has_download_file_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgDRMDownloadResponse::set_has_download_file_url() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgDRMDownloadResponse::clear_has_download_file_url() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgDRMDownloadResponse::clear_download_file_url() {
  download_file_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_download_file_url();
}
const ::std::string& CMsgDRMDownloadResponse::download_file_url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadResponse.download_file_url)
  return download_file_url_.GetNoArena();
}
void CMsgDRMDownloadResponse::set_download_file_url(const ::std::string& value) {
  set_has_download_file_url();
  download_file_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadResponse.download_file_url)
}
#if LANG_CXX11
void CMsgDRMDownloadResponse::set_download_file_url(::std::string&& value) {
  set_has_download_file_url();
  download_file_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgDRMDownloadResponse.download_file_url)
}
#endif
void CMsgDRMDownloadResponse::set_download_file_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_download_file_url();
  download_file_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgDRMDownloadResponse.download_file_url)
}
void CMsgDRMDownloadResponse::set_download_file_url(const char* value, size_t size) {
  set_has_download_file_url();
  download_file_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgDRMDownloadResponse.download_file_url)
}
::std::string* CMsgDRMDownloadResponse::mutable_download_file_url() {
  set_has_download_file_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgDRMDownloadResponse.download_file_url)
  return download_file_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgDRMDownloadResponse::release_download_file_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgDRMDownloadResponse.download_file_url)
  clear_has_download_file_url();
  return download_file_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgDRMDownloadResponse::set_allocated_download_file_url(::std::string* download_file_url) {
  if (download_file_url != NULL) {
    set_has_download_file_url();
  } else {
    clear_has_download_file_url();
  }
  download_file_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), download_file_url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgDRMDownloadResponse.download_file_url)
}

// optional string module_path = 8;
bool CMsgDRMDownloadResponse::has_module_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgDRMDownloadResponse::set_has_module_path() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgDRMDownloadResponse::clear_has_module_path() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgDRMDownloadResponse::clear_module_path() {
  module_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_module_path();
}
const ::std::string& CMsgDRMDownloadResponse::module_path() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMDownloadResponse.module_path)
  return module_path_.GetNoArena();
}
void CMsgDRMDownloadResponse::set_module_path(const ::std::string& value) {
  set_has_module_path();
  module_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMDownloadResponse.module_path)
}
#if LANG_CXX11
void CMsgDRMDownloadResponse::set_module_path(::std::string&& value) {
  set_has_module_path();
  module_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgDRMDownloadResponse.module_path)
}
#endif
void CMsgDRMDownloadResponse::set_module_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_module_path();
  module_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgDRMDownloadResponse.module_path)
}
void CMsgDRMDownloadResponse::set_module_path(const char* value, size_t size) {
  set_has_module_path();
  module_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgDRMDownloadResponse.module_path)
}
::std::string* CMsgDRMDownloadResponse::mutable_module_path() {
  set_has_module_path();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgDRMDownloadResponse.module_path)
  return module_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgDRMDownloadResponse::release_module_path() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgDRMDownloadResponse.module_path)
  clear_has_module_path();
  return module_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgDRMDownloadResponse::set_allocated_module_path(::std::string* module_path) {
  if (module_path != NULL) {
    set_has_module_path();
  } else {
    clear_has_module_path();
  }
  module_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_path);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgDRMDownloadResponse.module_path)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDRMFinalResult::kEResultFieldNumber;
const int CMsgDRMFinalResult::kAppIdFieldNumber;
const int CMsgDRMFinalResult::kBlobDownloadTypeFieldNumber;
const int CMsgDRMFinalResult::kErrorDetailFieldNumber;
const int CMsgDRMFinalResult::kMergeGuidFieldNumber;
const int CMsgDRMFinalResult::kDownloadFileDfsIpFieldNumber;
const int CMsgDRMFinalResult::kDownloadFileDfsPortFieldNumber;
const int CMsgDRMFinalResult::kDownloadFileUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDRMFinalResult::CMsgDRMFinalResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgDRMFinalResult)
}
CMsgDRMFinalResult::CMsgDRMFinalResult(const CMsgDRMFinalResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  merge_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_merge_guid()) {
    merge_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merge_guid_);
  }
  download_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_download_file_url()) {
    download_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_file_url_);
  }
  ::memcpy(&app_id_, &from.app_id_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgDRMFinalResult)
}

void CMsgDRMFinalResult::SharedCtor() {
  _cached_size_ = 0;
  merge_guid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_file_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&download_file_dfs_port_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(download_file_dfs_port_));
  eresult_ = 2u;
}

CMsgDRMFinalResult::~CMsgDRMFinalResult() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgDRMFinalResult)
  SharedDtor();
}

void CMsgDRMFinalResult::SharedDtor() {
  merge_guid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  download_file_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgDRMFinalResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDRMFinalResult::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDRMFinalResult& CMsgDRMFinalResult::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgDRMFinalResult* CMsgDRMFinalResult::New(::google::protobuf::Arena* arena) const {
  CMsgDRMFinalResult* n = new CMsgDRMFinalResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgDRMFinalResult::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgDRMFinalResult)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_merge_guid()) {
      GOOGLE_DCHECK(!merge_guid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*merge_guid_.UnsafeRawStringPointer())->clear();
    }
    if (has_download_file_url()) {
      GOOGLE_DCHECK(!download_file_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*download_file_url_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 252u) {
    ::memset(&app_id_, 0, reinterpret_cast<char*>(&download_file_dfs_port_) -
      reinterpret_cast<char*>(&app_id_) + sizeof(download_file_dfs_port_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDRMFinalResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgDRMFinalResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eResult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 blob_download_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_blob_download_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &blob_download_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 error_detail = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_error_detail();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &error_detail_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes merge_guid = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_merge_guid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_file_dfs_ip = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_download_file_dfs_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_file_dfs_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 download_file_dfs_port = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_download_file_dfs_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &download_file_dfs_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string download_file_url = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_download_file_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->download_file_url().data(), this->download_file_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgDRMFinalResult.download_file_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgDRMFinalResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgDRMFinalResult)
  return false;
#undef DO_
}

void CMsgDRMFinalResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgDRMFinalResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->app_id(), output);
  }

  // optional uint32 blob_download_type = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->blob_download_type(), output);
  }

  // optional uint32 error_detail = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->error_detail(), output);
  }

  // optional bytes merge_guid = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->merge_guid(), output);
  }

  // optional uint32 download_file_dfs_ip = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->download_file_dfs_ip(), output);
  }

  // optional uint32 download_file_dfs_port = 7;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->download_file_dfs_port(), output);
  }

  // optional string download_file_url = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->download_file_url().data(), this->download_file_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMFinalResult.download_file_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->download_file_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgDRMFinalResult)
}

::google::protobuf::uint8* CMsgDRMFinalResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgDRMFinalResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 app_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->app_id(), target);
  }

  // optional uint32 blob_download_type = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->blob_download_type(), target);
  }

  // optional uint32 error_detail = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->error_detail(), target);
  }

  // optional bytes merge_guid = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->merge_guid(), target);
  }

  // optional uint32 download_file_dfs_ip = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->download_file_dfs_ip(), target);
  }

  // optional uint32 download_file_dfs_port = 7;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->download_file_dfs_port(), target);
  }

  // optional string download_file_url = 8;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->download_file_url().data(), this->download_file_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgDRMFinalResult.download_file_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->download_file_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgDRMFinalResult)
  return target;
}

size_t CMsgDRMFinalResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgDRMFinalResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes merge_guid = 5;
    if (has_merge_guid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->merge_guid());
    }

    // optional string download_file_url = 8;
    if (has_download_file_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->download_file_url());
    }

    // optional uint32 app_id = 2;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 blob_download_type = 3;
    if (has_blob_download_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->blob_download_type());
    }

    // optional uint32 error_detail = 4;
    if (has_error_detail()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->error_detail());
    }

    // optional uint32 download_file_dfs_ip = 6;
    if (has_download_file_dfs_ip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_file_dfs_ip());
    }

    // optional uint32 download_file_dfs_port = 7;
    if (has_download_file_dfs_port()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->download_file_dfs_port());
    }

    // optional uint32 eResult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDRMFinalResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgDRMFinalResult)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDRMFinalResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDRMFinalResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgDRMFinalResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgDRMFinalResult)
    MergeFrom(*source);
  }
}

void CMsgDRMFinalResult::MergeFrom(const CMsgDRMFinalResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgDRMFinalResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_merge_guid();
      merge_guid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.merge_guid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_download_file_url();
      download_file_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.download_file_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      blob_download_type_ = from.blob_download_type_;
    }
    if (cached_has_bits & 0x00000010u) {
      error_detail_ = from.error_detail_;
    }
    if (cached_has_bits & 0x00000020u) {
      download_file_dfs_ip_ = from.download_file_dfs_ip_;
    }
    if (cached_has_bits & 0x00000040u) {
      download_file_dfs_port_ = from.download_file_dfs_port_;
    }
    if (cached_has_bits & 0x00000080u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDRMFinalResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgDRMFinalResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDRMFinalResult::CopyFrom(const CMsgDRMFinalResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgDRMFinalResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDRMFinalResult::IsInitialized() const {
  return true;
}

void CMsgDRMFinalResult::Swap(CMsgDRMFinalResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDRMFinalResult::InternalSwap(CMsgDRMFinalResult* other) {
  merge_guid_.Swap(&other->merge_guid_);
  download_file_url_.Swap(&other->download_file_url_);
  std::swap(app_id_, other->app_id_);
  std::swap(blob_download_type_, other->blob_download_type_);
  std::swap(error_detail_, other->error_detail_);
  std::swap(download_file_dfs_ip_, other->download_file_dfs_ip_);
  std::swap(download_file_dfs_port_, other->download_file_dfs_port_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgDRMFinalResult::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgDRMFinalResult

// optional uint32 eResult = 1 [default = 2];
bool CMsgDRMFinalResult::has_eresult() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgDRMFinalResult::set_has_eresult() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgDRMFinalResult::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgDRMFinalResult::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgDRMFinalResult::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMFinalResult.eResult)
  return eresult_;
}
void CMsgDRMFinalResult::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMFinalResult.eResult)
}

// optional uint32 app_id = 2;
bool CMsgDRMFinalResult::has_app_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgDRMFinalResult::set_has_app_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgDRMFinalResult::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgDRMFinalResult::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgDRMFinalResult::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMFinalResult.app_id)
  return app_id_;
}
void CMsgDRMFinalResult::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMFinalResult.app_id)
}

// optional uint32 blob_download_type = 3;
bool CMsgDRMFinalResult::has_blob_download_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgDRMFinalResult::set_has_blob_download_type() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgDRMFinalResult::clear_has_blob_download_type() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgDRMFinalResult::clear_blob_download_type() {
  blob_download_type_ = 0u;
  clear_has_blob_download_type();
}
::google::protobuf::uint32 CMsgDRMFinalResult::blob_download_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMFinalResult.blob_download_type)
  return blob_download_type_;
}
void CMsgDRMFinalResult::set_blob_download_type(::google::protobuf::uint32 value) {
  set_has_blob_download_type();
  blob_download_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMFinalResult.blob_download_type)
}

// optional uint32 error_detail = 4;
bool CMsgDRMFinalResult::has_error_detail() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgDRMFinalResult::set_has_error_detail() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgDRMFinalResult::clear_has_error_detail() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgDRMFinalResult::clear_error_detail() {
  error_detail_ = 0u;
  clear_has_error_detail();
}
::google::protobuf::uint32 CMsgDRMFinalResult::error_detail() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMFinalResult.error_detail)
  return error_detail_;
}
void CMsgDRMFinalResult::set_error_detail(::google::protobuf::uint32 value) {
  set_has_error_detail();
  error_detail_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMFinalResult.error_detail)
}

// optional bytes merge_guid = 5;
bool CMsgDRMFinalResult::has_merge_guid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgDRMFinalResult::set_has_merge_guid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgDRMFinalResult::clear_has_merge_guid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgDRMFinalResult::clear_merge_guid() {
  merge_guid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_merge_guid();
}
const ::std::string& CMsgDRMFinalResult::merge_guid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMFinalResult.merge_guid)
  return merge_guid_.GetNoArena();
}
void CMsgDRMFinalResult::set_merge_guid(const ::std::string& value) {
  set_has_merge_guid();
  merge_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMFinalResult.merge_guid)
}
#if LANG_CXX11
void CMsgDRMFinalResult::set_merge_guid(::std::string&& value) {
  set_has_merge_guid();
  merge_guid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgDRMFinalResult.merge_guid)
}
#endif
void CMsgDRMFinalResult::set_merge_guid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_merge_guid();
  merge_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgDRMFinalResult.merge_guid)
}
void CMsgDRMFinalResult::set_merge_guid(const void* value, size_t size) {
  set_has_merge_guid();
  merge_guid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgDRMFinalResult.merge_guid)
}
::std::string* CMsgDRMFinalResult::mutable_merge_guid() {
  set_has_merge_guid();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgDRMFinalResult.merge_guid)
  return merge_guid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgDRMFinalResult::release_merge_guid() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgDRMFinalResult.merge_guid)
  clear_has_merge_guid();
  return merge_guid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgDRMFinalResult::set_allocated_merge_guid(::std::string* merge_guid) {
  if (merge_guid != NULL) {
    set_has_merge_guid();
  } else {
    clear_has_merge_guid();
  }
  merge_guid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), merge_guid);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgDRMFinalResult.merge_guid)
}

// optional uint32 download_file_dfs_ip = 6;
bool CMsgDRMFinalResult::has_download_file_dfs_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgDRMFinalResult::set_has_download_file_dfs_ip() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgDRMFinalResult::clear_has_download_file_dfs_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgDRMFinalResult::clear_download_file_dfs_ip() {
  download_file_dfs_ip_ = 0u;
  clear_has_download_file_dfs_ip();
}
::google::protobuf::uint32 CMsgDRMFinalResult::download_file_dfs_ip() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMFinalResult.download_file_dfs_ip)
  return download_file_dfs_ip_;
}
void CMsgDRMFinalResult::set_download_file_dfs_ip(::google::protobuf::uint32 value) {
  set_has_download_file_dfs_ip();
  download_file_dfs_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMFinalResult.download_file_dfs_ip)
}

// optional uint32 download_file_dfs_port = 7;
bool CMsgDRMFinalResult::has_download_file_dfs_port() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgDRMFinalResult::set_has_download_file_dfs_port() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgDRMFinalResult::clear_has_download_file_dfs_port() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgDRMFinalResult::clear_download_file_dfs_port() {
  download_file_dfs_port_ = 0u;
  clear_has_download_file_dfs_port();
}
::google::protobuf::uint32 CMsgDRMFinalResult::download_file_dfs_port() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMFinalResult.download_file_dfs_port)
  return download_file_dfs_port_;
}
void CMsgDRMFinalResult::set_download_file_dfs_port(::google::protobuf::uint32 value) {
  set_has_download_file_dfs_port();
  download_file_dfs_port_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMFinalResult.download_file_dfs_port)
}

// optional string download_file_url = 8;
bool CMsgDRMFinalResult::has_download_file_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgDRMFinalResult::set_has_download_file_url() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgDRMFinalResult::clear_has_download_file_url() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgDRMFinalResult::clear_download_file_url() {
  download_file_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_download_file_url();
}
const ::std::string& CMsgDRMFinalResult::download_file_url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDRMFinalResult.download_file_url)
  return download_file_url_.GetNoArena();
}
void CMsgDRMFinalResult::set_download_file_url(const ::std::string& value) {
  set_has_download_file_url();
  download_file_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDRMFinalResult.download_file_url)
}
#if LANG_CXX11
void CMsgDRMFinalResult::set_download_file_url(::std::string&& value) {
  set_has_download_file_url();
  download_file_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgDRMFinalResult.download_file_url)
}
#endif
void CMsgDRMFinalResult::set_download_file_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_download_file_url();
  download_file_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgDRMFinalResult.download_file_url)
}
void CMsgDRMFinalResult::set_download_file_url(const char* value, size_t size) {
  set_has_download_file_url();
  download_file_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgDRMFinalResult.download_file_url)
}
::std::string* CMsgDRMFinalResult::mutable_download_file_url() {
  set_has_download_file_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgDRMFinalResult.download_file_url)
  return download_file_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgDRMFinalResult::release_download_file_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgDRMFinalResult.download_file_url)
  clear_has_download_file_url();
  return download_file_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgDRMFinalResult::set_allocated_download_file_url(::std::string* download_file_url) {
  if (download_file_url != NULL) {
    set_has_download_file_url();
  } else {
    clear_has_download_file_url();
  }
  download_file_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), download_file_url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgDRMFinalResult.download_file_url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPCheckSpecialSurvey::kSurveyIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPCheckSpecialSurvey::CMsgClientDPCheckSpecialSurvey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientDPCheckSpecialSurvey)
}
CMsgClientDPCheckSpecialSurvey::CMsgClientDPCheckSpecialSurvey(const CMsgClientDPCheckSpecialSurvey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  survey_id_ = from.survey_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientDPCheckSpecialSurvey)
}

void CMsgClientDPCheckSpecialSurvey::SharedCtor() {
  _cached_size_ = 0;
  survey_id_ = 0u;
}

CMsgClientDPCheckSpecialSurvey::~CMsgClientDPCheckSpecialSurvey() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientDPCheckSpecialSurvey)
  SharedDtor();
}

void CMsgClientDPCheckSpecialSurvey::SharedDtor() {
}

void CMsgClientDPCheckSpecialSurvey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientDPCheckSpecialSurvey::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDPCheckSpecialSurvey& CMsgClientDPCheckSpecialSurvey::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientDPCheckSpecialSurvey* CMsgClientDPCheckSpecialSurvey::New(::google::protobuf::Arena* arena) const {
  CMsgClientDPCheckSpecialSurvey* n = new CMsgClientDPCheckSpecialSurvey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientDPCheckSpecialSurvey::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  survey_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDPCheckSpecialSurvey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 survey_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_survey_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &survey_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientDPCheckSpecialSurvey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientDPCheckSpecialSurvey)
  return false;
#undef DO_
}

void CMsgClientDPCheckSpecialSurvey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 survey_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->survey_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientDPCheckSpecialSurvey)
}

::google::protobuf::uint8* CMsgClientDPCheckSpecialSurvey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 survey_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->survey_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientDPCheckSpecialSurvey)
  return target;
}

size_t CMsgClientDPCheckSpecialSurvey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 survey_id = 1;
  if (has_survey_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->survey_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientDPCheckSpecialSurvey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPCheckSpecialSurvey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDPCheckSpecialSurvey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientDPCheckSpecialSurvey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientDPCheckSpecialSurvey)
    MergeFrom(*source);
  }
}

void CMsgClientDPCheckSpecialSurvey::MergeFrom(const CMsgClientDPCheckSpecialSurvey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_survey_id()) {
    set_survey_id(from.survey_id());
  }
}

void CMsgClientDPCheckSpecialSurvey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPCheckSpecialSurvey::CopyFrom(const CMsgClientDPCheckSpecialSurvey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientDPCheckSpecialSurvey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPCheckSpecialSurvey::IsInitialized() const {
  return true;
}

void CMsgClientDPCheckSpecialSurvey::Swap(CMsgClientDPCheckSpecialSurvey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPCheckSpecialSurvey::InternalSwap(CMsgClientDPCheckSpecialSurvey* other) {
  std::swap(survey_id_, other->survey_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientDPCheckSpecialSurvey::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientDPCheckSpecialSurvey

// optional uint32 survey_id = 1;
bool CMsgClientDPCheckSpecialSurvey::has_survey_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientDPCheckSpecialSurvey::set_has_survey_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientDPCheckSpecialSurvey::clear_has_survey_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientDPCheckSpecialSurvey::clear_survey_id() {
  survey_id_ = 0u;
  clear_has_survey_id();
}
::google::protobuf::uint32 CMsgClientDPCheckSpecialSurvey::survey_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPCheckSpecialSurvey.survey_id)
  return survey_id_;
}
void CMsgClientDPCheckSpecialSurvey::set_survey_id(::google::protobuf::uint32 value) {
  set_has_survey_id();
  survey_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPCheckSpecialSurvey.survey_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPCheckSpecialSurveyResponse::kEResultFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kStateFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kNameFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kCustomUrlFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kIncludeSoftwareFieldNumber;
const int CMsgClientDPCheckSpecialSurveyResponse::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPCheckSpecialSurveyResponse::CMsgClientDPCheckSpecialSurveyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
}
CMsgClientDPCheckSpecialSurveyResponse::CMsgClientDPCheckSpecialSurveyResponse(const CMsgClientDPCheckSpecialSurveyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  custom_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_custom_url()) {
    custom_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_url_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&state_, &from.state_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&state_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
}

void CMsgClientDPCheckSpecialSurveyResponse::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&state_, 0, reinterpret_cast<char*>(&include_software_) -
    reinterpret_cast<char*>(&state_) + sizeof(include_software_));
  eresult_ = 2u;
}

CMsgClientDPCheckSpecialSurveyResponse::~CMsgClientDPCheckSpecialSurveyResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  SharedDtor();
}

void CMsgClientDPCheckSpecialSurveyResponse::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  custom_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientDPCheckSpecialSurveyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientDPCheckSpecialSurveyResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDPCheckSpecialSurveyResponse& CMsgClientDPCheckSpecialSurveyResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientDPCheckSpecialSurveyResponse* CMsgClientDPCheckSpecialSurveyResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientDPCheckSpecialSurveyResponse* n = new CMsgClientDPCheckSpecialSurveyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientDPCheckSpecialSurveyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_custom_url()) {
      GOOGLE_DCHECK(!custom_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*custom_url_.UnsafeRawStringPointer())->clear();
    }
    if (has_token()) {
      GOOGLE_DCHECK(!token_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*token_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&state_, 0, reinterpret_cast<char*>(&include_software_) -
      reinterpret_cast<char*>(&state_) + sizeof(include_software_));
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDPCheckSpecialSurveyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eResult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string custom_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_custom_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->custom_url().data(), this->custom_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool include_software = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_include_software();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &include_software_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes token = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  return false;
#undef DO_
}

void CMsgClientDPCheckSpecialSurveyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional uint32 state = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional string custom_url = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->custom_url().data(), this->custom_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->custom_url(), output);
  }

  // optional bool include_software = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->include_software(), output);
  }

  // optional bytes token = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
}

::google::protobuf::uint8* CMsgClientDPCheckSpecialSurveyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 state = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state(), target);
  }

  // optional string name = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional string custom_url = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->custom_url().data(), this->custom_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->custom_url(), target);
  }

  // optional bool include_software = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->include_software(), target);
  }

  // optional bytes token = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  return target;
}

size_t CMsgClientDPCheckSpecialSurveyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string custom_url = 4;
    if (has_custom_url()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->custom_url());
    }

    // optional bytes token = 6;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token());
    }

    // optional uint32 state = 2;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

    // optional bool include_software = 5;
    if (has_include_software()) {
      total_size += 1 + 1;
    }

    // optional uint32 eResult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientDPCheckSpecialSurveyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPCheckSpecialSurveyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDPCheckSpecialSurveyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
    MergeFrom(*source);
  }
}

void CMsgClientDPCheckSpecialSurveyResponse::MergeFrom(const CMsgClientDPCheckSpecialSurveyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_custom_url();
      custom_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.custom_url_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000008u) {
      state_ = from.state_;
    }
    if (cached_has_bits & 0x00000010u) {
      include_software_ = from.include_software_;
    }
    if (cached_has_bits & 0x00000020u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDPCheckSpecialSurveyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPCheckSpecialSurveyResponse::CopyFrom(const CMsgClientDPCheckSpecialSurveyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientDPCheckSpecialSurveyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPCheckSpecialSurveyResponse::IsInitialized() const {
  return true;
}

void CMsgClientDPCheckSpecialSurveyResponse::Swap(CMsgClientDPCheckSpecialSurveyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPCheckSpecialSurveyResponse::InternalSwap(CMsgClientDPCheckSpecialSurveyResponse* other) {
  name_.Swap(&other->name_);
  custom_url_.Swap(&other->custom_url_);
  token_.Swap(&other->token_);
  std::swap(state_, other->state_);
  std::swap(include_software_, other->include_software_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientDPCheckSpecialSurveyResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientDPCheckSpecialSurveyResponse

// optional uint32 eResult = 1 [default = 2];
bool CMsgClientDPCheckSpecialSurveyResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientDPCheckSpecialSurveyResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientDPCheckSpecialSurveyResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientDPCheckSpecialSurveyResponse::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgClientDPCheckSpecialSurveyResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.eResult)
  return eresult_;
}
void CMsgClientDPCheckSpecialSurveyResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.eResult)
}

// optional uint32 state = 2;
bool CMsgClientDPCheckSpecialSurveyResponse::has_state() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientDPCheckSpecialSurveyResponse::set_has_state() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientDPCheckSpecialSurveyResponse::clear_has_state() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientDPCheckSpecialSurveyResponse::clear_state() {
  state_ = 0u;
  clear_has_state();
}
::google::protobuf::uint32 CMsgClientDPCheckSpecialSurveyResponse::state() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.state)
  return state_;
}
void CMsgClientDPCheckSpecialSurveyResponse::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.state)
}

// optional string name = 3;
bool CMsgClientDPCheckSpecialSurveyResponse::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientDPCheckSpecialSurveyResponse::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientDPCheckSpecialSurveyResponse::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientDPCheckSpecialSurveyResponse::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& CMsgClientDPCheckSpecialSurveyResponse::name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name)
  return name_.GetNoArena();
}
void CMsgClientDPCheckSpecialSurveyResponse::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name)
}
#if LANG_CXX11
void CMsgClientDPCheckSpecialSurveyResponse::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name)
}
#endif
void CMsgClientDPCheckSpecialSurveyResponse::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name)
}
void CMsgClientDPCheckSpecialSurveyResponse::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name)
}
::std::string* CMsgClientDPCheckSpecialSurveyResponse::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientDPCheckSpecialSurveyResponse::release_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientDPCheckSpecialSurveyResponse::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.name)
}

// optional string custom_url = 4;
bool CMsgClientDPCheckSpecialSurveyResponse::has_custom_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientDPCheckSpecialSurveyResponse::set_has_custom_url() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientDPCheckSpecialSurveyResponse::clear_has_custom_url() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientDPCheckSpecialSurveyResponse::clear_custom_url() {
  custom_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_custom_url();
}
const ::std::string& CMsgClientDPCheckSpecialSurveyResponse::custom_url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url)
  return custom_url_.GetNoArena();
}
void CMsgClientDPCheckSpecialSurveyResponse::set_custom_url(const ::std::string& value) {
  set_has_custom_url();
  custom_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url)
}
#if LANG_CXX11
void CMsgClientDPCheckSpecialSurveyResponse::set_custom_url(::std::string&& value) {
  set_has_custom_url();
  custom_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url)
}
#endif
void CMsgClientDPCheckSpecialSurveyResponse::set_custom_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_custom_url();
  custom_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url)
}
void CMsgClientDPCheckSpecialSurveyResponse::set_custom_url(const char* value, size_t size) {
  set_has_custom_url();
  custom_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url)
}
::std::string* CMsgClientDPCheckSpecialSurveyResponse::mutable_custom_url() {
  set_has_custom_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url)
  return custom_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientDPCheckSpecialSurveyResponse::release_custom_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url)
  clear_has_custom_url();
  return custom_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientDPCheckSpecialSurveyResponse::set_allocated_custom_url(::std::string* custom_url) {
  if (custom_url != NULL) {
    set_has_custom_url();
  } else {
    clear_has_custom_url();
  }
  custom_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), custom_url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.custom_url)
}

// optional bool include_software = 5;
bool CMsgClientDPCheckSpecialSurveyResponse::has_include_software() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientDPCheckSpecialSurveyResponse::set_has_include_software() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientDPCheckSpecialSurveyResponse::clear_has_include_software() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientDPCheckSpecialSurveyResponse::clear_include_software() {
  include_software_ = false;
  clear_has_include_software();
}
bool CMsgClientDPCheckSpecialSurveyResponse::include_software() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.include_software)
  return include_software_;
}
void CMsgClientDPCheckSpecialSurveyResponse::set_include_software(bool value) {
  set_has_include_software();
  include_software_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.include_software)
}

// optional bytes token = 6;
bool CMsgClientDPCheckSpecialSurveyResponse::has_token() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientDPCheckSpecialSurveyResponse::set_has_token() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientDPCheckSpecialSurveyResponse::clear_has_token() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientDPCheckSpecialSurveyResponse::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
const ::std::string& CMsgClientDPCheckSpecialSurveyResponse::token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.token)
  return token_.GetNoArena();
}
void CMsgClientDPCheckSpecialSurveyResponse::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.token)
}
#if LANG_CXX11
void CMsgClientDPCheckSpecialSurveyResponse::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.token)
}
#endif
void CMsgClientDPCheckSpecialSurveyResponse::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.token)
}
void CMsgClientDPCheckSpecialSurveyResponse::set_token(const void* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.token)
}
::std::string* CMsgClientDPCheckSpecialSurveyResponse::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientDPCheckSpecialSurveyResponse::release_token() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientDPCheckSpecialSurveyResponse::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientDPCheckSpecialSurveyResponse.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPSendSpecialSurveyResponse::kSurveyIdFieldNumber;
const int CMsgClientDPSendSpecialSurveyResponse::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPSendSpecialSurveyResponse::CMsgClientDPSendSpecialSurveyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
}
CMsgClientDPSendSpecialSurveyResponse::CMsgClientDPSendSpecialSurveyResponse(const CMsgClientDPSendSpecialSurveyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_data()) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  survey_id_ = from.survey_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
}

void CMsgClientDPSendSpecialSurveyResponse::SharedCtor() {
  _cached_size_ = 0;
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  survey_id_ = 0u;
}

CMsgClientDPSendSpecialSurveyResponse::~CMsgClientDPSendSpecialSurveyResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  SharedDtor();
}

void CMsgClientDPSendSpecialSurveyResponse::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientDPSendSpecialSurveyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientDPSendSpecialSurveyResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDPSendSpecialSurveyResponse& CMsgClientDPSendSpecialSurveyResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientDPSendSpecialSurveyResponse* CMsgClientDPSendSpecialSurveyResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientDPSendSpecialSurveyResponse* n = new CMsgClientDPSendSpecialSurveyResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientDPSendSpecialSurveyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  if (has_data()) {
    GOOGLE_DCHECK(!data_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*data_.UnsafeRawStringPointer())->clear();
  }
  survey_id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDPSendSpecialSurveyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 survey_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_survey_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &survey_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  return false;
#undef DO_
}

void CMsgClientDPSendSpecialSurveyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 survey_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->survey_id(), output);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
}

::google::protobuf::uint8* CMsgClientDPSendSpecialSurveyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 survey_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->survey_id(), target);
  }

  // optional bytes data = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  return target;
}

size_t CMsgClientDPSendSpecialSurveyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes data = 2;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional uint32 survey_id = 1;
    if (has_survey_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->survey_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientDPSendSpecialSurveyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPSendSpecialSurveyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDPSendSpecialSurveyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
    MergeFrom(*source);
  }
}

void CMsgClientDPSendSpecialSurveyResponse::MergeFrom(const CMsgClientDPSendSpecialSurveyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_data();
      data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    if (cached_has_bits & 0x00000002u) {
      survey_id_ = from.survey_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDPSendSpecialSurveyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPSendSpecialSurveyResponse::CopyFrom(const CMsgClientDPSendSpecialSurveyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPSendSpecialSurveyResponse::IsInitialized() const {
  return true;
}

void CMsgClientDPSendSpecialSurveyResponse::Swap(CMsgClientDPSendSpecialSurveyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPSendSpecialSurveyResponse::InternalSwap(CMsgClientDPSendSpecialSurveyResponse* other) {
  data_.Swap(&other->data_);
  std::swap(survey_id_, other->survey_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientDPSendSpecialSurveyResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientDPSendSpecialSurveyResponse

// optional uint32 survey_id = 1;
bool CMsgClientDPSendSpecialSurveyResponse::has_survey_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientDPSendSpecialSurveyResponse::set_has_survey_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientDPSendSpecialSurveyResponse::clear_has_survey_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientDPSendSpecialSurveyResponse::clear_survey_id() {
  survey_id_ = 0u;
  clear_has_survey_id();
}
::google::protobuf::uint32 CMsgClientDPSendSpecialSurveyResponse::survey_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPSendSpecialSurveyResponse.survey_id)
  return survey_id_;
}
void CMsgClientDPSendSpecialSurveyResponse::set_survey_id(::google::protobuf::uint32 value) {
  set_has_survey_id();
  survey_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPSendSpecialSurveyResponse.survey_id)
}

// optional bytes data = 2;
bool CMsgClientDPSendSpecialSurveyResponse::has_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientDPSendSpecialSurveyResponse::set_has_data() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientDPSendSpecialSurveyResponse::clear_has_data() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientDPSendSpecialSurveyResponse::clear_data() {
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_data();
}
const ::std::string& CMsgClientDPSendSpecialSurveyResponse::data() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPSendSpecialSurveyResponse.data)
  return data_.GetNoArena();
}
void CMsgClientDPSendSpecialSurveyResponse::set_data(const ::std::string& value) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPSendSpecialSurveyResponse.data)
}
#if LANG_CXX11
void CMsgClientDPSendSpecialSurveyResponse::set_data(::std::string&& value) {
  set_has_data();
  data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientDPSendSpecialSurveyResponse.data)
}
#endif
void CMsgClientDPSendSpecialSurveyResponse::set_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientDPSendSpecialSurveyResponse.data)
}
void CMsgClientDPSendSpecialSurveyResponse::set_data(const void* value, size_t size) {
  set_has_data();
  data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientDPSendSpecialSurveyResponse.data)
}
::std::string* CMsgClientDPSendSpecialSurveyResponse::mutable_data() {
  set_has_data();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientDPSendSpecialSurveyResponse.data)
  return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientDPSendSpecialSurveyResponse::release_data() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientDPSendSpecialSurveyResponse.data)
  clear_has_data();
  return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientDPSendSpecialSurveyResponse::set_allocated_data(::std::string* data) {
  if (data != NULL) {
    set_has_data();
  } else {
    clear_has_data();
  }
  data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientDPSendSpecialSurveyResponse.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDPSendSpecialSurveyResponseReply::kEResultFieldNumber;
const int CMsgClientDPSendSpecialSurveyResponseReply::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDPSendSpecialSurveyResponseReply::CMsgClientDPSendSpecialSurveyResponseReply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
}
CMsgClientDPSendSpecialSurveyResponseReply::CMsgClientDPSendSpecialSurveyResponseReply(const CMsgClientDPSendSpecialSurveyResponseReply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
}

void CMsgClientDPSendSpecialSurveyResponseReply::SharedCtor() {
  _cached_size_ = 0;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eresult_ = 2u;
}

CMsgClientDPSendSpecialSurveyResponseReply::~CMsgClientDPSendSpecialSurveyResponseReply() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  SharedDtor();
}

void CMsgClientDPSendSpecialSurveyResponseReply::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientDPSendSpecialSurveyResponseReply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientDPSendSpecialSurveyResponseReply::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDPSendSpecialSurveyResponseReply& CMsgClientDPSendSpecialSurveyResponseReply::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientDPSendSpecialSurveyResponseReply* CMsgClientDPSendSpecialSurveyResponseReply::New(::google::protobuf::Arena* arena) const {
  CMsgClientDPSendSpecialSurveyResponseReply* n = new CMsgClientDPSendSpecialSurveyResponseReply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientDPSendSpecialSurveyResponseReply::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_token()) {
      GOOGLE_DCHECK(!token_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*token_.UnsafeRawStringPointer())->clear();
    }
    eresult_ = 2u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDPSendSpecialSurveyResponseReply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eResult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  return false;
#undef DO_
}

void CMsgClientDPSendSpecialSurveyResponseReply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional bytes token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
}

::google::protobuf::uint8* CMsgClientDPSendSpecialSurveyResponseReply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional bytes token = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  return target;
}

size_t CMsgClientDPSendSpecialSurveyResponseReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes token = 2;
    if (has_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->token());
    }

    // optional uint32 eResult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientDPSendSpecialSurveyResponseReply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDPSendSpecialSurveyResponseReply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDPSendSpecialSurveyResponseReply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
    MergeFrom(*source);
  }
}

void CMsgClientDPSendSpecialSurveyResponseReply::MergeFrom(const CMsgClientDPSendSpecialSurveyResponseReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_token();
      token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDPSendSpecialSurveyResponseReply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDPSendSpecialSurveyResponseReply::CopyFrom(const CMsgClientDPSendSpecialSurveyResponseReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDPSendSpecialSurveyResponseReply::IsInitialized() const {
  return true;
}

void CMsgClientDPSendSpecialSurveyResponseReply::Swap(CMsgClientDPSendSpecialSurveyResponseReply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDPSendSpecialSurveyResponseReply::InternalSwap(CMsgClientDPSendSpecialSurveyResponseReply* other) {
  token_.Swap(&other->token_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientDPSendSpecialSurveyResponseReply::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientDPSendSpecialSurveyResponseReply

// optional uint32 eResult = 1 [default = 2];
bool CMsgClientDPSendSpecialSurveyResponseReply::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientDPSendSpecialSurveyResponseReply::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientDPSendSpecialSurveyResponseReply::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientDPSendSpecialSurveyResponseReply::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgClientDPSendSpecialSurveyResponseReply::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply.eResult)
  return eresult_;
}
void CMsgClientDPSendSpecialSurveyResponseReply::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply.eResult)
}

// optional bytes token = 2;
bool CMsgClientDPSendSpecialSurveyResponseReply::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientDPSendSpecialSurveyResponseReply::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientDPSendSpecialSurveyResponseReply::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientDPSendSpecialSurveyResponseReply::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
const ::std::string& CMsgClientDPSendSpecialSurveyResponseReply::token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply.token)
  return token_.GetNoArena();
}
void CMsgClientDPSendSpecialSurveyResponseReply::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply.token)
}
#if LANG_CXX11
void CMsgClientDPSendSpecialSurveyResponseReply::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply.token)
}
#endif
void CMsgClientDPSendSpecialSurveyResponseReply::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply.token)
}
void CMsgClientDPSendSpecialSurveyResponseReply::set_token(const void* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply.token)
}
::std::string* CMsgClientDPSendSpecialSurveyResponseReply::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientDPSendSpecialSurveyResponseReply::release_token() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientDPSendSpecialSurveyResponseReply::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientDPSendSpecialSurveyResponseReply.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestForgottenPasswordEmail::kAccountNameFieldNumber;
const int CMsgClientRequestForgottenPasswordEmail::kPasswordTriedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestForgottenPasswordEmail::CMsgClientRequestForgottenPasswordEmail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestForgottenPasswordEmail)
}
CMsgClientRequestForgottenPasswordEmail::CMsgClientRequestForgottenPasswordEmail(const CMsgClientRequestForgottenPasswordEmail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name()) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  password_tried_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password_tried()) {
    password_tried_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_tried_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestForgottenPasswordEmail)
}

void CMsgClientRequestForgottenPasswordEmail::SharedCtor() {
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_tried_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientRequestForgottenPasswordEmail::~CMsgClientRequestForgottenPasswordEmail() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  SharedDtor();
}

void CMsgClientRequestForgottenPasswordEmail::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_tried_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientRequestForgottenPasswordEmail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRequestForgottenPasswordEmail::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestForgottenPasswordEmail& CMsgClientRequestForgottenPasswordEmail::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRequestForgottenPasswordEmail* CMsgClientRequestForgottenPasswordEmail::New(::google::protobuf::Arena* arena) const {
  CMsgClientRequestForgottenPasswordEmail* n = new CMsgClientRequestForgottenPasswordEmail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRequestForgottenPasswordEmail::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_account_name()) {
      GOOGLE_DCHECK(!account_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_password_tried()) {
      GOOGLE_DCHECK(!password_tried_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_tried_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestForgottenPasswordEmail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password_tried = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password_tried()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password_tried().data(), this->password_tried().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  return false;
#undef DO_
}

void CMsgClientRequestForgottenPasswordEmail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // optional string password_tried = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password_tried().data(), this->password_tried().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password_tried(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestForgottenPasswordEmail)
}

::google::protobuf::uint8* CMsgClientRequestForgottenPasswordEmail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // optional string password_tried = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password_tried().data(), this->password_tried().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password_tried(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  return target;
}

size_t CMsgClientRequestForgottenPasswordEmail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string account_name = 1;
    if (has_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // optional string password_tried = 2;
    if (has_password_tried()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password_tried());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRequestForgottenPasswordEmail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestForgottenPasswordEmail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestForgottenPasswordEmail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestForgottenPasswordEmail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestForgottenPasswordEmail)
    MergeFrom(*source);
  }
}

void CMsgClientRequestForgottenPasswordEmail::MergeFrom(const CMsgClientRequestForgottenPasswordEmail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account_name();
      account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password_tried();
      password_tried_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_tried_);
    }
  }
}

void CMsgClientRequestForgottenPasswordEmail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestForgottenPasswordEmail::CopyFrom(const CMsgClientRequestForgottenPasswordEmail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestForgottenPasswordEmail::IsInitialized() const {
  return true;
}

void CMsgClientRequestForgottenPasswordEmail::Swap(CMsgClientRequestForgottenPasswordEmail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestForgottenPasswordEmail::InternalSwap(CMsgClientRequestForgottenPasswordEmail* other) {
  account_name_.Swap(&other->account_name_);
  password_tried_.Swap(&other->password_tried_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRequestForgottenPasswordEmail::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRequestForgottenPasswordEmail

// optional string account_name = 1;
bool CMsgClientRequestForgottenPasswordEmail::has_account_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientRequestForgottenPasswordEmail::set_has_account_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientRequestForgottenPasswordEmail::clear_has_account_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientRequestForgottenPasswordEmail::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account_name();
}
const ::std::string& CMsgClientRequestForgottenPasswordEmail::account_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name)
  return account_name_.GetNoArena();
}
void CMsgClientRequestForgottenPasswordEmail::set_account_name(const ::std::string& value) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name)
}
#if LANG_CXX11
void CMsgClientRequestForgottenPasswordEmail::set_account_name(::std::string&& value) {
  set_has_account_name();
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name)
}
#endif
void CMsgClientRequestForgottenPasswordEmail::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name)
}
void CMsgClientRequestForgottenPasswordEmail::set_account_name(const char* value, size_t size) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name)
}
::std::string* CMsgClientRequestForgottenPasswordEmail::mutable_account_name() {
  set_has_account_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRequestForgottenPasswordEmail::release_account_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name)
  clear_has_account_name();
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRequestForgottenPasswordEmail::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    set_has_account_name();
  } else {
    clear_has_account_name();
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRequestForgottenPasswordEmail.account_name)
}

// optional string password_tried = 2;
bool CMsgClientRequestForgottenPasswordEmail::has_password_tried() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientRequestForgottenPasswordEmail::set_has_password_tried() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientRequestForgottenPasswordEmail::clear_has_password_tried() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientRequestForgottenPasswordEmail::clear_password_tried() {
  password_tried_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password_tried();
}
const ::std::string& CMsgClientRequestForgottenPasswordEmail::password_tried() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried)
  return password_tried_.GetNoArena();
}
void CMsgClientRequestForgottenPasswordEmail::set_password_tried(const ::std::string& value) {
  set_has_password_tried();
  password_tried_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried)
}
#if LANG_CXX11
void CMsgClientRequestForgottenPasswordEmail::set_password_tried(::std::string&& value) {
  set_has_password_tried();
  password_tried_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried)
}
#endif
void CMsgClientRequestForgottenPasswordEmail::set_password_tried(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password_tried();
  password_tried_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried)
}
void CMsgClientRequestForgottenPasswordEmail::set_password_tried(const char* value, size_t size) {
  set_has_password_tried();
  password_tried_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried)
}
::std::string* CMsgClientRequestForgottenPasswordEmail::mutable_password_tried() {
  set_has_password_tried();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried)
  return password_tried_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientRequestForgottenPasswordEmail::release_password_tried() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried)
  clear_has_password_tried();
  return password_tried_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientRequestForgottenPasswordEmail::set_allocated_password_tried(::std::string* password_tried) {
  if (password_tried != NULL) {
    set_has_password_tried();
  } else {
    clear_has_password_tried();
  }
  password_tried_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password_tried);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRequestForgottenPasswordEmail.password_tried)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientRequestForgottenPasswordEmailResponse::kEResultFieldNumber;
const int CMsgClientRequestForgottenPasswordEmailResponse::kUseSecretQuestionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestForgottenPasswordEmailResponse::CMsgClientRequestForgottenPasswordEmailResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
}
CMsgClientRequestForgottenPasswordEmailResponse::CMsgClientRequestForgottenPasswordEmailResponse(const CMsgClientRequestForgottenPasswordEmailResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&eresult_, &from.eresult_,
    reinterpret_cast<char*>(&use_secret_question_) -
    reinterpret_cast<char*>(&eresult_) + sizeof(use_secret_question_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
}

void CMsgClientRequestForgottenPasswordEmailResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&eresult_, 0, reinterpret_cast<char*>(&use_secret_question_) -
    reinterpret_cast<char*>(&eresult_) + sizeof(use_secret_question_));
}

CMsgClientRequestForgottenPasswordEmailResponse::~CMsgClientRequestForgottenPasswordEmailResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  SharedDtor();
}

void CMsgClientRequestForgottenPasswordEmailResponse::SharedDtor() {
}

void CMsgClientRequestForgottenPasswordEmailResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRequestForgottenPasswordEmailResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestForgottenPasswordEmailResponse& CMsgClientRequestForgottenPasswordEmailResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRequestForgottenPasswordEmailResponse* CMsgClientRequestForgottenPasswordEmailResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientRequestForgottenPasswordEmailResponse* n = new CMsgClientRequestForgottenPasswordEmailResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRequestForgottenPasswordEmailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&eresult_, 0, reinterpret_cast<char*>(&use_secret_question_) -
      reinterpret_cast<char*>(&eresult_) + sizeof(use_secret_question_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestForgottenPasswordEmailResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 eResult = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool use_secret_question = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_use_secret_question();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &use_secret_question_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  return false;
#undef DO_
}

void CMsgClientRequestForgottenPasswordEmailResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->eresult(), output);
  }

  // optional bool use_secret_question = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->use_secret_question(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
}

::google::protobuf::uint8* CMsgClientRequestForgottenPasswordEmailResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 eResult = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->eresult(), target);
  }

  // optional bool use_secret_question = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->use_secret_question(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  return target;
}

size_t CMsgClientRequestForgottenPasswordEmailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 eResult = 1;
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->eresult());
    }

    // optional bool use_secret_question = 2;
    if (has_use_secret_question()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRequestForgottenPasswordEmailResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestForgottenPasswordEmailResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestForgottenPasswordEmailResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
    MergeFrom(*source);
  }
}

void CMsgClientRequestForgottenPasswordEmailResponse::MergeFrom(const CMsgClientRequestForgottenPasswordEmailResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      eresult_ = from.eresult_;
    }
    if (cached_has_bits & 0x00000002u) {
      use_secret_question_ = from.use_secret_question_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientRequestForgottenPasswordEmailResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestForgottenPasswordEmailResponse::CopyFrom(const CMsgClientRequestForgottenPasswordEmailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestForgottenPasswordEmailResponse::IsInitialized() const {
  return true;
}

void CMsgClientRequestForgottenPasswordEmailResponse::Swap(CMsgClientRequestForgottenPasswordEmailResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestForgottenPasswordEmailResponse::InternalSwap(CMsgClientRequestForgottenPasswordEmailResponse* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(use_secret_question_, other->use_secret_question_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRequestForgottenPasswordEmailResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRequestForgottenPasswordEmailResponse

// optional uint32 eResult = 1;
bool CMsgClientRequestForgottenPasswordEmailResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientRequestForgottenPasswordEmailResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientRequestForgottenPasswordEmailResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientRequestForgottenPasswordEmailResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
::google::protobuf::uint32 CMsgClientRequestForgottenPasswordEmailResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse.eResult)
  return eresult_;
}
void CMsgClientRequestForgottenPasswordEmailResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse.eResult)
}

// optional bool use_secret_question = 2;
bool CMsgClientRequestForgottenPasswordEmailResponse::has_use_secret_question() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientRequestForgottenPasswordEmailResponse::set_has_use_secret_question() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientRequestForgottenPasswordEmailResponse::clear_has_use_secret_question() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientRequestForgottenPasswordEmailResponse::clear_use_secret_question() {
  use_secret_question_ = false;
  clear_has_use_secret_question();
}
bool CMsgClientRequestForgottenPasswordEmailResponse::use_secret_question() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse.use_secret_question)
  return use_secret_question_;
}
void CMsgClientRequestForgottenPasswordEmailResponse::set_use_secret_question(bool value) {
  set_has_use_secret_question();
  use_secret_question_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestForgottenPasswordEmailResponse.use_secret_question)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientItemAnnouncements::kCountNewItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientItemAnnouncements::CMsgClientItemAnnouncements()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientItemAnnouncements)
}
CMsgClientItemAnnouncements::CMsgClientItemAnnouncements(const CMsgClientItemAnnouncements& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_new_items_ = from.count_new_items_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientItemAnnouncements)
}

void CMsgClientItemAnnouncements::SharedCtor() {
  _cached_size_ = 0;
  count_new_items_ = 0u;
}

CMsgClientItemAnnouncements::~CMsgClientItemAnnouncements() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientItemAnnouncements)
  SharedDtor();
}

void CMsgClientItemAnnouncements::SharedDtor() {
}

void CMsgClientItemAnnouncements::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientItemAnnouncements::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientItemAnnouncements& CMsgClientItemAnnouncements::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientItemAnnouncements* CMsgClientItemAnnouncements::New(::google::protobuf::Arena* arena) const {
  CMsgClientItemAnnouncements* n = new CMsgClientItemAnnouncements;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientItemAnnouncements::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientItemAnnouncements)
  count_new_items_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientItemAnnouncements::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientItemAnnouncements)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 count_new_items = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_count_new_items();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_new_items_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientItemAnnouncements)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientItemAnnouncements)
  return false;
#undef DO_
}

void CMsgClientItemAnnouncements::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 count_new_items = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count_new_items(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientItemAnnouncements)
}

::google::protobuf::uint8* CMsgClientItemAnnouncements::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 count_new_items = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count_new_items(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientItemAnnouncements)
  return target;
}

size_t CMsgClientItemAnnouncements::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientItemAnnouncements)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 count_new_items = 1;
  if (has_count_new_items()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count_new_items());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientItemAnnouncements::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientItemAnnouncements)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientItemAnnouncements* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientItemAnnouncements>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientItemAnnouncements)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientItemAnnouncements)
    MergeFrom(*source);
  }
}

void CMsgClientItemAnnouncements::MergeFrom(const CMsgClientItemAnnouncements& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientItemAnnouncements)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_count_new_items()) {
    set_count_new_items(from.count_new_items());
  }
}

void CMsgClientItemAnnouncements::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientItemAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientItemAnnouncements::CopyFrom(const CMsgClientItemAnnouncements& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientItemAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientItemAnnouncements::IsInitialized() const {
  return true;
}

void CMsgClientItemAnnouncements::Swap(CMsgClientItemAnnouncements* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientItemAnnouncements::InternalSwap(CMsgClientItemAnnouncements* other) {
  std::swap(count_new_items_, other->count_new_items_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientItemAnnouncements::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientItemAnnouncements

// optional uint32 count_new_items = 1;
bool CMsgClientItemAnnouncements::has_count_new_items() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientItemAnnouncements::set_has_count_new_items() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientItemAnnouncements::clear_has_count_new_items() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientItemAnnouncements::clear_count_new_items() {
  count_new_items_ = 0u;
  clear_has_count_new_items();
}
::google::protobuf::uint32 CMsgClientItemAnnouncements::count_new_items() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientItemAnnouncements.count_new_items)
  return count_new_items_;
}
void CMsgClientItemAnnouncements::set_count_new_items(::google::protobuf::uint32 value) {
  set_has_count_new_items();
  count_new_items_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientItemAnnouncements.count_new_items)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestItemAnnouncements::CMsgClientRequestItemAnnouncements()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestItemAnnouncements)
}
CMsgClientRequestItemAnnouncements::CMsgClientRequestItemAnnouncements(const CMsgClientRequestItemAnnouncements& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestItemAnnouncements)
}

void CMsgClientRequestItemAnnouncements::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientRequestItemAnnouncements::~CMsgClientRequestItemAnnouncements() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestItemAnnouncements)
  SharedDtor();
}

void CMsgClientRequestItemAnnouncements::SharedDtor() {
}

void CMsgClientRequestItemAnnouncements::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRequestItemAnnouncements::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestItemAnnouncements& CMsgClientRequestItemAnnouncements::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRequestItemAnnouncements* CMsgClientRequestItemAnnouncements::New(::google::protobuf::Arena* arena) const {
  CMsgClientRequestItemAnnouncements* n = new CMsgClientRequestItemAnnouncements;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRequestItemAnnouncements::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestItemAnnouncements)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestItemAnnouncements::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestItemAnnouncements)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestItemAnnouncements)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestItemAnnouncements)
  return false;
#undef DO_
}

void CMsgClientRequestItemAnnouncements::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestItemAnnouncements)
}

::google::protobuf::uint8* CMsgClientRequestItemAnnouncements::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestItemAnnouncements)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestItemAnnouncements)
  return target;
}

size_t CMsgClientRequestItemAnnouncements::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestItemAnnouncements)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRequestItemAnnouncements::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestItemAnnouncements)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestItemAnnouncements* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestItemAnnouncements>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestItemAnnouncements)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestItemAnnouncements)
    MergeFrom(*source);
  }
}

void CMsgClientRequestItemAnnouncements::MergeFrom(const CMsgClientRequestItemAnnouncements& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestItemAnnouncements)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientRequestItemAnnouncements::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestItemAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestItemAnnouncements::CopyFrom(const CMsgClientRequestItemAnnouncements& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestItemAnnouncements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestItemAnnouncements::IsInitialized() const {
  return true;
}

void CMsgClientRequestItemAnnouncements::Swap(CMsgClientRequestItemAnnouncements* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestItemAnnouncements::InternalSwap(CMsgClientRequestItemAnnouncements* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRequestItemAnnouncements::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRequestItemAnnouncements

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUserNotifications_Notification::kUserNotificationTypeFieldNumber;
const int CMsgClientUserNotifications_Notification::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUserNotifications_Notification::CMsgClientUserNotifications_Notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUserNotifications.Notification)
}
CMsgClientUserNotifications_Notification::CMsgClientUserNotifications_Notification(const CMsgClientUserNotifications_Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&user_notification_type_, &from.user_notification_type_,
    reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&user_notification_type_) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUserNotifications.Notification)
}

void CMsgClientUserNotifications_Notification::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&user_notification_type_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&user_notification_type_) + sizeof(count_));
}

CMsgClientUserNotifications_Notification::~CMsgClientUserNotifications_Notification() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUserNotifications.Notification)
  SharedDtor();
}

void CMsgClientUserNotifications_Notification::SharedDtor() {
}

void CMsgClientUserNotifications_Notification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUserNotifications_Notification::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUserNotifications_Notification& CMsgClientUserNotifications_Notification::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUserNotifications_Notification* CMsgClientUserNotifications_Notification::New(::google::protobuf::Arena* arena) const {
  CMsgClientUserNotifications_Notification* n = new CMsgClientUserNotifications_Notification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUserNotifications_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUserNotifications.Notification)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&user_notification_type_, 0, reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&user_notification_type_) + sizeof(count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUserNotifications_Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUserNotifications.Notification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 user_notification_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_user_notification_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &user_notification_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUserNotifications.Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUserNotifications.Notification)
  return false;
#undef DO_
}

void CMsgClientUserNotifications_Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUserNotifications.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 user_notification_type = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->user_notification_type(), output);
  }

  // optional uint32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUserNotifications.Notification)
}

::google::protobuf::uint8* CMsgClientUserNotifications_Notification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUserNotifications.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 user_notification_type = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->user_notification_type(), target);
  }

  // optional uint32 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUserNotifications.Notification)
  return target;
}

size_t CMsgClientUserNotifications_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUserNotifications.Notification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 user_notification_type = 1;
    if (has_user_notification_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->user_notification_type());
    }

    // optional uint32 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUserNotifications_Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUserNotifications.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUserNotifications_Notification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUserNotifications_Notification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUserNotifications.Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUserNotifications.Notification)
    MergeFrom(*source);
  }
}

void CMsgClientUserNotifications_Notification::MergeFrom(const CMsgClientUserNotifications_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUserNotifications.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      user_notification_type_ = from.user_notification_type_;
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUserNotifications_Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUserNotifications.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUserNotifications_Notification::CopyFrom(const CMsgClientUserNotifications_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUserNotifications.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUserNotifications_Notification::IsInitialized() const {
  return true;
}

void CMsgClientUserNotifications_Notification::Swap(CMsgClientUserNotifications_Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUserNotifications_Notification::InternalSwap(CMsgClientUserNotifications_Notification* other) {
  std::swap(user_notification_type_, other->user_notification_type_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUserNotifications_Notification::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUserNotifications_Notification

// optional uint32 user_notification_type = 1;
bool CMsgClientUserNotifications_Notification::has_user_notification_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUserNotifications_Notification::set_has_user_notification_type() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUserNotifications_Notification::clear_has_user_notification_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUserNotifications_Notification::clear_user_notification_type() {
  user_notification_type_ = 0u;
  clear_has_user_notification_type();
}
::google::protobuf::uint32 CMsgClientUserNotifications_Notification::user_notification_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUserNotifications.Notification.user_notification_type)
  return user_notification_type_;
}
void CMsgClientUserNotifications_Notification::set_user_notification_type(::google::protobuf::uint32 value) {
  set_has_user_notification_type();
  user_notification_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUserNotifications.Notification.user_notification_type)
}

// optional uint32 count = 2;
bool CMsgClientUserNotifications_Notification::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUserNotifications_Notification::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUserNotifications_Notification::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUserNotifications_Notification::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 CMsgClientUserNotifications_Notification::count() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUserNotifications.Notification.count)
  return count_;
}
void CMsgClientUserNotifications_Notification::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUserNotifications.Notification.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUserNotifications::kNotificationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUserNotifications::CMsgClientUserNotifications()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUserNotifications)
}
CMsgClientUserNotifications::CMsgClientUserNotifications(const CMsgClientUserNotifications& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      notifications_(from.notifications_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUserNotifications)
}

void CMsgClientUserNotifications::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientUserNotifications::~CMsgClientUserNotifications() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUserNotifications)
  SharedDtor();
}

void CMsgClientUserNotifications::SharedDtor() {
}

void CMsgClientUserNotifications::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUserNotifications::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUserNotifications& CMsgClientUserNotifications::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUserNotifications* CMsgClientUserNotifications::New(::google::protobuf::Arena* arena) const {
  CMsgClientUserNotifications* n = new CMsgClientUserNotifications;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUserNotifications::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUserNotifications)
  notifications_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUserNotifications::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUserNotifications)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.steam.CMsgClientUserNotifications.Notification notifications = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_notifications()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUserNotifications)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUserNotifications)
  return false;
#undef DO_
}

void CMsgClientUserNotifications::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUserNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientUserNotifications.Notification notifications = 1;
  for (unsigned int i = 0, n = this->notifications_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->notifications(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUserNotifications)
}

::google::protobuf::uint8* CMsgClientUserNotifications::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUserNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientUserNotifications.Notification notifications = 1;
  for (unsigned int i = 0, n = this->notifications_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->notifications(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUserNotifications)
  return target;
}

size_t CMsgClientUserNotifications::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUserNotifications)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientUserNotifications.Notification notifications = 1;
  {
    unsigned int count = this->notifications_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->notifications(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUserNotifications::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUserNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUserNotifications* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUserNotifications>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUserNotifications)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUserNotifications)
    MergeFrom(*source);
  }
}

void CMsgClientUserNotifications::MergeFrom(const CMsgClientUserNotifications& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUserNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  notifications_.MergeFrom(from.notifications_);
}

void CMsgClientUserNotifications::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUserNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUserNotifications::CopyFrom(const CMsgClientUserNotifications& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUserNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUserNotifications::IsInitialized() const {
  return true;
}

void CMsgClientUserNotifications::Swap(CMsgClientUserNotifications* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUserNotifications::InternalSwap(CMsgClientUserNotifications* other) {
  notifications_.InternalSwap(&other->notifications_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUserNotifications::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUserNotifications

// repeated .proto.steam.CMsgClientUserNotifications.Notification notifications = 1;
int CMsgClientUserNotifications::notifications_size() const {
  return notifications_.size();
}
void CMsgClientUserNotifications::clear_notifications() {
  notifications_.Clear();
}
const ::proto::steam::CMsgClientUserNotifications_Notification& CMsgClientUserNotifications::notifications(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUserNotifications.notifications)
  return notifications_.Get(index);
}
::proto::steam::CMsgClientUserNotifications_Notification* CMsgClientUserNotifications::mutable_notifications(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUserNotifications.notifications)
  return notifications_.Mutable(index);
}
::proto::steam::CMsgClientUserNotifications_Notification* CMsgClientUserNotifications::add_notifications() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUserNotifications.notifications)
  return notifications_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUserNotifications_Notification >*
CMsgClientUserNotifications::mutable_notifications() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUserNotifications.notifications)
  return &notifications_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUserNotifications_Notification >&
CMsgClientUserNotifications::notifications() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUserNotifications.notifications)
  return notifications_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCommentNotifications::kCountNewCommentsFieldNumber;
const int CMsgClientCommentNotifications::kCountNewCommentsOwnerFieldNumber;
const int CMsgClientCommentNotifications::kCountNewCommentsSubscriptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCommentNotifications::CMsgClientCommentNotifications()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientCommentNotifications)
}
CMsgClientCommentNotifications::CMsgClientCommentNotifications(const CMsgClientCommentNotifications& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_new_comments_, &from.count_new_comments_,
    reinterpret_cast<char*>(&count_new_comments_subscriptions_) -
    reinterpret_cast<char*>(&count_new_comments_) + sizeof(count_new_comments_subscriptions_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientCommentNotifications)
}

void CMsgClientCommentNotifications::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&count_new_comments_, 0, reinterpret_cast<char*>(&count_new_comments_subscriptions_) -
    reinterpret_cast<char*>(&count_new_comments_) + sizeof(count_new_comments_subscriptions_));
}

CMsgClientCommentNotifications::~CMsgClientCommentNotifications() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientCommentNotifications)
  SharedDtor();
}

void CMsgClientCommentNotifications::SharedDtor() {
}

void CMsgClientCommentNotifications::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientCommentNotifications::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCommentNotifications& CMsgClientCommentNotifications::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientCommentNotifications* CMsgClientCommentNotifications::New(::google::protobuf::Arena* arena) const {
  CMsgClientCommentNotifications* n = new CMsgClientCommentNotifications;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientCommentNotifications::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientCommentNotifications)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&count_new_comments_, 0, reinterpret_cast<char*>(&count_new_comments_subscriptions_) -
      reinterpret_cast<char*>(&count_new_comments_) + sizeof(count_new_comments_subscriptions_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCommentNotifications::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientCommentNotifications)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 count_new_comments = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_count_new_comments();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_new_comments_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count_new_comments_owner = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_count_new_comments_owner();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_new_comments_owner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count_new_comments_subscriptions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_count_new_comments_subscriptions();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_new_comments_subscriptions_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientCommentNotifications)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientCommentNotifications)
  return false;
#undef DO_
}

void CMsgClientCommentNotifications::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 count_new_comments = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count_new_comments(), output);
  }

  // optional uint32 count_new_comments_owner = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->count_new_comments_owner(), output);
  }

  // optional uint32 count_new_comments_subscriptions = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->count_new_comments_subscriptions(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientCommentNotifications)
}

::google::protobuf::uint8* CMsgClientCommentNotifications::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 count_new_comments = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count_new_comments(), target);
  }

  // optional uint32 count_new_comments_owner = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->count_new_comments_owner(), target);
  }

  // optional uint32 count_new_comments_subscriptions = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->count_new_comments_subscriptions(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientCommentNotifications)
  return target;
}

size_t CMsgClientCommentNotifications::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientCommentNotifications)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 count_new_comments = 1;
    if (has_count_new_comments()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count_new_comments());
    }

    // optional uint32 count_new_comments_owner = 2;
    if (has_count_new_comments_owner()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count_new_comments_owner());
    }

    // optional uint32 count_new_comments_subscriptions = 3;
    if (has_count_new_comments_subscriptions()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count_new_comments_subscriptions());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientCommentNotifications::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientCommentNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCommentNotifications* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCommentNotifications>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientCommentNotifications)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientCommentNotifications)
    MergeFrom(*source);
  }
}

void CMsgClientCommentNotifications::MergeFrom(const CMsgClientCommentNotifications& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientCommentNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      count_new_comments_ = from.count_new_comments_;
    }
    if (cached_has_bits & 0x00000002u) {
      count_new_comments_owner_ = from.count_new_comments_owner_;
    }
    if (cached_has_bits & 0x00000004u) {
      count_new_comments_subscriptions_ = from.count_new_comments_subscriptions_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientCommentNotifications::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientCommentNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCommentNotifications::CopyFrom(const CMsgClientCommentNotifications& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientCommentNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCommentNotifications::IsInitialized() const {
  return true;
}

void CMsgClientCommentNotifications::Swap(CMsgClientCommentNotifications* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCommentNotifications::InternalSwap(CMsgClientCommentNotifications* other) {
  std::swap(count_new_comments_, other->count_new_comments_);
  std::swap(count_new_comments_owner_, other->count_new_comments_owner_);
  std::swap(count_new_comments_subscriptions_, other->count_new_comments_subscriptions_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientCommentNotifications::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientCommentNotifications

// optional uint32 count_new_comments = 1;
bool CMsgClientCommentNotifications::has_count_new_comments() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientCommentNotifications::set_has_count_new_comments() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientCommentNotifications::clear_has_count_new_comments() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientCommentNotifications::clear_count_new_comments() {
  count_new_comments_ = 0u;
  clear_has_count_new_comments();
}
::google::protobuf::uint32 CMsgClientCommentNotifications::count_new_comments() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCommentNotifications.count_new_comments)
  return count_new_comments_;
}
void CMsgClientCommentNotifications::set_count_new_comments(::google::protobuf::uint32 value) {
  set_has_count_new_comments();
  count_new_comments_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCommentNotifications.count_new_comments)
}

// optional uint32 count_new_comments_owner = 2;
bool CMsgClientCommentNotifications::has_count_new_comments_owner() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientCommentNotifications::set_has_count_new_comments_owner() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientCommentNotifications::clear_has_count_new_comments_owner() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientCommentNotifications::clear_count_new_comments_owner() {
  count_new_comments_owner_ = 0u;
  clear_has_count_new_comments_owner();
}
::google::protobuf::uint32 CMsgClientCommentNotifications::count_new_comments_owner() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCommentNotifications.count_new_comments_owner)
  return count_new_comments_owner_;
}
void CMsgClientCommentNotifications::set_count_new_comments_owner(::google::protobuf::uint32 value) {
  set_has_count_new_comments_owner();
  count_new_comments_owner_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCommentNotifications.count_new_comments_owner)
}

// optional uint32 count_new_comments_subscriptions = 3;
bool CMsgClientCommentNotifications::has_count_new_comments_subscriptions() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientCommentNotifications::set_has_count_new_comments_subscriptions() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientCommentNotifications::clear_has_count_new_comments_subscriptions() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientCommentNotifications::clear_count_new_comments_subscriptions() {
  count_new_comments_subscriptions_ = 0u;
  clear_has_count_new_comments_subscriptions();
}
::google::protobuf::uint32 CMsgClientCommentNotifications::count_new_comments_subscriptions() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCommentNotifications.count_new_comments_subscriptions)
  return count_new_comments_subscriptions_;
}
void CMsgClientCommentNotifications::set_count_new_comments_subscriptions(::google::protobuf::uint32 value) {
  set_has_count_new_comments_subscriptions();
  count_new_comments_subscriptions_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCommentNotifications.count_new_comments_subscriptions)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestCommentNotifications::CMsgClientRequestCommentNotifications()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestCommentNotifications)
}
CMsgClientRequestCommentNotifications::CMsgClientRequestCommentNotifications(const CMsgClientRequestCommentNotifications& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestCommentNotifications)
}

void CMsgClientRequestCommentNotifications::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientRequestCommentNotifications::~CMsgClientRequestCommentNotifications() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestCommentNotifications)
  SharedDtor();
}

void CMsgClientRequestCommentNotifications::SharedDtor() {
}

void CMsgClientRequestCommentNotifications::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRequestCommentNotifications::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestCommentNotifications& CMsgClientRequestCommentNotifications::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRequestCommentNotifications* CMsgClientRequestCommentNotifications::New(::google::protobuf::Arena* arena) const {
  CMsgClientRequestCommentNotifications* n = new CMsgClientRequestCommentNotifications;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRequestCommentNotifications::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestCommentNotifications)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestCommentNotifications::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestCommentNotifications)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestCommentNotifications)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestCommentNotifications)
  return false;
#undef DO_
}

void CMsgClientRequestCommentNotifications::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestCommentNotifications)
}

::google::protobuf::uint8* CMsgClientRequestCommentNotifications::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestCommentNotifications)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestCommentNotifications)
  return target;
}

size_t CMsgClientRequestCommentNotifications::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestCommentNotifications)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRequestCommentNotifications::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestCommentNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestCommentNotifications* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestCommentNotifications>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestCommentNotifications)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestCommentNotifications)
    MergeFrom(*source);
  }
}

void CMsgClientRequestCommentNotifications::MergeFrom(const CMsgClientRequestCommentNotifications& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestCommentNotifications)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientRequestCommentNotifications::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestCommentNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestCommentNotifications::CopyFrom(const CMsgClientRequestCommentNotifications& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestCommentNotifications)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestCommentNotifications::IsInitialized() const {
  return true;
}

void CMsgClientRequestCommentNotifications::Swap(CMsgClientRequestCommentNotifications* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestCommentNotifications::InternalSwap(CMsgClientRequestCommentNotifications* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRequestCommentNotifications::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRequestCommentNotifications

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientOfflineMessageNotification::kOfflineMessagesFieldNumber;
const int CMsgClientOfflineMessageNotification::kFriendsWithOfflineMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientOfflineMessageNotification::CMsgClientOfflineMessageNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientOfflineMessageNotification)
}
CMsgClientOfflineMessageNotification::CMsgClientOfflineMessageNotification(const CMsgClientOfflineMessageNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      friends_with_offline_messages_(from.friends_with_offline_messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  offline_messages_ = from.offline_messages_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientOfflineMessageNotification)
}

void CMsgClientOfflineMessageNotification::SharedCtor() {
  _cached_size_ = 0;
  offline_messages_ = 0u;
}

CMsgClientOfflineMessageNotification::~CMsgClientOfflineMessageNotification() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientOfflineMessageNotification)
  SharedDtor();
}

void CMsgClientOfflineMessageNotification::SharedDtor() {
}

void CMsgClientOfflineMessageNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientOfflineMessageNotification::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientOfflineMessageNotification& CMsgClientOfflineMessageNotification::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientOfflineMessageNotification* CMsgClientOfflineMessageNotification::New(::google::protobuf::Arena* arena) const {
  CMsgClientOfflineMessageNotification* n = new CMsgClientOfflineMessageNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientOfflineMessageNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientOfflineMessageNotification)
  friends_with_offline_messages_.Clear();
  offline_messages_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientOfflineMessageNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientOfflineMessageNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 offline_messages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_offline_messages();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &offline_messages_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 friends_with_offline_messages = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_friends_with_offline_messages())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_friends_with_offline_messages())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientOfflineMessageNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientOfflineMessageNotification)
  return false;
#undef DO_
}

void CMsgClientOfflineMessageNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientOfflineMessageNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 offline_messages = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->offline_messages(), output);
  }

  // repeated uint32 friends_with_offline_messages = 2;
  for (int i = 0, n = this->friends_with_offline_messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->friends_with_offline_messages(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientOfflineMessageNotification)
}

::google::protobuf::uint8* CMsgClientOfflineMessageNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientOfflineMessageNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 offline_messages = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->offline_messages(), target);
  }

  // repeated uint32 friends_with_offline_messages = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(2, this->friends_with_offline_messages_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientOfflineMessageNotification)
  return target;
}

size_t CMsgClientOfflineMessageNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientOfflineMessageNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 friends_with_offline_messages = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->friends_with_offline_messages_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->friends_with_offline_messages_size());
    total_size += data_size;
  }

  // optional uint32 offline_messages = 1;
  if (has_offline_messages()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->offline_messages());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientOfflineMessageNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientOfflineMessageNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientOfflineMessageNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientOfflineMessageNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientOfflineMessageNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientOfflineMessageNotification)
    MergeFrom(*source);
  }
}

void CMsgClientOfflineMessageNotification::MergeFrom(const CMsgClientOfflineMessageNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientOfflineMessageNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friends_with_offline_messages_.MergeFrom(from.friends_with_offline_messages_);
  if (from.has_offline_messages()) {
    set_offline_messages(from.offline_messages());
  }
}

void CMsgClientOfflineMessageNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientOfflineMessageNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientOfflineMessageNotification::CopyFrom(const CMsgClientOfflineMessageNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientOfflineMessageNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientOfflineMessageNotification::IsInitialized() const {
  return true;
}

void CMsgClientOfflineMessageNotification::Swap(CMsgClientOfflineMessageNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientOfflineMessageNotification::InternalSwap(CMsgClientOfflineMessageNotification* other) {
  friends_with_offline_messages_.InternalSwap(&other->friends_with_offline_messages_);
  std::swap(offline_messages_, other->offline_messages_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientOfflineMessageNotification::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientOfflineMessageNotification

// optional uint32 offline_messages = 1;
bool CMsgClientOfflineMessageNotification::has_offline_messages() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientOfflineMessageNotification::set_has_offline_messages() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientOfflineMessageNotification::clear_has_offline_messages() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientOfflineMessageNotification::clear_offline_messages() {
  offline_messages_ = 0u;
  clear_has_offline_messages();
}
::google::protobuf::uint32 CMsgClientOfflineMessageNotification::offline_messages() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientOfflineMessageNotification.offline_messages)
  return offline_messages_;
}
void CMsgClientOfflineMessageNotification::set_offline_messages(::google::protobuf::uint32 value) {
  set_has_offline_messages();
  offline_messages_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientOfflineMessageNotification.offline_messages)
}

// repeated uint32 friends_with_offline_messages = 2;
int CMsgClientOfflineMessageNotification::friends_with_offline_messages_size() const {
  return friends_with_offline_messages_.size();
}
void CMsgClientOfflineMessageNotification::clear_friends_with_offline_messages() {
  friends_with_offline_messages_.Clear();
}
::google::protobuf::uint32 CMsgClientOfflineMessageNotification::friends_with_offline_messages(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientOfflineMessageNotification.friends_with_offline_messages)
  return friends_with_offline_messages_.Get(index);
}
void CMsgClientOfflineMessageNotification::set_friends_with_offline_messages(int index, ::google::protobuf::uint32 value) {
  friends_with_offline_messages_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientOfflineMessageNotification.friends_with_offline_messages)
}
void CMsgClientOfflineMessageNotification::add_friends_with_offline_messages(::google::protobuf::uint32 value) {
  friends_with_offline_messages_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientOfflineMessageNotification.friends_with_offline_messages)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientOfflineMessageNotification::friends_with_offline_messages() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientOfflineMessageNotification.friends_with_offline_messages)
  return friends_with_offline_messages_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientOfflineMessageNotification::mutable_friends_with_offline_messages() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientOfflineMessageNotification.friends_with_offline_messages)
  return &friends_with_offline_messages_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientRequestOfflineMessageCount::CMsgClientRequestOfflineMessageCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientRequestOfflineMessageCount)
}
CMsgClientRequestOfflineMessageCount::CMsgClientRequestOfflineMessageCount(const CMsgClientRequestOfflineMessageCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientRequestOfflineMessageCount)
}

void CMsgClientRequestOfflineMessageCount::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientRequestOfflineMessageCount::~CMsgClientRequestOfflineMessageCount() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientRequestOfflineMessageCount)
  SharedDtor();
}

void CMsgClientRequestOfflineMessageCount::SharedDtor() {
}

void CMsgClientRequestOfflineMessageCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientRequestOfflineMessageCount::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientRequestOfflineMessageCount& CMsgClientRequestOfflineMessageCount::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientRequestOfflineMessageCount* CMsgClientRequestOfflineMessageCount::New(::google::protobuf::Arena* arena) const {
  CMsgClientRequestOfflineMessageCount* n = new CMsgClientRequestOfflineMessageCount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientRequestOfflineMessageCount::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientRequestOfflineMessageCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientRequestOfflineMessageCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientRequestOfflineMessageCount)
  return false;
#undef DO_
}

void CMsgClientRequestOfflineMessageCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientRequestOfflineMessageCount)
}

::google::protobuf::uint8* CMsgClientRequestOfflineMessageCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientRequestOfflineMessageCount)
  return target;
}

size_t CMsgClientRequestOfflineMessageCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientRequestOfflineMessageCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientRequestOfflineMessageCount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientRequestOfflineMessageCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientRequestOfflineMessageCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientRequestOfflineMessageCount)
    MergeFrom(*source);
  }
}

void CMsgClientRequestOfflineMessageCount::MergeFrom(const CMsgClientRequestOfflineMessageCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientRequestOfflineMessageCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientRequestOfflineMessageCount::CopyFrom(const CMsgClientRequestOfflineMessageCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientRequestOfflineMessageCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientRequestOfflineMessageCount::IsInitialized() const {
  return true;
}

void CMsgClientRequestOfflineMessageCount::Swap(CMsgClientRequestOfflineMessageCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientRequestOfflineMessageCount::InternalSwap(CMsgClientRequestOfflineMessageCount* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientRequestOfflineMessageCount::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientRequestOfflineMessageCount

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientChatGetFriendMessageHistory::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientChatGetFriendMessageHistory::CMsgClientChatGetFriendMessageHistory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientChatGetFriendMessageHistory)
}
CMsgClientChatGetFriendMessageHistory::CMsgClientChatGetFriendMessageHistory(const CMsgClientChatGetFriendMessageHistory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientChatGetFriendMessageHistory)
}

void CMsgClientChatGetFriendMessageHistory::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
}

CMsgClientChatGetFriendMessageHistory::~CMsgClientChatGetFriendMessageHistory() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientChatGetFriendMessageHistory)
  SharedDtor();
}

void CMsgClientChatGetFriendMessageHistory::SharedDtor() {
}

void CMsgClientChatGetFriendMessageHistory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientChatGetFriendMessageHistory::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientChatGetFriendMessageHistory& CMsgClientChatGetFriendMessageHistory::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientChatGetFriendMessageHistory* CMsgClientChatGetFriendMessageHistory::New(::google::protobuf::Arena* arena) const {
  CMsgClientChatGetFriendMessageHistory* n = new CMsgClientChatGetFriendMessageHistory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientChatGetFriendMessageHistory::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientChatGetFriendMessageHistory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientChatGetFriendMessageHistory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientChatGetFriendMessageHistory)
  return false;
#undef DO_
}

void CMsgClientChatGetFriendMessageHistory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientChatGetFriendMessageHistory)
}

::google::protobuf::uint8* CMsgClientChatGetFriendMessageHistory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientChatGetFriendMessageHistory)
  return target;
}

size_t CMsgClientChatGetFriendMessageHistory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 steamid = 1;
  if (has_steamid()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientChatGetFriendMessageHistory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientChatGetFriendMessageHistory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientChatGetFriendMessageHistory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientChatGetFriendMessageHistory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientChatGetFriendMessageHistory)
    MergeFrom(*source);
  }
}

void CMsgClientChatGetFriendMessageHistory::MergeFrom(const CMsgClientChatGetFriendMessageHistory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steamid()) {
    set_steamid(from.steamid());
  }
}

void CMsgClientChatGetFriendMessageHistory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientChatGetFriendMessageHistory::CopyFrom(const CMsgClientChatGetFriendMessageHistory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientChatGetFriendMessageHistory::IsInitialized() const {
  return true;
}

void CMsgClientChatGetFriendMessageHistory::Swap(CMsgClientChatGetFriendMessageHistory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientChatGetFriendMessageHistory::InternalSwap(CMsgClientChatGetFriendMessageHistory* other) {
  std::swap(steamid_, other->steamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientChatGetFriendMessageHistory::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientChatGetFriendMessageHistory

// optional fixed64 steamid = 1;
bool CMsgClientChatGetFriendMessageHistory::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientChatGetFriendMessageHistory::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientChatGetFriendMessageHistory::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientChatGetFriendMessageHistory::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
::google::protobuf::uint64 CMsgClientChatGetFriendMessageHistory::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientChatGetFriendMessageHistory.steamid)
  return steamid_;
}
void CMsgClientChatGetFriendMessageHistory::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientChatGetFriendMessageHistory.steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::kAccountidFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::kTimestampFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::kMessageFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::kUnreadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
}
CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_message()) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&unread_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(unread_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::SharedCtor() {
  _cached_size_ = 0;
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&unread_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(unread_));
}

CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::~CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  SharedDtor();
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::New(::google::protobuf::Arena* arena) const {
  CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* n = new CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  if (has_message()) {
    GOOGLE_DCHECK(!message_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*message_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&accountid_, 0, reinterpret_cast<char*>(&unread_) -
      reinterpret_cast<char*>(&accountid_) + sizeof(unread_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accountid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 timestamp = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_timestamp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool unread = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_unread();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &unread_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  return false;
#undef DO_
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accountid(), output);
  }

  // optional uint32 timestamp = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->timestamp(), output);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->message(), output);
  }

  // optional bool unread = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->unread(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
}

::google::protobuf::uint8* CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accountid(), target);
  }

  // optional uint32 timestamp = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->timestamp(), target);
  }

  // optional string message = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->message(), target);
  }

  // optional bool unread = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->unread(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  return target;
}

size_t CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string message = 3;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

    // optional uint32 accountid = 1;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

    // optional uint32 timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->timestamp());
    }

    // optional bool unread = 4;
    if (has_unread()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
    MergeFrom(*source);
  }
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::MergeFrom(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_message();
      message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
    }
    if (cached_has_bits & 0x00000002u) {
      accountid_ = from.accountid_;
    }
    if (cached_has_bits & 0x00000004u) {
      timestamp_ = from.timestamp_;
    }
    if (cached_has_bits & 0x00000008u) {
      unread_ = from.unread_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::CopyFrom(const CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::IsInitialized() const {
  return true;
}

void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::Swap(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::InternalSwap(CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* other) {
  message_.Swap(&other->message_);
  std::swap(accountid_, other->accountid_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(unread_, other->unread_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage

// optional uint32 accountid = 1;
bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::has_accountid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_has_accountid() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
::google::protobuf::uint32 CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::accountid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.accountid)
  return accountid_;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.accountid)
}

// optional uint32 timestamp = 2;
bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
::google::protobuf::uint32 CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.timestamp)
  return timestamp_;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.timestamp)
}

// optional string message = 3;
bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
const ::std::string& CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::message() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
  return message_.GetNoArena();
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
}
#if LANG_CXX11
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
}
#endif
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
}
::std::string* CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::release_message() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.message)
}

// optional bool unread = 4;
bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::has_unread() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_has_unread() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_has_unread() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::clear_unread() {
  unread_ = false;
  clear_has_unread();
}
bool CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::unread() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.unread)
  return unread_;
}
void CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage::set_unread(bool value) {
  set_has_unread();
  unread_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage.unread)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientChatGetFriendMessageHistoryResponse::kSteamidFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse::kSuccessFieldNumber;
const int CMsgClientChatGetFriendMessageHistoryResponse::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientChatGetFriendMessageHistoryResponse::CMsgClientChatGetFriendMessageHistoryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
}
CMsgClientChatGetFriendMessageHistoryResponse::CMsgClientChatGetFriendMessageHistoryResponse(const CMsgClientChatGetFriendMessageHistoryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&steamid_) + sizeof(success_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
}

void CMsgClientChatGetFriendMessageHistoryResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&steamid_, 0, reinterpret_cast<char*>(&success_) -
    reinterpret_cast<char*>(&steamid_) + sizeof(success_));
}

CMsgClientChatGetFriendMessageHistoryResponse::~CMsgClientChatGetFriendMessageHistoryResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  SharedDtor();
}

void CMsgClientChatGetFriendMessageHistoryResponse::SharedDtor() {
}

void CMsgClientChatGetFriendMessageHistoryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientChatGetFriendMessageHistoryResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientChatGetFriendMessageHistoryResponse& CMsgClientChatGetFriendMessageHistoryResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientChatGetFriendMessageHistoryResponse* CMsgClientChatGetFriendMessageHistoryResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientChatGetFriendMessageHistoryResponse* n = new CMsgClientChatGetFriendMessageHistoryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientChatGetFriendMessageHistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  messages_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&steamid_, 0, reinterpret_cast<char*>(&success_) -
      reinterpret_cast<char*>(&steamid_) + sizeof(success_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientChatGetFriendMessageHistoryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 success = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  return false;
#undef DO_
}

void CMsgClientChatGetFriendMessageHistoryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 success = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->success(), output);
  }

  // repeated .proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
  for (unsigned int i = 0, n = this->messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->messages(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
}

::google::protobuf::uint8* CMsgClientChatGetFriendMessageHistoryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 success = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->success(), target);
  }

  // repeated .proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
  for (unsigned int i = 0, n = this->messages_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->messages(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  return target;
}

size_t CMsgClientChatGetFriendMessageHistoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
  {
    unsigned int count = this->messages_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->messages(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 success = 2;
    if (has_success()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->success());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientChatGetFriendMessageHistoryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientChatGetFriendMessageHistoryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientChatGetFriendMessageHistoryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
    MergeFrom(*source);
  }
}

void CMsgClientChatGetFriendMessageHistoryResponse::MergeFrom(const CMsgClientChatGetFriendMessageHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      success_ = from.success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientChatGetFriendMessageHistoryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientChatGetFriendMessageHistoryResponse::CopyFrom(const CMsgClientChatGetFriendMessageHistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientChatGetFriendMessageHistoryResponse::IsInitialized() const {
  return true;
}

void CMsgClientChatGetFriendMessageHistoryResponse::Swap(CMsgClientChatGetFriendMessageHistoryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientChatGetFriendMessageHistoryResponse::InternalSwap(CMsgClientChatGetFriendMessageHistoryResponse* other) {
  messages_.InternalSwap(&other->messages_);
  std::swap(steamid_, other->steamid_);
  std::swap(success_, other->success_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientChatGetFriendMessageHistoryResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientChatGetFriendMessageHistoryResponse

// optional fixed64 steamid = 1;
bool CMsgClientChatGetFriendMessageHistoryResponse::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientChatGetFriendMessageHistoryResponse::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientChatGetFriendMessageHistoryResponse::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientChatGetFriendMessageHistoryResponse::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
::google::protobuf::uint64 CMsgClientChatGetFriendMessageHistoryResponse::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.steamid)
  return steamid_;
}
void CMsgClientChatGetFriendMessageHistoryResponse::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.steamid)
}

// optional uint32 success = 2;
bool CMsgClientChatGetFriendMessageHistoryResponse::has_success() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientChatGetFriendMessageHistoryResponse::set_has_success() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientChatGetFriendMessageHistoryResponse::clear_has_success() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientChatGetFriendMessageHistoryResponse::clear_success() {
  success_ = 0u;
  clear_has_success();
}
::google::protobuf::uint32 CMsgClientChatGetFriendMessageHistoryResponse::success() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.success)
  return success_;
}
void CMsgClientChatGetFriendMessageHistoryResponse::set_success(::google::protobuf::uint32 value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.success)
}

// repeated .proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.FriendMessage messages = 3;
int CMsgClientChatGetFriendMessageHistoryResponse::messages_size() const {
  return messages_.size();
}
void CMsgClientChatGetFriendMessageHistoryResponse::clear_messages() {
  messages_.Clear();
}
const ::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage& CMsgClientChatGetFriendMessageHistoryResponse::messages(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.messages)
  return messages_.Get(index);
}
::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* CMsgClientChatGetFriendMessageHistoryResponse::mutable_messages(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.messages)
  return messages_.Mutable(index);
}
::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage* CMsgClientChatGetFriendMessageHistoryResponse::add_messages() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.messages)
  return messages_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage >*
CMsgClientChatGetFriendMessageHistoryResponse::mutable_messages() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.messages)
  return &messages_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientChatGetFriendMessageHistoryResponse_FriendMessage >&
CMsgClientChatGetFriendMessageHistoryResponse::messages() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientChatGetFriendMessageHistoryResponse.messages)
  return messages_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientChatGetFriendMessageHistoryForOfflineMessages::CMsgClientChatGetFriendMessageHistoryForOfflineMessages()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
}
CMsgClientChatGetFriendMessageHistoryForOfflineMessages::CMsgClientChatGetFriendMessageHistoryForOfflineMessages(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientChatGetFriendMessageHistoryForOfflineMessages::~CMsgClientChatGetFriendMessageHistoryForOfflineMessages() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  SharedDtor();
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::SharedDtor() {
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientChatGetFriendMessageHistoryForOfflineMessages::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& CMsgClientChatGetFriendMessageHistoryForOfflineMessages::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientChatGetFriendMessageHistoryForOfflineMessages* CMsgClientChatGetFriendMessageHistoryForOfflineMessages::New(::google::protobuf::Arena* arena) const {
  CMsgClientChatGetFriendMessageHistoryForOfflineMessages* n = new CMsgClientChatGetFriendMessageHistoryForOfflineMessages;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientChatGetFriendMessageHistoryForOfflineMessages::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  return false;
#undef DO_
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
}

::google::protobuf::uint8* CMsgClientChatGetFriendMessageHistoryForOfflineMessages::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  return target;
}

size_t CMsgClientChatGetFriendMessageHistoryForOfflineMessages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientChatGetFriendMessageHistoryForOfflineMessages* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientChatGetFriendMessageHistoryForOfflineMessages>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
    MergeFrom(*source);
  }
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::MergeFrom(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::CopyFrom(const CMsgClientChatGetFriendMessageHistoryForOfflineMessages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientChatGetFriendMessageHistoryForOfflineMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientChatGetFriendMessageHistoryForOfflineMessages::IsInitialized() const {
  return true;
}

void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::Swap(CMsgClientChatGetFriendMessageHistoryForOfflineMessages* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientChatGetFriendMessageHistoryForOfflineMessages::InternalSwap(CMsgClientChatGetFriendMessageHistoryForOfflineMessages* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientChatGetFriendMessageHistoryForOfflineMessages::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientChatGetFriendMessageHistoryForOfflineMessages

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFSGetFriendsSteamLevels::kAccountidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFSGetFriendsSteamLevels::CMsgClientFSGetFriendsSteamLevels()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientFSGetFriendsSteamLevels)
}
CMsgClientFSGetFriendsSteamLevels::CMsgClientFSGetFriendsSteamLevels(const CMsgClientFSGetFriendsSteamLevels& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      accountids_(from.accountids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientFSGetFriendsSteamLevels)
}

void CMsgClientFSGetFriendsSteamLevels::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientFSGetFriendsSteamLevels::~CMsgClientFSGetFriendsSteamLevels() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  SharedDtor();
}

void CMsgClientFSGetFriendsSteamLevels::SharedDtor() {
}

void CMsgClientFSGetFriendsSteamLevels::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientFSGetFriendsSteamLevels::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFSGetFriendsSteamLevels& CMsgClientFSGetFriendsSteamLevels::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientFSGetFriendsSteamLevels* CMsgClientFSGetFriendsSteamLevels::New(::google::protobuf::Arena* arena) const {
  CMsgClientFSGetFriendsSteamLevels* n = new CMsgClientFSGetFriendsSteamLevels;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientFSGetFriendsSteamLevels::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  accountids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFSGetFriendsSteamLevels::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 accountids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_accountids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_accountids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  return false;
#undef DO_
}

void CMsgClientFSGetFriendsSteamLevels::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 accountids = 1;
  for (int i = 0, n = this->accountids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->accountids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientFSGetFriendsSteamLevels)
}

::google::protobuf::uint8* CMsgClientFSGetFriendsSteamLevels::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 accountids = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->accountids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  return target;
}

size_t CMsgClientFSGetFriendsSteamLevels::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 accountids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->accountids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->accountids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientFSGetFriendsSteamLevels::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFSGetFriendsSteamLevels* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFSGetFriendsSteamLevels>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientFSGetFriendsSteamLevels)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientFSGetFriendsSteamLevels)
    MergeFrom(*source);
  }
}

void CMsgClientFSGetFriendsSteamLevels::MergeFrom(const CMsgClientFSGetFriendsSteamLevels& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  accountids_.MergeFrom(from.accountids_);
}

void CMsgClientFSGetFriendsSteamLevels::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFSGetFriendsSteamLevels::CopyFrom(const CMsgClientFSGetFriendsSteamLevels& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFSGetFriendsSteamLevels::IsInitialized() const {
  return true;
}

void CMsgClientFSGetFriendsSteamLevels::Swap(CMsgClientFSGetFriendsSteamLevels* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFSGetFriendsSteamLevels::InternalSwap(CMsgClientFSGetFriendsSteamLevels* other) {
  accountids_.InternalSwap(&other->accountids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientFSGetFriendsSteamLevels::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientFSGetFriendsSteamLevels

// repeated uint32 accountids = 1;
int CMsgClientFSGetFriendsSteamLevels::accountids_size() const {
  return accountids_.size();
}
void CMsgClientFSGetFriendsSteamLevels::clear_accountids() {
  accountids_.Clear();
}
::google::protobuf::uint32 CMsgClientFSGetFriendsSteamLevels::accountids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFSGetFriendsSteamLevels.accountids)
  return accountids_.Get(index);
}
void CMsgClientFSGetFriendsSteamLevels::set_accountids(int index, ::google::protobuf::uint32 value) {
  accountids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFSGetFriendsSteamLevels.accountids)
}
void CMsgClientFSGetFriendsSteamLevels::add_accountids(::google::protobuf::uint32 value) {
  accountids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientFSGetFriendsSteamLevels.accountids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientFSGetFriendsSteamLevels::accountids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientFSGetFriendsSteamLevels.accountids)
  return accountids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientFSGetFriendsSteamLevels::mutable_accountids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientFSGetFriendsSteamLevels.accountids)
  return &accountids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFSGetFriendsSteamLevelsResponse_Friend::kAccountidFieldNumber;
const int CMsgClientFSGetFriendsSteamLevelsResponse_Friend::kLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFSGetFriendsSteamLevelsResponse_Friend::CMsgClientFSGetFriendsSteamLevelsResponse_Friend()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
}
CMsgClientFSGetFriendsSteamLevelsResponse_Friend::CMsgClientFSGetFriendsSteamLevelsResponse_Friend(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(level_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&accountid_, 0, reinterpret_cast<char*>(&level_) -
    reinterpret_cast<char*>(&accountid_) + sizeof(level_));
}

CMsgClientFSGetFriendsSteamLevelsResponse_Friend::~CMsgClientFSGetFriendsSteamLevelsResponse_Friend() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  SharedDtor();
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::SharedDtor() {
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientFSGetFriendsSteamLevelsResponse_Friend::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& CMsgClientFSGetFriendsSteamLevelsResponse_Friend::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientFSGetFriendsSteamLevelsResponse_Friend* CMsgClientFSGetFriendsSteamLevelsResponse_Friend::New(::google::protobuf::Arena* arena) const {
  CMsgClientFSGetFriendsSteamLevelsResponse_Friend* n = new CMsgClientFSGetFriendsSteamLevelsResponse_Friend;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&accountid_, 0, reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&accountid_) + sizeof(level_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFSGetFriendsSteamLevelsResponse_Friend::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 accountid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_accountid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  return false;
#undef DO_
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->accountid(), output);
  }

  // optional uint32 level = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->level(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
}

::google::protobuf::uint8* CMsgClientFSGetFriendsSteamLevelsResponse_Friend::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 accountid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->accountid(), target);
  }

  // optional uint32 level = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->level(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  return target;
}

size_t CMsgClientFSGetFriendsSteamLevelsResponse_Friend::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 accountid = 1;
    if (has_accountid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->accountid());
    }

    // optional uint32 level = 2;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFSGetFriendsSteamLevelsResponse_Friend* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFSGetFriendsSteamLevelsResponse_Friend>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
    MergeFrom(*source);
  }
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::MergeFrom(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      accountid_ = from.accountid_;
    }
    if (cached_has_bits & 0x00000002u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::CopyFrom(const CMsgClientFSGetFriendsSteamLevelsResponse_Friend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFSGetFriendsSteamLevelsResponse_Friend::IsInitialized() const {
  return true;
}

void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::Swap(CMsgClientFSGetFriendsSteamLevelsResponse_Friend* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::InternalSwap(CMsgClientFSGetFriendsSteamLevelsResponse_Friend* other) {
  std::swap(accountid_, other->accountid_);
  std::swap(level_, other->level_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientFSGetFriendsSteamLevelsResponse_Friend::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientFSGetFriendsSteamLevelsResponse_Friend

// optional uint32 accountid = 1;
bool CMsgClientFSGetFriendsSteamLevelsResponse_Friend::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
::google::protobuf::uint32 CMsgClientFSGetFriendsSteamLevelsResponse_Friend::accountid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend.accountid)
  return accountid_;
}
void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend.accountid)
}

// optional uint32 level = 2;
bool CMsgClientFSGetFriendsSteamLevelsResponse_Friend::has_level() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::set_has_level() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::clear_has_level() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::clear_level() {
  level_ = 0u;
  clear_has_level();
}
::google::protobuf::uint32 CMsgClientFSGetFriendsSteamLevelsResponse_Friend::level() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend.level)
  return level_;
}
void CMsgClientFSGetFriendsSteamLevelsResponse_Friend::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend.level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFSGetFriendsSteamLevelsResponse::kFriendsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFSGetFriendsSteamLevelsResponse::CMsgClientFSGetFriendsSteamLevelsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
}
CMsgClientFSGetFriendsSteamLevelsResponse::CMsgClientFSGetFriendsSteamLevelsResponse(const CMsgClientFSGetFriendsSteamLevelsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      friends_(from.friends_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
}

void CMsgClientFSGetFriendsSteamLevelsResponse::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientFSGetFriendsSteamLevelsResponse::~CMsgClientFSGetFriendsSteamLevelsResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  SharedDtor();
}

void CMsgClientFSGetFriendsSteamLevelsResponse::SharedDtor() {
}

void CMsgClientFSGetFriendsSteamLevelsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientFSGetFriendsSteamLevelsResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFSGetFriendsSteamLevelsResponse& CMsgClientFSGetFriendsSteamLevelsResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientFSGetFriendsSteamLevelsResponse* CMsgClientFSGetFriendsSteamLevelsResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientFSGetFriendsSteamLevelsResponse* n = new CMsgClientFSGetFriendsSteamLevelsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientFSGetFriendsSteamLevelsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  friends_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFSGetFriendsSteamLevelsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friends()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  return false;
#undef DO_
}

void CMsgClientFSGetFriendsSteamLevelsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
  for (unsigned int i = 0, n = this->friends_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->friends(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
}

::google::protobuf::uint8* CMsgClientFSGetFriendsSteamLevelsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
  for (unsigned int i = 0, n = this->friends_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->friends(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  return target;
}

size_t CMsgClientFSGetFriendsSteamLevelsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
  {
    unsigned int count = this->friends_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friends(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientFSGetFriendsSteamLevelsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFSGetFriendsSteamLevelsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFSGetFriendsSteamLevelsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
    MergeFrom(*source);
  }
}

void CMsgClientFSGetFriendsSteamLevelsResponse::MergeFrom(const CMsgClientFSGetFriendsSteamLevelsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friends_.MergeFrom(from.friends_);
}

void CMsgClientFSGetFriendsSteamLevelsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFSGetFriendsSteamLevelsResponse::CopyFrom(const CMsgClientFSGetFriendsSteamLevelsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFSGetFriendsSteamLevelsResponse::IsInitialized() const {
  return true;
}

void CMsgClientFSGetFriendsSteamLevelsResponse::Swap(CMsgClientFSGetFriendsSteamLevelsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFSGetFriendsSteamLevelsResponse::InternalSwap(CMsgClientFSGetFriendsSteamLevelsResponse* other) {
  friends_.InternalSwap(&other->friends_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientFSGetFriendsSteamLevelsResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientFSGetFriendsSteamLevelsResponse

// repeated .proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.Friend friends = 1;
int CMsgClientFSGetFriendsSteamLevelsResponse::friends_size() const {
  return friends_.size();
}
void CMsgClientFSGetFriendsSteamLevelsResponse::clear_friends() {
  friends_.Clear();
}
const ::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend& CMsgClientFSGetFriendsSteamLevelsResponse::friends(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.friends)
  return friends_.Get(index);
}
::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* CMsgClientFSGetFriendsSteamLevelsResponse::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.friends)
  return friends_.Mutable(index);
}
::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend* CMsgClientFSGetFriendsSteamLevelsResponse::add_friends() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.friends)
  return friends_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend >*
CMsgClientFSGetFriendsSteamLevelsResponse::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.friends)
  return &friends_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFSGetFriendsSteamLevelsResponse_Friend >&
CMsgClientFSGetFriendsSteamLevelsResponse::friends() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientFSGetFriendsSteamLevelsResponse.friends)
  return friends_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientEmailAddrInfo::kEmailAddressFieldNumber;
const int CMsgClientEmailAddrInfo::kEmailIsValidatedFieldNumber;
const int CMsgClientEmailAddrInfo::kEmailValidationChangedFieldNumber;
const int CMsgClientEmailAddrInfo::kCredentialChangeRequiresCodeFieldNumber;
const int CMsgClientEmailAddrInfo::kPasswordOrSecretqaChangeRequiresCodeFieldNumber;
const int CMsgClientEmailAddrInfo::kRemindUserAboutEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientEmailAddrInfo::CMsgClientEmailAddrInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientEmailAddrInfo)
}
CMsgClientEmailAddrInfo::CMsgClientEmailAddrInfo(const CMsgClientEmailAddrInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email_address()) {
    email_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_address_);
  }
  ::memcpy(&email_is_validated_, &from.email_is_validated_,
    reinterpret_cast<char*>(&remind_user_about_email_) -
    reinterpret_cast<char*>(&email_is_validated_) + sizeof(remind_user_about_email_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientEmailAddrInfo)
}

void CMsgClientEmailAddrInfo::SharedCtor() {
  _cached_size_ = 0;
  email_address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&email_is_validated_, 0, reinterpret_cast<char*>(&remind_user_about_email_) -
    reinterpret_cast<char*>(&email_is_validated_) + sizeof(remind_user_about_email_));
}

CMsgClientEmailAddrInfo::~CMsgClientEmailAddrInfo() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientEmailAddrInfo)
  SharedDtor();
}

void CMsgClientEmailAddrInfo::SharedDtor() {
  email_address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientEmailAddrInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientEmailAddrInfo::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientEmailAddrInfo& CMsgClientEmailAddrInfo::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientEmailAddrInfo* CMsgClientEmailAddrInfo::New(::google::protobuf::Arena* arena) const {
  CMsgClientEmailAddrInfo* n = new CMsgClientEmailAddrInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientEmailAddrInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientEmailAddrInfo)
  if (has_email_address()) {
    GOOGLE_DCHECK(!email_address_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*email_address_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 62u) {
    ::memset(&email_is_validated_, 0, reinterpret_cast<char*>(&remind_user_about_email_) -
      reinterpret_cast<char*>(&email_is_validated_) + sizeof(remind_user_about_email_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientEmailAddrInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientEmailAddrInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string email_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email_address()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email_address().data(), this->email_address().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientEmailAddrInfo.email_address");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool email_is_validated = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_email_is_validated();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &email_is_validated_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool email_validation_changed = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_email_validation_changed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &email_validation_changed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool credential_change_requires_code = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_credential_change_requires_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &credential_change_requires_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool password_or_secretqa_change_requires_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_password_or_secretqa_change_requires_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &password_or_secretqa_change_requires_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool remind_user_about_email = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_remind_user_about_email();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &remind_user_about_email_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientEmailAddrInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientEmailAddrInfo)
  return false;
#undef DO_
}

void CMsgClientEmailAddrInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientEmailAddrInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string email_address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email_address().data(), this->email_address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientEmailAddrInfo.email_address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email_address(), output);
  }

  // optional bool email_is_validated = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->email_is_validated(), output);
  }

  // optional bool email_validation_changed = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->email_validation_changed(), output);
  }

  // optional bool credential_change_requires_code = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->credential_change_requires_code(), output);
  }

  // optional bool password_or_secretqa_change_requires_code = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->password_or_secretqa_change_requires_code(), output);
  }

  // optional bool remind_user_about_email = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->remind_user_about_email(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientEmailAddrInfo)
}

::google::protobuf::uint8* CMsgClientEmailAddrInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientEmailAddrInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string email_address = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email_address().data(), this->email_address().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientEmailAddrInfo.email_address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email_address(), target);
  }

  // optional bool email_is_validated = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->email_is_validated(), target);
  }

  // optional bool email_validation_changed = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->email_validation_changed(), target);
  }

  // optional bool credential_change_requires_code = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->credential_change_requires_code(), target);
  }

  // optional bool password_or_secretqa_change_requires_code = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->password_or_secretqa_change_requires_code(), target);
  }

  // optional bool remind_user_about_email = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->remind_user_about_email(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientEmailAddrInfo)
  return target;
}

size_t CMsgClientEmailAddrInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientEmailAddrInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string email_address = 1;
    if (has_email_address()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email_address());
    }

    // optional bool email_is_validated = 2;
    if (has_email_is_validated()) {
      total_size += 1 + 1;
    }

    // optional bool email_validation_changed = 3;
    if (has_email_validation_changed()) {
      total_size += 1 + 1;
    }

    // optional bool credential_change_requires_code = 4;
    if (has_credential_change_requires_code()) {
      total_size += 1 + 1;
    }

    // optional bool password_or_secretqa_change_requires_code = 5;
    if (has_password_or_secretqa_change_requires_code()) {
      total_size += 1 + 1;
    }

    // optional bool remind_user_about_email = 6;
    if (has_remind_user_about_email()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientEmailAddrInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientEmailAddrInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientEmailAddrInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientEmailAddrInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientEmailAddrInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientEmailAddrInfo)
    MergeFrom(*source);
  }
}

void CMsgClientEmailAddrInfo::MergeFrom(const CMsgClientEmailAddrInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientEmailAddrInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_email_address();
      email_address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_address_);
    }
    if (cached_has_bits & 0x00000002u) {
      email_is_validated_ = from.email_is_validated_;
    }
    if (cached_has_bits & 0x00000004u) {
      email_validation_changed_ = from.email_validation_changed_;
    }
    if (cached_has_bits & 0x00000008u) {
      credential_change_requires_code_ = from.credential_change_requires_code_;
    }
    if (cached_has_bits & 0x00000010u) {
      password_or_secretqa_change_requires_code_ = from.password_or_secretqa_change_requires_code_;
    }
    if (cached_has_bits & 0x00000020u) {
      remind_user_about_email_ = from.remind_user_about_email_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientEmailAddrInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientEmailAddrInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientEmailAddrInfo::CopyFrom(const CMsgClientEmailAddrInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientEmailAddrInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientEmailAddrInfo::IsInitialized() const {
  return true;
}

void CMsgClientEmailAddrInfo::Swap(CMsgClientEmailAddrInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientEmailAddrInfo::InternalSwap(CMsgClientEmailAddrInfo* other) {
  email_address_.Swap(&other->email_address_);
  std::swap(email_is_validated_, other->email_is_validated_);
  std::swap(email_validation_changed_, other->email_validation_changed_);
  std::swap(credential_change_requires_code_, other->credential_change_requires_code_);
  std::swap(password_or_secretqa_change_requires_code_, other->password_or_secretqa_change_requires_code_);
  std::swap(remind_user_about_email_, other->remind_user_about_email_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientEmailAddrInfo::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientEmailAddrInfo

// optional string email_address = 1;
bool CMsgClientEmailAddrInfo::has_email_address() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientEmailAddrInfo::set_has_email_address() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientEmailAddrInfo::clear_has_email_address() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientEmailAddrInfo::clear_email_address() {
  email_address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email_address();
}
const ::std::string& CMsgClientEmailAddrInfo::email_address() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailAddrInfo.email_address)
  return email_address_.GetNoArena();
}
void CMsgClientEmailAddrInfo::set_email_address(const ::std::string& value) {
  set_has_email_address();
  email_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailAddrInfo.email_address)
}
#if LANG_CXX11
void CMsgClientEmailAddrInfo::set_email_address(::std::string&& value) {
  set_has_email_address();
  email_address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientEmailAddrInfo.email_address)
}
#endif
void CMsgClientEmailAddrInfo::set_email_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email_address();
  email_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientEmailAddrInfo.email_address)
}
void CMsgClientEmailAddrInfo::set_email_address(const char* value, size_t size) {
  set_has_email_address();
  email_address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientEmailAddrInfo.email_address)
}
::std::string* CMsgClientEmailAddrInfo::mutable_email_address() {
  set_has_email_address();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientEmailAddrInfo.email_address)
  return email_address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientEmailAddrInfo::release_email_address() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientEmailAddrInfo.email_address)
  clear_has_email_address();
  return email_address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientEmailAddrInfo::set_allocated_email_address(::std::string* email_address) {
  if (email_address != NULL) {
    set_has_email_address();
  } else {
    clear_has_email_address();
  }
  email_address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email_address);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientEmailAddrInfo.email_address)
}

// optional bool email_is_validated = 2;
bool CMsgClientEmailAddrInfo::has_email_is_validated() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientEmailAddrInfo::set_has_email_is_validated() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientEmailAddrInfo::clear_has_email_is_validated() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientEmailAddrInfo::clear_email_is_validated() {
  email_is_validated_ = false;
  clear_has_email_is_validated();
}
bool CMsgClientEmailAddrInfo::email_is_validated() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailAddrInfo.email_is_validated)
  return email_is_validated_;
}
void CMsgClientEmailAddrInfo::set_email_is_validated(bool value) {
  set_has_email_is_validated();
  email_is_validated_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailAddrInfo.email_is_validated)
}

// optional bool email_validation_changed = 3;
bool CMsgClientEmailAddrInfo::has_email_validation_changed() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientEmailAddrInfo::set_has_email_validation_changed() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientEmailAddrInfo::clear_has_email_validation_changed() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientEmailAddrInfo::clear_email_validation_changed() {
  email_validation_changed_ = false;
  clear_has_email_validation_changed();
}
bool CMsgClientEmailAddrInfo::email_validation_changed() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailAddrInfo.email_validation_changed)
  return email_validation_changed_;
}
void CMsgClientEmailAddrInfo::set_email_validation_changed(bool value) {
  set_has_email_validation_changed();
  email_validation_changed_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailAddrInfo.email_validation_changed)
}

// optional bool credential_change_requires_code = 4;
bool CMsgClientEmailAddrInfo::has_credential_change_requires_code() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientEmailAddrInfo::set_has_credential_change_requires_code() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientEmailAddrInfo::clear_has_credential_change_requires_code() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientEmailAddrInfo::clear_credential_change_requires_code() {
  credential_change_requires_code_ = false;
  clear_has_credential_change_requires_code();
}
bool CMsgClientEmailAddrInfo::credential_change_requires_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailAddrInfo.credential_change_requires_code)
  return credential_change_requires_code_;
}
void CMsgClientEmailAddrInfo::set_credential_change_requires_code(bool value) {
  set_has_credential_change_requires_code();
  credential_change_requires_code_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailAddrInfo.credential_change_requires_code)
}

// optional bool password_or_secretqa_change_requires_code = 5;
bool CMsgClientEmailAddrInfo::has_password_or_secretqa_change_requires_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientEmailAddrInfo::set_has_password_or_secretqa_change_requires_code() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientEmailAddrInfo::clear_has_password_or_secretqa_change_requires_code() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientEmailAddrInfo::clear_password_or_secretqa_change_requires_code() {
  password_or_secretqa_change_requires_code_ = false;
  clear_has_password_or_secretqa_change_requires_code();
}
bool CMsgClientEmailAddrInfo::password_or_secretqa_change_requires_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailAddrInfo.password_or_secretqa_change_requires_code)
  return password_or_secretqa_change_requires_code_;
}
void CMsgClientEmailAddrInfo::set_password_or_secretqa_change_requires_code(bool value) {
  set_has_password_or_secretqa_change_requires_code();
  password_or_secretqa_change_requires_code_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailAddrInfo.password_or_secretqa_change_requires_code)
}

// optional bool remind_user_about_email = 6;
bool CMsgClientEmailAddrInfo::has_remind_user_about_email() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientEmailAddrInfo::set_has_remind_user_about_email() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientEmailAddrInfo::clear_has_remind_user_about_email() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientEmailAddrInfo::clear_remind_user_about_email() {
  remind_user_about_email_ = false;
  clear_has_remind_user_about_email();
}
bool CMsgClientEmailAddrInfo::remind_user_about_email() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmailAddrInfo.remind_user_about_email)
  return remind_user_about_email_;
}
void CMsgClientEmailAddrInfo::set_remind_user_about_email(bool value) {
  set_has_remind_user_about_email();
  remind_user_about_email_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmailAddrInfo.remind_user_about_email)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREEnumeratePublishedFiles::kAppIdFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kQueryTypeFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kStartIndexFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kDaysFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kCountFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kTagsFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kUserTagsFieldNumber;
const int CMsgCREEnumeratePublishedFiles::kMatchingFileTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREEnumeratePublishedFiles::CMsgCREEnumeratePublishedFiles()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREEnumeratePublishedFiles)
}
CMsgCREEnumeratePublishedFiles::CMsgCREEnumeratePublishedFiles(const CMsgCREEnumeratePublishedFiles& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      tags_(from.tags_),
      user_tags_(from.user_tags_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    reinterpret_cast<char*>(&matching_file_type_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(matching_file_type_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREEnumeratePublishedFiles)
}

void CMsgCREEnumeratePublishedFiles::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(count_));
  matching_file_type_ = 13u;
}

CMsgCREEnumeratePublishedFiles::~CMsgCREEnumeratePublishedFiles() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREEnumeratePublishedFiles)
  SharedDtor();
}

void CMsgCREEnumeratePublishedFiles::SharedDtor() {
}

void CMsgCREEnumeratePublishedFiles::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCREEnumeratePublishedFiles::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREEnumeratePublishedFiles& CMsgCREEnumeratePublishedFiles::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCREEnumeratePublishedFiles* CMsgCREEnumeratePublishedFiles::New(::google::protobuf::Arena* arena) const {
  CMsgCREEnumeratePublishedFiles* n = new CMsgCREEnumeratePublishedFiles;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCREEnumeratePublishedFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  tags_.Clear();
  user_tags_.Clear();
  if (_has_bits_[0 / 32] & 63u) {
    ::memset(&app_id_, 0, reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&app_id_) + sizeof(count_));
    matching_file_type_ = 13u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREEnumeratePublishedFiles::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 query_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_query_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &query_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 start_index = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_start_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 days = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_days();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &days_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 count = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string tags = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->tags(this->tags_size() - 1).data(),
            this->tags(this->tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgCREEnumeratePublishedFiles.tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string user_tags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_user_tags()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->user_tags(this->user_tags_size() - 1).data(),
            this->user_tags(this->user_tags_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgCREEnumeratePublishedFiles.user_tags");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 matching_file_type = 8 [default = 13];
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          set_has_matching_file_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matching_file_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREEnumeratePublishedFiles)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREEnumeratePublishedFiles)
  return false;
#undef DO_
}

void CMsgCREEnumeratePublishedFiles::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional int32 query_type = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->query_type(), output);
  }

  // optional uint32 start_index = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->start_index(), output);
  }

  // optional uint32 days = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->days(), output);
  }

  // optional uint32 count = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->count(), output);
  }

  // repeated string tags = 6;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgCREEnumeratePublishedFiles.tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->tags(i), output);
  }

  // repeated string user_tags = 7;
  for (int i = 0, n = this->user_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_tags(i).data(), this->user_tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgCREEnumeratePublishedFiles.user_tags");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->user_tags(i), output);
  }

  // optional uint32 matching_file_type = 8 [default = 13];
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->matching_file_type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREEnumeratePublishedFiles)
}

::google::protobuf::uint8* CMsgCREEnumeratePublishedFiles::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional int32 query_type = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->query_type(), target);
  }

  // optional uint32 start_index = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->start_index(), target);
  }

  // optional uint32 days = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->days(), target);
  }

  // optional uint32 count = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->count(), target);
  }

  // repeated string tags = 6;
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->tags(i).data(), this->tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgCREEnumeratePublishedFiles.tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->tags(i), target);
  }

  // repeated string user_tags = 7;
  for (int i = 0, n = this->user_tags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->user_tags(i).data(), this->user_tags(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgCREEnumeratePublishedFiles.user_tags");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->user_tags(i), target);
  }

  // optional uint32 matching_file_type = 8 [default = 13];
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->matching_file_type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREEnumeratePublishedFiles)
  return target;
}

size_t CMsgCREEnumeratePublishedFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated string tags = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  for (int i = 0, n = this->tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->tags(i));
  }

  // repeated string user_tags = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->user_tags_size());
  for (int i = 0, n = this->user_tags_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->user_tags(i));
  }

  if (_has_bits_[0 / 32] & 63u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional int32 query_type = 2;
    if (has_query_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->query_type());
    }

    // optional uint32 start_index = 3;
    if (has_start_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->start_index());
    }

    // optional uint32 days = 4;
    if (has_days()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->days());
    }

    // optional uint32 count = 5;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->count());
    }

    // optional uint32 matching_file_type = 8 [default = 13];
    if (has_matching_file_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->matching_file_type());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCREEnumeratePublishedFiles::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREEnumeratePublishedFiles* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREEnumeratePublishedFiles>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREEnumeratePublishedFiles)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREEnumeratePublishedFiles)
    MergeFrom(*source);
  }
}

void CMsgCREEnumeratePublishedFiles::MergeFrom(const CMsgCREEnumeratePublishedFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  user_tags_.MergeFrom(from.user_tags_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      query_type_ = from.query_type_;
    }
    if (cached_has_bits & 0x00000004u) {
      start_index_ = from.start_index_;
    }
    if (cached_has_bits & 0x00000008u) {
      days_ = from.days_;
    }
    if (cached_has_bits & 0x00000010u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000020u) {
      matching_file_type_ = from.matching_file_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREEnumeratePublishedFiles::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREEnumeratePublishedFiles::CopyFrom(const CMsgCREEnumeratePublishedFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREEnumeratePublishedFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREEnumeratePublishedFiles::IsInitialized() const {
  return true;
}

void CMsgCREEnumeratePublishedFiles::Swap(CMsgCREEnumeratePublishedFiles* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREEnumeratePublishedFiles::InternalSwap(CMsgCREEnumeratePublishedFiles* other) {
  tags_.InternalSwap(&other->tags_);
  user_tags_.InternalSwap(&other->user_tags_);
  std::swap(app_id_, other->app_id_);
  std::swap(query_type_, other->query_type_);
  std::swap(start_index_, other->start_index_);
  std::swap(days_, other->days_);
  std::swap(count_, other->count_);
  std::swap(matching_file_type_, other->matching_file_type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCREEnumeratePublishedFiles::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCREEnumeratePublishedFiles

// optional uint32 app_id = 1;
bool CMsgCREEnumeratePublishedFiles::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgCREEnumeratePublishedFiles::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgCREEnumeratePublishedFiles::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgCREEnumeratePublishedFiles::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgCREEnumeratePublishedFiles::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFiles.app_id)
  return app_id_;
}
void CMsgCREEnumeratePublishedFiles::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFiles.app_id)
}

// optional int32 query_type = 2;
bool CMsgCREEnumeratePublishedFiles::has_query_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgCREEnumeratePublishedFiles::set_has_query_type() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgCREEnumeratePublishedFiles::clear_has_query_type() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgCREEnumeratePublishedFiles::clear_query_type() {
  query_type_ = 0;
  clear_has_query_type();
}
::google::protobuf::int32 CMsgCREEnumeratePublishedFiles::query_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFiles.query_type)
  return query_type_;
}
void CMsgCREEnumeratePublishedFiles::set_query_type(::google::protobuf::int32 value) {
  set_has_query_type();
  query_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFiles.query_type)
}

// optional uint32 start_index = 3;
bool CMsgCREEnumeratePublishedFiles::has_start_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgCREEnumeratePublishedFiles::set_has_start_index() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgCREEnumeratePublishedFiles::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgCREEnumeratePublishedFiles::clear_start_index() {
  start_index_ = 0u;
  clear_has_start_index();
}
::google::protobuf::uint32 CMsgCREEnumeratePublishedFiles::start_index() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFiles.start_index)
  return start_index_;
}
void CMsgCREEnumeratePublishedFiles::set_start_index(::google::protobuf::uint32 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFiles.start_index)
}

// optional uint32 days = 4;
bool CMsgCREEnumeratePublishedFiles::has_days() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgCREEnumeratePublishedFiles::set_has_days() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgCREEnumeratePublishedFiles::clear_has_days() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgCREEnumeratePublishedFiles::clear_days() {
  days_ = 0u;
  clear_has_days();
}
::google::protobuf::uint32 CMsgCREEnumeratePublishedFiles::days() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFiles.days)
  return days_;
}
void CMsgCREEnumeratePublishedFiles::set_days(::google::protobuf::uint32 value) {
  set_has_days();
  days_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFiles.days)
}

// optional uint32 count = 5;
bool CMsgCREEnumeratePublishedFiles::has_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgCREEnumeratePublishedFiles::set_has_count() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgCREEnumeratePublishedFiles::clear_has_count() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgCREEnumeratePublishedFiles::clear_count() {
  count_ = 0u;
  clear_has_count();
}
::google::protobuf::uint32 CMsgCREEnumeratePublishedFiles::count() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFiles.count)
  return count_;
}
void CMsgCREEnumeratePublishedFiles::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFiles.count)
}

// repeated string tags = 6;
int CMsgCREEnumeratePublishedFiles::tags_size() const {
  return tags_.size();
}
void CMsgCREEnumeratePublishedFiles::clear_tags() {
  tags_.Clear();
}
const ::std::string& CMsgCREEnumeratePublishedFiles::tags(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFiles.tags)
  return tags_.Get(index);
}
::std::string* CMsgCREEnumeratePublishedFiles::mutable_tags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgCREEnumeratePublishedFiles.tags)
  return tags_.Mutable(index);
}
void CMsgCREEnumeratePublishedFiles::set_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFiles.tags)
  tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CMsgCREEnumeratePublishedFiles::set_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFiles.tags)
  tags_.Mutable(index)->assign(std::move(value));
}
#endif
void CMsgCREEnumeratePublishedFiles::set_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgCREEnumeratePublishedFiles.tags)
}
void CMsgCREEnumeratePublishedFiles::set_tags(int index, const char* value, size_t size) {
  tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgCREEnumeratePublishedFiles.tags)
}
::std::string* CMsgCREEnumeratePublishedFiles::add_tags() {
  // @@protoc_insertion_point(field_add_mutable:proto.steam.CMsgCREEnumeratePublishedFiles.tags)
  return tags_.Add();
}
void CMsgCREEnumeratePublishedFiles::add_tags(const ::std::string& value) {
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgCREEnumeratePublishedFiles.tags)
}
#if LANG_CXX11
void CMsgCREEnumeratePublishedFiles::add_tags(::std::string&& value) {
  tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.steam.CMsgCREEnumeratePublishedFiles.tags)
}
#endif
void CMsgCREEnumeratePublishedFiles::add_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.steam.CMsgCREEnumeratePublishedFiles.tags)
}
void CMsgCREEnumeratePublishedFiles::add_tags(const char* value, size_t size) {
  tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.steam.CMsgCREEnumeratePublishedFiles.tags)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgCREEnumeratePublishedFiles::tags() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgCREEnumeratePublishedFiles.tags)
  return tags_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgCREEnumeratePublishedFiles::mutable_tags() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgCREEnumeratePublishedFiles.tags)
  return &tags_;
}

// repeated string user_tags = 7;
int CMsgCREEnumeratePublishedFiles::user_tags_size() const {
  return user_tags_.size();
}
void CMsgCREEnumeratePublishedFiles::clear_user_tags() {
  user_tags_.Clear();
}
const ::std::string& CMsgCREEnumeratePublishedFiles::user_tags(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFiles.user_tags)
  return user_tags_.Get(index);
}
::std::string* CMsgCREEnumeratePublishedFiles::mutable_user_tags(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgCREEnumeratePublishedFiles.user_tags)
  return user_tags_.Mutable(index);
}
void CMsgCREEnumeratePublishedFiles::set_user_tags(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFiles.user_tags)
  user_tags_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void CMsgCREEnumeratePublishedFiles::set_user_tags(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFiles.user_tags)
  user_tags_.Mutable(index)->assign(std::move(value));
}
#endif
void CMsgCREEnumeratePublishedFiles::set_user_tags(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  user_tags_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgCREEnumeratePublishedFiles.user_tags)
}
void CMsgCREEnumeratePublishedFiles::set_user_tags(int index, const char* value, size_t size) {
  user_tags_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgCREEnumeratePublishedFiles.user_tags)
}
::std::string* CMsgCREEnumeratePublishedFiles::add_user_tags() {
  // @@protoc_insertion_point(field_add_mutable:proto.steam.CMsgCREEnumeratePublishedFiles.user_tags)
  return user_tags_.Add();
}
void CMsgCREEnumeratePublishedFiles::add_user_tags(const ::std::string& value) {
  user_tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgCREEnumeratePublishedFiles.user_tags)
}
#if LANG_CXX11
void CMsgCREEnumeratePublishedFiles::add_user_tags(::std::string&& value) {
  user_tags_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.steam.CMsgCREEnumeratePublishedFiles.user_tags)
}
#endif
void CMsgCREEnumeratePublishedFiles::add_user_tags(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  user_tags_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.steam.CMsgCREEnumeratePublishedFiles.user_tags)
}
void CMsgCREEnumeratePublishedFiles::add_user_tags(const char* value, size_t size) {
  user_tags_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.steam.CMsgCREEnumeratePublishedFiles.user_tags)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgCREEnumeratePublishedFiles::user_tags() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgCREEnumeratePublishedFiles.user_tags)
  return user_tags_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgCREEnumeratePublishedFiles::mutable_user_tags() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgCREEnumeratePublishedFiles.user_tags)
  return &user_tags_;
}

// optional uint32 matching_file_type = 8 [default = 13];
bool CMsgCREEnumeratePublishedFiles::has_matching_file_type() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgCREEnumeratePublishedFiles::set_has_matching_file_type() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgCREEnumeratePublishedFiles::clear_has_matching_file_type() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgCREEnumeratePublishedFiles::clear_matching_file_type() {
  matching_file_type_ = 13u;
  clear_has_matching_file_type();
}
::google::protobuf::uint32 CMsgCREEnumeratePublishedFiles::matching_file_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFiles.matching_file_type)
  return matching_file_type_;
}
void CMsgCREEnumeratePublishedFiles::set_matching_file_type(::google::protobuf::uint32 value) {
  set_has_matching_file_type();
  matching_file_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFiles.matching_file_type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kPublishedFileIdFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kVotesForFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kVotesAgainstFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kReportsFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
}
CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId(const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(score_));
}

CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::~CMsgCREEnumeratePublishedFilesResponse_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  SharedDtor();
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::SharedDtor() {
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId& CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::New(::google::protobuf::Arena* arena) const {
  CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* n = new CMsgCREEnumeratePublishedFilesResponse_PublishedFileId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(score_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 votes_for = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_votes_for();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &votes_for_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 votes_against = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_votes_against();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &votes_against_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 reports = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_reports();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reports_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float score = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  return false;
#undef DO_
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional int32 votes_for = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->votes_for(), output);
  }

  // optional int32 votes_against = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->votes_against(), output);
  }

  // optional int32 reports = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->reports(), output);
  }

  // optional float score = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
}

::google::protobuf::uint8* CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional int32 votes_for = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->votes_for(), target);
  }

  // optional int32 votes_against = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->votes_against(), target);
  }

  // optional int32 reports = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->reports(), target);
  }

  // optional float score = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  return target;
}

size_t CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional int32 votes_for = 2;
    if (has_votes_for()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->votes_for());
    }

    // optional int32 votes_against = 3;
    if (has_votes_against()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->votes_against());
    }

    // optional int32 reports = 4;
    if (has_reports()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reports());
    }

    // optional float score = 5;
    if (has_score()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::MergeFrom(const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      votes_for_ = from.votes_for_;
    }
    if (cached_has_bits & 0x00000004u) {
      votes_against_ = from.votes_against_;
    }
    if (cached_has_bits & 0x00000008u) {
      reports_ = from.reports_;
    }
    if (cached_has_bits & 0x00000010u) {
      score_ = from.score_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::CopyFrom(const CMsgCREEnumeratePublishedFilesResponse_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::Swap(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::InternalSwap(CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(votes_for_, other->votes_for_);
  std::swap(votes_against_, other->votes_against_);
  std::swap(reports_, other->reports_);
  std::swap(score_, other->score_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCREEnumeratePublishedFilesResponse_PublishedFileId

// optional fixed64 published_file_id = 1;
bool CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId.published_file_id)
  return published_file_id_;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId.published_file_id)
}

// optional int32 votes_for = 2;
bool CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::has_votes_for() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::set_has_votes_for() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::clear_has_votes_for() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::clear_votes_for() {
  votes_for_ = 0;
  clear_has_votes_for();
}
::google::protobuf::int32 CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::votes_for() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId.votes_for)
  return votes_for_;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::set_votes_for(::google::protobuf::int32 value) {
  set_has_votes_for();
  votes_for_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId.votes_for)
}

// optional int32 votes_against = 3;
bool CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::has_votes_against() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::set_has_votes_against() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::clear_has_votes_against() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::clear_votes_against() {
  votes_against_ = 0;
  clear_has_votes_against();
}
::google::protobuf::int32 CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::votes_against() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId.votes_against)
  return votes_against_;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::set_votes_against(::google::protobuf::int32 value) {
  set_has_votes_against();
  votes_against_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId.votes_against)
}

// optional int32 reports = 4;
bool CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::has_reports() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::set_has_reports() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::clear_has_reports() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::clear_reports() {
  reports_ = 0;
  clear_has_reports();
}
::google::protobuf::int32 CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::reports() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId.reports)
  return reports_;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::set_reports(::google::protobuf::int32 value) {
  set_has_reports();
  reports_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId.reports)
}

// optional float score = 5;
bool CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::has_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::set_has_score() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::clear_has_score() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::clear_score() {
  score_ = 0;
  clear_has_score();
}
float CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::score() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId.score)
  return score_;
}
void CMsgCREEnumeratePublishedFilesResponse_PublishedFileId::set_score(float value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREEnumeratePublishedFilesResponse::kEresultFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse::kPublishedFilesFieldNumber;
const int CMsgCREEnumeratePublishedFilesResponse::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREEnumeratePublishedFilesResponse::CMsgCREEnumeratePublishedFilesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
}
CMsgCREEnumeratePublishedFilesResponse::CMsgCREEnumeratePublishedFilesResponse(const CMsgCREEnumeratePublishedFilesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      published_files_(from.published_files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
}

void CMsgCREEnumeratePublishedFilesResponse::SharedCtor() {
  _cached_size_ = 0;
  total_results_ = 0u;
  eresult_ = 2;
}

CMsgCREEnumeratePublishedFilesResponse::~CMsgCREEnumeratePublishedFilesResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  SharedDtor();
}

void CMsgCREEnumeratePublishedFilesResponse::SharedDtor() {
}

void CMsgCREEnumeratePublishedFilesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCREEnumeratePublishedFilesResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREEnumeratePublishedFilesResponse& CMsgCREEnumeratePublishedFilesResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCREEnumeratePublishedFilesResponse* CMsgCREEnumeratePublishedFilesResponse::New(::google::protobuf::Arena* arena) const {
  CMsgCREEnumeratePublishedFilesResponse* n = new CMsgCREEnumeratePublishedFilesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCREEnumeratePublishedFilesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  published_files_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    total_results_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREEnumeratePublishedFilesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId published_files = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_published_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_total_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  return false;
#undef DO_
}

void CMsgCREEnumeratePublishedFilesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0, n = this->published_files_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->published_files(i), output);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_results(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
}

::google::protobuf::uint8* CMsgCREEnumeratePublishedFilesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId published_files = 2;
  for (unsigned int i = 0, n = this->published_files_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->published_files(i), deterministic, target);
  }

  // optional uint32 total_results = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_results(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  return target;
}

size_t CMsgCREEnumeratePublishedFilesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId published_files = 2;
  {
    unsigned int count = this->published_files_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->published_files(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_results = 3;
    if (has_total_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCREEnumeratePublishedFilesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREEnumeratePublishedFilesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREEnumeratePublishedFilesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
    MergeFrom(*source);
  }
}

void CMsgCREEnumeratePublishedFilesResponse::MergeFrom(const CMsgCREEnumeratePublishedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_files_.MergeFrom(from.published_files_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREEnumeratePublishedFilesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREEnumeratePublishedFilesResponse::CopyFrom(const CMsgCREEnumeratePublishedFilesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREEnumeratePublishedFilesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREEnumeratePublishedFilesResponse::IsInitialized() const {
  return true;
}

void CMsgCREEnumeratePublishedFilesResponse::Swap(CMsgCREEnumeratePublishedFilesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREEnumeratePublishedFilesResponse::InternalSwap(CMsgCREEnumeratePublishedFilesResponse* other) {
  published_files_.InternalSwap(&other->published_files_);
  std::swap(total_results_, other->total_results_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCREEnumeratePublishedFilesResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCREEnumeratePublishedFilesResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgCREEnumeratePublishedFilesResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgCREEnumeratePublishedFilesResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgCREEnumeratePublishedFilesResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgCREEnumeratePublishedFilesResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgCREEnumeratePublishedFilesResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFilesResponse.eresult)
  return eresult_;
}
void CMsgCREEnumeratePublishedFilesResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFilesResponse.eresult)
}

// repeated .proto.steam.CMsgCREEnumeratePublishedFilesResponse.PublishedFileId published_files = 2;
int CMsgCREEnumeratePublishedFilesResponse::published_files_size() const {
  return published_files_.size();
}
void CMsgCREEnumeratePublishedFilesResponse::clear_published_files() {
  published_files_.Clear();
}
const ::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId& CMsgCREEnumeratePublishedFilesResponse::published_files(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFilesResponse.published_files)
  return published_files_.Get(index);
}
::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* CMsgCREEnumeratePublishedFilesResponse::mutable_published_files(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgCREEnumeratePublishedFilesResponse.published_files)
  return published_files_.Mutable(index);
}
::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId* CMsgCREEnumeratePublishedFilesResponse::add_published_files() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgCREEnumeratePublishedFilesResponse.published_files)
  return published_files_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId >*
CMsgCREEnumeratePublishedFilesResponse::mutable_published_files() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgCREEnumeratePublishedFilesResponse.published_files)
  return &published_files_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgCREEnumeratePublishedFilesResponse_PublishedFileId >&
CMsgCREEnumeratePublishedFilesResponse::published_files() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgCREEnumeratePublishedFilesResponse.published_files)
  return published_files_;
}

// optional uint32 total_results = 3;
bool CMsgCREEnumeratePublishedFilesResponse::has_total_results() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgCREEnumeratePublishedFilesResponse::set_has_total_results() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgCREEnumeratePublishedFilesResponse::clear_has_total_results() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgCREEnumeratePublishedFilesResponse::clear_total_results() {
  total_results_ = 0u;
  clear_has_total_results();
}
::google::protobuf::uint32 CMsgCREEnumeratePublishedFilesResponse::total_results() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREEnumeratePublishedFilesResponse.total_results)
  return total_results_;
}
void CMsgCREEnumeratePublishedFilesResponse::set_total_results(::google::protobuf::uint32 value) {
  set_has_total_results();
  total_results_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREEnumeratePublishedFilesResponse.total_results)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREItemVoteSummary_PublishedFileId::kPublishedFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREItemVoteSummary_PublishedFileId::CMsgCREItemVoteSummary_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
}
CMsgCREItemVoteSummary_PublishedFileId::CMsgCREItemVoteSummary_PublishedFileId(const CMsgCREItemVoteSummary_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  published_file_id_ = from.published_file_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
}

void CMsgCREItemVoteSummary_PublishedFileId::SharedCtor() {
  _cached_size_ = 0;
  published_file_id_ = GOOGLE_ULONGLONG(0);
}

CMsgCREItemVoteSummary_PublishedFileId::~CMsgCREItemVoteSummary_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  SharedDtor();
}

void CMsgCREItemVoteSummary_PublishedFileId::SharedDtor() {
}

void CMsgCREItemVoteSummary_PublishedFileId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCREItemVoteSummary_PublishedFileId::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREItemVoteSummary_PublishedFileId& CMsgCREItemVoteSummary_PublishedFileId::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCREItemVoteSummary_PublishedFileId* CMsgCREItemVoteSummary_PublishedFileId::New(::google::protobuf::Arena* arena) const {
  CMsgCREItemVoteSummary_PublishedFileId* n = new CMsgCREItemVoteSummary_PublishedFileId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCREItemVoteSummary_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  published_file_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREItemVoteSummary_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  return false;
#undef DO_
}

void CMsgCREItemVoteSummary_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
}

::google::protobuf::uint8* CMsgCREItemVoteSummary_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  return target;
}

size_t CMsgCREItemVoteSummary_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 published_file_id = 1;
  if (has_published_file_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCREItemVoteSummary_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREItemVoteSummary_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREItemVoteSummary_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgCREItemVoteSummary_PublishedFileId::MergeFrom(const CMsgCREItemVoteSummary_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_published_file_id()) {
    set_published_file_id(from.published_file_id());
  }
}

void CMsgCREItemVoteSummary_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREItemVoteSummary_PublishedFileId::CopyFrom(const CMsgCREItemVoteSummary_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREItemVoteSummary.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREItemVoteSummary_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgCREItemVoteSummary_PublishedFileId::Swap(CMsgCREItemVoteSummary_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREItemVoteSummary_PublishedFileId::InternalSwap(CMsgCREItemVoteSummary_PublishedFileId* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCREItemVoteSummary_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCREItemVoteSummary_PublishedFileId

// optional fixed64 published_file_id = 1;
bool CMsgCREItemVoteSummary_PublishedFileId::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgCREItemVoteSummary_PublishedFileId::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgCREItemVoteSummary_PublishedFileId::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgCREItemVoteSummary_PublishedFileId::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgCREItemVoteSummary_PublishedFileId::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREItemVoteSummary.PublishedFileId.published_file_id)
  return published_file_id_;
}
void CMsgCREItemVoteSummary_PublishedFileId::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREItemVoteSummary.PublishedFileId.published_file_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREItemVoteSummary::kPublishedFileIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREItemVoteSummary::CMsgCREItemVoteSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREItemVoteSummary)
}
CMsgCREItemVoteSummary::CMsgCREItemVoteSummary(const CMsgCREItemVoteSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      published_file_ids_(from.published_file_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREItemVoteSummary)
}

void CMsgCREItemVoteSummary::SharedCtor() {
  _cached_size_ = 0;
}

CMsgCREItemVoteSummary::~CMsgCREItemVoteSummary() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREItemVoteSummary)
  SharedDtor();
}

void CMsgCREItemVoteSummary::SharedDtor() {
}

void CMsgCREItemVoteSummary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCREItemVoteSummary::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREItemVoteSummary& CMsgCREItemVoteSummary::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCREItemVoteSummary* CMsgCREItemVoteSummary::New(::google::protobuf::Arena* arena) const {
  CMsgCREItemVoteSummary* n = new CMsgCREItemVoteSummary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCREItemVoteSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREItemVoteSummary)
  published_file_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREItemVoteSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREItemVoteSummary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.steam.CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_published_file_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREItemVoteSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREItemVoteSummary)
  return false;
#undef DO_
}

void CMsgCREItemVoteSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
  for (unsigned int i = 0, n = this->published_file_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->published_file_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREItemVoteSummary)
}

::google::protobuf::uint8* CMsgCREItemVoteSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
  for (unsigned int i = 0, n = this->published_file_ids_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->published_file_ids(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREItemVoteSummary)
  return target;
}

size_t CMsgCREItemVoteSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREItemVoteSummary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
  {
    unsigned int count = this->published_file_ids_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->published_file_ids(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCREItemVoteSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREItemVoteSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREItemVoteSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREItemVoteSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREItemVoteSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREItemVoteSummary)
    MergeFrom(*source);
  }
}

void CMsgCREItemVoteSummary::MergeFrom(const CMsgCREItemVoteSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREItemVoteSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_file_ids_.MergeFrom(from.published_file_ids_);
}

void CMsgCREItemVoteSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREItemVoteSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREItemVoteSummary::CopyFrom(const CMsgCREItemVoteSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREItemVoteSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREItemVoteSummary::IsInitialized() const {
  return true;
}

void CMsgCREItemVoteSummary::Swap(CMsgCREItemVoteSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREItemVoteSummary::InternalSwap(CMsgCREItemVoteSummary* other) {
  published_file_ids_.InternalSwap(&other->published_file_ids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCREItemVoteSummary::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCREItemVoteSummary

// repeated .proto.steam.CMsgCREItemVoteSummary.PublishedFileId published_file_ids = 1;
int CMsgCREItemVoteSummary::published_file_ids_size() const {
  return published_file_ids_.size();
}
void CMsgCREItemVoteSummary::clear_published_file_ids() {
  published_file_ids_.Clear();
}
const ::proto::steam::CMsgCREItemVoteSummary_PublishedFileId& CMsgCREItemVoteSummary::published_file_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREItemVoteSummary.published_file_ids)
  return published_file_ids_.Get(index);
}
::proto::steam::CMsgCREItemVoteSummary_PublishedFileId* CMsgCREItemVoteSummary::mutable_published_file_ids(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgCREItemVoteSummary.published_file_ids)
  return published_file_ids_.Mutable(index);
}
::proto::steam::CMsgCREItemVoteSummary_PublishedFileId* CMsgCREItemVoteSummary::add_published_file_ids() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgCREItemVoteSummary.published_file_ids)
  return published_file_ids_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgCREItemVoteSummary_PublishedFileId >*
CMsgCREItemVoteSummary::mutable_published_file_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgCREItemVoteSummary.published_file_ids)
  return &published_file_ids_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgCREItemVoteSummary_PublishedFileId >&
CMsgCREItemVoteSummary::published_file_ids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgCREItemVoteSummary.published_file_ids)
  return published_file_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kPublishedFileIdFieldNumber;
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kVotesForFieldNumber;
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kVotesAgainstFieldNumber;
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kReportsFieldNumber;
const int CMsgCREItemVoteSummaryResponse_ItemVoteSummary::kScoreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREItemVoteSummaryResponse_ItemVoteSummary::CMsgCREItemVoteSummaryResponse_ItemVoteSummary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
}
CMsgCREItemVoteSummaryResponse_ItemVoteSummary::CMsgCREItemVoteSummaryResponse_ItemVoteSummary(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(score_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&score_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(score_));
}

CMsgCREItemVoteSummaryResponse_ItemVoteSummary::~CMsgCREItemVoteSummaryResponse_ItemVoteSummary() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  SharedDtor();
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::SharedDtor() {
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCREItemVoteSummaryResponse_ItemVoteSummary::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& CMsgCREItemVoteSummaryResponse_ItemVoteSummary::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCREItemVoteSummaryResponse_ItemVoteSummary* CMsgCREItemVoteSummaryResponse_ItemVoteSummary::New(::google::protobuf::Arena* arena) const {
  CMsgCREItemVoteSummaryResponse_ItemVoteSummary* n = new CMsgCREItemVoteSummaryResponse_ItemVoteSummary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&score_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(score_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 votes_for = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_votes_for();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &votes_for_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 votes_against = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_votes_against();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &votes_against_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 reports = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_reports();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &reports_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float score = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  return false;
#undef DO_
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional int32 votes_for = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->votes_for(), output);
  }

  // optional int32 votes_against = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->votes_against(), output);
  }

  // optional int32 reports = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->reports(), output);
  }

  // optional float score = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->score(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
}

::google::protobuf::uint8* CMsgCREItemVoteSummaryResponse_ItemVoteSummary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional int32 votes_for = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->votes_for(), target);
  }

  // optional int32 votes_against = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->votes_against(), target);
  }

  // optional int32 reports = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->reports(), target);
  }

  // optional float score = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->score(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  return target;
}

size_t CMsgCREItemVoteSummaryResponse_ItemVoteSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional int32 votes_for = 2;
    if (has_votes_for()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->votes_for());
    }

    // optional int32 votes_against = 3;
    if (has_votes_against()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->votes_against());
    }

    // optional int32 reports = 4;
    if (has_reports()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->reports());
    }

    // optional float score = 5;
    if (has_score()) {
      total_size += 1 + 4;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREItemVoteSummaryResponse_ItemVoteSummary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREItemVoteSummaryResponse_ItemVoteSummary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
    MergeFrom(*source);
  }
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::MergeFrom(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      votes_for_ = from.votes_for_;
    }
    if (cached_has_bits & 0x00000004u) {
      votes_against_ = from.votes_against_;
    }
    if (cached_has_bits & 0x00000008u) {
      reports_ = from.reports_;
    }
    if (cached_has_bits & 0x00000010u) {
      score_ = from.score_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::CopyFrom(const CMsgCREItemVoteSummaryResponse_ItemVoteSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::IsInitialized() const {
  return true;
}

void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::Swap(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::InternalSwap(CMsgCREItemVoteSummaryResponse_ItemVoteSummary* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(votes_for_, other->votes_for_);
  std::swap(votes_against_, other->votes_against_);
  std::swap(reports_, other->reports_);
  std::swap(score_, other->score_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCREItemVoteSummaryResponse_ItemVoteSummary::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCREItemVoteSummaryResponse_ItemVoteSummary

// optional fixed64 published_file_id = 1;
bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.published_file_id)
  return published_file_id_;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.published_file_id)
}

// optional int32 votes_for = 2;
bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_votes_for() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_has_votes_for() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_has_votes_for() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_votes_for() {
  votes_for_ = 0;
  clear_has_votes_for();
}
::google::protobuf::int32 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::votes_for() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.votes_for)
  return votes_for_;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_votes_for(::google::protobuf::int32 value) {
  set_has_votes_for();
  votes_for_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.votes_for)
}

// optional int32 votes_against = 3;
bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_votes_against() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_has_votes_against() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_has_votes_against() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_votes_against() {
  votes_against_ = 0;
  clear_has_votes_against();
}
::google::protobuf::int32 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::votes_against() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.votes_against)
  return votes_against_;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_votes_against(::google::protobuf::int32 value) {
  set_has_votes_against();
  votes_against_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.votes_against)
}

// optional int32 reports = 4;
bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_reports() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_has_reports() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_has_reports() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_reports() {
  reports_ = 0;
  clear_has_reports();
}
::google::protobuf::int32 CMsgCREItemVoteSummaryResponse_ItemVoteSummary::reports() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.reports)
  return reports_;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_reports(::google::protobuf::int32 value) {
  set_has_reports();
  reports_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.reports)
}

// optional float score = 5;
bool CMsgCREItemVoteSummaryResponse_ItemVoteSummary::has_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_has_score() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_has_score() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::clear_score() {
  score_ = 0;
  clear_has_score();
}
float CMsgCREItemVoteSummaryResponse_ItemVoteSummary::score() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.score)
  return score_;
}
void CMsgCREItemVoteSummaryResponse_ItemVoteSummary::set_score(float value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary.score)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREItemVoteSummaryResponse::kEresultFieldNumber;
const int CMsgCREItemVoteSummaryResponse::kItemVoteSummariesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREItemVoteSummaryResponse::CMsgCREItemVoteSummaryResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREItemVoteSummaryResponse)
}
CMsgCREItemVoteSummaryResponse::CMsgCREItemVoteSummaryResponse(const CMsgCREItemVoteSummaryResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      item_vote_summaries_(from.item_vote_summaries_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREItemVoteSummaryResponse)
}

void CMsgCREItemVoteSummaryResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
}

CMsgCREItemVoteSummaryResponse::~CMsgCREItemVoteSummaryResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREItemVoteSummaryResponse)
  SharedDtor();
}

void CMsgCREItemVoteSummaryResponse::SharedDtor() {
}

void CMsgCREItemVoteSummaryResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCREItemVoteSummaryResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREItemVoteSummaryResponse& CMsgCREItemVoteSummaryResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCREItemVoteSummaryResponse* CMsgCREItemVoteSummaryResponse::New(::google::protobuf::Arena* arena) const {
  CMsgCREItemVoteSummaryResponse* n = new CMsgCREItemVoteSummaryResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCREItemVoteSummaryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  item_vote_summaries_.Clear();
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREItemVoteSummaryResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_item_vote_summaries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREItemVoteSummaryResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREItemVoteSummaryResponse)
  return false;
#undef DO_
}

void CMsgCREItemVoteSummaryResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
  for (unsigned int i = 0, n = this->item_vote_summaries_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->item_vote_summaries(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREItemVoteSummaryResponse)
}

::google::protobuf::uint8* CMsgCREItemVoteSummaryResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
  for (unsigned int i = 0, n = this->item_vote_summaries_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->item_vote_summaries(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREItemVoteSummaryResponse)
  return target;
}

size_t CMsgCREItemVoteSummaryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
  {
    unsigned int count = this->item_vote_summaries_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item_vote_summaries(i));
    }
  }

  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCREItemVoteSummaryResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREItemVoteSummaryResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREItemVoteSummaryResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREItemVoteSummaryResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREItemVoteSummaryResponse)
    MergeFrom(*source);
  }
}

void CMsgCREItemVoteSummaryResponse::MergeFrom(const CMsgCREItemVoteSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_vote_summaries_.MergeFrom(from.item_vote_summaries_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgCREItemVoteSummaryResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREItemVoteSummaryResponse::CopyFrom(const CMsgCREItemVoteSummaryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREItemVoteSummaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREItemVoteSummaryResponse::IsInitialized() const {
  return true;
}

void CMsgCREItemVoteSummaryResponse::Swap(CMsgCREItemVoteSummaryResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREItemVoteSummaryResponse::InternalSwap(CMsgCREItemVoteSummaryResponse* other) {
  item_vote_summaries_.InternalSwap(&other->item_vote_summaries_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCREItemVoteSummaryResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCREItemVoteSummaryResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgCREItemVoteSummaryResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgCREItemVoteSummaryResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgCREItemVoteSummaryResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgCREItemVoteSummaryResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgCREItemVoteSummaryResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREItemVoteSummaryResponse.eresult)
  return eresult_;
}
void CMsgCREItemVoteSummaryResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREItemVoteSummaryResponse.eresult)
}

// repeated .proto.steam.CMsgCREItemVoteSummaryResponse.ItemVoteSummary item_vote_summaries = 2;
int CMsgCREItemVoteSummaryResponse::item_vote_summaries_size() const {
  return item_vote_summaries_.size();
}
void CMsgCREItemVoteSummaryResponse::clear_item_vote_summaries() {
  item_vote_summaries_.Clear();
}
const ::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary& CMsgCREItemVoteSummaryResponse::item_vote_summaries(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREItemVoteSummaryResponse.item_vote_summaries)
  return item_vote_summaries_.Get(index);
}
::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* CMsgCREItemVoteSummaryResponse::mutable_item_vote_summaries(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgCREItemVoteSummaryResponse.item_vote_summaries)
  return item_vote_summaries_.Mutable(index);
}
::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary* CMsgCREItemVoteSummaryResponse::add_item_vote_summaries() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgCREItemVoteSummaryResponse.item_vote_summaries)
  return item_vote_summaries_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary >*
CMsgCREItemVoteSummaryResponse::mutable_item_vote_summaries() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgCREItemVoteSummaryResponse.item_vote_summaries)
  return &item_vote_summaries_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgCREItemVoteSummaryResponse_ItemVoteSummary >&
CMsgCREItemVoteSummaryResponse::item_vote_summaries() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgCREItemVoteSummaryResponse.item_vote_summaries)
  return item_vote_summaries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREUpdateUserPublishedItemVote::kPublishedFileIdFieldNumber;
const int CMsgCREUpdateUserPublishedItemVote::kVoteUpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREUpdateUserPublishedItemVote::CMsgCREUpdateUserPublishedItemVote()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREUpdateUserPublishedItemVote)
}
CMsgCREUpdateUserPublishedItemVote::CMsgCREUpdateUserPublishedItemVote(const CMsgCREUpdateUserPublishedItemVote& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&vote_up_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(vote_up_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREUpdateUserPublishedItemVote)
}

void CMsgCREUpdateUserPublishedItemVote::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&vote_up_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(vote_up_));
}

CMsgCREUpdateUserPublishedItemVote::~CMsgCREUpdateUserPublishedItemVote() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  SharedDtor();
}

void CMsgCREUpdateUserPublishedItemVote::SharedDtor() {
}

void CMsgCREUpdateUserPublishedItemVote::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCREUpdateUserPublishedItemVote::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREUpdateUserPublishedItemVote& CMsgCREUpdateUserPublishedItemVote::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCREUpdateUserPublishedItemVote* CMsgCREUpdateUserPublishedItemVote::New(::google::protobuf::Arena* arena) const {
  CMsgCREUpdateUserPublishedItemVote* n = new CMsgCREUpdateUserPublishedItemVote;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCREUpdateUserPublishedItemVote::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&vote_up_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(vote_up_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREUpdateUserPublishedItemVote::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool vote_up = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_vote_up();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &vote_up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  return false;
#undef DO_
}

void CMsgCREUpdateUserPublishedItemVote::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional bool vote_up = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->vote_up(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREUpdateUserPublishedItemVote)
}

::google::protobuf::uint8* CMsgCREUpdateUserPublishedItemVote::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional bool vote_up = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->vote_up(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  return target;
}

size_t CMsgCREUpdateUserPublishedItemVote::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional bool vote_up = 2;
    if (has_vote_up()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCREUpdateUserPublishedItemVote::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREUpdateUserPublishedItemVote* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREUpdateUserPublishedItemVote>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREUpdateUserPublishedItemVote)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREUpdateUserPublishedItemVote)
    MergeFrom(*source);
  }
}

void CMsgCREUpdateUserPublishedItemVote::MergeFrom(const CMsgCREUpdateUserPublishedItemVote& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      vote_up_ = from.vote_up_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREUpdateUserPublishedItemVote::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREUpdateUserPublishedItemVote::CopyFrom(const CMsgCREUpdateUserPublishedItemVote& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVote)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREUpdateUserPublishedItemVote::IsInitialized() const {
  return true;
}

void CMsgCREUpdateUserPublishedItemVote::Swap(CMsgCREUpdateUserPublishedItemVote* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREUpdateUserPublishedItemVote::InternalSwap(CMsgCREUpdateUserPublishedItemVote* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(vote_up_, other->vote_up_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCREUpdateUserPublishedItemVote::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCREUpdateUserPublishedItemVote

// optional fixed64 published_file_id = 1;
bool CMsgCREUpdateUserPublishedItemVote::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgCREUpdateUserPublishedItemVote::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgCREUpdateUserPublishedItemVote::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgCREUpdateUserPublishedItemVote::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgCREUpdateUserPublishedItemVote::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREUpdateUserPublishedItemVote.published_file_id)
  return published_file_id_;
}
void CMsgCREUpdateUserPublishedItemVote::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREUpdateUserPublishedItemVote.published_file_id)
}

// optional bool vote_up = 2;
bool CMsgCREUpdateUserPublishedItemVote::has_vote_up() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgCREUpdateUserPublishedItemVote::set_has_vote_up() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgCREUpdateUserPublishedItemVote::clear_has_vote_up() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgCREUpdateUserPublishedItemVote::clear_vote_up() {
  vote_up_ = false;
  clear_has_vote_up();
}
bool CMsgCREUpdateUserPublishedItemVote::vote_up() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREUpdateUserPublishedItemVote.vote_up)
  return vote_up_;
}
void CMsgCREUpdateUserPublishedItemVote::set_vote_up(bool value) {
  set_has_vote_up();
  vote_up_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREUpdateUserPublishedItemVote.vote_up)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREUpdateUserPublishedItemVoteResponse::kEresultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREUpdateUserPublishedItemVoteResponse::CMsgCREUpdateUserPublishedItemVoteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
}
CMsgCREUpdateUserPublishedItemVoteResponse::CMsgCREUpdateUserPublishedItemVoteResponse(const CMsgCREUpdateUserPublishedItemVoteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
}

void CMsgCREUpdateUserPublishedItemVoteResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
}

CMsgCREUpdateUserPublishedItemVoteResponse::~CMsgCREUpdateUserPublishedItemVoteResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  SharedDtor();
}

void CMsgCREUpdateUserPublishedItemVoteResponse::SharedDtor() {
}

void CMsgCREUpdateUserPublishedItemVoteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCREUpdateUserPublishedItemVoteResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREUpdateUserPublishedItemVoteResponse& CMsgCREUpdateUserPublishedItemVoteResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCREUpdateUserPublishedItemVoteResponse* CMsgCREUpdateUserPublishedItemVoteResponse::New(::google::protobuf::Arena* arena) const {
  CMsgCREUpdateUserPublishedItemVoteResponse* n = new CMsgCREUpdateUserPublishedItemVoteResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCREUpdateUserPublishedItemVoteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREUpdateUserPublishedItemVoteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  return false;
#undef DO_
}

void CMsgCREUpdateUserPublishedItemVoteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
}

::google::protobuf::uint8* CMsgCREUpdateUserPublishedItemVoteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  return target;
}

size_t CMsgCREUpdateUserPublishedItemVoteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCREUpdateUserPublishedItemVoteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREUpdateUserPublishedItemVoteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREUpdateUserPublishedItemVoteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
    MergeFrom(*source);
  }
}

void CMsgCREUpdateUserPublishedItemVoteResponse::MergeFrom(const CMsgCREUpdateUserPublishedItemVoteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgCREUpdateUserPublishedItemVoteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREUpdateUserPublishedItemVoteResponse::CopyFrom(const CMsgCREUpdateUserPublishedItemVoteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREUpdateUserPublishedItemVoteResponse::IsInitialized() const {
  return true;
}

void CMsgCREUpdateUserPublishedItemVoteResponse::Swap(CMsgCREUpdateUserPublishedItemVoteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREUpdateUserPublishedItemVoteResponse::InternalSwap(CMsgCREUpdateUserPublishedItemVoteResponse* other) {
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCREUpdateUserPublishedItemVoteResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCREUpdateUserPublishedItemVoteResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgCREUpdateUserPublishedItemVoteResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgCREUpdateUserPublishedItemVoteResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgCREUpdateUserPublishedItemVoteResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgCREUpdateUserPublishedItemVoteResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgCREUpdateUserPublishedItemVoteResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse.eresult)
  return eresult_;
}
void CMsgCREUpdateUserPublishedItemVoteResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREUpdateUserPublishedItemVoteResponse.eresult)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::kPublishedFileIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
}
CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  published_file_id_ = from.published_file_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::SharedCtor() {
  _cached_size_ = 0;
  published_file_id_ = GOOGLE_ULONGLONG(0);
}

CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::~CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  SharedDtor();
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::SharedDtor() {
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::New(::google::protobuf::Arena* arena) const {
  CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* n = new CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  published_file_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  return false;
#undef DO_
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
}

::google::protobuf::uint8* CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  return target;
}

size_t CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 published_file_id = 1;
  if (has_published_file_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
    MergeFrom(*source);
  }
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::MergeFrom(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_published_file_id()) {
    set_published_file_id(from.published_file_id());
  }
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::CopyFrom(const CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::IsInitialized() const {
  return true;
}

void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::Swap(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::InternalSwap(CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId

// optional fixed64 published_file_id = 1;
bool CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId.published_file_id)
  return published_file_id_;
}
void CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId.published_file_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREGetUserPublishedItemVoteDetails::kPublishedFileIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREGetUserPublishedItemVoteDetails::CMsgCREGetUserPublishedItemVoteDetails()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
}
CMsgCREGetUserPublishedItemVoteDetails::CMsgCREGetUserPublishedItemVoteDetails(const CMsgCREGetUserPublishedItemVoteDetails& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      published_file_ids_(from.published_file_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
}

void CMsgCREGetUserPublishedItemVoteDetails::SharedCtor() {
  _cached_size_ = 0;
}

CMsgCREGetUserPublishedItemVoteDetails::~CMsgCREGetUserPublishedItemVoteDetails() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  SharedDtor();
}

void CMsgCREGetUserPublishedItemVoteDetails::SharedDtor() {
}

void CMsgCREGetUserPublishedItemVoteDetails::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCREGetUserPublishedItemVoteDetails::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREGetUserPublishedItemVoteDetails& CMsgCREGetUserPublishedItemVoteDetails::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCREGetUserPublishedItemVoteDetails* CMsgCREGetUserPublishedItemVoteDetails::New(::google::protobuf::Arena* arena) const {
  CMsgCREGetUserPublishedItemVoteDetails* n = new CMsgCREGetUserPublishedItemVoteDetails;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCREGetUserPublishedItemVoteDetails::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  published_file_ids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREGetUserPublishedItemVoteDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_published_file_ids()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  return false;
#undef DO_
}

void CMsgCREGetUserPublishedItemVoteDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
  for (unsigned int i = 0, n = this->published_file_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->published_file_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
}

::google::protobuf::uint8* CMsgCREGetUserPublishedItemVoteDetails::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
  for (unsigned int i = 0, n = this->published_file_ids_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->published_file_ids(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  return target;
}

size_t CMsgCREGetUserPublishedItemVoteDetails::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
  {
    unsigned int count = this->published_file_ids_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->published_file_ids(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCREGetUserPublishedItemVoteDetails::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREGetUserPublishedItemVoteDetails* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREGetUserPublishedItemVoteDetails>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
    MergeFrom(*source);
  }
}

void CMsgCREGetUserPublishedItemVoteDetails::MergeFrom(const CMsgCREGetUserPublishedItemVoteDetails& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  published_file_ids_.MergeFrom(from.published_file_ids_);
}

void CMsgCREGetUserPublishedItemVoteDetails::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREGetUserPublishedItemVoteDetails::CopyFrom(const CMsgCREGetUserPublishedItemVoteDetails& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetails)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREGetUserPublishedItemVoteDetails::IsInitialized() const {
  return true;
}

void CMsgCREGetUserPublishedItemVoteDetails::Swap(CMsgCREGetUserPublishedItemVoteDetails* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREGetUserPublishedItemVoteDetails::InternalSwap(CMsgCREGetUserPublishedItemVoteDetails* other) {
  published_file_ids_.InternalSwap(&other->published_file_ids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCREGetUserPublishedItemVoteDetails::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCREGetUserPublishedItemVoteDetails

// repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetails.PublishedFileId published_file_ids = 1;
int CMsgCREGetUserPublishedItemVoteDetails::published_file_ids_size() const {
  return published_file_ids_.size();
}
void CMsgCREGetUserPublishedItemVoteDetails::clear_published_file_ids() {
  published_file_ids_.Clear();
}
const ::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId& CMsgCREGetUserPublishedItemVoteDetails::published_file_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.published_file_ids)
  return published_file_ids_.Get(index);
}
::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* CMsgCREGetUserPublishedItemVoteDetails::mutable_published_file_ids(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.published_file_ids)
  return published_file_ids_.Mutable(index);
}
::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId* CMsgCREGetUserPublishedItemVoteDetails::add_published_file_ids() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.published_file_ids)
  return published_file_ids_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId >*
CMsgCREGetUserPublishedItemVoteDetails::mutable_published_file_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.published_file_ids)
  return &published_file_ids_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId >&
CMsgCREGetUserPublishedItemVoteDetails::published_file_ids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgCREGetUserPublishedItemVoteDetails.published_file_ids)
  return published_file_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::kPublishedFileIdFieldNumber;
const int CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::kVoteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
}
CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&published_file_id_, &from.published_file_id_,
    reinterpret_cast<char*>(&vote_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(vote_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&vote_) -
    reinterpret_cast<char*>(&published_file_id_) + sizeof(vote_));
}

CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::~CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  SharedDtor();
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::SharedDtor() {
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::New(::google::protobuf::Arena* arena) const {
  CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* n = new CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&published_file_id_, 0, reinterpret_cast<char*>(&vote_) -
      reinterpret_cast<char*>(&published_file_id_) + sizeof(vote_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 published_file_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_published_file_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &published_file_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 vote = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_vote();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &vote_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  return false;
#undef DO_
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->published_file_id(), output);
  }

  // optional int32 vote = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->vote(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
}

::google::protobuf::uint8* CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 published_file_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->published_file_id(), target);
  }

  // optional int32 vote = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->vote(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  return target;
}

size_t CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 published_file_id = 1;
    if (has_published_file_id()) {
      total_size += 1 + 8;
    }

    // optional int32 vote = 2 [default = 0];
    if (has_vote()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->vote());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
    MergeFrom(*source);
  }
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::MergeFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      published_file_id_ = from.published_file_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      vote_ = from.vote_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::CopyFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::IsInitialized() const {
  return true;
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::Swap(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::InternalSwap(CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* other) {
  std::swap(published_file_id_, other->published_file_id_);
  std::swap(vote_, other->vote_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail

// optional fixed64 published_file_id = 1;
bool CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::has_published_file_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::set_has_published_file_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::clear_has_published_file_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::clear_published_file_id() {
  published_file_id_ = GOOGLE_ULONGLONG(0);
  clear_has_published_file_id();
}
::google::protobuf::uint64 CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::published_file_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.published_file_id)
  return published_file_id_;
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::set_published_file_id(::google::protobuf::uint64 value) {
  set_has_published_file_id();
  published_file_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.published_file_id)
}

// optional int32 vote = 2 [default = 0];
bool CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::has_vote() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::set_has_vote() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::clear_has_vote() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::clear_vote() {
  vote_ = 0;
  clear_has_vote();
}
::google::protobuf::int32 CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::vote() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.vote)
  return vote_;
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail::set_vote(::google::protobuf::int32 value) {
  set_has_vote();
  vote_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail.vote)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgCREGetUserPublishedItemVoteDetailsResponse::kEresultFieldNumber;
const int CMsgCREGetUserPublishedItemVoteDetailsResponse::kUserItemVoteDetailsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgCREGetUserPublishedItemVoteDetailsResponse::CMsgCREGetUserPublishedItemVoteDetailsResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
}
CMsgCREGetUserPublishedItemVoteDetailsResponse::CMsgCREGetUserPublishedItemVoteDetailsResponse(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      user_item_vote_details_(from.user_item_vote_details_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
}

CMsgCREGetUserPublishedItemVoteDetailsResponse::~CMsgCREGetUserPublishedItemVoteDetailsResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  SharedDtor();
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::SharedDtor() {
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgCREGetUserPublishedItemVoteDetailsResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgCREGetUserPublishedItemVoteDetailsResponse& CMsgCREGetUserPublishedItemVoteDetailsResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgCREGetUserPublishedItemVoteDetailsResponse* CMsgCREGetUserPublishedItemVoteDetailsResponse::New(::google::protobuf::Arena* arena) const {
  CMsgCREGetUserPublishedItemVoteDetailsResponse* n = new CMsgCREGetUserPublishedItemVoteDetailsResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  user_item_vote_details_.Clear();
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgCREGetUserPublishedItemVoteDetailsResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_user_item_vote_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  return false;
#undef DO_
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
  for (unsigned int i = 0, n = this->user_item_vote_details_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->user_item_vote_details(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
}

::google::protobuf::uint8* CMsgCREGetUserPublishedItemVoteDetailsResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
  for (unsigned int i = 0, n = this->user_item_vote_details_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->user_item_vote_details(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  return target;
}

size_t CMsgCREGetUserPublishedItemVoteDetailsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
  {
    unsigned int count = this->user_item_vote_details_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->user_item_vote_details(i));
    }
  }

  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgCREGetUserPublishedItemVoteDetailsResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgCREGetUserPublishedItemVoteDetailsResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
    MergeFrom(*source);
  }
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::MergeFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  user_item_vote_details_.MergeFrom(from.user_item_vote_details_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::CopyFrom(const CMsgCREGetUserPublishedItemVoteDetailsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgCREGetUserPublishedItemVoteDetailsResponse::IsInitialized() const {
  return true;
}

void CMsgCREGetUserPublishedItemVoteDetailsResponse::Swap(CMsgCREGetUserPublishedItemVoteDetailsResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse::InternalSwap(CMsgCREGetUserPublishedItemVoteDetailsResponse* other) {
  user_item_vote_details_.InternalSwap(&other->user_item_vote_details_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgCREGetUserPublishedItemVoteDetailsResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgCREGetUserPublishedItemVoteDetailsResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgCREGetUserPublishedItemVoteDetailsResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgCREGetUserPublishedItemVoteDetailsResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.eresult)
  return eresult_;
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.eresult)
}

// repeated .proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.UserItemVoteDetail user_item_vote_details = 2;
int CMsgCREGetUserPublishedItemVoteDetailsResponse::user_item_vote_details_size() const {
  return user_item_vote_details_.size();
}
void CMsgCREGetUserPublishedItemVoteDetailsResponse::clear_user_item_vote_details() {
  user_item_vote_details_.Clear();
}
const ::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail& CMsgCREGetUserPublishedItemVoteDetailsResponse::user_item_vote_details(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details)
  return user_item_vote_details_.Get(index);
}
::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* CMsgCREGetUserPublishedItemVoteDetailsResponse::mutable_user_item_vote_details(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details)
  return user_item_vote_details_.Mutable(index);
}
::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail* CMsgCREGetUserPublishedItemVoteDetailsResponse::add_user_item_vote_details() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details)
  return user_item_vote_details_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail >*
CMsgCREGetUserPublishedItemVoteDetailsResponse::mutable_user_item_vote_details() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details)
  return &user_item_vote_details_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail >&
CMsgCREGetUserPublishedItemVoteDetailsResponse::user_item_vote_details() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgCREGetUserPublishedItemVoteDetailsResponse.user_item_vote_details)
  return user_item_vote_details_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerPingSample_Sample::kIpFieldNumber;
const int CMsgGameServerPingSample_Sample::kAvgPingMsFieldNumber;
const int CMsgGameServerPingSample_Sample::kStddevPingMsX10FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerPingSample_Sample::CMsgGameServerPingSample_Sample()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGameServerPingSample.Sample)
}
CMsgGameServerPingSample_Sample::CMsgGameServerPingSample_Sample(const CMsgGameServerPingSample_Sample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ip_, &from.ip_,
    reinterpret_cast<char*>(&stddev_ping_ms_x10_) -
    reinterpret_cast<char*>(&ip_) + sizeof(stddev_ping_ms_x10_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGameServerPingSample.Sample)
}

void CMsgGameServerPingSample_Sample::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&ip_, 0, reinterpret_cast<char*>(&stddev_ping_ms_x10_) -
    reinterpret_cast<char*>(&ip_) + sizeof(stddev_ping_ms_x10_));
}

CMsgGameServerPingSample_Sample::~CMsgGameServerPingSample_Sample() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGameServerPingSample.Sample)
  SharedDtor();
}

void CMsgGameServerPingSample_Sample::SharedDtor() {
}

void CMsgGameServerPingSample_Sample::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGameServerPingSample_Sample::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameServerPingSample_Sample& CMsgGameServerPingSample_Sample::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGameServerPingSample_Sample* CMsgGameServerPingSample_Sample::New(::google::protobuf::Arena* arena) const {
  CMsgGameServerPingSample_Sample* n = new CMsgGameServerPingSample_Sample;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGameServerPingSample_Sample::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGameServerPingSample.Sample)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&ip_, 0, reinterpret_cast<char*>(&stddev_ping_ms_x10_) -
      reinterpret_cast<char*>(&ip_) + sizeof(stddev_ping_ms_x10_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameServerPingSample_Sample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGameServerPingSample.Sample)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {
          set_has_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 avg_ping_ms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_avg_ping_ms();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &avg_ping_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 stddev_ping_ms_x10 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_stddev_ping_ms_x10();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &stddev_ping_ms_x10_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGameServerPingSample.Sample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGameServerPingSample.Sample)
  return false;
#undef DO_
}

void CMsgGameServerPingSample_Sample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGameServerPingSample.Sample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->ip(), output);
  }

  // optional uint32 avg_ping_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->avg_ping_ms(), output);
  }

  // optional uint32 stddev_ping_ms_x10 = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->stddev_ping_ms_x10(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGameServerPingSample.Sample)
}

::google::protobuf::uint8* CMsgGameServerPingSample_Sample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGameServerPingSample.Sample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->ip(), target);
  }

  // optional uint32 avg_ping_ms = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->avg_ping_ms(), target);
  }

  // optional uint32 stddev_ping_ms_x10 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->stddev_ping_ms_x10(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGameServerPingSample.Sample)
  return target;
}

size_t CMsgGameServerPingSample_Sample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGameServerPingSample.Sample)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional fixed32 ip = 1;
    if (has_ip()) {
      total_size += 1 + 4;
    }

    // optional uint32 avg_ping_ms = 2;
    if (has_avg_ping_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->avg_ping_ms());
    }

    // optional uint32 stddev_ping_ms_x10 = 3;
    if (has_stddev_ping_ms_x10()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->stddev_ping_ms_x10());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGameServerPingSample_Sample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGameServerPingSample.Sample)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerPingSample_Sample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameServerPingSample_Sample>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGameServerPingSample.Sample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGameServerPingSample.Sample)
    MergeFrom(*source);
  }
}

void CMsgGameServerPingSample_Sample::MergeFrom(const CMsgGameServerPingSample_Sample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGameServerPingSample.Sample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      ip_ = from.ip_;
    }
    if (cached_has_bits & 0x00000002u) {
      avg_ping_ms_ = from.avg_ping_ms_;
    }
    if (cached_has_bits & 0x00000004u) {
      stddev_ping_ms_x10_ = from.stddev_ping_ms_x10_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerPingSample_Sample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGameServerPingSample.Sample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerPingSample_Sample::CopyFrom(const CMsgGameServerPingSample_Sample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGameServerPingSample.Sample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerPingSample_Sample::IsInitialized() const {
  return true;
}

void CMsgGameServerPingSample_Sample::Swap(CMsgGameServerPingSample_Sample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerPingSample_Sample::InternalSwap(CMsgGameServerPingSample_Sample* other) {
  std::swap(ip_, other->ip_);
  std::swap(avg_ping_ms_, other->avg_ping_ms_);
  std::swap(stddev_ping_ms_x10_, other->stddev_ping_ms_x10_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGameServerPingSample_Sample::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGameServerPingSample_Sample

// optional fixed32 ip = 1;
bool CMsgGameServerPingSample_Sample::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGameServerPingSample_Sample::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGameServerPingSample_Sample::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGameServerPingSample_Sample::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
::google::protobuf::uint32 CMsgGameServerPingSample_Sample::ip() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerPingSample.Sample.ip)
  return ip_;
}
void CMsgGameServerPingSample_Sample::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerPingSample.Sample.ip)
}

// optional uint32 avg_ping_ms = 2;
bool CMsgGameServerPingSample_Sample::has_avg_ping_ms() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGameServerPingSample_Sample::set_has_avg_ping_ms() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGameServerPingSample_Sample::clear_has_avg_ping_ms() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGameServerPingSample_Sample::clear_avg_ping_ms() {
  avg_ping_ms_ = 0u;
  clear_has_avg_ping_ms();
}
::google::protobuf::uint32 CMsgGameServerPingSample_Sample::avg_ping_ms() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerPingSample.Sample.avg_ping_ms)
  return avg_ping_ms_;
}
void CMsgGameServerPingSample_Sample::set_avg_ping_ms(::google::protobuf::uint32 value) {
  set_has_avg_ping_ms();
  avg_ping_ms_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerPingSample.Sample.avg_ping_ms)
}

// optional uint32 stddev_ping_ms_x10 = 3;
bool CMsgGameServerPingSample_Sample::has_stddev_ping_ms_x10() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgGameServerPingSample_Sample::set_has_stddev_ping_ms_x10() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgGameServerPingSample_Sample::clear_has_stddev_ping_ms_x10() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgGameServerPingSample_Sample::clear_stddev_ping_ms_x10() {
  stddev_ping_ms_x10_ = 0u;
  clear_has_stddev_ping_ms_x10();
}
::google::protobuf::uint32 CMsgGameServerPingSample_Sample::stddev_ping_ms_x10() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerPingSample.Sample.stddev_ping_ms_x10)
  return stddev_ping_ms_x10_;
}
void CMsgGameServerPingSample_Sample::set_stddev_ping_ms_x10(::google::protobuf::uint32 value) {
  set_has_stddev_ping_ms_x10();
  stddev_ping_ms_x10_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerPingSample.Sample.stddev_ping_ms_x10)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgGameServerPingSample::kMyIpFieldNumber;
const int CMsgGameServerPingSample::kGsAppIdFieldNumber;
const int CMsgGameServerPingSample::kGsSamplesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgGameServerPingSample::CMsgGameServerPingSample()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgGameServerPingSample)
}
CMsgGameServerPingSample::CMsgGameServerPingSample(const CMsgGameServerPingSample& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      gs_samples_(from.gs_samples_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&my_ip_, &from.my_ip_,
    reinterpret_cast<char*>(&gs_app_id_) -
    reinterpret_cast<char*>(&my_ip_) + sizeof(gs_app_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgGameServerPingSample)
}

void CMsgGameServerPingSample::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&my_ip_, 0, reinterpret_cast<char*>(&gs_app_id_) -
    reinterpret_cast<char*>(&my_ip_) + sizeof(gs_app_id_));
}

CMsgGameServerPingSample::~CMsgGameServerPingSample() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgGameServerPingSample)
  SharedDtor();
}

void CMsgGameServerPingSample::SharedDtor() {
}

void CMsgGameServerPingSample::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgGameServerPingSample::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgGameServerPingSample& CMsgGameServerPingSample::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgGameServerPingSample* CMsgGameServerPingSample::New(::google::protobuf::Arena* arena) const {
  CMsgGameServerPingSample* n = new CMsgGameServerPingSample;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgGameServerPingSample::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgGameServerPingSample)
  gs_samples_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&my_ip_, 0, reinterpret_cast<char*>(&gs_app_id_) -
      reinterpret_cast<char*>(&my_ip_) + sizeof(gs_app_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgGameServerPingSample::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgGameServerPingSample)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed32 my_ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u)) {
          set_has_my_ip();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &my_ip_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 gs_app_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_gs_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &gs_app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgGameServerPingSample.Sample gs_samples = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_gs_samples()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgGameServerPingSample)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgGameServerPingSample)
  return false;
#undef DO_
}

void CMsgGameServerPingSample::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgGameServerPingSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 my_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->my_ip(), output);
  }

  // optional int32 gs_app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->gs_app_id(), output);
  }

  // repeated .proto.steam.CMsgGameServerPingSample.Sample gs_samples = 3;
  for (unsigned int i = 0, n = this->gs_samples_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->gs_samples(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgGameServerPingSample)
}

::google::protobuf::uint8* CMsgGameServerPingSample::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgGameServerPingSample)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed32 my_ip = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->my_ip(), target);
  }

  // optional int32 gs_app_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->gs_app_id(), target);
  }

  // repeated .proto.steam.CMsgGameServerPingSample.Sample gs_samples = 3;
  for (unsigned int i = 0, n = this->gs_samples_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->gs_samples(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgGameServerPingSample)
  return target;
}

size_t CMsgGameServerPingSample::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgGameServerPingSample)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgGameServerPingSample.Sample gs_samples = 3;
  {
    unsigned int count = this->gs_samples_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->gs_samples(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed32 my_ip = 1;
    if (has_my_ip()) {
      total_size += 1 + 4;
    }

    // optional int32 gs_app_id = 2;
    if (has_gs_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->gs_app_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgGameServerPingSample::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgGameServerPingSample)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgGameServerPingSample* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgGameServerPingSample>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgGameServerPingSample)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgGameServerPingSample)
    MergeFrom(*source);
  }
}

void CMsgGameServerPingSample::MergeFrom(const CMsgGameServerPingSample& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgGameServerPingSample)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gs_samples_.MergeFrom(from.gs_samples_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      my_ip_ = from.my_ip_;
    }
    if (cached_has_bits & 0x00000002u) {
      gs_app_id_ = from.gs_app_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgGameServerPingSample::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgGameServerPingSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgGameServerPingSample::CopyFrom(const CMsgGameServerPingSample& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgGameServerPingSample)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgGameServerPingSample::IsInitialized() const {
  return true;
}

void CMsgGameServerPingSample::Swap(CMsgGameServerPingSample* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgGameServerPingSample::InternalSwap(CMsgGameServerPingSample* other) {
  gs_samples_.InternalSwap(&other->gs_samples_);
  std::swap(my_ip_, other->my_ip_);
  std::swap(gs_app_id_, other->gs_app_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgGameServerPingSample::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgGameServerPingSample

// optional fixed32 my_ip = 1;
bool CMsgGameServerPingSample::has_my_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgGameServerPingSample::set_has_my_ip() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgGameServerPingSample::clear_has_my_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgGameServerPingSample::clear_my_ip() {
  my_ip_ = 0u;
  clear_has_my_ip();
}
::google::protobuf::uint32 CMsgGameServerPingSample::my_ip() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerPingSample.my_ip)
  return my_ip_;
}
void CMsgGameServerPingSample::set_my_ip(::google::protobuf::uint32 value) {
  set_has_my_ip();
  my_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerPingSample.my_ip)
}

// optional int32 gs_app_id = 2;
bool CMsgGameServerPingSample::has_gs_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgGameServerPingSample::set_has_gs_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgGameServerPingSample::clear_has_gs_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgGameServerPingSample::clear_gs_app_id() {
  gs_app_id_ = 0;
  clear_has_gs_app_id();
}
::google::protobuf::int32 CMsgGameServerPingSample::gs_app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerPingSample.gs_app_id)
  return gs_app_id_;
}
void CMsgGameServerPingSample::set_gs_app_id(::google::protobuf::int32 value) {
  set_has_gs_app_id();
  gs_app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGameServerPingSample.gs_app_id)
}

// repeated .proto.steam.CMsgGameServerPingSample.Sample gs_samples = 3;
int CMsgGameServerPingSample::gs_samples_size() const {
  return gs_samples_.size();
}
void CMsgGameServerPingSample::clear_gs_samples() {
  gs_samples_.Clear();
}
const ::proto::steam::CMsgGameServerPingSample_Sample& CMsgGameServerPingSample::gs_samples(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGameServerPingSample.gs_samples)
  return gs_samples_.Get(index);
}
::proto::steam::CMsgGameServerPingSample_Sample* CMsgGameServerPingSample::mutable_gs_samples(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGameServerPingSample.gs_samples)
  return gs_samples_.Mutable(index);
}
::proto::steam::CMsgGameServerPingSample_Sample* CMsgGameServerPingSample::add_gs_samples() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgGameServerPingSample.gs_samples)
  return gs_samples_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgGameServerPingSample_Sample >*
CMsgGameServerPingSample::mutable_gs_samples() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgGameServerPingSample.gs_samples)
  return &gs_samples_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgGameServerPingSample_Sample >&
CMsgGameServerPingSample::gs_samples() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgGameServerPingSample.gs_samples)
  return gs_samples_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSGetFollowerCount::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSGetFollowerCount::CMsgFSGetFollowerCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgFSGetFollowerCount)
}
CMsgFSGetFollowerCount::CMsgFSGetFollowerCount(const CMsgFSGetFollowerCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgFSGetFollowerCount)
}

void CMsgFSGetFollowerCount::SharedCtor() {
  _cached_size_ = 0;
  steam_id_ = GOOGLE_ULONGLONG(0);
}

CMsgFSGetFollowerCount::~CMsgFSGetFollowerCount() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgFSGetFollowerCount)
  SharedDtor();
}

void CMsgFSGetFollowerCount::SharedDtor() {
}

void CMsgFSGetFollowerCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgFSGetFollowerCount::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFSGetFollowerCount& CMsgFSGetFollowerCount::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgFSGetFollowerCount* CMsgFSGetFollowerCount::New(::google::protobuf::Arena* arena) const {
  CMsgFSGetFollowerCount* n = new CMsgFSGetFollowerCount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgFSGetFollowerCount::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgFSGetFollowerCount)
  steam_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFSGetFollowerCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgFSGetFollowerCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgFSGetFollowerCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgFSGetFollowerCount)
  return false;
#undef DO_
}

void CMsgFSGetFollowerCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgFSGetFollowerCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgFSGetFollowerCount)
}

::google::protobuf::uint8* CMsgFSGetFollowerCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgFSGetFollowerCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgFSGetFollowerCount)
  return target;
}

size_t CMsgFSGetFollowerCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgFSGetFollowerCount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgFSGetFollowerCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgFSGetFollowerCount)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSGetFollowerCount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFSGetFollowerCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgFSGetFollowerCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgFSGetFollowerCount)
    MergeFrom(*source);
  }
}

void CMsgFSGetFollowerCount::MergeFrom(const CMsgFSGetFollowerCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgFSGetFollowerCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id()) {
    set_steam_id(from.steam_id());
  }
}

void CMsgFSGetFollowerCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgFSGetFollowerCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSGetFollowerCount::CopyFrom(const CMsgFSGetFollowerCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgFSGetFollowerCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSGetFollowerCount::IsInitialized() const {
  return true;
}

void CMsgFSGetFollowerCount::Swap(CMsgFSGetFollowerCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSGetFollowerCount::InternalSwap(CMsgFSGetFollowerCount* other) {
  std::swap(steam_id_, other->steam_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgFSGetFollowerCount::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgFSGetFollowerCount

// optional fixed64 steam_id = 1;
bool CMsgFSGetFollowerCount::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgFSGetFollowerCount::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgFSGetFollowerCount::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgFSGetFollowerCount::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
::google::protobuf::uint64 CMsgFSGetFollowerCount::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFSGetFollowerCount.steam_id)
  return steam_id_;
}
void CMsgFSGetFollowerCount::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFSGetFollowerCount.steam_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSGetFollowerCountResponse::kEresultFieldNumber;
const int CMsgFSGetFollowerCountResponse::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSGetFollowerCountResponse::CMsgFSGetFollowerCountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgFSGetFollowerCountResponse)
}
CMsgFSGetFollowerCountResponse::CMsgFSGetFollowerCountResponse(const CMsgFSGetFollowerCountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&count_, &from.count_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&count_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgFSGetFollowerCountResponse)
}

void CMsgFSGetFollowerCountResponse::SharedCtor() {
  _cached_size_ = 0;
  count_ = 0;
  eresult_ = 2;
}

CMsgFSGetFollowerCountResponse::~CMsgFSGetFollowerCountResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgFSGetFollowerCountResponse)
  SharedDtor();
}

void CMsgFSGetFollowerCountResponse::SharedDtor() {
}

void CMsgFSGetFollowerCountResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgFSGetFollowerCountResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFSGetFollowerCountResponse& CMsgFSGetFollowerCountResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgFSGetFollowerCountResponse* CMsgFSGetFollowerCountResponse::New(::google::protobuf::Arena* arena) const {
  CMsgFSGetFollowerCountResponse* n = new CMsgFSGetFollowerCountResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgFSGetFollowerCountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgFSGetFollowerCountResponse)
  if (_has_bits_[0 / 32] & 3u) {
    count_ = 0;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFSGetFollowerCountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgFSGetFollowerCountResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 count = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgFSGetFollowerCountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgFSGetFollowerCountResponse)
  return false;
#undef DO_
}

void CMsgFSGetFollowerCountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgFSGetFollowerCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 count = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgFSGetFollowerCountResponse)
}

::google::protobuf::uint8* CMsgFSGetFollowerCountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgFSGetFollowerCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 count = 2 [default = 0];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgFSGetFollowerCountResponse)
  return target;
}

size_t CMsgFSGetFollowerCountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgFSGetFollowerCountResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 count = 2 [default = 0];
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->count());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgFSGetFollowerCountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgFSGetFollowerCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSGetFollowerCountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFSGetFollowerCountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgFSGetFollowerCountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgFSGetFollowerCountResponse)
    MergeFrom(*source);
  }
}

void CMsgFSGetFollowerCountResponse::MergeFrom(const CMsgFSGetFollowerCountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgFSGetFollowerCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      count_ = from.count_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgFSGetFollowerCountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgFSGetFollowerCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSGetFollowerCountResponse::CopyFrom(const CMsgFSGetFollowerCountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgFSGetFollowerCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSGetFollowerCountResponse::IsInitialized() const {
  return true;
}

void CMsgFSGetFollowerCountResponse::Swap(CMsgFSGetFollowerCountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSGetFollowerCountResponse::InternalSwap(CMsgFSGetFollowerCountResponse* other) {
  std::swap(count_, other->count_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgFSGetFollowerCountResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgFSGetFollowerCountResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgFSGetFollowerCountResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgFSGetFollowerCountResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgFSGetFollowerCountResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgFSGetFollowerCountResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgFSGetFollowerCountResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFSGetFollowerCountResponse.eresult)
  return eresult_;
}
void CMsgFSGetFollowerCountResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFSGetFollowerCountResponse.eresult)
}

// optional int32 count = 2 [default = 0];
bool CMsgFSGetFollowerCountResponse::has_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgFSGetFollowerCountResponse::set_has_count() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgFSGetFollowerCountResponse::clear_has_count() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgFSGetFollowerCountResponse::clear_count() {
  count_ = 0;
  clear_has_count();
}
::google::protobuf::int32 CMsgFSGetFollowerCountResponse::count() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFSGetFollowerCountResponse.count)
  return count_;
}
void CMsgFSGetFollowerCountResponse::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFSGetFollowerCountResponse.count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSGetIsFollowing::kSteamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSGetIsFollowing::CMsgFSGetIsFollowing()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgFSGetIsFollowing)
}
CMsgFSGetIsFollowing::CMsgFSGetIsFollowing(const CMsgFSGetIsFollowing& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steam_id_ = from.steam_id_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgFSGetIsFollowing)
}

void CMsgFSGetIsFollowing::SharedCtor() {
  _cached_size_ = 0;
  steam_id_ = GOOGLE_ULONGLONG(0);
}

CMsgFSGetIsFollowing::~CMsgFSGetIsFollowing() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgFSGetIsFollowing)
  SharedDtor();
}

void CMsgFSGetIsFollowing::SharedDtor() {
}

void CMsgFSGetIsFollowing::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgFSGetIsFollowing::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFSGetIsFollowing& CMsgFSGetIsFollowing::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgFSGetIsFollowing* CMsgFSGetIsFollowing::New(::google::protobuf::Arena* arena) const {
  CMsgFSGetIsFollowing* n = new CMsgFSGetIsFollowing;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgFSGetIsFollowing::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgFSGetIsFollowing)
  steam_id_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFSGetIsFollowing::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgFSGetIsFollowing)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steam_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steam_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steam_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgFSGetIsFollowing)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgFSGetIsFollowing)
  return false;
#undef DO_
}

void CMsgFSGetIsFollowing::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgFSGetIsFollowing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steam_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgFSGetIsFollowing)
}

::google::protobuf::uint8* CMsgFSGetIsFollowing::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgFSGetIsFollowing)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steam_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steam_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgFSGetIsFollowing)
  return target;
}

size_t CMsgFSGetIsFollowing::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgFSGetIsFollowing)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 steam_id = 1;
  if (has_steam_id()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgFSGetIsFollowing::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgFSGetIsFollowing)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSGetIsFollowing* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFSGetIsFollowing>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgFSGetIsFollowing)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgFSGetIsFollowing)
    MergeFrom(*source);
  }
}

void CMsgFSGetIsFollowing::MergeFrom(const CMsgFSGetIsFollowing& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgFSGetIsFollowing)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steam_id()) {
    set_steam_id(from.steam_id());
  }
}

void CMsgFSGetIsFollowing::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgFSGetIsFollowing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSGetIsFollowing::CopyFrom(const CMsgFSGetIsFollowing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgFSGetIsFollowing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSGetIsFollowing::IsInitialized() const {
  return true;
}

void CMsgFSGetIsFollowing::Swap(CMsgFSGetIsFollowing* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSGetIsFollowing::InternalSwap(CMsgFSGetIsFollowing* other) {
  std::swap(steam_id_, other->steam_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgFSGetIsFollowing::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgFSGetIsFollowing

// optional fixed64 steam_id = 1;
bool CMsgFSGetIsFollowing::has_steam_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgFSGetIsFollowing::set_has_steam_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgFSGetIsFollowing::clear_has_steam_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgFSGetIsFollowing::clear_steam_id() {
  steam_id_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id();
}
::google::protobuf::uint64 CMsgFSGetIsFollowing::steam_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFSGetIsFollowing.steam_id)
  return steam_id_;
}
void CMsgFSGetIsFollowing::set_steam_id(::google::protobuf::uint64 value) {
  set_has_steam_id();
  steam_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFSGetIsFollowing.steam_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSGetIsFollowingResponse::kEresultFieldNumber;
const int CMsgFSGetIsFollowingResponse::kIsFollowingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSGetIsFollowingResponse::CMsgFSGetIsFollowingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgFSGetIsFollowingResponse)
}
CMsgFSGetIsFollowingResponse::CMsgFSGetIsFollowingResponse(const CMsgFSGetIsFollowingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&is_following_, &from.is_following_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&is_following_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgFSGetIsFollowingResponse)
}

void CMsgFSGetIsFollowingResponse::SharedCtor() {
  _cached_size_ = 0;
  is_following_ = false;
  eresult_ = 2;
}

CMsgFSGetIsFollowingResponse::~CMsgFSGetIsFollowingResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgFSGetIsFollowingResponse)
  SharedDtor();
}

void CMsgFSGetIsFollowingResponse::SharedDtor() {
}

void CMsgFSGetIsFollowingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgFSGetIsFollowingResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFSGetIsFollowingResponse& CMsgFSGetIsFollowingResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgFSGetIsFollowingResponse* CMsgFSGetIsFollowingResponse::New(::google::protobuf::Arena* arena) const {
  CMsgFSGetIsFollowingResponse* n = new CMsgFSGetIsFollowingResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgFSGetIsFollowingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgFSGetIsFollowingResponse)
  if (_has_bits_[0 / 32] & 3u) {
    is_following_ = false;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFSGetIsFollowingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgFSGetIsFollowingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_following = 2 [default = false];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_is_following();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_following_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgFSGetIsFollowingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgFSGetIsFollowingResponse)
  return false;
#undef DO_
}

void CMsgFSGetIsFollowingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgFSGetIsFollowingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional bool is_following = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_following(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgFSGetIsFollowingResponse)
}

::google::protobuf::uint8* CMsgFSGetIsFollowingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgFSGetIsFollowingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional bool is_following = 2 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_following(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgFSGetIsFollowingResponse)
  return target;
}

size_t CMsgFSGetIsFollowingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgFSGetIsFollowingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool is_following = 2 [default = false];
    if (has_is_following()) {
      total_size += 1 + 1;
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgFSGetIsFollowingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgFSGetIsFollowingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSGetIsFollowingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFSGetIsFollowingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgFSGetIsFollowingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgFSGetIsFollowingResponse)
    MergeFrom(*source);
  }
}

void CMsgFSGetIsFollowingResponse::MergeFrom(const CMsgFSGetIsFollowingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgFSGetIsFollowingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      is_following_ = from.is_following_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgFSGetIsFollowingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgFSGetIsFollowingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSGetIsFollowingResponse::CopyFrom(const CMsgFSGetIsFollowingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgFSGetIsFollowingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSGetIsFollowingResponse::IsInitialized() const {
  return true;
}

void CMsgFSGetIsFollowingResponse::Swap(CMsgFSGetIsFollowingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSGetIsFollowingResponse::InternalSwap(CMsgFSGetIsFollowingResponse* other) {
  std::swap(is_following_, other->is_following_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgFSGetIsFollowingResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgFSGetIsFollowingResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgFSGetIsFollowingResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgFSGetIsFollowingResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgFSGetIsFollowingResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgFSGetIsFollowingResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgFSGetIsFollowingResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFSGetIsFollowingResponse.eresult)
  return eresult_;
}
void CMsgFSGetIsFollowingResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFSGetIsFollowingResponse.eresult)
}

// optional bool is_following = 2 [default = false];
bool CMsgFSGetIsFollowingResponse::has_is_following() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgFSGetIsFollowingResponse::set_has_is_following() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgFSGetIsFollowingResponse::clear_has_is_following() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgFSGetIsFollowingResponse::clear_is_following() {
  is_following_ = false;
  clear_has_is_following();
}
bool CMsgFSGetIsFollowingResponse::is_following() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFSGetIsFollowingResponse.is_following)
  return is_following_;
}
void CMsgFSGetIsFollowingResponse::set_is_following(bool value) {
  set_has_is_following();
  is_following_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFSGetIsFollowingResponse.is_following)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSEnumerateFollowingList::kStartIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSEnumerateFollowingList::CMsgFSEnumerateFollowingList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgFSEnumerateFollowingList)
}
CMsgFSEnumerateFollowingList::CMsgFSEnumerateFollowingList(const CMsgFSEnumerateFollowingList& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  start_index_ = from.start_index_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgFSEnumerateFollowingList)
}

void CMsgFSEnumerateFollowingList::SharedCtor() {
  _cached_size_ = 0;
  start_index_ = 0u;
}

CMsgFSEnumerateFollowingList::~CMsgFSEnumerateFollowingList() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgFSEnumerateFollowingList)
  SharedDtor();
}

void CMsgFSEnumerateFollowingList::SharedDtor() {
}

void CMsgFSEnumerateFollowingList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgFSEnumerateFollowingList::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFSEnumerateFollowingList& CMsgFSEnumerateFollowingList::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgFSEnumerateFollowingList* CMsgFSEnumerateFollowingList::New(::google::protobuf::Arena* arena) const {
  CMsgFSEnumerateFollowingList* n = new CMsgFSEnumerateFollowingList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgFSEnumerateFollowingList::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgFSEnumerateFollowingList)
  start_index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFSEnumerateFollowingList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgFSEnumerateFollowingList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 start_index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_start_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgFSEnumerateFollowingList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgFSEnumerateFollowingList)
  return false;
#undef DO_
}

void CMsgFSEnumerateFollowingList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgFSEnumerateFollowingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 start_index = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->start_index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgFSEnumerateFollowingList)
}

::google::protobuf::uint8* CMsgFSEnumerateFollowingList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgFSEnumerateFollowingList)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 start_index = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->start_index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgFSEnumerateFollowingList)
  return target;
}

size_t CMsgFSEnumerateFollowingList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgFSEnumerateFollowingList)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 start_index = 1;
  if (has_start_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgFSEnumerateFollowingList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgFSEnumerateFollowingList)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSEnumerateFollowingList* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFSEnumerateFollowingList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgFSEnumerateFollowingList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgFSEnumerateFollowingList)
    MergeFrom(*source);
  }
}

void CMsgFSEnumerateFollowingList::MergeFrom(const CMsgFSEnumerateFollowingList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgFSEnumerateFollowingList)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_start_index()) {
    set_start_index(from.start_index());
  }
}

void CMsgFSEnumerateFollowingList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgFSEnumerateFollowingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSEnumerateFollowingList::CopyFrom(const CMsgFSEnumerateFollowingList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgFSEnumerateFollowingList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSEnumerateFollowingList::IsInitialized() const {
  return true;
}

void CMsgFSEnumerateFollowingList::Swap(CMsgFSEnumerateFollowingList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSEnumerateFollowingList::InternalSwap(CMsgFSEnumerateFollowingList* other) {
  std::swap(start_index_, other->start_index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgFSEnumerateFollowingList::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgFSEnumerateFollowingList

// optional uint32 start_index = 1;
bool CMsgFSEnumerateFollowingList::has_start_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgFSEnumerateFollowingList::set_has_start_index() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgFSEnumerateFollowingList::clear_has_start_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgFSEnumerateFollowingList::clear_start_index() {
  start_index_ = 0u;
  clear_has_start_index();
}
::google::protobuf::uint32 CMsgFSEnumerateFollowingList::start_index() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFSEnumerateFollowingList.start_index)
  return start_index_;
}
void CMsgFSEnumerateFollowingList::set_start_index(::google::protobuf::uint32 value) {
  set_has_start_index();
  start_index_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFSEnumerateFollowingList.start_index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgFSEnumerateFollowingListResponse::kEresultFieldNumber;
const int CMsgFSEnumerateFollowingListResponse::kTotalResultsFieldNumber;
const int CMsgFSEnumerateFollowingListResponse::kSteamIdsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgFSEnumerateFollowingListResponse::CMsgFSEnumerateFollowingListResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgFSEnumerateFollowingListResponse)
}
CMsgFSEnumerateFollowingListResponse::CMsgFSEnumerateFollowingListResponse(const CMsgFSEnumerateFollowingListResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      steam_ids_(from.steam_ids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_results_, &from.total_results_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&total_results_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgFSEnumerateFollowingListResponse)
}

void CMsgFSEnumerateFollowingListResponse::SharedCtor() {
  _cached_size_ = 0;
  total_results_ = 0;
  eresult_ = 2;
}

CMsgFSEnumerateFollowingListResponse::~CMsgFSEnumerateFollowingListResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgFSEnumerateFollowingListResponse)
  SharedDtor();
}

void CMsgFSEnumerateFollowingListResponse::SharedDtor() {
}

void CMsgFSEnumerateFollowingListResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgFSEnumerateFollowingListResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgFSEnumerateFollowingListResponse& CMsgFSEnumerateFollowingListResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgFSEnumerateFollowingListResponse* CMsgFSEnumerateFollowingListResponse::New(::google::protobuf::Arena* arena) const {
  CMsgFSEnumerateFollowingListResponse* n = new CMsgFSEnumerateFollowingListResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgFSEnumerateFollowingListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  steam_ids_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    total_results_ = 0;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgFSEnumerateFollowingListResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 total_results = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_total_results();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &total_results_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 steam_ids = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 1, 25u, input, this->mutable_steam_ids())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(26u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_steam_ids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgFSEnumerateFollowingListResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgFSEnumerateFollowingListResponse)
  return false;
#undef DO_
}

void CMsgFSEnumerateFollowingListResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 total_results = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->total_results(), output);
  }

  // repeated fixed64 steam_ids = 3;
  for (int i = 0, n = this->steam_ids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      3, this->steam_ids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgFSEnumerateFollowingListResponse)
}

::google::protobuf::uint8* CMsgFSEnumerateFollowingListResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 total_results = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->total_results(), target);
  }

  // repeated fixed64 steam_ids = 3;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(3, this->steam_ids_, target);

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgFSEnumerateFollowingListResponse)
  return target;
}

size_t CMsgFSEnumerateFollowingListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated fixed64 steam_ids = 3;
  {
    unsigned int count = this->steam_ids_size();
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steam_ids_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 total_results = 2;
    if (has_total_results()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->total_results());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgFSEnumerateFollowingListResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgFSEnumerateFollowingListResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgFSEnumerateFollowingListResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgFSEnumerateFollowingListResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgFSEnumerateFollowingListResponse)
    MergeFrom(*source);
  }
}

void CMsgFSEnumerateFollowingListResponse::MergeFrom(const CMsgFSEnumerateFollowingListResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  steam_ids_.MergeFrom(from.steam_ids_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      total_results_ = from.total_results_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgFSEnumerateFollowingListResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgFSEnumerateFollowingListResponse::CopyFrom(const CMsgFSEnumerateFollowingListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgFSEnumerateFollowingListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgFSEnumerateFollowingListResponse::IsInitialized() const {
  return true;
}

void CMsgFSEnumerateFollowingListResponse::Swap(CMsgFSEnumerateFollowingListResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgFSEnumerateFollowingListResponse::InternalSwap(CMsgFSEnumerateFollowingListResponse* other) {
  steam_ids_.InternalSwap(&other->steam_ids_);
  std::swap(total_results_, other->total_results_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgFSEnumerateFollowingListResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgFSEnumerateFollowingListResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgFSEnumerateFollowingListResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgFSEnumerateFollowingListResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgFSEnumerateFollowingListResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgFSEnumerateFollowingListResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgFSEnumerateFollowingListResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFSEnumerateFollowingListResponse.eresult)
  return eresult_;
}
void CMsgFSEnumerateFollowingListResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFSEnumerateFollowingListResponse.eresult)
}

// optional int32 total_results = 2;
bool CMsgFSEnumerateFollowingListResponse::has_total_results() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgFSEnumerateFollowingListResponse::set_has_total_results() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgFSEnumerateFollowingListResponse::clear_has_total_results() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgFSEnumerateFollowingListResponse::clear_total_results() {
  total_results_ = 0;
  clear_has_total_results();
}
::google::protobuf::int32 CMsgFSEnumerateFollowingListResponse::total_results() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFSEnumerateFollowingListResponse.total_results)
  return total_results_;
}
void CMsgFSEnumerateFollowingListResponse::set_total_results(::google::protobuf::int32 value) {
  set_has_total_results();
  total_results_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFSEnumerateFollowingListResponse.total_results)
}

// repeated fixed64 steam_ids = 3;
int CMsgFSEnumerateFollowingListResponse::steam_ids_size() const {
  return steam_ids_.size();
}
void CMsgFSEnumerateFollowingListResponse::clear_steam_ids() {
  steam_ids_.Clear();
}
::google::protobuf::uint64 CMsgFSEnumerateFollowingListResponse::steam_ids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFSEnumerateFollowingListResponse.steam_ids)
  return steam_ids_.Get(index);
}
void CMsgFSEnumerateFollowingListResponse::set_steam_ids(int index, ::google::protobuf::uint64 value) {
  steam_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFSEnumerateFollowingListResponse.steam_ids)
}
void CMsgFSEnumerateFollowingListResponse::add_steam_ids(::google::protobuf::uint64 value) {
  steam_ids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgFSEnumerateFollowingListResponse.steam_ids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgFSEnumerateFollowingListResponse::steam_ids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgFSEnumerateFollowingListResponse.steam_ids)
  return steam_ids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgFSEnumerateFollowingListResponse::mutable_steam_ids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgFSEnumerateFollowingListResponse.steam_ids)
  return &steam_ids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDPGetNumberOfCurrentPlayers::kAppidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDPGetNumberOfCurrentPlayers::CMsgDPGetNumberOfCurrentPlayers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
}
CMsgDPGetNumberOfCurrentPlayers::CMsgDPGetNumberOfCurrentPlayers(const CMsgDPGetNumberOfCurrentPlayers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  appid_ = from.appid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
}

void CMsgDPGetNumberOfCurrentPlayers::SharedCtor() {
  _cached_size_ = 0;
  appid_ = 0u;
}

CMsgDPGetNumberOfCurrentPlayers::~CMsgDPGetNumberOfCurrentPlayers() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  SharedDtor();
}

void CMsgDPGetNumberOfCurrentPlayers::SharedDtor() {
}

void CMsgDPGetNumberOfCurrentPlayers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDPGetNumberOfCurrentPlayers::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDPGetNumberOfCurrentPlayers& CMsgDPGetNumberOfCurrentPlayers::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgDPGetNumberOfCurrentPlayers* CMsgDPGetNumberOfCurrentPlayers::New(::google::protobuf::Arena* arena) const {
  CMsgDPGetNumberOfCurrentPlayers* n = new CMsgDPGetNumberOfCurrentPlayers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgDPGetNumberOfCurrentPlayers::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  appid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDPGetNumberOfCurrentPlayers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  return false;
#undef DO_
}

void CMsgDPGetNumberOfCurrentPlayers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
}

::google::protobuf::uint8* CMsgDPGetNumberOfCurrentPlayers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  return target;
}

size_t CMsgDPGetNumberOfCurrentPlayers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 appid = 1;
  if (has_appid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->appid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDPGetNumberOfCurrentPlayers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDPGetNumberOfCurrentPlayers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDPGetNumberOfCurrentPlayers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
    MergeFrom(*source);
  }
}

void CMsgDPGetNumberOfCurrentPlayers::MergeFrom(const CMsgDPGetNumberOfCurrentPlayers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_appid()) {
    set_appid(from.appid());
  }
}

void CMsgDPGetNumberOfCurrentPlayers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDPGetNumberOfCurrentPlayers::CopyFrom(const CMsgDPGetNumberOfCurrentPlayers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDPGetNumberOfCurrentPlayers::IsInitialized() const {
  return true;
}

void CMsgDPGetNumberOfCurrentPlayers::Swap(CMsgDPGetNumberOfCurrentPlayers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDPGetNumberOfCurrentPlayers::InternalSwap(CMsgDPGetNumberOfCurrentPlayers* other) {
  std::swap(appid_, other->appid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgDPGetNumberOfCurrentPlayers::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgDPGetNumberOfCurrentPlayers

// optional uint32 appid = 1;
bool CMsgDPGetNumberOfCurrentPlayers::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgDPGetNumberOfCurrentPlayers::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgDPGetNumberOfCurrentPlayers::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgDPGetNumberOfCurrentPlayers::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
::google::protobuf::uint32 CMsgDPGetNumberOfCurrentPlayers::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDPGetNumberOfCurrentPlayers.appid)
  return appid_;
}
void CMsgDPGetNumberOfCurrentPlayers::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDPGetNumberOfCurrentPlayers.appid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgDPGetNumberOfCurrentPlayersResponse::kEresultFieldNumber;
const int CMsgDPGetNumberOfCurrentPlayersResponse::kPlayerCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgDPGetNumberOfCurrentPlayersResponse::CMsgDPGetNumberOfCurrentPlayersResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
}
CMsgDPGetNumberOfCurrentPlayersResponse::CMsgDPGetNumberOfCurrentPlayersResponse(const CMsgDPGetNumberOfCurrentPlayersResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&player_count_, &from.player_count_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&player_count_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
}

void CMsgDPGetNumberOfCurrentPlayersResponse::SharedCtor() {
  _cached_size_ = 0;
  player_count_ = 0;
  eresult_ = 2;
}

CMsgDPGetNumberOfCurrentPlayersResponse::~CMsgDPGetNumberOfCurrentPlayersResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  SharedDtor();
}

void CMsgDPGetNumberOfCurrentPlayersResponse::SharedDtor() {
}

void CMsgDPGetNumberOfCurrentPlayersResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgDPGetNumberOfCurrentPlayersResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgDPGetNumberOfCurrentPlayersResponse& CMsgDPGetNumberOfCurrentPlayersResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgDPGetNumberOfCurrentPlayersResponse* CMsgDPGetNumberOfCurrentPlayersResponse::New(::google::protobuf::Arena* arena) const {
  CMsgDPGetNumberOfCurrentPlayersResponse* n = new CMsgDPGetNumberOfCurrentPlayersResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgDPGetNumberOfCurrentPlayersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  if (_has_bits_[0 / 32] & 3u) {
    player_count_ = 0;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgDPGetNumberOfCurrentPlayersResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 player_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_player_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &player_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  return false;
#undef DO_
}

void CMsgDPGetNumberOfCurrentPlayersResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional int32 player_count = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->player_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
}

::google::protobuf::uint8* CMsgDPGetNumberOfCurrentPlayersResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional int32 player_count = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->player_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  return target;
}

size_t CMsgDPGetNumberOfCurrentPlayersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional int32 player_count = 2;
    if (has_player_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->player_count());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgDPGetNumberOfCurrentPlayersResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgDPGetNumberOfCurrentPlayersResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgDPGetNumberOfCurrentPlayersResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
    MergeFrom(*source);
  }
}

void CMsgDPGetNumberOfCurrentPlayersResponse::MergeFrom(const CMsgDPGetNumberOfCurrentPlayersResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      player_count_ = from.player_count_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgDPGetNumberOfCurrentPlayersResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgDPGetNumberOfCurrentPlayersResponse::CopyFrom(const CMsgDPGetNumberOfCurrentPlayersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgDPGetNumberOfCurrentPlayersResponse::IsInitialized() const {
  return true;
}

void CMsgDPGetNumberOfCurrentPlayersResponse::Swap(CMsgDPGetNumberOfCurrentPlayersResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgDPGetNumberOfCurrentPlayersResponse::InternalSwap(CMsgDPGetNumberOfCurrentPlayersResponse* other) {
  std::swap(player_count_, other->player_count_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgDPGetNumberOfCurrentPlayersResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgDPGetNumberOfCurrentPlayersResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgDPGetNumberOfCurrentPlayersResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgDPGetNumberOfCurrentPlayersResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgDPGetNumberOfCurrentPlayersResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgDPGetNumberOfCurrentPlayersResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgDPGetNumberOfCurrentPlayersResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse.eresult)
  return eresult_;
}
void CMsgDPGetNumberOfCurrentPlayersResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse.eresult)
}

// optional int32 player_count = 2;
bool CMsgDPGetNumberOfCurrentPlayersResponse::has_player_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgDPGetNumberOfCurrentPlayersResponse::set_has_player_count() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgDPGetNumberOfCurrentPlayersResponse::clear_has_player_count() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgDPGetNumberOfCurrentPlayersResponse::clear_player_count() {
  player_count_ = 0;
  clear_has_player_count();
}
::google::protobuf::int32 CMsgDPGetNumberOfCurrentPlayersResponse::player_count() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse.player_count)
  return player_count_;
}
void CMsgDPGetNumberOfCurrentPlayersResponse::set_player_count(::google::protobuf::int32 value) {
  set_has_player_count();
  player_count_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgDPGetNumberOfCurrentPlayersResponse.player_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientFriendUserStatusPublished::kFriendSteamidFieldNumber;
const int CMsgClientFriendUserStatusPublished::kAppidFieldNumber;
const int CMsgClientFriendUserStatusPublished::kStatusTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientFriendUserStatusPublished::CMsgClientFriendUserStatusPublished()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientFriendUserStatusPublished)
}
CMsgClientFriendUserStatusPublished::CMsgClientFriendUserStatusPublished(const CMsgClientFriendUserStatusPublished& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  status_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_status_text()) {
    status_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_text_);
  }
  ::memcpy(&friend_steamid_, &from.friend_steamid_,
    reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&friend_steamid_) + sizeof(appid_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientFriendUserStatusPublished)
}

void CMsgClientFriendUserStatusPublished::SharedCtor() {
  _cached_size_ = 0;
  status_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&friend_steamid_, 0, reinterpret_cast<char*>(&appid_) -
    reinterpret_cast<char*>(&friend_steamid_) + sizeof(appid_));
}

CMsgClientFriendUserStatusPublished::~CMsgClientFriendUserStatusPublished() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientFriendUserStatusPublished)
  SharedDtor();
}

void CMsgClientFriendUserStatusPublished::SharedDtor() {
  status_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientFriendUserStatusPublished::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientFriendUserStatusPublished::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientFriendUserStatusPublished& CMsgClientFriendUserStatusPublished::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientFriendUserStatusPublished* CMsgClientFriendUserStatusPublished::New(::google::protobuf::Arena* arena) const {
  CMsgClientFriendUserStatusPublished* n = new CMsgClientFriendUserStatusPublished;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientFriendUserStatusPublished::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientFriendUserStatusPublished)
  if (has_status_text()) {
    GOOGLE_DCHECK(!status_text_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*status_text_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&friend_steamid_, 0, reinterpret_cast<char*>(&appid_) -
      reinterpret_cast<char*>(&friend_steamid_) + sizeof(appid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientFriendUserStatusPublished::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientFriendUserStatusPublished)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 friend_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_friend_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &friend_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 appid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string status_text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_text()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->status_text().data(), this->status_text().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientFriendUserStatusPublished.status_text");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientFriendUserStatusPublished)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientFriendUserStatusPublished)
  return false;
#undef DO_
}

void CMsgClientFriendUserStatusPublished::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientFriendUserStatusPublished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 friend_steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->friend_steamid(), output);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->appid(), output);
  }

  // optional string status_text = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status_text().data(), this->status_text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientFriendUserStatusPublished.status_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->status_text(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientFriendUserStatusPublished)
}

::google::protobuf::uint8* CMsgClientFriendUserStatusPublished::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientFriendUserStatusPublished)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 friend_steamid = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->friend_steamid(), target);
  }

  // optional uint32 appid = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->appid(), target);
  }

  // optional string status_text = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->status_text().data(), this->status_text().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientFriendUserStatusPublished.status_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->status_text(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientFriendUserStatusPublished)
  return target;
}

size_t CMsgClientFriendUserStatusPublished::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientFriendUserStatusPublished)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string status_text = 3;
    if (has_status_text()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->status_text());
    }

    // optional fixed64 friend_steamid = 1;
    if (has_friend_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 appid = 2;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientFriendUserStatusPublished::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientFriendUserStatusPublished)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientFriendUserStatusPublished* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientFriendUserStatusPublished>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientFriendUserStatusPublished)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientFriendUserStatusPublished)
    MergeFrom(*source);
  }
}

void CMsgClientFriendUserStatusPublished::MergeFrom(const CMsgClientFriendUserStatusPublished& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientFriendUserStatusPublished)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_status_text();
      status_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_text_);
    }
    if (cached_has_bits & 0x00000002u) {
      friend_steamid_ = from.friend_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      appid_ = from.appid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientFriendUserStatusPublished::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientFriendUserStatusPublished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientFriendUserStatusPublished::CopyFrom(const CMsgClientFriendUserStatusPublished& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientFriendUserStatusPublished)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientFriendUserStatusPublished::IsInitialized() const {
  return true;
}

void CMsgClientFriendUserStatusPublished::Swap(CMsgClientFriendUserStatusPublished* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientFriendUserStatusPublished::InternalSwap(CMsgClientFriendUserStatusPublished* other) {
  status_text_.Swap(&other->status_text_);
  std::swap(friend_steamid_, other->friend_steamid_);
  std::swap(appid_, other->appid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientFriendUserStatusPublished::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientFriendUserStatusPublished

// optional fixed64 friend_steamid = 1;
bool CMsgClientFriendUserStatusPublished::has_friend_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientFriendUserStatusPublished::set_has_friend_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientFriendUserStatusPublished::clear_has_friend_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientFriendUserStatusPublished::clear_friend_steamid() {
  friend_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_friend_steamid();
}
::google::protobuf::uint64 CMsgClientFriendUserStatusPublished::friend_steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendUserStatusPublished.friend_steamid)
  return friend_steamid_;
}
void CMsgClientFriendUserStatusPublished::set_friend_steamid(::google::protobuf::uint64 value) {
  set_has_friend_steamid();
  friend_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendUserStatusPublished.friend_steamid)
}

// optional uint32 appid = 2;
bool CMsgClientFriendUserStatusPublished::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientFriendUserStatusPublished::set_has_appid() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientFriendUserStatusPublished::clear_has_appid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientFriendUserStatusPublished::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
::google::protobuf::uint32 CMsgClientFriendUserStatusPublished::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendUserStatusPublished.appid)
  return appid_;
}
void CMsgClientFriendUserStatusPublished::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendUserStatusPublished.appid)
}

// optional string status_text = 3;
bool CMsgClientFriendUserStatusPublished::has_status_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientFriendUserStatusPublished::set_has_status_text() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientFriendUserStatusPublished::clear_has_status_text() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientFriendUserStatusPublished::clear_status_text() {
  status_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_status_text();
}
const ::std::string& CMsgClientFriendUserStatusPublished::status_text() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendUserStatusPublished.status_text)
  return status_text_.GetNoArena();
}
void CMsgClientFriendUserStatusPublished::set_status_text(const ::std::string& value) {
  set_has_status_text();
  status_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendUserStatusPublished.status_text)
}
#if LANG_CXX11
void CMsgClientFriendUserStatusPublished::set_status_text(::std::string&& value) {
  set_has_status_text();
  status_text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientFriendUserStatusPublished.status_text)
}
#endif
void CMsgClientFriendUserStatusPublished::set_status_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_status_text();
  status_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientFriendUserStatusPublished.status_text)
}
void CMsgClientFriendUserStatusPublished::set_status_text(const char* value, size_t size) {
  set_has_status_text();
  status_text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientFriendUserStatusPublished.status_text)
}
::std::string* CMsgClientFriendUserStatusPublished::mutable_status_text() {
  set_has_status_text();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientFriendUserStatusPublished.status_text)
  return status_text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientFriendUserStatusPublished::release_status_text() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientFriendUserStatusPublished.status_text)
  clear_has_status_text();
  return status_text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientFriendUserStatusPublished::set_allocated_status_text(::std::string* status_text) {
  if (status_text != NULL) {
    set_has_status_text();
  } else {
    clear_has_status_text();
  }
  status_text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status_text);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientFriendUserStatusPublished.status_text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceMethod::kMethodNameFieldNumber;
const int CMsgClientServiceMethod::kSerializedMethodFieldNumber;
const int CMsgClientServiceMethod::kIsNotificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceMethod::CMsgClientServiceMethod()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientServiceMethod)
}
CMsgClientServiceMethod::CMsgClientServiceMethod(const CMsgClientServiceMethod& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_method_name()) {
    method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
  }
  serialized_method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_method()) {
    serialized_method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_method_);
  }
  is_notification_ = from.is_notification_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientServiceMethod)
}

void CMsgClientServiceMethod::SharedCtor() {
  _cached_size_ = 0;
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  is_notification_ = false;
}

CMsgClientServiceMethod::~CMsgClientServiceMethod() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientServiceMethod)
  SharedDtor();
}

void CMsgClientServiceMethod::SharedDtor() {
  method_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceMethod::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientServiceMethod::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientServiceMethod& CMsgClientServiceMethod::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientServiceMethod* CMsgClientServiceMethod::New(::google::protobuf::Arena* arena) const {
  CMsgClientServiceMethod* n = new CMsgClientServiceMethod;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientServiceMethod::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientServiceMethod)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_method_name()) {
      GOOGLE_DCHECK(!method_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*method_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_serialized_method()) {
      GOOGLE_DCHECK(!serialized_method_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*serialized_method_.UnsafeRawStringPointer())->clear();
    }
  }
  is_notification_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientServiceMethod::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientServiceMethod)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string method_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method_name().data(), this->method_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientServiceMethod.method_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes serialized_method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_method()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_notification = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_is_notification();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_notification_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientServiceMethod)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientServiceMethod)
  return false;
#undef DO_
}

void CMsgClientServiceMethod::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientServiceMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string method_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), this->method_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientServiceMethod.method_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method_name(), output);
  }

  // optional bytes serialized_method = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->serialized_method(), output);
  }

  // optional bool is_notification = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->is_notification(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientServiceMethod)
}

::google::protobuf::uint8* CMsgClientServiceMethod::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientServiceMethod)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string method_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), this->method_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientServiceMethod.method_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method_name(), target);
  }

  // optional bytes serialized_method = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->serialized_method(), target);
  }

  // optional bool is_notification = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->is_notification(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientServiceMethod)
  return target;
}

size_t CMsgClientServiceMethod::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientServiceMethod)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string method_name = 1;
    if (has_method_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method_name());
    }

    // optional bytes serialized_method = 2;
    if (has_serialized_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serialized_method());
    }

    // optional bool is_notification = 3;
    if (has_is_notification()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientServiceMethod::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientServiceMethod)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceMethod* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientServiceMethod>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientServiceMethod)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientServiceMethod)
    MergeFrom(*source);
  }
}

void CMsgClientServiceMethod::MergeFrom(const CMsgClientServiceMethod& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientServiceMethod)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_method_name();
      method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_serialized_method();
      serialized_method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_method_);
    }
    if (cached_has_bits & 0x00000004u) {
      is_notification_ = from.is_notification_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientServiceMethod::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientServiceMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceMethod::CopyFrom(const CMsgClientServiceMethod& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientServiceMethod)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceMethod::IsInitialized() const {
  return true;
}

void CMsgClientServiceMethod::Swap(CMsgClientServiceMethod* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceMethod::InternalSwap(CMsgClientServiceMethod* other) {
  method_name_.Swap(&other->method_name_);
  serialized_method_.Swap(&other->serialized_method_);
  std::swap(is_notification_, other->is_notification_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientServiceMethod::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientServiceMethod

// optional string method_name = 1;
bool CMsgClientServiceMethod::has_method_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientServiceMethod::set_has_method_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientServiceMethod::clear_has_method_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientServiceMethod::clear_method_name() {
  method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method_name();
}
const ::std::string& CMsgClientServiceMethod::method_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceMethod.method_name)
  return method_name_.GetNoArena();
}
void CMsgClientServiceMethod::set_method_name(const ::std::string& value) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceMethod.method_name)
}
#if LANG_CXX11
void CMsgClientServiceMethod::set_method_name(::std::string&& value) {
  set_has_method_name();
  method_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceMethod.method_name)
}
#endif
void CMsgClientServiceMethod::set_method_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceMethod.method_name)
}
void CMsgClientServiceMethod::set_method_name(const char* value, size_t size) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceMethod.method_name)
}
::std::string* CMsgClientServiceMethod::mutable_method_name() {
  set_has_method_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceMethod.method_name)
  return method_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceMethod::release_method_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceMethod.method_name)
  clear_has_method_name();
  return method_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceMethod::set_allocated_method_name(::std::string* method_name) {
  if (method_name != NULL) {
    set_has_method_name();
  } else {
    clear_has_method_name();
  }
  method_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceMethod.method_name)
}

// optional bytes serialized_method = 2;
bool CMsgClientServiceMethod::has_serialized_method() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientServiceMethod::set_has_serialized_method() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientServiceMethod::clear_has_serialized_method() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientServiceMethod::clear_serialized_method() {
  serialized_method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serialized_method();
}
const ::std::string& CMsgClientServiceMethod::serialized_method() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceMethod.serialized_method)
  return serialized_method_.GetNoArena();
}
void CMsgClientServiceMethod::set_serialized_method(const ::std::string& value) {
  set_has_serialized_method();
  serialized_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceMethod.serialized_method)
}
#if LANG_CXX11
void CMsgClientServiceMethod::set_serialized_method(::std::string&& value) {
  set_has_serialized_method();
  serialized_method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceMethod.serialized_method)
}
#endif
void CMsgClientServiceMethod::set_serialized_method(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serialized_method();
  serialized_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceMethod.serialized_method)
}
void CMsgClientServiceMethod::set_serialized_method(const void* value, size_t size) {
  set_has_serialized_method();
  serialized_method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceMethod.serialized_method)
}
::std::string* CMsgClientServiceMethod::mutable_serialized_method() {
  set_has_serialized_method();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceMethod.serialized_method)
  return serialized_method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceMethod::release_serialized_method() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceMethod.serialized_method)
  clear_has_serialized_method();
  return serialized_method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceMethod::set_allocated_serialized_method(::std::string* serialized_method) {
  if (serialized_method != NULL) {
    set_has_serialized_method();
  } else {
    clear_has_serialized_method();
  }
  serialized_method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialized_method);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceMethod.serialized_method)
}

// optional bool is_notification = 3;
bool CMsgClientServiceMethod::has_is_notification() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientServiceMethod::set_has_is_notification() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientServiceMethod::clear_has_is_notification() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientServiceMethod::clear_is_notification() {
  is_notification_ = false;
  clear_has_is_notification();
}
bool CMsgClientServiceMethod::is_notification() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceMethod.is_notification)
  return is_notification_;
}
void CMsgClientServiceMethod::set_is_notification(bool value) {
  set_has_is_notification();
  is_notification_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceMethod.is_notification)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceMethodResponse::kMethodNameFieldNumber;
const int CMsgClientServiceMethodResponse::kSerializedMethodResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceMethodResponse::CMsgClientServiceMethodResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientServiceMethodResponse)
}
CMsgClientServiceMethodResponse::CMsgClientServiceMethodResponse(const CMsgClientServiceMethodResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_method_name()) {
    method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
  }
  serialized_method_response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_method_response()) {
    serialized_method_response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_method_response_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientServiceMethodResponse)
}

void CMsgClientServiceMethodResponse::SharedCtor() {
  _cached_size_ = 0;
  method_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_method_response_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientServiceMethodResponse::~CMsgClientServiceMethodResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientServiceMethodResponse)
  SharedDtor();
}

void CMsgClientServiceMethodResponse::SharedDtor() {
  method_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  serialized_method_response_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceMethodResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientServiceMethodResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientServiceMethodResponse& CMsgClientServiceMethodResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientServiceMethodResponse* CMsgClientServiceMethodResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientServiceMethodResponse* n = new CMsgClientServiceMethodResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientServiceMethodResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientServiceMethodResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_method_name()) {
      GOOGLE_DCHECK(!method_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*method_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_serialized_method_response()) {
      GOOGLE_DCHECK(!serialized_method_response_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*serialized_method_response_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientServiceMethodResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientServiceMethodResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string method_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->method_name().data(), this->method_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientServiceMethodResponse.method_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes serialized_method_response = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_method_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientServiceMethodResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientServiceMethodResponse)
  return false;
#undef DO_
}

void CMsgClientServiceMethodResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientServiceMethodResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string method_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), this->method_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientServiceMethodResponse.method_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method_name(), output);
  }

  // optional bytes serialized_method_response = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->serialized_method_response(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientServiceMethodResponse)
}

::google::protobuf::uint8* CMsgClientServiceMethodResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientServiceMethodResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string method_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->method_name().data(), this->method_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientServiceMethodResponse.method_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method_name(), target);
  }

  // optional bytes serialized_method_response = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->serialized_method_response(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientServiceMethodResponse)
  return target;
}

size_t CMsgClientServiceMethodResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientServiceMethodResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string method_name = 1;
    if (has_method_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->method_name());
    }

    // optional bytes serialized_method_response = 2;
    if (has_serialized_method_response()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serialized_method_response());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientServiceMethodResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientServiceMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceMethodResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientServiceMethodResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientServiceMethodResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientServiceMethodResponse)
    MergeFrom(*source);
  }
}

void CMsgClientServiceMethodResponse::MergeFrom(const CMsgClientServiceMethodResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientServiceMethodResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_method_name();
      method_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_serialized_method_response();
      serialized_method_response_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_method_response_);
    }
  }
}

void CMsgClientServiceMethodResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientServiceMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceMethodResponse::CopyFrom(const CMsgClientServiceMethodResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientServiceMethodResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceMethodResponse::IsInitialized() const {
  return true;
}

void CMsgClientServiceMethodResponse::Swap(CMsgClientServiceMethodResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceMethodResponse::InternalSwap(CMsgClientServiceMethodResponse* other) {
  method_name_.Swap(&other->method_name_);
  serialized_method_response_.Swap(&other->serialized_method_response_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientServiceMethodResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientServiceMethodResponse

// optional string method_name = 1;
bool CMsgClientServiceMethodResponse::has_method_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientServiceMethodResponse::set_has_method_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientServiceMethodResponse::clear_has_method_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientServiceMethodResponse::clear_method_name() {
  method_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_method_name();
}
const ::std::string& CMsgClientServiceMethodResponse::method_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceMethodResponse.method_name)
  return method_name_.GetNoArena();
}
void CMsgClientServiceMethodResponse::set_method_name(const ::std::string& value) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceMethodResponse.method_name)
}
#if LANG_CXX11
void CMsgClientServiceMethodResponse::set_method_name(::std::string&& value) {
  set_has_method_name();
  method_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceMethodResponse.method_name)
}
#endif
void CMsgClientServiceMethodResponse::set_method_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceMethodResponse.method_name)
}
void CMsgClientServiceMethodResponse::set_method_name(const char* value, size_t size) {
  set_has_method_name();
  method_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceMethodResponse.method_name)
}
::std::string* CMsgClientServiceMethodResponse::mutable_method_name() {
  set_has_method_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceMethodResponse.method_name)
  return method_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceMethodResponse::release_method_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceMethodResponse.method_name)
  clear_has_method_name();
  return method_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceMethodResponse::set_allocated_method_name(::std::string* method_name) {
  if (method_name != NULL) {
    set_has_method_name();
  } else {
    clear_has_method_name();
  }
  method_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceMethodResponse.method_name)
}

// optional bytes serialized_method_response = 2;
bool CMsgClientServiceMethodResponse::has_serialized_method_response() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientServiceMethodResponse::set_has_serialized_method_response() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientServiceMethodResponse::clear_has_serialized_method_response() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientServiceMethodResponse::clear_serialized_method_response() {
  serialized_method_response_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serialized_method_response();
}
const ::std::string& CMsgClientServiceMethodResponse::serialized_method_response() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceMethodResponse.serialized_method_response)
  return serialized_method_response_.GetNoArena();
}
void CMsgClientServiceMethodResponse::set_serialized_method_response(const ::std::string& value) {
  set_has_serialized_method_response();
  serialized_method_response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceMethodResponse.serialized_method_response)
}
#if LANG_CXX11
void CMsgClientServiceMethodResponse::set_serialized_method_response(::std::string&& value) {
  set_has_serialized_method_response();
  serialized_method_response_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceMethodResponse.serialized_method_response)
}
#endif
void CMsgClientServiceMethodResponse::set_serialized_method_response(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serialized_method_response();
  serialized_method_response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceMethodResponse.serialized_method_response)
}
void CMsgClientServiceMethodResponse::set_serialized_method_response(const void* value, size_t size) {
  set_has_serialized_method_response();
  serialized_method_response_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceMethodResponse.serialized_method_response)
}
::std::string* CMsgClientServiceMethodResponse::mutable_serialized_method_response() {
  set_has_serialized_method_response();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceMethodResponse.serialized_method_response)
  return serialized_method_response_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceMethodResponse::release_serialized_method_response() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceMethodResponse.serialized_method_response)
  clear_has_serialized_method_response();
  return serialized_method_response_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceMethodResponse::set_allocated_serialized_method_response(::std::string* serialized_method_response) {
  if (serialized_method_response != NULL) {
    set_has_serialized_method_response();
  } else {
    clear_has_serialized_method_response();
  }
  serialized_method_response_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialized_method_response);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceMethodResponse.serialized_method_response)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUIMode::kUimodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUIMode::CMsgClientUIMode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUIMode)
}
CMsgClientUIMode::CMsgClientUIMode(const CMsgClientUIMode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uimode_ = from.uimode_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUIMode)
}

void CMsgClientUIMode::SharedCtor() {
  _cached_size_ = 0;
  uimode_ = 0u;
}

CMsgClientUIMode::~CMsgClientUIMode() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUIMode)
  SharedDtor();
}

void CMsgClientUIMode::SharedDtor() {
}

void CMsgClientUIMode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUIMode::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUIMode& CMsgClientUIMode::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUIMode* CMsgClientUIMode::New(::google::protobuf::Arena* arena) const {
  CMsgClientUIMode* n = new CMsgClientUIMode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUIMode::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUIMode)
  uimode_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUIMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUIMode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 uimode = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_uimode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uimode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUIMode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUIMode)
  return false;
#undef DO_
}

void CMsgClientUIMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUIMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 uimode = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uimode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUIMode)
}

::google::protobuf::uint8* CMsgClientUIMode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUIMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 uimode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uimode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUIMode)
  return target;
}

size_t CMsgClientUIMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUIMode)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 uimode = 1;
  if (has_uimode()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uimode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUIMode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUIMode)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUIMode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUIMode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUIMode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUIMode)
    MergeFrom(*source);
  }
}

void CMsgClientUIMode::MergeFrom(const CMsgClientUIMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUIMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_uimode()) {
    set_uimode(from.uimode());
  }
}

void CMsgClientUIMode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUIMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUIMode::CopyFrom(const CMsgClientUIMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUIMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUIMode::IsInitialized() const {
  return true;
}

void CMsgClientUIMode::Swap(CMsgClientUIMode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUIMode::InternalSwap(CMsgClientUIMode* other) {
  std::swap(uimode_, other->uimode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUIMode::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUIMode

// optional uint32 uimode = 1;
bool CMsgClientUIMode::has_uimode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUIMode::set_has_uimode() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUIMode::clear_has_uimode() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUIMode::clear_uimode() {
  uimode_ = 0u;
  clear_has_uimode();
}
::google::protobuf::uint32 CMsgClientUIMode::uimode() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUIMode.uimode)
  return uimode_;
}
void CMsgClientUIMode::set_uimode(::google::protobuf::uint32 value) {
  set_has_uimode();
  uimode_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUIMode.uimode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientVanityURLChangedNotification::kVanityUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientVanityURLChangedNotification::CMsgClientVanityURLChangedNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientVanityURLChangedNotification)
}
CMsgClientVanityURLChangedNotification::CMsgClientVanityURLChangedNotification(const CMsgClientVanityURLChangedNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vanity_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vanity_url()) {
    vanity_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vanity_url_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientVanityURLChangedNotification)
}

void CMsgClientVanityURLChangedNotification::SharedCtor() {
  _cached_size_ = 0;
  vanity_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CMsgClientVanityURLChangedNotification::~CMsgClientVanityURLChangedNotification() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientVanityURLChangedNotification)
  SharedDtor();
}

void CMsgClientVanityURLChangedNotification::SharedDtor() {
  vanity_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientVanityURLChangedNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientVanityURLChangedNotification::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientVanityURLChangedNotification& CMsgClientVanityURLChangedNotification::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientVanityURLChangedNotification* CMsgClientVanityURLChangedNotification::New(::google::protobuf::Arena* arena) const {
  CMsgClientVanityURLChangedNotification* n = new CMsgClientVanityURLChangedNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientVanityURLChangedNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientVanityURLChangedNotification)
  if (has_vanity_url()) {
    GOOGLE_DCHECK(!vanity_url_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*vanity_url_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientVanityURLChangedNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientVanityURLChangedNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string vanity_url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vanity_url()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vanity_url().data(), this->vanity_url().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientVanityURLChangedNotification.vanity_url");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientVanityURLChangedNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientVanityURLChangedNotification)
  return false;
#undef DO_
}

void CMsgClientVanityURLChangedNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientVanityURLChangedNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string vanity_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vanity_url().data(), this->vanity_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientVanityURLChangedNotification.vanity_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->vanity_url(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientVanityURLChangedNotification)
}

::google::protobuf::uint8* CMsgClientVanityURLChangedNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientVanityURLChangedNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string vanity_url = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vanity_url().data(), this->vanity_url().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientVanityURLChangedNotification.vanity_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->vanity_url(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientVanityURLChangedNotification)
  return target;
}

size_t CMsgClientVanityURLChangedNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientVanityURLChangedNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string vanity_url = 1;
  if (has_vanity_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vanity_url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientVanityURLChangedNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientVanityURLChangedNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientVanityURLChangedNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientVanityURLChangedNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientVanityURLChangedNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientVanityURLChangedNotification)
    MergeFrom(*source);
  }
}

void CMsgClientVanityURLChangedNotification::MergeFrom(const CMsgClientVanityURLChangedNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientVanityURLChangedNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_vanity_url()) {
    set_has_vanity_url();
    vanity_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vanity_url_);
  }
}

void CMsgClientVanityURLChangedNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientVanityURLChangedNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientVanityURLChangedNotification::CopyFrom(const CMsgClientVanityURLChangedNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientVanityURLChangedNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientVanityURLChangedNotification::IsInitialized() const {
  return true;
}

void CMsgClientVanityURLChangedNotification::Swap(CMsgClientVanityURLChangedNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientVanityURLChangedNotification::InternalSwap(CMsgClientVanityURLChangedNotification* other) {
  vanity_url_.Swap(&other->vanity_url_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientVanityURLChangedNotification::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientVanityURLChangedNotification

// optional string vanity_url = 1;
bool CMsgClientVanityURLChangedNotification::has_vanity_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientVanityURLChangedNotification::set_has_vanity_url() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientVanityURLChangedNotification::clear_has_vanity_url() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientVanityURLChangedNotification::clear_vanity_url() {
  vanity_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vanity_url();
}
const ::std::string& CMsgClientVanityURLChangedNotification::vanity_url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientVanityURLChangedNotification.vanity_url)
  return vanity_url_.GetNoArena();
}
void CMsgClientVanityURLChangedNotification::set_vanity_url(const ::std::string& value) {
  set_has_vanity_url();
  vanity_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientVanityURLChangedNotification.vanity_url)
}
#if LANG_CXX11
void CMsgClientVanityURLChangedNotification::set_vanity_url(::std::string&& value) {
  set_has_vanity_url();
  vanity_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientVanityURLChangedNotification.vanity_url)
}
#endif
void CMsgClientVanityURLChangedNotification::set_vanity_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_vanity_url();
  vanity_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientVanityURLChangedNotification.vanity_url)
}
void CMsgClientVanityURLChangedNotification::set_vanity_url(const char* value, size_t size) {
  set_has_vanity_url();
  vanity_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientVanityURLChangedNotification.vanity_url)
}
::std::string* CMsgClientVanityURLChangedNotification::mutable_vanity_url() {
  set_has_vanity_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientVanityURLChangedNotification.vanity_url)
  return vanity_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientVanityURLChangedNotification::release_vanity_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientVanityURLChangedNotification.vanity_url)
  clear_has_vanity_url();
  return vanity_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientVanityURLChangedNotification::set_allocated_vanity_url(::std::string* vanity_url) {
  if (vanity_url != NULL) {
    set_has_vanity_url();
  } else {
    clear_has_vanity_url();
  }
  vanity_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vanity_url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientVanityURLChangedNotification.vanity_url)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAuthorizeLocalDeviceRequest::kDeviceDescriptionFieldNumber;
const int CMsgClientAuthorizeLocalDeviceRequest::kOwnerAccountIdFieldNumber;
const int CMsgClientAuthorizeLocalDeviceRequest::kLocalDeviceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAuthorizeLocalDeviceRequest::CMsgClientAuthorizeLocalDeviceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
}
CMsgClientAuthorizeLocalDeviceRequest::CMsgClientAuthorizeLocalDeviceRequest(const CMsgClientAuthorizeLocalDeviceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_description()) {
    device_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_description_);
  }
  ::memcpy(&local_device_token_, &from.local_device_token_,
    reinterpret_cast<char*>(&owner_account_id_) -
    reinterpret_cast<char*>(&local_device_token_) + sizeof(owner_account_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
}

void CMsgClientAuthorizeLocalDeviceRequest::SharedCtor() {
  _cached_size_ = 0;
  device_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&local_device_token_, 0, reinterpret_cast<char*>(&owner_account_id_) -
    reinterpret_cast<char*>(&local_device_token_) + sizeof(owner_account_id_));
}

CMsgClientAuthorizeLocalDeviceRequest::~CMsgClientAuthorizeLocalDeviceRequest() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  SharedDtor();
}

void CMsgClientAuthorizeLocalDeviceRequest::SharedDtor() {
  device_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientAuthorizeLocalDeviceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientAuthorizeLocalDeviceRequest::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAuthorizeLocalDeviceRequest& CMsgClientAuthorizeLocalDeviceRequest::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientAuthorizeLocalDeviceRequest* CMsgClientAuthorizeLocalDeviceRequest::New(::google::protobuf::Arena* arena) const {
  CMsgClientAuthorizeLocalDeviceRequest* n = new CMsgClientAuthorizeLocalDeviceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientAuthorizeLocalDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  if (has_device_description()) {
    GOOGLE_DCHECK(!device_description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*device_description_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&local_device_token_, 0, reinterpret_cast<char*>(&owner_account_id_) -
      reinterpret_cast<char*>(&local_device_token_) + sizeof(owner_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAuthorizeLocalDeviceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string device_description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_description().data(), this->device_description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_owner_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 local_device_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_local_device_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &local_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  return false;
#undef DO_
}

void CMsgClientAuthorizeLocalDeviceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string device_description = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_description().data(), this->device_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->device_description(), output);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owner_account_id(), output);
  }

  // optional uint64 local_device_token = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->local_device_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
}

::google::protobuf::uint8* CMsgClientAuthorizeLocalDeviceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string device_description = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_description().data(), this->device_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->device_description(), target);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owner_account_id(), target);
  }

  // optional uint64 local_device_token = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->local_device_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  return target;
}

size_t CMsgClientAuthorizeLocalDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string device_description = 1;
    if (has_device_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device_description());
    }

    // optional uint64 local_device_token = 3;
    if (has_local_device_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->local_device_token());
    }

    // optional uint32 owner_account_id = 2;
    if (has_owner_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientAuthorizeLocalDeviceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAuthorizeLocalDeviceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAuthorizeLocalDeviceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
    MergeFrom(*source);
  }
}

void CMsgClientAuthorizeLocalDeviceRequest::MergeFrom(const CMsgClientAuthorizeLocalDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_device_description();
      device_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_description_);
    }
    if (cached_has_bits & 0x00000002u) {
      local_device_token_ = from.local_device_token_;
    }
    if (cached_has_bits & 0x00000004u) {
      owner_account_id_ = from.owner_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAuthorizeLocalDeviceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAuthorizeLocalDeviceRequest::CopyFrom(const CMsgClientAuthorizeLocalDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAuthorizeLocalDeviceRequest::IsInitialized() const {
  return true;
}

void CMsgClientAuthorizeLocalDeviceRequest::Swap(CMsgClientAuthorizeLocalDeviceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAuthorizeLocalDeviceRequest::InternalSwap(CMsgClientAuthorizeLocalDeviceRequest* other) {
  device_description_.Swap(&other->device_description_);
  std::swap(local_device_token_, other->local_device_token_);
  std::swap(owner_account_id_, other->owner_account_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientAuthorizeLocalDeviceRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientAuthorizeLocalDeviceRequest

// optional string device_description = 1;
bool CMsgClientAuthorizeLocalDeviceRequest::has_device_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientAuthorizeLocalDeviceRequest::set_has_device_description() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientAuthorizeLocalDeviceRequest::clear_has_device_description() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientAuthorizeLocalDeviceRequest::clear_device_description() {
  device_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device_description();
}
const ::std::string& CMsgClientAuthorizeLocalDeviceRequest::device_description() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description)
  return device_description_.GetNoArena();
}
void CMsgClientAuthorizeLocalDeviceRequest::set_device_description(const ::std::string& value) {
  set_has_device_description();
  device_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description)
}
#if LANG_CXX11
void CMsgClientAuthorizeLocalDeviceRequest::set_device_description(::std::string&& value) {
  set_has_device_description();
  device_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description)
}
#endif
void CMsgClientAuthorizeLocalDeviceRequest::set_device_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_device_description();
  device_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description)
}
void CMsgClientAuthorizeLocalDeviceRequest::set_device_description(const char* value, size_t size) {
  set_has_device_description();
  device_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description)
}
::std::string* CMsgClientAuthorizeLocalDeviceRequest::mutable_device_description() {
  set_has_device_description();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description)
  return device_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientAuthorizeLocalDeviceRequest::release_device_description() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description)
  clear_has_device_description();
  return device_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientAuthorizeLocalDeviceRequest::set_allocated_device_description(::std::string* device_description) {
  if (device_description != NULL) {
    set_has_device_description();
  } else {
    clear_has_device_description();
  }
  device_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_description);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientAuthorizeLocalDeviceRequest.device_description)
}

// optional uint32 owner_account_id = 2;
bool CMsgClientAuthorizeLocalDeviceRequest::has_owner_account_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientAuthorizeLocalDeviceRequest::set_has_owner_account_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientAuthorizeLocalDeviceRequest::clear_has_owner_account_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientAuthorizeLocalDeviceRequest::clear_owner_account_id() {
  owner_account_id_ = 0u;
  clear_has_owner_account_id();
}
::google::protobuf::uint32 CMsgClientAuthorizeLocalDeviceRequest::owner_account_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAuthorizeLocalDeviceRequest.owner_account_id)
  return owner_account_id_;
}
void CMsgClientAuthorizeLocalDeviceRequest::set_owner_account_id(::google::protobuf::uint32 value) {
  set_has_owner_account_id();
  owner_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAuthorizeLocalDeviceRequest.owner_account_id)
}

// optional uint64 local_device_token = 3;
bool CMsgClientAuthorizeLocalDeviceRequest::has_local_device_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientAuthorizeLocalDeviceRequest::set_has_local_device_token() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientAuthorizeLocalDeviceRequest::clear_has_local_device_token() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientAuthorizeLocalDeviceRequest::clear_local_device_token() {
  local_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_local_device_token();
}
::google::protobuf::uint64 CMsgClientAuthorizeLocalDeviceRequest::local_device_token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAuthorizeLocalDeviceRequest.local_device_token)
  return local_device_token_;
}
void CMsgClientAuthorizeLocalDeviceRequest::set_local_device_token(::google::protobuf::uint64 value) {
  set_has_local_device_token();
  local_device_token_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAuthorizeLocalDeviceRequest.local_device_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAuthorizeLocalDevice::kEresultFieldNumber;
const int CMsgClientAuthorizeLocalDevice::kOwnerAccountIdFieldNumber;
const int CMsgClientAuthorizeLocalDevice::kAuthedDeviceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAuthorizeLocalDevice::CMsgClientAuthorizeLocalDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientAuthorizeLocalDevice)
}
CMsgClientAuthorizeLocalDevice::CMsgClientAuthorizeLocalDevice(const CMsgClientAuthorizeLocalDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&authed_device_token_, &from.authed_device_token_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&authed_device_token_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientAuthorizeLocalDevice)
}

void CMsgClientAuthorizeLocalDevice::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&authed_device_token_, 0, reinterpret_cast<char*>(&owner_account_id_) -
    reinterpret_cast<char*>(&authed_device_token_) + sizeof(owner_account_id_));
  eresult_ = 2;
}

CMsgClientAuthorizeLocalDevice::~CMsgClientAuthorizeLocalDevice() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientAuthorizeLocalDevice)
  SharedDtor();
}

void CMsgClientAuthorizeLocalDevice::SharedDtor() {
}

void CMsgClientAuthorizeLocalDevice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientAuthorizeLocalDevice::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAuthorizeLocalDevice& CMsgClientAuthorizeLocalDevice::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientAuthorizeLocalDevice* CMsgClientAuthorizeLocalDevice::New(::google::protobuf::Arena* arena) const {
  CMsgClientAuthorizeLocalDevice* n = new CMsgClientAuthorizeLocalDevice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientAuthorizeLocalDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&authed_device_token_, 0, reinterpret_cast<char*>(&owner_account_id_) -
      reinterpret_cast<char*>(&authed_device_token_) + sizeof(owner_account_id_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAuthorizeLocalDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_owner_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 authed_device_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_authed_device_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &authed_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientAuthorizeLocalDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientAuthorizeLocalDevice)
  return false;
#undef DO_
}

void CMsgClientAuthorizeLocalDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owner_account_id(), output);
  }

  // optional uint64 authed_device_token = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->authed_device_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientAuthorizeLocalDevice)
}

::google::protobuf::uint8* CMsgClientAuthorizeLocalDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owner_account_id(), target);
  }

  // optional uint64 authed_device_token = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->authed_device_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientAuthorizeLocalDevice)
  return target;
}

size_t CMsgClientAuthorizeLocalDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 authed_device_token = 3;
    if (has_authed_device_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->authed_device_token());
    }

    // optional uint32 owner_account_id = 2;
    if (has_owner_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientAuthorizeLocalDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAuthorizeLocalDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAuthorizeLocalDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientAuthorizeLocalDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientAuthorizeLocalDevice)
    MergeFrom(*source);
  }
}

void CMsgClientAuthorizeLocalDevice::MergeFrom(const CMsgClientAuthorizeLocalDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      authed_device_token_ = from.authed_device_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_account_id_ = from.owner_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAuthorizeLocalDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAuthorizeLocalDevice::CopyFrom(const CMsgClientAuthorizeLocalDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientAuthorizeLocalDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAuthorizeLocalDevice::IsInitialized() const {
  return true;
}

void CMsgClientAuthorizeLocalDevice::Swap(CMsgClientAuthorizeLocalDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAuthorizeLocalDevice::InternalSwap(CMsgClientAuthorizeLocalDevice* other) {
  std::swap(authed_device_token_, other->authed_device_token_);
  std::swap(owner_account_id_, other->owner_account_id_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientAuthorizeLocalDevice::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientAuthorizeLocalDevice

// optional int32 eresult = 1 [default = 2];
bool CMsgClientAuthorizeLocalDevice::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientAuthorizeLocalDevice::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientAuthorizeLocalDevice::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientAuthorizeLocalDevice::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientAuthorizeLocalDevice::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAuthorizeLocalDevice.eresult)
  return eresult_;
}
void CMsgClientAuthorizeLocalDevice::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAuthorizeLocalDevice.eresult)
}

// optional uint32 owner_account_id = 2;
bool CMsgClientAuthorizeLocalDevice::has_owner_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientAuthorizeLocalDevice::set_has_owner_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientAuthorizeLocalDevice::clear_has_owner_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientAuthorizeLocalDevice::clear_owner_account_id() {
  owner_account_id_ = 0u;
  clear_has_owner_account_id();
}
::google::protobuf::uint32 CMsgClientAuthorizeLocalDevice::owner_account_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAuthorizeLocalDevice.owner_account_id)
  return owner_account_id_;
}
void CMsgClientAuthorizeLocalDevice::set_owner_account_id(::google::protobuf::uint32 value) {
  set_has_owner_account_id();
  owner_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAuthorizeLocalDevice.owner_account_id)
}

// optional uint64 authed_device_token = 3;
bool CMsgClientAuthorizeLocalDevice::has_authed_device_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientAuthorizeLocalDevice::set_has_authed_device_token() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientAuthorizeLocalDevice::clear_has_authed_device_token() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientAuthorizeLocalDevice::clear_authed_device_token() {
  authed_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_authed_device_token();
}
::google::protobuf::uint64 CMsgClientAuthorizeLocalDevice::authed_device_token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAuthorizeLocalDevice.authed_device_token)
  return authed_device_token_;
}
void CMsgClientAuthorizeLocalDevice::set_authed_device_token(::google::protobuf::uint64 value) {
  set_has_authed_device_token();
  authed_device_token_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAuthorizeLocalDevice.authed_device_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientAuthorizeLocalDeviceNotification::kEresultFieldNumber;
const int CMsgClientAuthorizeLocalDeviceNotification::kOwnerAccountIdFieldNumber;
const int CMsgClientAuthorizeLocalDeviceNotification::kLocalDeviceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientAuthorizeLocalDeviceNotification::CMsgClientAuthorizeLocalDeviceNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
}
CMsgClientAuthorizeLocalDeviceNotification::CMsgClientAuthorizeLocalDeviceNotification(const CMsgClientAuthorizeLocalDeviceNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&local_device_token_, &from.local_device_token_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&local_device_token_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
}

void CMsgClientAuthorizeLocalDeviceNotification::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&local_device_token_, 0, reinterpret_cast<char*>(&owner_account_id_) -
    reinterpret_cast<char*>(&local_device_token_) + sizeof(owner_account_id_));
  eresult_ = 2;
}

CMsgClientAuthorizeLocalDeviceNotification::~CMsgClientAuthorizeLocalDeviceNotification() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  SharedDtor();
}

void CMsgClientAuthorizeLocalDeviceNotification::SharedDtor() {
}

void CMsgClientAuthorizeLocalDeviceNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientAuthorizeLocalDeviceNotification::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientAuthorizeLocalDeviceNotification& CMsgClientAuthorizeLocalDeviceNotification::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientAuthorizeLocalDeviceNotification* CMsgClientAuthorizeLocalDeviceNotification::New(::google::protobuf::Arena* arena) const {
  CMsgClientAuthorizeLocalDeviceNotification* n = new CMsgClientAuthorizeLocalDeviceNotification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientAuthorizeLocalDeviceNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&local_device_token_, 0, reinterpret_cast<char*>(&owner_account_id_) -
      reinterpret_cast<char*>(&local_device_token_) + sizeof(owner_account_id_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientAuthorizeLocalDeviceNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_owner_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 local_device_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_local_device_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &local_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  return false;
#undef DO_
}

void CMsgClientAuthorizeLocalDeviceNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owner_account_id(), output);
  }

  // optional uint64 local_device_token = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->local_device_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
}

::google::protobuf::uint8* CMsgClientAuthorizeLocalDeviceNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 owner_account_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owner_account_id(), target);
  }

  // optional uint64 local_device_token = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->local_device_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  return target;
}

size_t CMsgClientAuthorizeLocalDeviceNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint64 local_device_token = 3;
    if (has_local_device_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->local_device_token());
    }

    // optional uint32 owner_account_id = 2;
    if (has_owner_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientAuthorizeLocalDeviceNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientAuthorizeLocalDeviceNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientAuthorizeLocalDeviceNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
    MergeFrom(*source);
  }
}

void CMsgClientAuthorizeLocalDeviceNotification::MergeFrom(const CMsgClientAuthorizeLocalDeviceNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      local_device_token_ = from.local_device_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_account_id_ = from.owner_account_id_;
    }
    if (cached_has_bits & 0x00000004u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientAuthorizeLocalDeviceNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientAuthorizeLocalDeviceNotification::CopyFrom(const CMsgClientAuthorizeLocalDeviceNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientAuthorizeLocalDeviceNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientAuthorizeLocalDeviceNotification::IsInitialized() const {
  return true;
}

void CMsgClientAuthorizeLocalDeviceNotification::Swap(CMsgClientAuthorizeLocalDeviceNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientAuthorizeLocalDeviceNotification::InternalSwap(CMsgClientAuthorizeLocalDeviceNotification* other) {
  std::swap(local_device_token_, other->local_device_token_);
  std::swap(owner_account_id_, other->owner_account_id_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientAuthorizeLocalDeviceNotification::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientAuthorizeLocalDeviceNotification

// optional int32 eresult = 1 [default = 2];
bool CMsgClientAuthorizeLocalDeviceNotification::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientAuthorizeLocalDeviceNotification::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientAuthorizeLocalDeviceNotification::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientAuthorizeLocalDeviceNotification::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientAuthorizeLocalDeviceNotification::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAuthorizeLocalDeviceNotification.eresult)
  return eresult_;
}
void CMsgClientAuthorizeLocalDeviceNotification::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAuthorizeLocalDeviceNotification.eresult)
}

// optional uint32 owner_account_id = 2;
bool CMsgClientAuthorizeLocalDeviceNotification::has_owner_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientAuthorizeLocalDeviceNotification::set_has_owner_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientAuthorizeLocalDeviceNotification::clear_has_owner_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientAuthorizeLocalDeviceNotification::clear_owner_account_id() {
  owner_account_id_ = 0u;
  clear_has_owner_account_id();
}
::google::protobuf::uint32 CMsgClientAuthorizeLocalDeviceNotification::owner_account_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAuthorizeLocalDeviceNotification.owner_account_id)
  return owner_account_id_;
}
void CMsgClientAuthorizeLocalDeviceNotification::set_owner_account_id(::google::protobuf::uint32 value) {
  set_has_owner_account_id();
  owner_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAuthorizeLocalDeviceNotification.owner_account_id)
}

// optional uint64 local_device_token = 3;
bool CMsgClientAuthorizeLocalDeviceNotification::has_local_device_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientAuthorizeLocalDeviceNotification::set_has_local_device_token() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientAuthorizeLocalDeviceNotification::clear_has_local_device_token() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientAuthorizeLocalDeviceNotification::clear_local_device_token() {
  local_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_local_device_token();
}
::google::protobuf::uint64 CMsgClientAuthorizeLocalDeviceNotification::local_device_token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAuthorizeLocalDeviceNotification.local_device_token)
  return local_device_token_;
}
void CMsgClientAuthorizeLocalDeviceNotification::set_local_device_token(::google::protobuf::uint64 value) {
  set_has_local_device_token();
  local_device_token_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAuthorizeLocalDeviceNotification.local_device_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDeauthorizeDeviceRequest::kDeauthorizationAccountIdFieldNumber;
const int CMsgClientDeauthorizeDeviceRequest::kDeauthorizationDeviceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDeauthorizeDeviceRequest::CMsgClientDeauthorizeDeviceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientDeauthorizeDeviceRequest)
}
CMsgClientDeauthorizeDeviceRequest::CMsgClientDeauthorizeDeviceRequest(const CMsgClientDeauthorizeDeviceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&deauthorization_device_token_, &from.deauthorization_device_token_,
    reinterpret_cast<char*>(&deauthorization_account_id_) -
    reinterpret_cast<char*>(&deauthorization_device_token_) + sizeof(deauthorization_account_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientDeauthorizeDeviceRequest)
}

void CMsgClientDeauthorizeDeviceRequest::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&deauthorization_device_token_, 0, reinterpret_cast<char*>(&deauthorization_account_id_) -
    reinterpret_cast<char*>(&deauthorization_device_token_) + sizeof(deauthorization_account_id_));
}

CMsgClientDeauthorizeDeviceRequest::~CMsgClientDeauthorizeDeviceRequest() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  SharedDtor();
}

void CMsgClientDeauthorizeDeviceRequest::SharedDtor() {
}

void CMsgClientDeauthorizeDeviceRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientDeauthorizeDeviceRequest::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDeauthorizeDeviceRequest& CMsgClientDeauthorizeDeviceRequest::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientDeauthorizeDeviceRequest* CMsgClientDeauthorizeDeviceRequest::New(::google::protobuf::Arena* arena) const {
  CMsgClientDeauthorizeDeviceRequest* n = new CMsgClientDeauthorizeDeviceRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientDeauthorizeDeviceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&deauthorization_device_token_, 0, reinterpret_cast<char*>(&deauthorization_account_id_) -
      reinterpret_cast<char*>(&deauthorization_device_token_) + sizeof(deauthorization_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDeauthorizeDeviceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 deauthorization_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_deauthorization_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deauthorization_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 deauthorization_device_token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_deauthorization_device_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &deauthorization_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  return false;
#undef DO_
}

void CMsgClientDeauthorizeDeviceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 deauthorization_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->deauthorization_account_id(), output);
  }

  // optional uint64 deauthorization_device_token = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->deauthorization_device_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientDeauthorizeDeviceRequest)
}

::google::protobuf::uint8* CMsgClientDeauthorizeDeviceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 deauthorization_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->deauthorization_account_id(), target);
  }

  // optional uint64 deauthorization_device_token = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->deauthorization_device_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  return target;
}

size_t CMsgClientDeauthorizeDeviceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 deauthorization_device_token = 2;
    if (has_deauthorization_device_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->deauthorization_device_token());
    }

    // optional uint32 deauthorization_account_id = 1;
    if (has_deauthorization_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deauthorization_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientDeauthorizeDeviceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDeauthorizeDeviceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDeauthorizeDeviceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientDeauthorizeDeviceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientDeauthorizeDeviceRequest)
    MergeFrom(*source);
  }
}

void CMsgClientDeauthorizeDeviceRequest::MergeFrom(const CMsgClientDeauthorizeDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      deauthorization_device_token_ = from.deauthorization_device_token_;
    }
    if (cached_has_bits & 0x00000002u) {
      deauthorization_account_id_ = from.deauthorization_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDeauthorizeDeviceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDeauthorizeDeviceRequest::CopyFrom(const CMsgClientDeauthorizeDeviceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientDeauthorizeDeviceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDeauthorizeDeviceRequest::IsInitialized() const {
  return true;
}

void CMsgClientDeauthorizeDeviceRequest::Swap(CMsgClientDeauthorizeDeviceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDeauthorizeDeviceRequest::InternalSwap(CMsgClientDeauthorizeDeviceRequest* other) {
  std::swap(deauthorization_device_token_, other->deauthorization_device_token_);
  std::swap(deauthorization_account_id_, other->deauthorization_account_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientDeauthorizeDeviceRequest::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientDeauthorizeDeviceRequest

// optional uint32 deauthorization_account_id = 1;
bool CMsgClientDeauthorizeDeviceRequest::has_deauthorization_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientDeauthorizeDeviceRequest::set_has_deauthorization_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientDeauthorizeDeviceRequest::clear_has_deauthorization_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientDeauthorizeDeviceRequest::clear_deauthorization_account_id() {
  deauthorization_account_id_ = 0u;
  clear_has_deauthorization_account_id();
}
::google::protobuf::uint32 CMsgClientDeauthorizeDeviceRequest::deauthorization_account_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDeauthorizeDeviceRequest.deauthorization_account_id)
  return deauthorization_account_id_;
}
void CMsgClientDeauthorizeDeviceRequest::set_deauthorization_account_id(::google::protobuf::uint32 value) {
  set_has_deauthorization_account_id();
  deauthorization_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDeauthorizeDeviceRequest.deauthorization_account_id)
}

// optional uint64 deauthorization_device_token = 2;
bool CMsgClientDeauthorizeDeviceRequest::has_deauthorization_device_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientDeauthorizeDeviceRequest::set_has_deauthorization_device_token() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientDeauthorizeDeviceRequest::clear_has_deauthorization_device_token() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientDeauthorizeDeviceRequest::clear_deauthorization_device_token() {
  deauthorization_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_deauthorization_device_token();
}
::google::protobuf::uint64 CMsgClientDeauthorizeDeviceRequest::deauthorization_device_token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDeauthorizeDeviceRequest.deauthorization_device_token)
  return deauthorization_device_token_;
}
void CMsgClientDeauthorizeDeviceRequest::set_deauthorization_device_token(::google::protobuf::uint64 value) {
  set_has_deauthorization_device_token();
  deauthorization_device_token_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDeauthorizeDeviceRequest.deauthorization_device_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientDeauthorizeDevice::kEresultFieldNumber;
const int CMsgClientDeauthorizeDevice::kDeauthorizationAccountIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientDeauthorizeDevice::CMsgClientDeauthorizeDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientDeauthorizeDevice)
}
CMsgClientDeauthorizeDevice::CMsgClientDeauthorizeDevice(const CMsgClientDeauthorizeDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&deauthorization_account_id_, &from.deauthorization_account_id_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&deauthorization_account_id_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientDeauthorizeDevice)
}

void CMsgClientDeauthorizeDevice::SharedCtor() {
  _cached_size_ = 0;
  deauthorization_account_id_ = 0u;
  eresult_ = 2;
}

CMsgClientDeauthorizeDevice::~CMsgClientDeauthorizeDevice() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientDeauthorizeDevice)
  SharedDtor();
}

void CMsgClientDeauthorizeDevice::SharedDtor() {
}

void CMsgClientDeauthorizeDevice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientDeauthorizeDevice::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientDeauthorizeDevice& CMsgClientDeauthorizeDevice::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientDeauthorizeDevice* CMsgClientDeauthorizeDevice::New(::google::protobuf::Arena* arena) const {
  CMsgClientDeauthorizeDevice* n = new CMsgClientDeauthorizeDevice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientDeauthorizeDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientDeauthorizeDevice)
  if (_has_bits_[0 / 32] & 3u) {
    deauthorization_account_id_ = 0u;
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientDeauthorizeDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientDeauthorizeDevice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 deauthorization_account_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_deauthorization_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &deauthorization_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientDeauthorizeDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientDeauthorizeDevice)
  return false;
#undef DO_
}

void CMsgClientDeauthorizeDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientDeauthorizeDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional uint32 deauthorization_account_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->deauthorization_account_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientDeauthorizeDevice)
}

::google::protobuf::uint8* CMsgClientDeauthorizeDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientDeauthorizeDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional uint32 deauthorization_account_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->deauthorization_account_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientDeauthorizeDevice)
  return target;
}

size_t CMsgClientDeauthorizeDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientDeauthorizeDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 deauthorization_account_id = 2;
    if (has_deauthorization_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->deauthorization_account_id());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientDeauthorizeDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientDeauthorizeDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientDeauthorizeDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientDeauthorizeDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientDeauthorizeDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientDeauthorizeDevice)
    MergeFrom(*source);
  }
}

void CMsgClientDeauthorizeDevice::MergeFrom(const CMsgClientDeauthorizeDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientDeauthorizeDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      deauthorization_account_id_ = from.deauthorization_account_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientDeauthorizeDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientDeauthorizeDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientDeauthorizeDevice::CopyFrom(const CMsgClientDeauthorizeDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientDeauthorizeDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientDeauthorizeDevice::IsInitialized() const {
  return true;
}

void CMsgClientDeauthorizeDevice::Swap(CMsgClientDeauthorizeDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientDeauthorizeDevice::InternalSwap(CMsgClientDeauthorizeDevice* other) {
  std::swap(deauthorization_account_id_, other->deauthorization_account_id_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientDeauthorizeDevice::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientDeauthorizeDevice

// optional int32 eresult = 1 [default = 2];
bool CMsgClientDeauthorizeDevice::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientDeauthorizeDevice::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientDeauthorizeDevice::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientDeauthorizeDevice::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientDeauthorizeDevice::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDeauthorizeDevice.eresult)
  return eresult_;
}
void CMsgClientDeauthorizeDevice::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDeauthorizeDevice.eresult)
}

// optional uint32 deauthorization_account_id = 2;
bool CMsgClientDeauthorizeDevice::has_deauthorization_account_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientDeauthorizeDevice::set_has_deauthorization_account_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientDeauthorizeDevice::clear_has_deauthorization_account_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientDeauthorizeDevice::clear_deauthorization_account_id() {
  deauthorization_account_id_ = 0u;
  clear_has_deauthorization_account_id();
}
::google::protobuf::uint32 CMsgClientDeauthorizeDevice::deauthorization_account_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDeauthorizeDevice.deauthorization_account_id)
  return deauthorization_account_id_;
}
void CMsgClientDeauthorizeDevice::set_deauthorization_account_id(::google::protobuf::uint32 value) {
  set_has_deauthorization_account_id();
  deauthorization_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDeauthorizeDevice.deauthorization_account_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUseLocalDeviceAuthorizations_DeviceToken::kOwnerAccountIdFieldNumber;
const int CMsgClientUseLocalDeviceAuthorizations_DeviceToken::kTokenIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUseLocalDeviceAuthorizations_DeviceToken::CMsgClientUseLocalDeviceAuthorizations_DeviceToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
}
CMsgClientUseLocalDeviceAuthorizations_DeviceToken::CMsgClientUseLocalDeviceAuthorizations_DeviceToken(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&token_id_, &from.token_id_,
    reinterpret_cast<char*>(&owner_account_id_) -
    reinterpret_cast<char*>(&token_id_) + sizeof(owner_account_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&token_id_, 0, reinterpret_cast<char*>(&owner_account_id_) -
    reinterpret_cast<char*>(&token_id_) + sizeof(owner_account_id_));
}

CMsgClientUseLocalDeviceAuthorizations_DeviceToken::~CMsgClientUseLocalDeviceAuthorizations_DeviceToken() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  SharedDtor();
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::SharedDtor() {
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUseLocalDeviceAuthorizations_DeviceToken::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& CMsgClientUseLocalDeviceAuthorizations_DeviceToken::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUseLocalDeviceAuthorizations_DeviceToken* CMsgClientUseLocalDeviceAuthorizations_DeviceToken::New(::google::protobuf::Arena* arena) const {
  CMsgClientUseLocalDeviceAuthorizations_DeviceToken* n = new CMsgClientUseLocalDeviceAuthorizations_DeviceToken;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&token_id_, 0, reinterpret_cast<char*>(&owner_account_id_) -
      reinterpret_cast<char*>(&token_id_) + sizeof(owner_account_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUseLocalDeviceAuthorizations_DeviceToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 owner_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_owner_account_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_account_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 token_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_token_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &token_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  return false;
#undef DO_
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->owner_account_id(), output);
  }

  // optional uint64 token_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->token_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
}

::google::protobuf::uint8* CMsgClientUseLocalDeviceAuthorizations_DeviceToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_account_id = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->owner_account_id(), target);
  }

  // optional uint64 token_id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->token_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  return target;
}

size_t CMsgClientUseLocalDeviceAuthorizations_DeviceToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint64 token_id = 2;
    if (has_token_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->token_id());
    }

    // optional uint32 owner_account_id = 1;
    if (has_owner_account_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_account_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUseLocalDeviceAuthorizations_DeviceToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUseLocalDeviceAuthorizations_DeviceToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
    MergeFrom(*source);
  }
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::MergeFrom(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      token_id_ = from.token_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_account_id_ = from.owner_account_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::CopyFrom(const CMsgClientUseLocalDeviceAuthorizations_DeviceToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUseLocalDeviceAuthorizations_DeviceToken::IsInitialized() const {
  return true;
}

void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::Swap(CMsgClientUseLocalDeviceAuthorizations_DeviceToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::InternalSwap(CMsgClientUseLocalDeviceAuthorizations_DeviceToken* other) {
  std::swap(token_id_, other->token_id_);
  std::swap(owner_account_id_, other->owner_account_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUseLocalDeviceAuthorizations_DeviceToken::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUseLocalDeviceAuthorizations_DeviceToken

// optional uint32 owner_account_id = 1;
bool CMsgClientUseLocalDeviceAuthorizations_DeviceToken::has_owner_account_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::set_has_owner_account_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::clear_has_owner_account_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::clear_owner_account_id() {
  owner_account_id_ = 0u;
  clear_has_owner_account_id();
}
::google::protobuf::uint32 CMsgClientUseLocalDeviceAuthorizations_DeviceToken::owner_account_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken.owner_account_id)
  return owner_account_id_;
}
void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::set_owner_account_id(::google::protobuf::uint32 value) {
  set_has_owner_account_id();
  owner_account_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken.owner_account_id)
}

// optional uint64 token_id = 2;
bool CMsgClientUseLocalDeviceAuthorizations_DeviceToken::has_token_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::set_has_token_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::clear_has_token_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::clear_token_id() {
  token_id_ = GOOGLE_ULONGLONG(0);
  clear_has_token_id();
}
::google::protobuf::uint64 CMsgClientUseLocalDeviceAuthorizations_DeviceToken::token_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken.token_id)
  return token_id_;
}
void CMsgClientUseLocalDeviceAuthorizations_DeviceToken::set_token_id(::google::protobuf::uint64 value) {
  set_has_token_id();
  token_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken.token_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientUseLocalDeviceAuthorizations::kAuthorizationAccountIdFieldNumber;
const int CMsgClientUseLocalDeviceAuthorizations::kDeviceTokensFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientUseLocalDeviceAuthorizations::CMsgClientUseLocalDeviceAuthorizations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
}
CMsgClientUseLocalDeviceAuthorizations::CMsgClientUseLocalDeviceAuthorizations(const CMsgClientUseLocalDeviceAuthorizations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      authorization_account_id_(from.authorization_account_id_),
      device_tokens_(from.device_tokens_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
}

void CMsgClientUseLocalDeviceAuthorizations::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientUseLocalDeviceAuthorizations::~CMsgClientUseLocalDeviceAuthorizations() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  SharedDtor();
}

void CMsgClientUseLocalDeviceAuthorizations::SharedDtor() {
}

void CMsgClientUseLocalDeviceAuthorizations::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientUseLocalDeviceAuthorizations::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientUseLocalDeviceAuthorizations& CMsgClientUseLocalDeviceAuthorizations::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientUseLocalDeviceAuthorizations* CMsgClientUseLocalDeviceAuthorizations::New(::google::protobuf::Arena* arena) const {
  CMsgClientUseLocalDeviceAuthorizations* n = new CMsgClientUseLocalDeviceAuthorizations;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientUseLocalDeviceAuthorizations::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  authorization_account_id_.Clear();
  device_tokens_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientUseLocalDeviceAuthorizations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 authorization_account_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_authorization_account_id())));
        } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                   static_cast< ::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_authorization_account_id())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_device_tokens()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  return false;
#undef DO_
}

void CMsgClientUseLocalDeviceAuthorizations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 authorization_account_id = 1;
  for (int i = 0, n = this->authorization_account_id_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->authorization_account_id(i), output);
  }

  // repeated .proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
  for (unsigned int i = 0, n = this->device_tokens_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->device_tokens(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
}

::google::protobuf::uint8* CMsgClientUseLocalDeviceAuthorizations::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated uint32 authorization_account_id = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(1, this->authorization_account_id_, target);

  // repeated .proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
  for (unsigned int i = 0, n = this->device_tokens_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->device_tokens(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  return target;
}

size_t CMsgClientUseLocalDeviceAuthorizations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 authorization_account_id = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->authorization_account_id_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->authorization_account_id_size());
    total_size += data_size;
  }

  // repeated .proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
  {
    unsigned int count = this->device_tokens_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->device_tokens(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientUseLocalDeviceAuthorizations::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientUseLocalDeviceAuthorizations* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientUseLocalDeviceAuthorizations>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
    MergeFrom(*source);
  }
}

void CMsgClientUseLocalDeviceAuthorizations::MergeFrom(const CMsgClientUseLocalDeviceAuthorizations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  authorization_account_id_.MergeFrom(from.authorization_account_id_);
  device_tokens_.MergeFrom(from.device_tokens_);
}

void CMsgClientUseLocalDeviceAuthorizations::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientUseLocalDeviceAuthorizations::CopyFrom(const CMsgClientUseLocalDeviceAuthorizations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientUseLocalDeviceAuthorizations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientUseLocalDeviceAuthorizations::IsInitialized() const {
  return true;
}

void CMsgClientUseLocalDeviceAuthorizations::Swap(CMsgClientUseLocalDeviceAuthorizations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientUseLocalDeviceAuthorizations::InternalSwap(CMsgClientUseLocalDeviceAuthorizations* other) {
  authorization_account_id_.InternalSwap(&other->authorization_account_id_);
  device_tokens_.InternalSwap(&other->device_tokens_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientUseLocalDeviceAuthorizations::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientUseLocalDeviceAuthorizations

// repeated uint32 authorization_account_id = 1;
int CMsgClientUseLocalDeviceAuthorizations::authorization_account_id_size() const {
  return authorization_account_id_.size();
}
void CMsgClientUseLocalDeviceAuthorizations::clear_authorization_account_id() {
  authorization_account_id_.Clear();
}
::google::protobuf::uint32 CMsgClientUseLocalDeviceAuthorizations::authorization_account_id(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUseLocalDeviceAuthorizations.authorization_account_id)
  return authorization_account_id_.Get(index);
}
void CMsgClientUseLocalDeviceAuthorizations::set_authorization_account_id(int index, ::google::protobuf::uint32 value) {
  authorization_account_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientUseLocalDeviceAuthorizations.authorization_account_id)
}
void CMsgClientUseLocalDeviceAuthorizations::add_authorization_account_id(::google::protobuf::uint32 value) {
  authorization_account_id_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUseLocalDeviceAuthorizations.authorization_account_id)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgClientUseLocalDeviceAuthorizations::authorization_account_id() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUseLocalDeviceAuthorizations.authorization_account_id)
  return authorization_account_id_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgClientUseLocalDeviceAuthorizations::mutable_authorization_account_id() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUseLocalDeviceAuthorizations.authorization_account_id)
  return &authorization_account_id_;
}

// repeated .proto.steam.CMsgClientUseLocalDeviceAuthorizations.DeviceToken device_tokens = 2;
int CMsgClientUseLocalDeviceAuthorizations::device_tokens_size() const {
  return device_tokens_.size();
}
void CMsgClientUseLocalDeviceAuthorizations::clear_device_tokens() {
  device_tokens_.Clear();
}
const ::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken& CMsgClientUseLocalDeviceAuthorizations::device_tokens(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientUseLocalDeviceAuthorizations.device_tokens)
  return device_tokens_.Get(index);
}
::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* CMsgClientUseLocalDeviceAuthorizations::mutable_device_tokens(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientUseLocalDeviceAuthorizations.device_tokens)
  return device_tokens_.Mutable(index);
}
::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken* CMsgClientUseLocalDeviceAuthorizations::add_device_tokens() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientUseLocalDeviceAuthorizations.device_tokens)
  return device_tokens_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken >*
CMsgClientUseLocalDeviceAuthorizations::mutable_device_tokens() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientUseLocalDeviceAuthorizations.device_tokens)
  return &device_tokens_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientUseLocalDeviceAuthorizations_DeviceToken >&
CMsgClientUseLocalDeviceAuthorizations::device_tokens() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientUseLocalDeviceAuthorizations.device_tokens)
  return device_tokens_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetAuthorizedDevices::CMsgClientGetAuthorizedDevices()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetAuthorizedDevices)
}
CMsgClientGetAuthorizedDevices::CMsgClientGetAuthorizedDevices(const CMsgClientGetAuthorizedDevices& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetAuthorizedDevices)
}

void CMsgClientGetAuthorizedDevices::SharedCtor() {
  _cached_size_ = 0;
}

CMsgClientGetAuthorizedDevices::~CMsgClientGetAuthorizedDevices() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetAuthorizedDevices)
  SharedDtor();
}

void CMsgClientGetAuthorizedDevices::SharedDtor() {
}

void CMsgClientGetAuthorizedDevices::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientGetAuthorizedDevices::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetAuthorizedDevices& CMsgClientGetAuthorizedDevices::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientGetAuthorizedDevices* CMsgClientGetAuthorizedDevices::New(::google::protobuf::Arena* arena) const {
  CMsgClientGetAuthorizedDevices* n = new CMsgClientGetAuthorizedDevices;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientGetAuthorizedDevices::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetAuthorizedDevices)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetAuthorizedDevices::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetAuthorizedDevices)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetAuthorizedDevices)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetAuthorizedDevices)
  return false;
#undef DO_
}

void CMsgClientGetAuthorizedDevices::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetAuthorizedDevices)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetAuthorizedDevices)
}

::google::protobuf::uint8* CMsgClientGetAuthorizedDevices::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetAuthorizedDevices)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetAuthorizedDevices)
  return target;
}

size_t CMsgClientGetAuthorizedDevices::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetAuthorizedDevices)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientGetAuthorizedDevices::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetAuthorizedDevices)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetAuthorizedDevices* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetAuthorizedDevices>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetAuthorizedDevices)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetAuthorizedDevices)
    MergeFrom(*source);
  }
}

void CMsgClientGetAuthorizedDevices::MergeFrom(const CMsgClientGetAuthorizedDevices& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetAuthorizedDevices)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgClientGetAuthorizedDevices::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetAuthorizedDevices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetAuthorizedDevices::CopyFrom(const CMsgClientGetAuthorizedDevices& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetAuthorizedDevices)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetAuthorizedDevices::IsInitialized() const {
  return true;
}

void CMsgClientGetAuthorizedDevices::Swap(CMsgClientGetAuthorizedDevices* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetAuthorizedDevices::InternalSwap(CMsgClientGetAuthorizedDevices* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientGetAuthorizedDevices::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientGetAuthorizedDevices

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kAuthDeviceTokenFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kDeviceNameFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kLastAccessTimeFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kBorrowerIdFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kIsPendingFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::kAppPlayedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
}
CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_device_name()) {
    device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
  }
  ::memcpy(&auth_device_token_, &from.auth_device_token_,
    reinterpret_cast<char*>(&app_played_) -
    reinterpret_cast<char*>(&auth_device_token_) + sizeof(app_played_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::SharedCtor() {
  _cached_size_ = 0;
  device_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&auth_device_token_, 0, reinterpret_cast<char*>(&app_played_) -
    reinterpret_cast<char*>(&auth_device_token_) + sizeof(app_played_));
}

CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::~CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  SharedDtor();
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::SharedDtor() {
  device_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::New(::google::protobuf::Arena* arena) const {
  CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* n = new CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  if (has_device_name()) {
    GOOGLE_DCHECK(!device_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*device_name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 62u) {
    ::memset(&auth_device_token_, 0, reinterpret_cast<char*>(&app_played_) -
      reinterpret_cast<char*>(&auth_device_token_) + sizeof(app_played_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 auth_device_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_auth_device_token();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &auth_device_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string device_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_device_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->device_name().data(), this->device_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_access_time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_last_access_time();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_access_time_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 borrower_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_borrower_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &borrower_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_pending = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_is_pending();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_pending_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 app_played = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_app_played();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_played_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  return false;
#undef DO_
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 auth_device_token = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->auth_device_token(), output);
  }

  // optional string device_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_name().data(), this->device_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->device_name(), output);
  }

  // optional uint32 last_access_time = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->last_access_time(), output);
  }

  // optional uint32 borrower_id = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->borrower_id(), output);
  }

  // optional bool is_pending = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->is_pending(), output);
  }

  // optional uint32 app_played = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->app_played(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
}

::google::protobuf::uint8* CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint64 auth_device_token = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->auth_device_token(), target);
  }

  // optional string device_name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->device_name().data(), this->device_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->device_name(), target);
  }

  // optional uint32 last_access_time = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->last_access_time(), target);
  }

  // optional uint32 borrower_id = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->borrower_id(), target);
  }

  // optional bool is_pending = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->is_pending(), target);
  }

  // optional uint32 app_played = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->app_played(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  return target;
}

size_t CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string device_name = 2;
    if (has_device_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->device_name());
    }

    // optional uint64 auth_device_token = 1;
    if (has_auth_device_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->auth_device_token());
    }

    // optional uint32 last_access_time = 3;
    if (has_last_access_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_access_time());
    }

    // optional uint32 borrower_id = 4;
    if (has_borrower_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->borrower_id());
    }

    // optional bool is_pending = 5;
    if (has_is_pending()) {
      total_size += 1 + 1;
    }

    // optional uint32 app_played = 6;
    if (has_app_played()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_played());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
    MergeFrom(*source);
  }
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::MergeFrom(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_device_name();
      device_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.device_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      auth_device_token_ = from.auth_device_token_;
    }
    if (cached_has_bits & 0x00000004u) {
      last_access_time_ = from.last_access_time_;
    }
    if (cached_has_bits & 0x00000008u) {
      borrower_id_ = from.borrower_id_;
    }
    if (cached_has_bits & 0x00000010u) {
      is_pending_ = from.is_pending_;
    }
    if (cached_has_bits & 0x00000020u) {
      app_played_ = from.app_played_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::CopyFrom(const CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::IsInitialized() const {
  return true;
}

void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::Swap(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::InternalSwap(CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* other) {
  device_name_.Swap(&other->device_name_);
  std::swap(auth_device_token_, other->auth_device_token_);
  std::swap(last_access_time_, other->last_access_time_);
  std::swap(borrower_id_, other->borrower_id_);
  std::swap(is_pending_, other->is_pending_);
  std::swap(app_played_, other->app_played_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice

// optional uint64 auth_device_token = 1;
bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_auth_device_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_has_auth_device_token() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_has_auth_device_token() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_auth_device_token() {
  auth_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_auth_device_token();
}
::google::protobuf::uint64 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::auth_device_token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.auth_device_token)
  return auth_device_token_;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_auth_device_token(::google::protobuf::uint64 value) {
  set_has_auth_device_token();
  auth_device_token_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.auth_device_token)
}

// optional string device_name = 2;
bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_device_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_has_device_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_has_device_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_device_name() {
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device_name();
}
const ::std::string& CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::device_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
  return device_name_.GetNoArena();
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_device_name(const ::std::string& value) {
  set_has_device_name();
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
}
#if LANG_CXX11
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_device_name(::std::string&& value) {
  set_has_device_name();
  device_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
}
#endif
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_device_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_device_name();
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_device_name(const char* value, size_t size) {
  set_has_device_name();
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
}
::std::string* CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::mutable_device_name() {
  set_has_device_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
  return device_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::release_device_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
  clear_has_device_name();
  return device_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_allocated_device_name(::std::string* device_name) {
  if (device_name != NULL) {
    set_has_device_name();
  } else {
    clear_has_device_name();
  }
  device_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.device_name)
}

// optional uint32 last_access_time = 3;
bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_last_access_time() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_has_last_access_time() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_has_last_access_time() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_last_access_time() {
  last_access_time_ = 0u;
  clear_has_last_access_time();
}
::google::protobuf::uint32 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::last_access_time() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.last_access_time)
  return last_access_time_;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_last_access_time(::google::protobuf::uint32 value) {
  set_has_last_access_time();
  last_access_time_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.last_access_time)
}

// optional uint32 borrower_id = 4;
bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_borrower_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_has_borrower_id() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_has_borrower_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_borrower_id() {
  borrower_id_ = 0u;
  clear_has_borrower_id();
}
::google::protobuf::uint32 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::borrower_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.borrower_id)
  return borrower_id_;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_borrower_id(::google::protobuf::uint32 value) {
  set_has_borrower_id();
  borrower_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.borrower_id)
}

// optional bool is_pending = 5;
bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_is_pending() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_has_is_pending() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_has_is_pending() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_is_pending() {
  is_pending_ = false;
  clear_has_is_pending();
}
bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::is_pending() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.is_pending)
  return is_pending_;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_is_pending(bool value) {
  set_has_is_pending();
  is_pending_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.is_pending)
}

// optional uint32 app_played = 6;
bool CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::has_app_played() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_has_app_played() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_has_app_played() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::clear_app_played() {
  app_played_ = 0u;
  clear_has_app_played();
}
::google::protobuf::uint32 CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::app_played() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.app_played)
  return app_played_;
}
void CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice::set_app_played(::google::protobuf::uint32 value) {
  set_has_app_played();
  app_played_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice.app_played)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientGetAuthorizedDevicesResponse::kEresultFieldNumber;
const int CMsgClientGetAuthorizedDevicesResponse::kAuthorizedDeviceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientGetAuthorizedDevicesResponse::CMsgClientGetAuthorizedDevicesResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
}
CMsgClientGetAuthorizedDevicesResponse::CMsgClientGetAuthorizedDevicesResponse(const CMsgClientGetAuthorizedDevicesResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      authorized_device_(from.authorized_device_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
}

void CMsgClientGetAuthorizedDevicesResponse::SharedCtor() {
  _cached_size_ = 0;
  eresult_ = 2;
}

CMsgClientGetAuthorizedDevicesResponse::~CMsgClientGetAuthorizedDevicesResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  SharedDtor();
}

void CMsgClientGetAuthorizedDevicesResponse::SharedDtor() {
}

void CMsgClientGetAuthorizedDevicesResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientGetAuthorizedDevicesResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientGetAuthorizedDevicesResponse& CMsgClientGetAuthorizedDevicesResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientGetAuthorizedDevicesResponse* CMsgClientGetAuthorizedDevicesResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientGetAuthorizedDevicesResponse* n = new CMsgClientGetAuthorizedDevicesResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientGetAuthorizedDevicesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  authorized_device_.Clear();
  eresult_ = 2;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientGetAuthorizedDevicesResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_authorized_device()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  return false;
#undef DO_
}

void CMsgClientGetAuthorizedDevicesResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // repeated .proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
  for (unsigned int i = 0, n = this->authorized_device_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->authorized_device(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
}

::google::protobuf::uint8* CMsgClientGetAuthorizedDevicesResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // repeated .proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
  for (unsigned int i = 0, n = this->authorized_device_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->authorized_device(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  return target;
}

size_t CMsgClientGetAuthorizedDevicesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
  {
    unsigned int count = this->authorized_device_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->authorized_device(i));
    }
  }

  // optional int32 eresult = 1 [default = 2];
  if (has_eresult()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->eresult());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientGetAuthorizedDevicesResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientGetAuthorizedDevicesResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientGetAuthorizedDevicesResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
    MergeFrom(*source);
  }
}

void CMsgClientGetAuthorizedDevicesResponse::MergeFrom(const CMsgClientGetAuthorizedDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  authorized_device_.MergeFrom(from.authorized_device_);
  if (from.has_eresult()) {
    set_eresult(from.eresult());
  }
}

void CMsgClientGetAuthorizedDevicesResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientGetAuthorizedDevicesResponse::CopyFrom(const CMsgClientGetAuthorizedDevicesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientGetAuthorizedDevicesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientGetAuthorizedDevicesResponse::IsInitialized() const {
  return true;
}

void CMsgClientGetAuthorizedDevicesResponse::Swap(CMsgClientGetAuthorizedDevicesResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientGetAuthorizedDevicesResponse::InternalSwap(CMsgClientGetAuthorizedDevicesResponse* other) {
  authorized_device_.InternalSwap(&other->authorized_device_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientGetAuthorizedDevicesResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientGetAuthorizedDevicesResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientGetAuthorizedDevicesResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientGetAuthorizedDevicesResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientGetAuthorizedDevicesResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientGetAuthorizedDevicesResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientGetAuthorizedDevicesResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetAuthorizedDevicesResponse.eresult)
  return eresult_;
}
void CMsgClientGetAuthorizedDevicesResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientGetAuthorizedDevicesResponse.eresult)
}

// repeated .proto.steam.CMsgClientGetAuthorizedDevicesResponse.AuthorizedDevice authorized_device = 2;
int CMsgClientGetAuthorizedDevicesResponse::authorized_device_size() const {
  return authorized_device_.size();
}
void CMsgClientGetAuthorizedDevicesResponse::clear_authorized_device() {
  authorized_device_.Clear();
}
const ::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice& CMsgClientGetAuthorizedDevicesResponse::authorized_device(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientGetAuthorizedDevicesResponse.authorized_device)
  return authorized_device_.Get(index);
}
::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* CMsgClientGetAuthorizedDevicesResponse::mutable_authorized_device(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientGetAuthorizedDevicesResponse.authorized_device)
  return authorized_device_.Mutable(index);
}
::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice* CMsgClientGetAuthorizedDevicesResponse::add_authorized_device() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientGetAuthorizedDevicesResponse.authorized_device)
  return authorized_device_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice >*
CMsgClientGetAuthorizedDevicesResponse::mutable_authorized_device() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientGetAuthorizedDevicesResponse.authorized_device)
  return &authorized_device_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientGetAuthorizedDevicesResponse_AuthorizedDevice >&
CMsgClientGetAuthorizedDevicesResponse::authorized_device() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientGetAuthorizedDevicesResponse.authorized_device)
  return authorized_device_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSharedLibraryLockStatus_LockedLibrary::kOwnerIdFieldNumber;
const int CMsgClientSharedLibraryLockStatus_LockedLibrary::kLockedByFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSharedLibraryLockStatus_LockedLibrary::CMsgClientSharedLibraryLockStatus_LockedLibrary()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
}
CMsgClientSharedLibraryLockStatus_LockedLibrary::CMsgClientSharedLibraryLockStatus_LockedLibrary(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&owner_id_, &from.owner_id_,
    reinterpret_cast<char*>(&locked_by_) -
    reinterpret_cast<char*>(&owner_id_) + sizeof(locked_by_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&owner_id_, 0, reinterpret_cast<char*>(&locked_by_) -
    reinterpret_cast<char*>(&owner_id_) + sizeof(locked_by_));
}

CMsgClientSharedLibraryLockStatus_LockedLibrary::~CMsgClientSharedLibraryLockStatus_LockedLibrary() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  SharedDtor();
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::SharedDtor() {
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientSharedLibraryLockStatus_LockedLibrary::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSharedLibraryLockStatus_LockedLibrary& CMsgClientSharedLibraryLockStatus_LockedLibrary::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientSharedLibraryLockStatus_LockedLibrary* CMsgClientSharedLibraryLockStatus_LockedLibrary::New(::google::protobuf::Arena* arena) const {
  CMsgClientSharedLibraryLockStatus_LockedLibrary* n = new CMsgClientSharedLibraryLockStatus_LockedLibrary;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&owner_id_, 0, reinterpret_cast<char*>(&locked_by_) -
      reinterpret_cast<char*>(&owner_id_) + sizeof(locked_by_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSharedLibraryLockStatus_LockedLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 owner_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_owner_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 locked_by = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_locked_by();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &locked_by_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  return false;
#undef DO_
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->owner_id(), output);
  }

  // optional uint32 locked_by = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->locked_by(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
}

::google::protobuf::uint8* CMsgClientSharedLibraryLockStatus_LockedLibrary::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 owner_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->owner_id(), target);
  }

  // optional uint32 locked_by = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->locked_by(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  return target;
}

size_t CMsgClientSharedLibraryLockStatus_LockedLibrary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 owner_id = 1;
    if (has_owner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_id());
    }

    // optional uint32 locked_by = 2;
    if (has_locked_by()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->locked_by());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSharedLibraryLockStatus_LockedLibrary* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSharedLibraryLockStatus_LockedLibrary>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
    MergeFrom(*source);
  }
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::MergeFrom(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      owner_id_ = from.owner_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      locked_by_ = from.locked_by_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::CopyFrom(const CMsgClientSharedLibraryLockStatus_LockedLibrary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSharedLibraryLockStatus_LockedLibrary::IsInitialized() const {
  return true;
}

void CMsgClientSharedLibraryLockStatus_LockedLibrary::Swap(CMsgClientSharedLibraryLockStatus_LockedLibrary* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSharedLibraryLockStatus_LockedLibrary::InternalSwap(CMsgClientSharedLibraryLockStatus_LockedLibrary* other) {
  std::swap(owner_id_, other->owner_id_);
  std::swap(locked_by_, other->locked_by_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientSharedLibraryLockStatus_LockedLibrary::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientSharedLibraryLockStatus_LockedLibrary

// optional uint32 owner_id = 1;
bool CMsgClientSharedLibraryLockStatus_LockedLibrary::has_owner_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientSharedLibraryLockStatus_LockedLibrary::set_has_owner_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientSharedLibraryLockStatus_LockedLibrary::clear_has_owner_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientSharedLibraryLockStatus_LockedLibrary::clear_owner_id() {
  owner_id_ = 0u;
  clear_has_owner_id();
}
::google::protobuf::uint32 CMsgClientSharedLibraryLockStatus_LockedLibrary::owner_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary.owner_id)
  return owner_id_;
}
void CMsgClientSharedLibraryLockStatus_LockedLibrary::set_owner_id(::google::protobuf::uint32 value) {
  set_has_owner_id();
  owner_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary.owner_id)
}

// optional uint32 locked_by = 2;
bool CMsgClientSharedLibraryLockStatus_LockedLibrary::has_locked_by() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientSharedLibraryLockStatus_LockedLibrary::set_has_locked_by() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientSharedLibraryLockStatus_LockedLibrary::clear_has_locked_by() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientSharedLibraryLockStatus_LockedLibrary::clear_locked_by() {
  locked_by_ = 0u;
  clear_has_locked_by();
}
::google::protobuf::uint32 CMsgClientSharedLibraryLockStatus_LockedLibrary::locked_by() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary.locked_by)
  return locked_by_;
}
void CMsgClientSharedLibraryLockStatus_LockedLibrary::set_locked_by(::google::protobuf::uint32 value) {
  set_has_locked_by();
  locked_by_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary.locked_by)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSharedLibraryLockStatus::kLockedLibraryFieldNumber;
const int CMsgClientSharedLibraryLockStatus::kOwnLibraryLockedByFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSharedLibraryLockStatus::CMsgClientSharedLibraryLockStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientSharedLibraryLockStatus)
}
CMsgClientSharedLibraryLockStatus::CMsgClientSharedLibraryLockStatus(const CMsgClientSharedLibraryLockStatus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      locked_library_(from.locked_library_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  own_library_locked_by_ = from.own_library_locked_by_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientSharedLibraryLockStatus)
}

void CMsgClientSharedLibraryLockStatus::SharedCtor() {
  _cached_size_ = 0;
  own_library_locked_by_ = 0u;
}

CMsgClientSharedLibraryLockStatus::~CMsgClientSharedLibraryLockStatus() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientSharedLibraryLockStatus)
  SharedDtor();
}

void CMsgClientSharedLibraryLockStatus::SharedDtor() {
}

void CMsgClientSharedLibraryLockStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientSharedLibraryLockStatus::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSharedLibraryLockStatus& CMsgClientSharedLibraryLockStatus::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientSharedLibraryLockStatus* CMsgClientSharedLibraryLockStatus::New(::google::protobuf::Arena* arena) const {
  CMsgClientSharedLibraryLockStatus* n = new CMsgClientSharedLibraryLockStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientSharedLibraryLockStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  locked_library_.Clear();
  own_library_locked_by_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSharedLibraryLockStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_locked_library()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 own_library_locked_by = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_own_library_locked_by();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &own_library_locked_by_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientSharedLibraryLockStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientSharedLibraryLockStatus)
  return false;
#undef DO_
}

void CMsgClientSharedLibraryLockStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
  for (unsigned int i = 0, n = this->locked_library_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->locked_library(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 own_library_locked_by = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->own_library_locked_by(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientSharedLibraryLockStatus)
}

::google::protobuf::uint8* CMsgClientSharedLibraryLockStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
  for (unsigned int i = 0, n = this->locked_library_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->locked_library(i), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // optional uint32 own_library_locked_by = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->own_library_locked_by(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientSharedLibraryLockStatus)
  return target;
}

size_t CMsgClientSharedLibraryLockStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
  {
    unsigned int count = this->locked_library_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->locked_library(i));
    }
  }

  // optional uint32 own_library_locked_by = 2;
  if (has_own_library_locked_by()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->own_library_locked_by());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientSharedLibraryLockStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSharedLibraryLockStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSharedLibraryLockStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientSharedLibraryLockStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientSharedLibraryLockStatus)
    MergeFrom(*source);
  }
}

void CMsgClientSharedLibraryLockStatus::MergeFrom(const CMsgClientSharedLibraryLockStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  locked_library_.MergeFrom(from.locked_library_);
  if (from.has_own_library_locked_by()) {
    set_own_library_locked_by(from.own_library_locked_by());
  }
}

void CMsgClientSharedLibraryLockStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSharedLibraryLockStatus::CopyFrom(const CMsgClientSharedLibraryLockStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientSharedLibraryLockStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSharedLibraryLockStatus::IsInitialized() const {
  return true;
}

void CMsgClientSharedLibraryLockStatus::Swap(CMsgClientSharedLibraryLockStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSharedLibraryLockStatus::InternalSwap(CMsgClientSharedLibraryLockStatus* other) {
  locked_library_.InternalSwap(&other->locked_library_);
  std::swap(own_library_locked_by_, other->own_library_locked_by_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientSharedLibraryLockStatus::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientSharedLibraryLockStatus

// repeated .proto.steam.CMsgClientSharedLibraryLockStatus.LockedLibrary locked_library = 1;
int CMsgClientSharedLibraryLockStatus::locked_library_size() const {
  return locked_library_.size();
}
void CMsgClientSharedLibraryLockStatus::clear_locked_library() {
  locked_library_.Clear();
}
const ::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary& CMsgClientSharedLibraryLockStatus::locked_library(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientSharedLibraryLockStatus.locked_library)
  return locked_library_.Get(index);
}
::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary* CMsgClientSharedLibraryLockStatus::mutable_locked_library(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientSharedLibraryLockStatus.locked_library)
  return locked_library_.Mutable(index);
}
::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary* CMsgClientSharedLibraryLockStatus::add_locked_library() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientSharedLibraryLockStatus.locked_library)
  return locked_library_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary >*
CMsgClientSharedLibraryLockStatus::mutable_locked_library() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientSharedLibraryLockStatus.locked_library)
  return &locked_library_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientSharedLibraryLockStatus_LockedLibrary >&
CMsgClientSharedLibraryLockStatus::locked_library() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientSharedLibraryLockStatus.locked_library)
  return locked_library_;
}

// optional uint32 own_library_locked_by = 2;
bool CMsgClientSharedLibraryLockStatus::has_own_library_locked_by() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientSharedLibraryLockStatus::set_has_own_library_locked_by() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientSharedLibraryLockStatus::clear_has_own_library_locked_by() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientSharedLibraryLockStatus::clear_own_library_locked_by() {
  own_library_locked_by_ = 0u;
  clear_has_own_library_locked_by();
}
::google::protobuf::uint32 CMsgClientSharedLibraryLockStatus::own_library_locked_by() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientSharedLibraryLockStatus.own_library_locked_by)
  return own_library_locked_by_;
}
void CMsgClientSharedLibraryLockStatus::set_own_library_locked_by(::google::protobuf::uint32 value) {
  set_has_own_library_locked_by();
  own_library_locked_by_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientSharedLibraryLockStatus.own_library_locked_by)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSharedLibraryStopPlaying_StopApp::kAppIdFieldNumber;
const int CMsgClientSharedLibraryStopPlaying_StopApp::kOwnerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSharedLibraryStopPlaying_StopApp::CMsgClientSharedLibraryStopPlaying_StopApp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
}
CMsgClientSharedLibraryStopPlaying_StopApp::CMsgClientSharedLibraryStopPlaying_StopApp(const CMsgClientSharedLibraryStopPlaying_StopApp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&app_id_, &from.app_id_,
    reinterpret_cast<char*>(&owner_id_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(owner_id_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
}

void CMsgClientSharedLibraryStopPlaying_StopApp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&app_id_, 0, reinterpret_cast<char*>(&owner_id_) -
    reinterpret_cast<char*>(&app_id_) + sizeof(owner_id_));
}

CMsgClientSharedLibraryStopPlaying_StopApp::~CMsgClientSharedLibraryStopPlaying_StopApp() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  SharedDtor();
}

void CMsgClientSharedLibraryStopPlaying_StopApp::SharedDtor() {
}

void CMsgClientSharedLibraryStopPlaying_StopApp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientSharedLibraryStopPlaying_StopApp::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSharedLibraryStopPlaying_StopApp& CMsgClientSharedLibraryStopPlaying_StopApp::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientSharedLibraryStopPlaying_StopApp* CMsgClientSharedLibraryStopPlaying_StopApp::New(::google::protobuf::Arena* arena) const {
  CMsgClientSharedLibraryStopPlaying_StopApp* n = new CMsgClientSharedLibraryStopPlaying_StopApp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientSharedLibraryStopPlaying_StopApp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&app_id_, 0, reinterpret_cast<char*>(&owner_id_) -
      reinterpret_cast<char*>(&app_id_) + sizeof(owner_id_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSharedLibraryStopPlaying_StopApp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 app_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_app_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &app_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 owner_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_owner_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &owner_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  return false;
#undef DO_
}

void CMsgClientSharedLibraryStopPlaying_StopApp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->app_id(), output);
  }

  // optional uint32 owner_id = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->owner_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
}

::google::protobuf::uint8* CMsgClientSharedLibraryStopPlaying_StopApp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 app_id = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->app_id(), target);
  }

  // optional uint32 owner_id = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->owner_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  return target;
}

size_t CMsgClientSharedLibraryStopPlaying_StopApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 app_id = 1;
    if (has_app_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->app_id());
    }

    // optional uint32 owner_id = 2;
    if (has_owner_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->owner_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientSharedLibraryStopPlaying_StopApp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSharedLibraryStopPlaying_StopApp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSharedLibraryStopPlaying_StopApp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
    MergeFrom(*source);
  }
}

void CMsgClientSharedLibraryStopPlaying_StopApp::MergeFrom(const CMsgClientSharedLibraryStopPlaying_StopApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      app_id_ = from.app_id_;
    }
    if (cached_has_bits & 0x00000002u) {
      owner_id_ = from.owner_id_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientSharedLibraryStopPlaying_StopApp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSharedLibraryStopPlaying_StopApp::CopyFrom(const CMsgClientSharedLibraryStopPlaying_StopApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSharedLibraryStopPlaying_StopApp::IsInitialized() const {
  return true;
}

void CMsgClientSharedLibraryStopPlaying_StopApp::Swap(CMsgClientSharedLibraryStopPlaying_StopApp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSharedLibraryStopPlaying_StopApp::InternalSwap(CMsgClientSharedLibraryStopPlaying_StopApp* other) {
  std::swap(app_id_, other->app_id_);
  std::swap(owner_id_, other->owner_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientSharedLibraryStopPlaying_StopApp::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientSharedLibraryStopPlaying_StopApp

// optional uint32 app_id = 1;
bool CMsgClientSharedLibraryStopPlaying_StopApp::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientSharedLibraryStopPlaying_StopApp::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientSharedLibraryStopPlaying_StopApp::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientSharedLibraryStopPlaying_StopApp::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
::google::protobuf::uint32 CMsgClientSharedLibraryStopPlaying_StopApp::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp.app_id)
  return app_id_;
}
void CMsgClientSharedLibraryStopPlaying_StopApp::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp.app_id)
}

// optional uint32 owner_id = 2;
bool CMsgClientSharedLibraryStopPlaying_StopApp::has_owner_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientSharedLibraryStopPlaying_StopApp::set_has_owner_id() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientSharedLibraryStopPlaying_StopApp::clear_has_owner_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientSharedLibraryStopPlaying_StopApp::clear_owner_id() {
  owner_id_ = 0u;
  clear_has_owner_id();
}
::google::protobuf::uint32 CMsgClientSharedLibraryStopPlaying_StopApp::owner_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp.owner_id)
  return owner_id_;
}
void CMsgClientSharedLibraryStopPlaying_StopApp::set_owner_id(::google::protobuf::uint32 value) {
  set_has_owner_id();
  owner_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp.owner_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientSharedLibraryStopPlaying::kSecondsLeftFieldNumber;
const int CMsgClientSharedLibraryStopPlaying::kStopAppsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientSharedLibraryStopPlaying::CMsgClientSharedLibraryStopPlaying()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientSharedLibraryStopPlaying)
}
CMsgClientSharedLibraryStopPlaying::CMsgClientSharedLibraryStopPlaying(const CMsgClientSharedLibraryStopPlaying& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      stop_apps_(from.stop_apps_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  seconds_left_ = from.seconds_left_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientSharedLibraryStopPlaying)
}

void CMsgClientSharedLibraryStopPlaying::SharedCtor() {
  _cached_size_ = 0;
  seconds_left_ = 0;
}

CMsgClientSharedLibraryStopPlaying::~CMsgClientSharedLibraryStopPlaying() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientSharedLibraryStopPlaying)
  SharedDtor();
}

void CMsgClientSharedLibraryStopPlaying::SharedDtor() {
}

void CMsgClientSharedLibraryStopPlaying::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientSharedLibraryStopPlaying::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientSharedLibraryStopPlaying& CMsgClientSharedLibraryStopPlaying::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientSharedLibraryStopPlaying* CMsgClientSharedLibraryStopPlaying::New(::google::protobuf::Arena* arena) const {
  CMsgClientSharedLibraryStopPlaying* n = new CMsgClientSharedLibraryStopPlaying;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientSharedLibraryStopPlaying::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  stop_apps_.Clear();
  seconds_left_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientSharedLibraryStopPlaying::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 seconds_left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_seconds_left();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &seconds_left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_stop_apps()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientSharedLibraryStopPlaying)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientSharedLibraryStopPlaying)
  return false;
#undef DO_
}

void CMsgClientSharedLibraryStopPlaying::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 seconds_left = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->seconds_left(), output);
  }

  // repeated .proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
  for (unsigned int i = 0, n = this->stop_apps_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->stop_apps(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientSharedLibraryStopPlaying)
}

::google::protobuf::uint8* CMsgClientSharedLibraryStopPlaying::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 seconds_left = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->seconds_left(), target);
  }

  // repeated .proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
  for (unsigned int i = 0, n = this->stop_apps_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->stop_apps(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientSharedLibraryStopPlaying)
  return target;
}

size_t CMsgClientSharedLibraryStopPlaying::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
  {
    unsigned int count = this->stop_apps_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->stop_apps(i));
    }
  }

  // optional int32 seconds_left = 1;
  if (has_seconds_left()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->seconds_left());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientSharedLibraryStopPlaying::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientSharedLibraryStopPlaying* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientSharedLibraryStopPlaying>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientSharedLibraryStopPlaying)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientSharedLibraryStopPlaying)
    MergeFrom(*source);
  }
}

void CMsgClientSharedLibraryStopPlaying::MergeFrom(const CMsgClientSharedLibraryStopPlaying& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stop_apps_.MergeFrom(from.stop_apps_);
  if (from.has_seconds_left()) {
    set_seconds_left(from.seconds_left());
  }
}

void CMsgClientSharedLibraryStopPlaying::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientSharedLibraryStopPlaying::CopyFrom(const CMsgClientSharedLibraryStopPlaying& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientSharedLibraryStopPlaying)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientSharedLibraryStopPlaying::IsInitialized() const {
  return true;
}

void CMsgClientSharedLibraryStopPlaying::Swap(CMsgClientSharedLibraryStopPlaying* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientSharedLibraryStopPlaying::InternalSwap(CMsgClientSharedLibraryStopPlaying* other) {
  stop_apps_.InternalSwap(&other->stop_apps_);
  std::swap(seconds_left_, other->seconds_left_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientSharedLibraryStopPlaying::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientSharedLibraryStopPlaying

// optional int32 seconds_left = 1;
bool CMsgClientSharedLibraryStopPlaying::has_seconds_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientSharedLibraryStopPlaying::set_has_seconds_left() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientSharedLibraryStopPlaying::clear_has_seconds_left() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientSharedLibraryStopPlaying::clear_seconds_left() {
  seconds_left_ = 0;
  clear_has_seconds_left();
}
::google::protobuf::int32 CMsgClientSharedLibraryStopPlaying::seconds_left() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientSharedLibraryStopPlaying.seconds_left)
  return seconds_left_;
}
void CMsgClientSharedLibraryStopPlaying::set_seconds_left(::google::protobuf::int32 value) {
  set_has_seconds_left();
  seconds_left_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientSharedLibraryStopPlaying.seconds_left)
}

// repeated .proto.steam.CMsgClientSharedLibraryStopPlaying.StopApp stop_apps = 2;
int CMsgClientSharedLibraryStopPlaying::stop_apps_size() const {
  return stop_apps_.size();
}
void CMsgClientSharedLibraryStopPlaying::clear_stop_apps() {
  stop_apps_.Clear();
}
const ::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp& CMsgClientSharedLibraryStopPlaying::stop_apps(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientSharedLibraryStopPlaying.stop_apps)
  return stop_apps_.Get(index);
}
::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp* CMsgClientSharedLibraryStopPlaying::mutable_stop_apps(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientSharedLibraryStopPlaying.stop_apps)
  return stop_apps_.Mutable(index);
}
::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp* CMsgClientSharedLibraryStopPlaying::add_stop_apps() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientSharedLibraryStopPlaying.stop_apps)
  return stop_apps_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp >*
CMsgClientSharedLibraryStopPlaying::mutable_stop_apps() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientSharedLibraryStopPlaying.stop_apps)
  return &stop_apps_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientSharedLibraryStopPlaying_StopApp >&
CMsgClientSharedLibraryStopPlaying::stop_apps() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientSharedLibraryStopPlaying.stop_apps)
  return stop_apps_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceCall::kSysidRoutingFieldNumber;
const int CMsgClientServiceCall::kCallHandleFieldNumber;
const int CMsgClientServiceCall::kModuleCrcFieldNumber;
const int CMsgClientServiceCall::kModuleHashFieldNumber;
const int CMsgClientServiceCall::kFunctionIdFieldNumber;
const int CMsgClientServiceCall::kCubOutputMaxFieldNumber;
const int CMsgClientServiceCall::kFlagsFieldNumber;
const int CMsgClientServiceCall::kCallparameterFieldNumber;
const int CMsgClientServiceCall::kPingOnlyFieldNumber;
const int CMsgClientServiceCall::kMaxOutstandingCallsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceCall::CMsgClientServiceCall()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientServiceCall)
}
CMsgClientServiceCall::CMsgClientServiceCall(const CMsgClientServiceCall& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sysid_routing()) {
    sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sysid_routing_);
  }
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_hash()) {
    module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
  }
  callparameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_callparameter()) {
    callparameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callparameter_);
  }
  ::memcpy(&call_handle_, &from.call_handle_,
    reinterpret_cast<char*>(&max_outstanding_calls_) -
    reinterpret_cast<char*>(&call_handle_) + sizeof(max_outstanding_calls_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientServiceCall)
}

void CMsgClientServiceCall::SharedCtor() {
  _cached_size_ = 0;
  sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callparameter_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_handle_, 0, reinterpret_cast<char*>(&max_outstanding_calls_) -
    reinterpret_cast<char*>(&call_handle_) + sizeof(max_outstanding_calls_));
}

CMsgClientServiceCall::~CMsgClientServiceCall() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientServiceCall)
  SharedDtor();
}

void CMsgClientServiceCall::SharedDtor() {
  sysid_routing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callparameter_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceCall::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientServiceCall::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientServiceCall& CMsgClientServiceCall::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientServiceCall* CMsgClientServiceCall::New(::google::protobuf::Arena* arena) const {
  CMsgClientServiceCall* n = new CMsgClientServiceCall;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientServiceCall::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientServiceCall)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_sysid_routing()) {
      GOOGLE_DCHECK(!sysid_routing_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sysid_routing_.UnsafeRawStringPointer())->clear();
    }
    if (has_module_hash()) {
      GOOGLE_DCHECK(!module_hash_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*module_hash_.UnsafeRawStringPointer())->clear();
    }
    if (has_callparameter()) {
      GOOGLE_DCHECK(!callparameter_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*callparameter_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 248u) {
    ::memset(&call_handle_, 0, reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&call_handle_) + sizeof(flags_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&ping_only_, 0, reinterpret_cast<char*>(&max_outstanding_calls_) -
      reinterpret_cast<char*>(&ping_only_) + sizeof(max_outstanding_calls_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientServiceCall::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientServiceCall)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sysid_routing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sysid_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 call_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_call_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &call_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 module_crc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_module_crc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes module_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_module_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 function_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_function_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &function_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cub_output_max = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_cub_output_max();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cub_output_max_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 flags = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_flags();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flags_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes callparameter = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_callparameter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool ping_only = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_ping_only();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ping_only_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 max_outstanding_calls = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_max_outstanding_calls();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &max_outstanding_calls_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientServiceCall)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientServiceCall)
  return false;
#undef DO_
}

void CMsgClientServiceCall::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientServiceCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sysid_routing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sysid_routing(), output);
  }

  // optional uint32 call_handle = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->call_handle(), output);
  }

  // optional uint32 module_crc = 3;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->module_crc(), output);
  }

  // optional bytes module_hash = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->module_hash(), output);
  }

  // optional uint32 function_id = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->function_id(), output);
  }

  // optional uint32 cub_output_max = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->cub_output_max(), output);
  }

  // optional uint32 flags = 7;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->flags(), output);
  }

  // optional bytes callparameter = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->callparameter(), output);
  }

  // optional bool ping_only = 9;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->ping_only(), output);
  }

  // optional uint32 max_outstanding_calls = 10;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->max_outstanding_calls(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientServiceCall)
}

::google::protobuf::uint8* CMsgClientServiceCall::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientServiceCall)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sysid_routing = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sysid_routing(), target);
  }

  // optional uint32 call_handle = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->call_handle(), target);
  }

  // optional uint32 module_crc = 3;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->module_crc(), target);
  }

  // optional bytes module_hash = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->module_hash(), target);
  }

  // optional uint32 function_id = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->function_id(), target);
  }

  // optional uint32 cub_output_max = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->cub_output_max(), target);
  }

  // optional uint32 flags = 7;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->flags(), target);
  }

  // optional bytes callparameter = 8;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->callparameter(), target);
  }

  // optional bool ping_only = 9;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->ping_only(), target);
  }

  // optional uint32 max_outstanding_calls = 10;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->max_outstanding_calls(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientServiceCall)
  return target;
}

size_t CMsgClientServiceCall::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientServiceCall)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes sysid_routing = 1;
    if (has_sysid_routing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sysid_routing());
    }

    // optional bytes module_hash = 4;
    if (has_module_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->module_hash());
    }

    // optional bytes callparameter = 8;
    if (has_callparameter()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->callparameter());
    }

    // optional uint32 call_handle = 2;
    if (has_call_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->call_handle());
    }

    // optional uint32 module_crc = 3;
    if (has_module_crc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->module_crc());
    }

    // optional uint32 function_id = 5;
    if (has_function_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->function_id());
    }

    // optional uint32 cub_output_max = 6;
    if (has_cub_output_max()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cub_output_max());
    }

    // optional uint32 flags = 7;
    if (has_flags()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->flags());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional bool ping_only = 9;
    if (has_ping_only()) {
      total_size += 1 + 1;
    }

    // optional uint32 max_outstanding_calls = 10;
    if (has_max_outstanding_calls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->max_outstanding_calls());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientServiceCall::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientServiceCall)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceCall* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientServiceCall>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientServiceCall)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientServiceCall)
    MergeFrom(*source);
  }
}

void CMsgClientServiceCall::MergeFrom(const CMsgClientServiceCall& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientServiceCall)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sysid_routing();
      sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sysid_routing_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_module_hash();
      module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_callparameter();
      callparameter_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callparameter_);
    }
    if (cached_has_bits & 0x00000008u) {
      call_handle_ = from.call_handle_;
    }
    if (cached_has_bits & 0x00000010u) {
      module_crc_ = from.module_crc_;
    }
    if (cached_has_bits & 0x00000020u) {
      function_id_ = from.function_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      cub_output_max_ = from.cub_output_max_;
    }
    if (cached_has_bits & 0x00000080u) {
      flags_ = from.flags_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 768u) {
    if (cached_has_bits & 0x00000100u) {
      ping_only_ = from.ping_only_;
    }
    if (cached_has_bits & 0x00000200u) {
      max_outstanding_calls_ = from.max_outstanding_calls_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientServiceCall::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientServiceCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceCall::CopyFrom(const CMsgClientServiceCall& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientServiceCall)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceCall::IsInitialized() const {
  return true;
}

void CMsgClientServiceCall::Swap(CMsgClientServiceCall* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceCall::InternalSwap(CMsgClientServiceCall* other) {
  sysid_routing_.Swap(&other->sysid_routing_);
  module_hash_.Swap(&other->module_hash_);
  callparameter_.Swap(&other->callparameter_);
  std::swap(call_handle_, other->call_handle_);
  std::swap(module_crc_, other->module_crc_);
  std::swap(function_id_, other->function_id_);
  std::swap(cub_output_max_, other->cub_output_max_);
  std::swap(flags_, other->flags_);
  std::swap(ping_only_, other->ping_only_);
  std::swap(max_outstanding_calls_, other->max_outstanding_calls_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientServiceCall::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientServiceCall

// optional bytes sysid_routing = 1;
bool CMsgClientServiceCall::has_sysid_routing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientServiceCall::set_has_sysid_routing() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientServiceCall::clear_has_sysid_routing() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientServiceCall::clear_sysid_routing() {
  sysid_routing_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sysid_routing();
}
const ::std::string& CMsgClientServiceCall::sysid_routing() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCall.sysid_routing)
  return sysid_routing_.GetNoArena();
}
void CMsgClientServiceCall::set_sysid_routing(const ::std::string& value) {
  set_has_sysid_routing();
  sysid_routing_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCall.sysid_routing)
}
#if LANG_CXX11
void CMsgClientServiceCall::set_sysid_routing(::std::string&& value) {
  set_has_sysid_routing();
  sysid_routing_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceCall.sysid_routing)
}
#endif
void CMsgClientServiceCall::set_sysid_routing(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sysid_routing();
  sysid_routing_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceCall.sysid_routing)
}
void CMsgClientServiceCall::set_sysid_routing(const void* value, size_t size) {
  set_has_sysid_routing();
  sysid_routing_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceCall.sysid_routing)
}
::std::string* CMsgClientServiceCall::mutable_sysid_routing() {
  set_has_sysid_routing();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceCall.sysid_routing)
  return sysid_routing_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceCall::release_sysid_routing() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceCall.sysid_routing)
  clear_has_sysid_routing();
  return sysid_routing_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceCall::set_allocated_sysid_routing(::std::string* sysid_routing) {
  if (sysid_routing != NULL) {
    set_has_sysid_routing();
  } else {
    clear_has_sysid_routing();
  }
  sysid_routing_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sysid_routing);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceCall.sysid_routing)
}

// optional uint32 call_handle = 2;
bool CMsgClientServiceCall::has_call_handle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientServiceCall::set_has_call_handle() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientServiceCall::clear_has_call_handle() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientServiceCall::clear_call_handle() {
  call_handle_ = 0u;
  clear_has_call_handle();
}
::google::protobuf::uint32 CMsgClientServiceCall::call_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCall.call_handle)
  return call_handle_;
}
void CMsgClientServiceCall::set_call_handle(::google::protobuf::uint32 value) {
  set_has_call_handle();
  call_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCall.call_handle)
}

// optional uint32 module_crc = 3;
bool CMsgClientServiceCall::has_module_crc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientServiceCall::set_has_module_crc() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientServiceCall::clear_has_module_crc() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientServiceCall::clear_module_crc() {
  module_crc_ = 0u;
  clear_has_module_crc();
}
::google::protobuf::uint32 CMsgClientServiceCall::module_crc() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCall.module_crc)
  return module_crc_;
}
void CMsgClientServiceCall::set_module_crc(::google::protobuf::uint32 value) {
  set_has_module_crc();
  module_crc_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCall.module_crc)
}

// optional bytes module_hash = 4;
bool CMsgClientServiceCall::has_module_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientServiceCall::set_has_module_hash() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientServiceCall::clear_has_module_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientServiceCall::clear_module_hash() {
  module_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_module_hash();
}
const ::std::string& CMsgClientServiceCall::module_hash() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCall.module_hash)
  return module_hash_.GetNoArena();
}
void CMsgClientServiceCall::set_module_hash(const ::std::string& value) {
  set_has_module_hash();
  module_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCall.module_hash)
}
#if LANG_CXX11
void CMsgClientServiceCall::set_module_hash(::std::string&& value) {
  set_has_module_hash();
  module_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceCall.module_hash)
}
#endif
void CMsgClientServiceCall::set_module_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_module_hash();
  module_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceCall.module_hash)
}
void CMsgClientServiceCall::set_module_hash(const void* value, size_t size) {
  set_has_module_hash();
  module_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceCall.module_hash)
}
::std::string* CMsgClientServiceCall::mutable_module_hash() {
  set_has_module_hash();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceCall.module_hash)
  return module_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceCall::release_module_hash() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceCall.module_hash)
  clear_has_module_hash();
  return module_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceCall::set_allocated_module_hash(::std::string* module_hash) {
  if (module_hash != NULL) {
    set_has_module_hash();
  } else {
    clear_has_module_hash();
  }
  module_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_hash);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceCall.module_hash)
}

// optional uint32 function_id = 5;
bool CMsgClientServiceCall::has_function_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientServiceCall::set_has_function_id() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientServiceCall::clear_has_function_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientServiceCall::clear_function_id() {
  function_id_ = 0u;
  clear_has_function_id();
}
::google::protobuf::uint32 CMsgClientServiceCall::function_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCall.function_id)
  return function_id_;
}
void CMsgClientServiceCall::set_function_id(::google::protobuf::uint32 value) {
  set_has_function_id();
  function_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCall.function_id)
}

// optional uint32 cub_output_max = 6;
bool CMsgClientServiceCall::has_cub_output_max() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientServiceCall::set_has_cub_output_max() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientServiceCall::clear_has_cub_output_max() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientServiceCall::clear_cub_output_max() {
  cub_output_max_ = 0u;
  clear_has_cub_output_max();
}
::google::protobuf::uint32 CMsgClientServiceCall::cub_output_max() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCall.cub_output_max)
  return cub_output_max_;
}
void CMsgClientServiceCall::set_cub_output_max(::google::protobuf::uint32 value) {
  set_has_cub_output_max();
  cub_output_max_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCall.cub_output_max)
}

// optional uint32 flags = 7;
bool CMsgClientServiceCall::has_flags() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgClientServiceCall::set_has_flags() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgClientServiceCall::clear_has_flags() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgClientServiceCall::clear_flags() {
  flags_ = 0u;
  clear_has_flags();
}
::google::protobuf::uint32 CMsgClientServiceCall::flags() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCall.flags)
  return flags_;
}
void CMsgClientServiceCall::set_flags(::google::protobuf::uint32 value) {
  set_has_flags();
  flags_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCall.flags)
}

// optional bytes callparameter = 8;
bool CMsgClientServiceCall::has_callparameter() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientServiceCall::set_has_callparameter() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientServiceCall::clear_has_callparameter() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientServiceCall::clear_callparameter() {
  callparameter_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_callparameter();
}
const ::std::string& CMsgClientServiceCall::callparameter() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCall.callparameter)
  return callparameter_.GetNoArena();
}
void CMsgClientServiceCall::set_callparameter(const ::std::string& value) {
  set_has_callparameter();
  callparameter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCall.callparameter)
}
#if LANG_CXX11
void CMsgClientServiceCall::set_callparameter(::std::string&& value) {
  set_has_callparameter();
  callparameter_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceCall.callparameter)
}
#endif
void CMsgClientServiceCall::set_callparameter(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_callparameter();
  callparameter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceCall.callparameter)
}
void CMsgClientServiceCall::set_callparameter(const void* value, size_t size) {
  set_has_callparameter();
  callparameter_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceCall.callparameter)
}
::std::string* CMsgClientServiceCall::mutable_callparameter() {
  set_has_callparameter();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceCall.callparameter)
  return callparameter_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceCall::release_callparameter() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceCall.callparameter)
  clear_has_callparameter();
  return callparameter_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceCall::set_allocated_callparameter(::std::string* callparameter) {
  if (callparameter != NULL) {
    set_has_callparameter();
  } else {
    clear_has_callparameter();
  }
  callparameter_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), callparameter);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceCall.callparameter)
}

// optional bool ping_only = 9;
bool CMsgClientServiceCall::has_ping_only() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgClientServiceCall::set_has_ping_only() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgClientServiceCall::clear_has_ping_only() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgClientServiceCall::clear_ping_only() {
  ping_only_ = false;
  clear_has_ping_only();
}
bool CMsgClientServiceCall::ping_only() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCall.ping_only)
  return ping_only_;
}
void CMsgClientServiceCall::set_ping_only(bool value) {
  set_has_ping_only();
  ping_only_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCall.ping_only)
}

// optional uint32 max_outstanding_calls = 10;
bool CMsgClientServiceCall::has_max_outstanding_calls() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CMsgClientServiceCall::set_has_max_outstanding_calls() {
  _has_bits_[0] |= 0x00000200u;
}
void CMsgClientServiceCall::clear_has_max_outstanding_calls() {
  _has_bits_[0] &= ~0x00000200u;
}
void CMsgClientServiceCall::clear_max_outstanding_calls() {
  max_outstanding_calls_ = 0u;
  clear_has_max_outstanding_calls();
}
::google::protobuf::uint32 CMsgClientServiceCall::max_outstanding_calls() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCall.max_outstanding_calls)
  return max_outstanding_calls_;
}
void CMsgClientServiceCall::set_max_outstanding_calls(::google::protobuf::uint32 value) {
  set_has_max_outstanding_calls();
  max_outstanding_calls_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCall.max_outstanding_calls)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceModule::kModuleCrcFieldNumber;
const int CMsgClientServiceModule::kModuleHashFieldNumber;
const int CMsgClientServiceModule::kModuleContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceModule::CMsgClientServiceModule()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientServiceModule)
}
CMsgClientServiceModule::CMsgClientServiceModule(const CMsgClientServiceModule& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_hash()) {
    module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
  }
  module_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_content()) {
    module_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_content_);
  }
  module_crc_ = from.module_crc_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientServiceModule)
}

void CMsgClientServiceModule::SharedCtor() {
  _cached_size_ = 0;
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_crc_ = 0u;
}

CMsgClientServiceModule::~CMsgClientServiceModule() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientServiceModule)
  SharedDtor();
}

void CMsgClientServiceModule::SharedDtor() {
  module_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceModule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientServiceModule::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientServiceModule& CMsgClientServiceModule::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientServiceModule* CMsgClientServiceModule::New(::google::protobuf::Arena* arena) const {
  CMsgClientServiceModule* n = new CMsgClientServiceModule;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientServiceModule::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientServiceModule)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_module_hash()) {
      GOOGLE_DCHECK(!module_hash_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*module_hash_.UnsafeRawStringPointer())->clear();
    }
    if (has_module_content()) {
      GOOGLE_DCHECK(!module_content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*module_content_.UnsafeRawStringPointer())->clear();
    }
  }
  module_crc_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientServiceModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientServiceModule)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 module_crc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_module_crc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes module_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_module_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes module_content = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_module_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientServiceModule)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientServiceModule)
  return false;
#undef DO_
}

void CMsgClientServiceModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientServiceModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 module_crc = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->module_crc(), output);
  }

  // optional bytes module_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->module_hash(), output);
  }

  // optional bytes module_content = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->module_content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientServiceModule)
}

::google::protobuf::uint8* CMsgClientServiceModule::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientServiceModule)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 module_crc = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->module_crc(), target);
  }

  // optional bytes module_hash = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->module_hash(), target);
  }

  // optional bytes module_content = 3;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->module_content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientServiceModule)
  return target;
}

size_t CMsgClientServiceModule::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientServiceModule)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional bytes module_hash = 2;
    if (has_module_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->module_hash());
    }

    // optional bytes module_content = 3;
    if (has_module_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->module_content());
    }

    // optional uint32 module_crc = 1;
    if (has_module_crc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->module_crc());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientServiceModule::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientServiceModule)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceModule* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientServiceModule>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientServiceModule)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientServiceModule)
    MergeFrom(*source);
  }
}

void CMsgClientServiceModule::MergeFrom(const CMsgClientServiceModule& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientServiceModule)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_module_hash();
      module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_module_content();
      module_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_content_);
    }
    if (cached_has_bits & 0x00000004u) {
      module_crc_ = from.module_crc_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientServiceModule::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientServiceModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceModule::CopyFrom(const CMsgClientServiceModule& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientServiceModule)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceModule::IsInitialized() const {
  return true;
}

void CMsgClientServiceModule::Swap(CMsgClientServiceModule* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceModule::InternalSwap(CMsgClientServiceModule* other) {
  module_hash_.Swap(&other->module_hash_);
  module_content_.Swap(&other->module_content_);
  std::swap(module_crc_, other->module_crc_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientServiceModule::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientServiceModule

// optional uint32 module_crc = 1;
bool CMsgClientServiceModule::has_module_crc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientServiceModule::set_has_module_crc() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientServiceModule::clear_has_module_crc() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientServiceModule::clear_module_crc() {
  module_crc_ = 0u;
  clear_has_module_crc();
}
::google::protobuf::uint32 CMsgClientServiceModule::module_crc() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceModule.module_crc)
  return module_crc_;
}
void CMsgClientServiceModule::set_module_crc(::google::protobuf::uint32 value) {
  set_has_module_crc();
  module_crc_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceModule.module_crc)
}

// optional bytes module_hash = 2;
bool CMsgClientServiceModule::has_module_hash() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientServiceModule::set_has_module_hash() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientServiceModule::clear_has_module_hash() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientServiceModule::clear_module_hash() {
  module_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_module_hash();
}
const ::std::string& CMsgClientServiceModule::module_hash() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceModule.module_hash)
  return module_hash_.GetNoArena();
}
void CMsgClientServiceModule::set_module_hash(const ::std::string& value) {
  set_has_module_hash();
  module_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceModule.module_hash)
}
#if LANG_CXX11
void CMsgClientServiceModule::set_module_hash(::std::string&& value) {
  set_has_module_hash();
  module_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceModule.module_hash)
}
#endif
void CMsgClientServiceModule::set_module_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_module_hash();
  module_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceModule.module_hash)
}
void CMsgClientServiceModule::set_module_hash(const void* value, size_t size) {
  set_has_module_hash();
  module_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceModule.module_hash)
}
::std::string* CMsgClientServiceModule::mutable_module_hash() {
  set_has_module_hash();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceModule.module_hash)
  return module_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceModule::release_module_hash() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceModule.module_hash)
  clear_has_module_hash();
  return module_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceModule::set_allocated_module_hash(::std::string* module_hash) {
  if (module_hash != NULL) {
    set_has_module_hash();
  } else {
    clear_has_module_hash();
  }
  module_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_hash);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceModule.module_hash)
}

// optional bytes module_content = 3;
bool CMsgClientServiceModule::has_module_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientServiceModule::set_has_module_content() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientServiceModule::clear_has_module_content() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientServiceModule::clear_module_content() {
  module_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_module_content();
}
const ::std::string& CMsgClientServiceModule::module_content() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceModule.module_content)
  return module_content_.GetNoArena();
}
void CMsgClientServiceModule::set_module_content(const ::std::string& value) {
  set_has_module_content();
  module_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceModule.module_content)
}
#if LANG_CXX11
void CMsgClientServiceModule::set_module_content(::std::string&& value) {
  set_has_module_content();
  module_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceModule.module_content)
}
#endif
void CMsgClientServiceModule::set_module_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_module_content();
  module_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceModule.module_content)
}
void CMsgClientServiceModule::set_module_content(const void* value, size_t size) {
  set_has_module_content();
  module_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceModule.module_content)
}
::std::string* CMsgClientServiceModule::mutable_module_content() {
  set_has_module_content();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceModule.module_content)
  return module_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceModule::release_module_content() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceModule.module_content)
  clear_has_module_content();
  return module_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceModule::set_allocated_module_content(::std::string* module_content) {
  if (module_content != NULL) {
    set_has_module_content();
  } else {
    clear_has_module_content();
  }
  module_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_content);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceModule.module_content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientServiceCallResponse::kSysidRoutingFieldNumber;
const int CMsgClientServiceCallResponse::kCallHandleFieldNumber;
const int CMsgClientServiceCallResponse::kModuleCrcFieldNumber;
const int CMsgClientServiceCallResponse::kModuleHashFieldNumber;
const int CMsgClientServiceCallResponse::kEcallresultFieldNumber;
const int CMsgClientServiceCallResponse::kResultContentFieldNumber;
const int CMsgClientServiceCallResponse::kOsVersionInfoFieldNumber;
const int CMsgClientServiceCallResponse::kSystemInfoFieldNumber;
const int CMsgClientServiceCallResponse::kLoadAddressFieldNumber;
const int CMsgClientServiceCallResponse::kExceptionRecordFieldNumber;
const int CMsgClientServiceCallResponse::kPortableOsVersionInfoFieldNumber;
const int CMsgClientServiceCallResponse::kPortableSystemInfoFieldNumber;
const int CMsgClientServiceCallResponse::kWasConvertedFieldNumber;
const int CMsgClientServiceCallResponse::kInternalResultFieldNumber;
const int CMsgClientServiceCallResponse::kCurrentCountFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallHandleFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallModuleCrcFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallSysidRoutingFieldNumber;
const int CMsgClientServiceCallResponse::kLastEcallresultFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallissueDeltaFieldNumber;
const int CMsgClientServiceCallResponse::kLastCallcompleteDeltaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientServiceCallResponse::CMsgClientServiceCallResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientServiceCallResponse)
}
CMsgClientServiceCallResponse::CMsgClientServiceCallResponse(const CMsgClientServiceCallResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sysid_routing()) {
    sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sysid_routing_);
  }
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_module_hash()) {
    module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
  }
  result_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_result_content()) {
    result_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_content_);
  }
  os_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_os_version_info()) {
    os_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_version_info_);
  }
  system_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_system_info()) {
    system_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_info_);
  }
  exception_record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_exception_record()) {
    exception_record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exception_record_);
  }
  portable_os_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_portable_os_version_info()) {
    portable_os_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portable_os_version_info_);
  }
  portable_system_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_portable_system_info()) {
    portable_system_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portable_system_info_);
  }
  last_call_sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_last_call_sysid_routing()) {
    last_call_sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_call_sysid_routing_);
  }
  ::memcpy(&call_handle_, &from.call_handle_,
    reinterpret_cast<char*>(&last_callcomplete_delta_) -
    reinterpret_cast<char*>(&call_handle_) + sizeof(last_callcomplete_delta_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientServiceCallResponse)
}

void CMsgClientServiceCallResponse::SharedCtor() {
  _cached_size_ = 0;
  sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exception_record_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portable_os_version_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portable_system_info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_call_sysid_routing_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&call_handle_, 0, reinterpret_cast<char*>(&last_callcomplete_delta_) -
    reinterpret_cast<char*>(&call_handle_) + sizeof(last_callcomplete_delta_));
}

CMsgClientServiceCallResponse::~CMsgClientServiceCallResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientServiceCallResponse)
  SharedDtor();
}

void CMsgClientServiceCallResponse::SharedDtor() {
  sysid_routing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  module_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  os_version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  system_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exception_record_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portable_os_version_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  portable_system_info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_call_sysid_routing_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientServiceCallResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientServiceCallResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientServiceCallResponse& CMsgClientServiceCallResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientServiceCallResponse* CMsgClientServiceCallResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientServiceCallResponse* n = new CMsgClientServiceCallResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientServiceCallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientServiceCallResponse)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_sysid_routing()) {
      GOOGLE_DCHECK(!sysid_routing_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sysid_routing_.UnsafeRawStringPointer())->clear();
    }
    if (has_module_hash()) {
      GOOGLE_DCHECK(!module_hash_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*module_hash_.UnsafeRawStringPointer())->clear();
    }
    if (has_result_content()) {
      GOOGLE_DCHECK(!result_content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*result_content_.UnsafeRawStringPointer())->clear();
    }
    if (has_os_version_info()) {
      GOOGLE_DCHECK(!os_version_info_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*os_version_info_.UnsafeRawStringPointer())->clear();
    }
    if (has_system_info()) {
      GOOGLE_DCHECK(!system_info_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*system_info_.UnsafeRawStringPointer())->clear();
    }
    if (has_exception_record()) {
      GOOGLE_DCHECK(!exception_record_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*exception_record_.UnsafeRawStringPointer())->clear();
    }
    if (has_portable_os_version_info()) {
      GOOGLE_DCHECK(!portable_os_version_info_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*portable_os_version_info_.UnsafeRawStringPointer())->clear();
    }
    if (has_portable_system_info()) {
      GOOGLE_DCHECK(!portable_system_info_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*portable_system_info_.UnsafeRawStringPointer())->clear();
    }
  }
  if (has_last_call_sysid_routing()) {
    GOOGLE_DCHECK(!last_call_sysid_routing_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*last_call_sysid_routing_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[8 / 32] & 65024u) {
    ::memset(&call_handle_, 0, reinterpret_cast<char*>(&current_count_) -
      reinterpret_cast<char*>(&call_handle_) + sizeof(current_count_));
  }
  if (_has_bits_[16 / 32] & 2031616u) {
    ::memset(&last_call_handle_, 0, reinterpret_cast<char*>(&last_callcomplete_delta_) -
      reinterpret_cast<char*>(&last_call_handle_) + sizeof(last_callcomplete_delta_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientServiceCallResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientServiceCallResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes sysid_routing = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sysid_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 call_handle = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_call_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &call_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 module_crc = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_module_crc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &module_crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes module_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_module_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ecallresult = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_ecallresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ecallresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes result_content = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_result_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes os_version_info = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_os_version_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes system_info = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_system_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 load_address = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(73u)) {
          set_has_load_address();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &load_address_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes exception_record = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_exception_record()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes portable_os_version_info = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_portable_os_version_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes portable_system_info = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_portable_system_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool was_converted = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_was_converted();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &was_converted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 internal_result = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_internal_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &internal_result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 current_count = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has_current_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &current_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_call_handle = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u)) {
          set_has_last_call_handle();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_call_handle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_call_module_crc = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u)) {
          set_has_last_call_module_crc();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_call_module_crc_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes last_call_sysid_routing = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_last_call_sysid_routing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_ecallresult = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {
          set_has_last_ecallresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_ecallresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_callissue_delta = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u)) {
          set_has_last_callissue_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_callissue_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 last_callcomplete_delta = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u)) {
          set_has_last_callcomplete_delta();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &last_callcomplete_delta_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientServiceCallResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientServiceCallResponse)
  return false;
#undef DO_
}

void CMsgClientServiceCallResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientServiceCallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sysid_routing = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->sysid_routing(), output);
  }

  // optional uint32 call_handle = 2;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->call_handle(), output);
  }

  // optional uint32 module_crc = 3;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->module_crc(), output);
  }

  // optional bytes module_hash = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->module_hash(), output);
  }

  // optional uint32 ecallresult = 5;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->ecallresult(), output);
  }

  // optional bytes result_content = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->result_content(), output);
  }

  // optional bytes os_version_info = 7;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->os_version_info(), output);
  }

  // optional bytes system_info = 8;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->system_info(), output);
  }

  // optional fixed64 load_address = 9;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(9, this->load_address(), output);
  }

  // optional bytes exception_record = 10;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->exception_record(), output);
  }

  // optional bytes portable_os_version_info = 11;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->portable_os_version_info(), output);
  }

  // optional bytes portable_system_info = 12;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->portable_system_info(), output);
  }

  // optional bool was_converted = 13;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->was_converted(), output);
  }

  // optional uint32 internal_result = 14;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->internal_result(), output);
  }

  // optional uint32 current_count = 15;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->current_count(), output);
  }

  // optional uint32 last_call_handle = 16;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->last_call_handle(), output);
  }

  // optional uint32 last_call_module_crc = 17;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->last_call_module_crc(), output);
  }

  // optional bytes last_call_sysid_routing = 18;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      18, this->last_call_sysid_routing(), output);
  }

  // optional uint32 last_ecallresult = 19;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(19, this->last_ecallresult(), output);
  }

  // optional uint32 last_callissue_delta = 20;
  if (cached_has_bits & 0x00080000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(20, this->last_callissue_delta(), output);
  }

  // optional uint32 last_callcomplete_delta = 21;
  if (cached_has_bits & 0x00100000u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(21, this->last_callcomplete_delta(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientServiceCallResponse)
}

::google::protobuf::uint8* CMsgClientServiceCallResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientServiceCallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes sysid_routing = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->sysid_routing(), target);
  }

  // optional uint32 call_handle = 2;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->call_handle(), target);
  }

  // optional uint32 module_crc = 3;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->module_crc(), target);
  }

  // optional bytes module_hash = 4;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->module_hash(), target);
  }

  // optional uint32 ecallresult = 5;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->ecallresult(), target);
  }

  // optional bytes result_content = 6;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->result_content(), target);
  }

  // optional bytes os_version_info = 7;
  if (cached_has_bits & 0x00000008u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->os_version_info(), target);
  }

  // optional bytes system_info = 8;
  if (cached_has_bits & 0x00000010u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->system_info(), target);
  }

  // optional fixed64 load_address = 9;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(9, this->load_address(), target);
  }

  // optional bytes exception_record = 10;
  if (cached_has_bits & 0x00000020u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->exception_record(), target);
  }

  // optional bytes portable_os_version_info = 11;
  if (cached_has_bits & 0x00000040u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->portable_os_version_info(), target);
  }

  // optional bytes portable_system_info = 12;
  if (cached_has_bits & 0x00000080u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->portable_system_info(), target);
  }

  // optional bool was_converted = 13;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->was_converted(), target);
  }

  // optional uint32 internal_result = 14;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->internal_result(), target);
  }

  // optional uint32 current_count = 15;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->current_count(), target);
  }

  // optional uint32 last_call_handle = 16;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->last_call_handle(), target);
  }

  // optional uint32 last_call_module_crc = 17;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->last_call_module_crc(), target);
  }

  // optional bytes last_call_sysid_routing = 18;
  if (cached_has_bits & 0x00000100u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        18, this->last_call_sysid_routing(), target);
  }

  // optional uint32 last_ecallresult = 19;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(19, this->last_ecallresult(), target);
  }

  // optional uint32 last_callissue_delta = 20;
  if (cached_has_bits & 0x00080000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(20, this->last_callissue_delta(), target);
  }

  // optional uint32 last_callcomplete_delta = 21;
  if (cached_has_bits & 0x00100000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(21, this->last_callcomplete_delta(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientServiceCallResponse)
  return target;
}

size_t CMsgClientServiceCallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientServiceCallResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional bytes sysid_routing = 1;
    if (has_sysid_routing()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->sysid_routing());
    }

    // optional bytes module_hash = 4;
    if (has_module_hash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->module_hash());
    }

    // optional bytes result_content = 6;
    if (has_result_content()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->result_content());
    }

    // optional bytes os_version_info = 7;
    if (has_os_version_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->os_version_info());
    }

    // optional bytes system_info = 8;
    if (has_system_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->system_info());
    }

    // optional bytes exception_record = 10;
    if (has_exception_record()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->exception_record());
    }

    // optional bytes portable_os_version_info = 11;
    if (has_portable_os_version_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->portable_os_version_info());
    }

    // optional bytes portable_system_info = 12;
    if (has_portable_system_info()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->portable_system_info());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional bytes last_call_sysid_routing = 18;
    if (has_last_call_sysid_routing()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->last_call_sysid_routing());
    }

    // optional uint32 call_handle = 2;
    if (has_call_handle()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->call_handle());
    }

    // optional uint32 module_crc = 3;
    if (has_module_crc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->module_crc());
    }

    // optional fixed64 load_address = 9;
    if (has_load_address()) {
      total_size += 1 + 8;
    }

    // optional uint32 ecallresult = 5;
    if (has_ecallresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ecallresult());
    }

    // optional bool was_converted = 13;
    if (has_was_converted()) {
      total_size += 1 + 1;
    }

    // optional uint32 internal_result = 14;
    if (has_internal_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->internal_result());
    }

    // optional uint32 current_count = 15;
    if (has_current_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->current_count());
    }

  }
  if (_has_bits_[16 / 32] & 2031616u) {
    // optional uint32 last_call_handle = 16;
    if (has_last_call_handle()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_call_handle());
    }

    // optional uint32 last_call_module_crc = 17;
    if (has_last_call_module_crc()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_call_module_crc());
    }

    // optional uint32 last_ecallresult = 19;
    if (has_last_ecallresult()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_ecallresult());
    }

    // optional uint32 last_callissue_delta = 20;
    if (has_last_callissue_delta()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_callissue_delta());
    }

    // optional uint32 last_callcomplete_delta = 21;
    if (has_last_callcomplete_delta()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->last_callcomplete_delta());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientServiceCallResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientServiceCallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientServiceCallResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientServiceCallResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientServiceCallResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientServiceCallResponse)
    MergeFrom(*source);
  }
}

void CMsgClientServiceCallResponse::MergeFrom(const CMsgClientServiceCallResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientServiceCallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sysid_routing();
      sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sysid_routing_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_module_hash();
      module_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_hash_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_result_content();
      result_content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_content_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_os_version_info();
      os_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.os_version_info_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_system_info();
      system_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.system_info_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_exception_record();
      exception_record_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exception_record_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_portable_os_version_info();
      portable_os_version_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portable_os_version_info_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_portable_system_info();
      portable_system_info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.portable_system_info_);
    }
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_last_call_sysid_routing();
      last_call_sysid_routing_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_call_sysid_routing_);
    }
    if (cached_has_bits & 0x00000200u) {
      call_handle_ = from.call_handle_;
    }
    if (cached_has_bits & 0x00000400u) {
      module_crc_ = from.module_crc_;
    }
    if (cached_has_bits & 0x00000800u) {
      load_address_ = from.load_address_;
    }
    if (cached_has_bits & 0x00001000u) {
      ecallresult_ = from.ecallresult_;
    }
    if (cached_has_bits & 0x00002000u) {
      was_converted_ = from.was_converted_;
    }
    if (cached_has_bits & 0x00004000u) {
      internal_result_ = from.internal_result_;
    }
    if (cached_has_bits & 0x00008000u) {
      current_count_ = from.current_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 2031616u) {
    if (cached_has_bits & 0x00010000u) {
      last_call_handle_ = from.last_call_handle_;
    }
    if (cached_has_bits & 0x00020000u) {
      last_call_module_crc_ = from.last_call_module_crc_;
    }
    if (cached_has_bits & 0x00040000u) {
      last_ecallresult_ = from.last_ecallresult_;
    }
    if (cached_has_bits & 0x00080000u) {
      last_callissue_delta_ = from.last_callissue_delta_;
    }
    if (cached_has_bits & 0x00100000u) {
      last_callcomplete_delta_ = from.last_callcomplete_delta_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientServiceCallResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientServiceCallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientServiceCallResponse::CopyFrom(const CMsgClientServiceCallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientServiceCallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientServiceCallResponse::IsInitialized() const {
  return true;
}

void CMsgClientServiceCallResponse::Swap(CMsgClientServiceCallResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientServiceCallResponse::InternalSwap(CMsgClientServiceCallResponse* other) {
  sysid_routing_.Swap(&other->sysid_routing_);
  module_hash_.Swap(&other->module_hash_);
  result_content_.Swap(&other->result_content_);
  os_version_info_.Swap(&other->os_version_info_);
  system_info_.Swap(&other->system_info_);
  exception_record_.Swap(&other->exception_record_);
  portable_os_version_info_.Swap(&other->portable_os_version_info_);
  portable_system_info_.Swap(&other->portable_system_info_);
  last_call_sysid_routing_.Swap(&other->last_call_sysid_routing_);
  std::swap(call_handle_, other->call_handle_);
  std::swap(module_crc_, other->module_crc_);
  std::swap(load_address_, other->load_address_);
  std::swap(ecallresult_, other->ecallresult_);
  std::swap(was_converted_, other->was_converted_);
  std::swap(internal_result_, other->internal_result_);
  std::swap(current_count_, other->current_count_);
  std::swap(last_call_handle_, other->last_call_handle_);
  std::swap(last_call_module_crc_, other->last_call_module_crc_);
  std::swap(last_ecallresult_, other->last_ecallresult_);
  std::swap(last_callissue_delta_, other->last_callissue_delta_);
  std::swap(last_callcomplete_delta_, other->last_callcomplete_delta_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientServiceCallResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientServiceCallResponse

// optional bytes sysid_routing = 1;
bool CMsgClientServiceCallResponse::has_sysid_routing() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientServiceCallResponse::set_has_sysid_routing() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientServiceCallResponse::clear_has_sysid_routing() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientServiceCallResponse::clear_sysid_routing() {
  sysid_routing_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sysid_routing();
}
const ::std::string& CMsgClientServiceCallResponse::sysid_routing() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.sysid_routing)
  return sysid_routing_.GetNoArena();
}
void CMsgClientServiceCallResponse::set_sysid_routing(const ::std::string& value) {
  set_has_sysid_routing();
  sysid_routing_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.sysid_routing)
}
#if LANG_CXX11
void CMsgClientServiceCallResponse::set_sysid_routing(::std::string&& value) {
  set_has_sysid_routing();
  sysid_routing_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceCallResponse.sysid_routing)
}
#endif
void CMsgClientServiceCallResponse::set_sysid_routing(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sysid_routing();
  sysid_routing_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceCallResponse.sysid_routing)
}
void CMsgClientServiceCallResponse::set_sysid_routing(const void* value, size_t size) {
  set_has_sysid_routing();
  sysid_routing_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceCallResponse.sysid_routing)
}
::std::string* CMsgClientServiceCallResponse::mutable_sysid_routing() {
  set_has_sysid_routing();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceCallResponse.sysid_routing)
  return sysid_routing_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceCallResponse::release_sysid_routing() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceCallResponse.sysid_routing)
  clear_has_sysid_routing();
  return sysid_routing_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceCallResponse::set_allocated_sysid_routing(::std::string* sysid_routing) {
  if (sysid_routing != NULL) {
    set_has_sysid_routing();
  } else {
    clear_has_sysid_routing();
  }
  sysid_routing_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sysid_routing);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceCallResponse.sysid_routing)
}

// optional uint32 call_handle = 2;
bool CMsgClientServiceCallResponse::has_call_handle() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void CMsgClientServiceCallResponse::set_has_call_handle() {
  _has_bits_[0] |= 0x00000200u;
}
void CMsgClientServiceCallResponse::clear_has_call_handle() {
  _has_bits_[0] &= ~0x00000200u;
}
void CMsgClientServiceCallResponse::clear_call_handle() {
  call_handle_ = 0u;
  clear_has_call_handle();
}
::google::protobuf::uint32 CMsgClientServiceCallResponse::call_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.call_handle)
  return call_handle_;
}
void CMsgClientServiceCallResponse::set_call_handle(::google::protobuf::uint32 value) {
  set_has_call_handle();
  call_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.call_handle)
}

// optional uint32 module_crc = 3;
bool CMsgClientServiceCallResponse::has_module_crc() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void CMsgClientServiceCallResponse::set_has_module_crc() {
  _has_bits_[0] |= 0x00000400u;
}
void CMsgClientServiceCallResponse::clear_has_module_crc() {
  _has_bits_[0] &= ~0x00000400u;
}
void CMsgClientServiceCallResponse::clear_module_crc() {
  module_crc_ = 0u;
  clear_has_module_crc();
}
::google::protobuf::uint32 CMsgClientServiceCallResponse::module_crc() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.module_crc)
  return module_crc_;
}
void CMsgClientServiceCallResponse::set_module_crc(::google::protobuf::uint32 value) {
  set_has_module_crc();
  module_crc_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.module_crc)
}

// optional bytes module_hash = 4;
bool CMsgClientServiceCallResponse::has_module_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientServiceCallResponse::set_has_module_hash() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientServiceCallResponse::clear_has_module_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientServiceCallResponse::clear_module_hash() {
  module_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_module_hash();
}
const ::std::string& CMsgClientServiceCallResponse::module_hash() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.module_hash)
  return module_hash_.GetNoArena();
}
void CMsgClientServiceCallResponse::set_module_hash(const ::std::string& value) {
  set_has_module_hash();
  module_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.module_hash)
}
#if LANG_CXX11
void CMsgClientServiceCallResponse::set_module_hash(::std::string&& value) {
  set_has_module_hash();
  module_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceCallResponse.module_hash)
}
#endif
void CMsgClientServiceCallResponse::set_module_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_module_hash();
  module_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceCallResponse.module_hash)
}
void CMsgClientServiceCallResponse::set_module_hash(const void* value, size_t size) {
  set_has_module_hash();
  module_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceCallResponse.module_hash)
}
::std::string* CMsgClientServiceCallResponse::mutable_module_hash() {
  set_has_module_hash();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceCallResponse.module_hash)
  return module_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceCallResponse::release_module_hash() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceCallResponse.module_hash)
  clear_has_module_hash();
  return module_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceCallResponse::set_allocated_module_hash(::std::string* module_hash) {
  if (module_hash != NULL) {
    set_has_module_hash();
  } else {
    clear_has_module_hash();
  }
  module_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_hash);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceCallResponse.module_hash)
}

// optional uint32 ecallresult = 5;
bool CMsgClientServiceCallResponse::has_ecallresult() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void CMsgClientServiceCallResponse::set_has_ecallresult() {
  _has_bits_[0] |= 0x00001000u;
}
void CMsgClientServiceCallResponse::clear_has_ecallresult() {
  _has_bits_[0] &= ~0x00001000u;
}
void CMsgClientServiceCallResponse::clear_ecallresult() {
  ecallresult_ = 0u;
  clear_has_ecallresult();
}
::google::protobuf::uint32 CMsgClientServiceCallResponse::ecallresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.ecallresult)
  return ecallresult_;
}
void CMsgClientServiceCallResponse::set_ecallresult(::google::protobuf::uint32 value) {
  set_has_ecallresult();
  ecallresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.ecallresult)
}

// optional bytes result_content = 6;
bool CMsgClientServiceCallResponse::has_result_content() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientServiceCallResponse::set_has_result_content() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientServiceCallResponse::clear_has_result_content() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientServiceCallResponse::clear_result_content() {
  result_content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_result_content();
}
const ::std::string& CMsgClientServiceCallResponse::result_content() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.result_content)
  return result_content_.GetNoArena();
}
void CMsgClientServiceCallResponse::set_result_content(const ::std::string& value) {
  set_has_result_content();
  result_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.result_content)
}
#if LANG_CXX11
void CMsgClientServiceCallResponse::set_result_content(::std::string&& value) {
  set_has_result_content();
  result_content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceCallResponse.result_content)
}
#endif
void CMsgClientServiceCallResponse::set_result_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_result_content();
  result_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceCallResponse.result_content)
}
void CMsgClientServiceCallResponse::set_result_content(const void* value, size_t size) {
  set_has_result_content();
  result_content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceCallResponse.result_content)
}
::std::string* CMsgClientServiceCallResponse::mutable_result_content() {
  set_has_result_content();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceCallResponse.result_content)
  return result_content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceCallResponse::release_result_content() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceCallResponse.result_content)
  clear_has_result_content();
  return result_content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceCallResponse::set_allocated_result_content(::std::string* result_content) {
  if (result_content != NULL) {
    set_has_result_content();
  } else {
    clear_has_result_content();
  }
  result_content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result_content);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceCallResponse.result_content)
}

// optional bytes os_version_info = 7;
bool CMsgClientServiceCallResponse::has_os_version_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientServiceCallResponse::set_has_os_version_info() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientServiceCallResponse::clear_has_os_version_info() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientServiceCallResponse::clear_os_version_info() {
  os_version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_os_version_info();
}
const ::std::string& CMsgClientServiceCallResponse::os_version_info() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.os_version_info)
  return os_version_info_.GetNoArena();
}
void CMsgClientServiceCallResponse::set_os_version_info(const ::std::string& value) {
  set_has_os_version_info();
  os_version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.os_version_info)
}
#if LANG_CXX11
void CMsgClientServiceCallResponse::set_os_version_info(::std::string&& value) {
  set_has_os_version_info();
  os_version_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceCallResponse.os_version_info)
}
#endif
void CMsgClientServiceCallResponse::set_os_version_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_os_version_info();
  os_version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceCallResponse.os_version_info)
}
void CMsgClientServiceCallResponse::set_os_version_info(const void* value, size_t size) {
  set_has_os_version_info();
  os_version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceCallResponse.os_version_info)
}
::std::string* CMsgClientServiceCallResponse::mutable_os_version_info() {
  set_has_os_version_info();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceCallResponse.os_version_info)
  return os_version_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceCallResponse::release_os_version_info() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceCallResponse.os_version_info)
  clear_has_os_version_info();
  return os_version_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceCallResponse::set_allocated_os_version_info(::std::string* os_version_info) {
  if (os_version_info != NULL) {
    set_has_os_version_info();
  } else {
    clear_has_os_version_info();
  }
  os_version_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), os_version_info);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceCallResponse.os_version_info)
}

// optional bytes system_info = 8;
bool CMsgClientServiceCallResponse::has_system_info() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientServiceCallResponse::set_has_system_info() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientServiceCallResponse::clear_has_system_info() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientServiceCallResponse::clear_system_info() {
  system_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_system_info();
}
const ::std::string& CMsgClientServiceCallResponse::system_info() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.system_info)
  return system_info_.GetNoArena();
}
void CMsgClientServiceCallResponse::set_system_info(const ::std::string& value) {
  set_has_system_info();
  system_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.system_info)
}
#if LANG_CXX11
void CMsgClientServiceCallResponse::set_system_info(::std::string&& value) {
  set_has_system_info();
  system_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceCallResponse.system_info)
}
#endif
void CMsgClientServiceCallResponse::set_system_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_system_info();
  system_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceCallResponse.system_info)
}
void CMsgClientServiceCallResponse::set_system_info(const void* value, size_t size) {
  set_has_system_info();
  system_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceCallResponse.system_info)
}
::std::string* CMsgClientServiceCallResponse::mutable_system_info() {
  set_has_system_info();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceCallResponse.system_info)
  return system_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceCallResponse::release_system_info() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceCallResponse.system_info)
  clear_has_system_info();
  return system_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceCallResponse::set_allocated_system_info(::std::string* system_info) {
  if (system_info != NULL) {
    set_has_system_info();
  } else {
    clear_has_system_info();
  }
  system_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), system_info);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceCallResponse.system_info)
}

// optional fixed64 load_address = 9;
bool CMsgClientServiceCallResponse::has_load_address() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void CMsgClientServiceCallResponse::set_has_load_address() {
  _has_bits_[0] |= 0x00000800u;
}
void CMsgClientServiceCallResponse::clear_has_load_address() {
  _has_bits_[0] &= ~0x00000800u;
}
void CMsgClientServiceCallResponse::clear_load_address() {
  load_address_ = GOOGLE_ULONGLONG(0);
  clear_has_load_address();
}
::google::protobuf::uint64 CMsgClientServiceCallResponse::load_address() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.load_address)
  return load_address_;
}
void CMsgClientServiceCallResponse::set_load_address(::google::protobuf::uint64 value) {
  set_has_load_address();
  load_address_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.load_address)
}

// optional bytes exception_record = 10;
bool CMsgClientServiceCallResponse::has_exception_record() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void CMsgClientServiceCallResponse::set_has_exception_record() {
  _has_bits_[0] |= 0x00000020u;
}
void CMsgClientServiceCallResponse::clear_has_exception_record() {
  _has_bits_[0] &= ~0x00000020u;
}
void CMsgClientServiceCallResponse::clear_exception_record() {
  exception_record_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exception_record();
}
const ::std::string& CMsgClientServiceCallResponse::exception_record() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.exception_record)
  return exception_record_.GetNoArena();
}
void CMsgClientServiceCallResponse::set_exception_record(const ::std::string& value) {
  set_has_exception_record();
  exception_record_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.exception_record)
}
#if LANG_CXX11
void CMsgClientServiceCallResponse::set_exception_record(::std::string&& value) {
  set_has_exception_record();
  exception_record_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceCallResponse.exception_record)
}
#endif
void CMsgClientServiceCallResponse::set_exception_record(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_exception_record();
  exception_record_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceCallResponse.exception_record)
}
void CMsgClientServiceCallResponse::set_exception_record(const void* value, size_t size) {
  set_has_exception_record();
  exception_record_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceCallResponse.exception_record)
}
::std::string* CMsgClientServiceCallResponse::mutable_exception_record() {
  set_has_exception_record();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceCallResponse.exception_record)
  return exception_record_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceCallResponse::release_exception_record() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceCallResponse.exception_record)
  clear_has_exception_record();
  return exception_record_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceCallResponse::set_allocated_exception_record(::std::string* exception_record) {
  if (exception_record != NULL) {
    set_has_exception_record();
  } else {
    clear_has_exception_record();
  }
  exception_record_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exception_record);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceCallResponse.exception_record)
}

// optional bytes portable_os_version_info = 11;
bool CMsgClientServiceCallResponse::has_portable_os_version_info() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void CMsgClientServiceCallResponse::set_has_portable_os_version_info() {
  _has_bits_[0] |= 0x00000040u;
}
void CMsgClientServiceCallResponse::clear_has_portable_os_version_info() {
  _has_bits_[0] &= ~0x00000040u;
}
void CMsgClientServiceCallResponse::clear_portable_os_version_info() {
  portable_os_version_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_portable_os_version_info();
}
const ::std::string& CMsgClientServiceCallResponse::portable_os_version_info() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.portable_os_version_info)
  return portable_os_version_info_.GetNoArena();
}
void CMsgClientServiceCallResponse::set_portable_os_version_info(const ::std::string& value) {
  set_has_portable_os_version_info();
  portable_os_version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.portable_os_version_info)
}
#if LANG_CXX11
void CMsgClientServiceCallResponse::set_portable_os_version_info(::std::string&& value) {
  set_has_portable_os_version_info();
  portable_os_version_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceCallResponse.portable_os_version_info)
}
#endif
void CMsgClientServiceCallResponse::set_portable_os_version_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_portable_os_version_info();
  portable_os_version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceCallResponse.portable_os_version_info)
}
void CMsgClientServiceCallResponse::set_portable_os_version_info(const void* value, size_t size) {
  set_has_portable_os_version_info();
  portable_os_version_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceCallResponse.portable_os_version_info)
}
::std::string* CMsgClientServiceCallResponse::mutable_portable_os_version_info() {
  set_has_portable_os_version_info();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceCallResponse.portable_os_version_info)
  return portable_os_version_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceCallResponse::release_portable_os_version_info() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceCallResponse.portable_os_version_info)
  clear_has_portable_os_version_info();
  return portable_os_version_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceCallResponse::set_allocated_portable_os_version_info(::std::string* portable_os_version_info) {
  if (portable_os_version_info != NULL) {
    set_has_portable_os_version_info();
  } else {
    clear_has_portable_os_version_info();
  }
  portable_os_version_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portable_os_version_info);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceCallResponse.portable_os_version_info)
}

// optional bytes portable_system_info = 12;
bool CMsgClientServiceCallResponse::has_portable_system_info() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void CMsgClientServiceCallResponse::set_has_portable_system_info() {
  _has_bits_[0] |= 0x00000080u;
}
void CMsgClientServiceCallResponse::clear_has_portable_system_info() {
  _has_bits_[0] &= ~0x00000080u;
}
void CMsgClientServiceCallResponse::clear_portable_system_info() {
  portable_system_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_portable_system_info();
}
const ::std::string& CMsgClientServiceCallResponse::portable_system_info() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.portable_system_info)
  return portable_system_info_.GetNoArena();
}
void CMsgClientServiceCallResponse::set_portable_system_info(const ::std::string& value) {
  set_has_portable_system_info();
  portable_system_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.portable_system_info)
}
#if LANG_CXX11
void CMsgClientServiceCallResponse::set_portable_system_info(::std::string&& value) {
  set_has_portable_system_info();
  portable_system_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceCallResponse.portable_system_info)
}
#endif
void CMsgClientServiceCallResponse::set_portable_system_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_portable_system_info();
  portable_system_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceCallResponse.portable_system_info)
}
void CMsgClientServiceCallResponse::set_portable_system_info(const void* value, size_t size) {
  set_has_portable_system_info();
  portable_system_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceCallResponse.portable_system_info)
}
::std::string* CMsgClientServiceCallResponse::mutable_portable_system_info() {
  set_has_portable_system_info();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceCallResponse.portable_system_info)
  return portable_system_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceCallResponse::release_portable_system_info() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceCallResponse.portable_system_info)
  clear_has_portable_system_info();
  return portable_system_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceCallResponse::set_allocated_portable_system_info(::std::string* portable_system_info) {
  if (portable_system_info != NULL) {
    set_has_portable_system_info();
  } else {
    clear_has_portable_system_info();
  }
  portable_system_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), portable_system_info);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceCallResponse.portable_system_info)
}

// optional bool was_converted = 13;
bool CMsgClientServiceCallResponse::has_was_converted() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void CMsgClientServiceCallResponse::set_has_was_converted() {
  _has_bits_[0] |= 0x00002000u;
}
void CMsgClientServiceCallResponse::clear_has_was_converted() {
  _has_bits_[0] &= ~0x00002000u;
}
void CMsgClientServiceCallResponse::clear_was_converted() {
  was_converted_ = false;
  clear_has_was_converted();
}
bool CMsgClientServiceCallResponse::was_converted() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.was_converted)
  return was_converted_;
}
void CMsgClientServiceCallResponse::set_was_converted(bool value) {
  set_has_was_converted();
  was_converted_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.was_converted)
}

// optional uint32 internal_result = 14;
bool CMsgClientServiceCallResponse::has_internal_result() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void CMsgClientServiceCallResponse::set_has_internal_result() {
  _has_bits_[0] |= 0x00004000u;
}
void CMsgClientServiceCallResponse::clear_has_internal_result() {
  _has_bits_[0] &= ~0x00004000u;
}
void CMsgClientServiceCallResponse::clear_internal_result() {
  internal_result_ = 0u;
  clear_has_internal_result();
}
::google::protobuf::uint32 CMsgClientServiceCallResponse::internal_result() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.internal_result)
  return internal_result_;
}
void CMsgClientServiceCallResponse::set_internal_result(::google::protobuf::uint32 value) {
  set_has_internal_result();
  internal_result_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.internal_result)
}

// optional uint32 current_count = 15;
bool CMsgClientServiceCallResponse::has_current_count() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void CMsgClientServiceCallResponse::set_has_current_count() {
  _has_bits_[0] |= 0x00008000u;
}
void CMsgClientServiceCallResponse::clear_has_current_count() {
  _has_bits_[0] &= ~0x00008000u;
}
void CMsgClientServiceCallResponse::clear_current_count() {
  current_count_ = 0u;
  clear_has_current_count();
}
::google::protobuf::uint32 CMsgClientServiceCallResponse::current_count() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.current_count)
  return current_count_;
}
void CMsgClientServiceCallResponse::set_current_count(::google::protobuf::uint32 value) {
  set_has_current_count();
  current_count_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.current_count)
}

// optional uint32 last_call_handle = 16;
bool CMsgClientServiceCallResponse::has_last_call_handle() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void CMsgClientServiceCallResponse::set_has_last_call_handle() {
  _has_bits_[0] |= 0x00010000u;
}
void CMsgClientServiceCallResponse::clear_has_last_call_handle() {
  _has_bits_[0] &= ~0x00010000u;
}
void CMsgClientServiceCallResponse::clear_last_call_handle() {
  last_call_handle_ = 0u;
  clear_has_last_call_handle();
}
::google::protobuf::uint32 CMsgClientServiceCallResponse::last_call_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.last_call_handle)
  return last_call_handle_;
}
void CMsgClientServiceCallResponse::set_last_call_handle(::google::protobuf::uint32 value) {
  set_has_last_call_handle();
  last_call_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.last_call_handle)
}

// optional uint32 last_call_module_crc = 17;
bool CMsgClientServiceCallResponse::has_last_call_module_crc() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void CMsgClientServiceCallResponse::set_has_last_call_module_crc() {
  _has_bits_[0] |= 0x00020000u;
}
void CMsgClientServiceCallResponse::clear_has_last_call_module_crc() {
  _has_bits_[0] &= ~0x00020000u;
}
void CMsgClientServiceCallResponse::clear_last_call_module_crc() {
  last_call_module_crc_ = 0u;
  clear_has_last_call_module_crc();
}
::google::protobuf::uint32 CMsgClientServiceCallResponse::last_call_module_crc() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.last_call_module_crc)
  return last_call_module_crc_;
}
void CMsgClientServiceCallResponse::set_last_call_module_crc(::google::protobuf::uint32 value) {
  set_has_last_call_module_crc();
  last_call_module_crc_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.last_call_module_crc)
}

// optional bytes last_call_sysid_routing = 18;
bool CMsgClientServiceCallResponse::has_last_call_sysid_routing() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void CMsgClientServiceCallResponse::set_has_last_call_sysid_routing() {
  _has_bits_[0] |= 0x00000100u;
}
void CMsgClientServiceCallResponse::clear_has_last_call_sysid_routing() {
  _has_bits_[0] &= ~0x00000100u;
}
void CMsgClientServiceCallResponse::clear_last_call_sysid_routing() {
  last_call_sysid_routing_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_last_call_sysid_routing();
}
const ::std::string& CMsgClientServiceCallResponse::last_call_sysid_routing() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.last_call_sysid_routing)
  return last_call_sysid_routing_.GetNoArena();
}
void CMsgClientServiceCallResponse::set_last_call_sysid_routing(const ::std::string& value) {
  set_has_last_call_sysid_routing();
  last_call_sysid_routing_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.last_call_sysid_routing)
}
#if LANG_CXX11
void CMsgClientServiceCallResponse::set_last_call_sysid_routing(::std::string&& value) {
  set_has_last_call_sysid_routing();
  last_call_sysid_routing_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientServiceCallResponse.last_call_sysid_routing)
}
#endif
void CMsgClientServiceCallResponse::set_last_call_sysid_routing(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_last_call_sysid_routing();
  last_call_sysid_routing_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientServiceCallResponse.last_call_sysid_routing)
}
void CMsgClientServiceCallResponse::set_last_call_sysid_routing(const void* value, size_t size) {
  set_has_last_call_sysid_routing();
  last_call_sysid_routing_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientServiceCallResponse.last_call_sysid_routing)
}
::std::string* CMsgClientServiceCallResponse::mutable_last_call_sysid_routing() {
  set_has_last_call_sysid_routing();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientServiceCallResponse.last_call_sysid_routing)
  return last_call_sysid_routing_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientServiceCallResponse::release_last_call_sysid_routing() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientServiceCallResponse.last_call_sysid_routing)
  clear_has_last_call_sysid_routing();
  return last_call_sysid_routing_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientServiceCallResponse::set_allocated_last_call_sysid_routing(::std::string* last_call_sysid_routing) {
  if (last_call_sysid_routing != NULL) {
    set_has_last_call_sysid_routing();
  } else {
    clear_has_last_call_sysid_routing();
  }
  last_call_sysid_routing_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), last_call_sysid_routing);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientServiceCallResponse.last_call_sysid_routing)
}

// optional uint32 last_ecallresult = 19;
bool CMsgClientServiceCallResponse::has_last_ecallresult() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void CMsgClientServiceCallResponse::set_has_last_ecallresult() {
  _has_bits_[0] |= 0x00040000u;
}
void CMsgClientServiceCallResponse::clear_has_last_ecallresult() {
  _has_bits_[0] &= ~0x00040000u;
}
void CMsgClientServiceCallResponse::clear_last_ecallresult() {
  last_ecallresult_ = 0u;
  clear_has_last_ecallresult();
}
::google::protobuf::uint32 CMsgClientServiceCallResponse::last_ecallresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.last_ecallresult)
  return last_ecallresult_;
}
void CMsgClientServiceCallResponse::set_last_ecallresult(::google::protobuf::uint32 value) {
  set_has_last_ecallresult();
  last_ecallresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.last_ecallresult)
}

// optional uint32 last_callissue_delta = 20;
bool CMsgClientServiceCallResponse::has_last_callissue_delta() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
void CMsgClientServiceCallResponse::set_has_last_callissue_delta() {
  _has_bits_[0] |= 0x00080000u;
}
void CMsgClientServiceCallResponse::clear_has_last_callissue_delta() {
  _has_bits_[0] &= ~0x00080000u;
}
void CMsgClientServiceCallResponse::clear_last_callissue_delta() {
  last_callissue_delta_ = 0u;
  clear_has_last_callissue_delta();
}
::google::protobuf::uint32 CMsgClientServiceCallResponse::last_callissue_delta() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.last_callissue_delta)
  return last_callissue_delta_;
}
void CMsgClientServiceCallResponse::set_last_callissue_delta(::google::protobuf::uint32 value) {
  set_has_last_callissue_delta();
  last_callissue_delta_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.last_callissue_delta)
}

// optional uint32 last_callcomplete_delta = 21;
bool CMsgClientServiceCallResponse::has_last_callcomplete_delta() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
void CMsgClientServiceCallResponse::set_has_last_callcomplete_delta() {
  _has_bits_[0] |= 0x00100000u;
}
void CMsgClientServiceCallResponse::clear_has_last_callcomplete_delta() {
  _has_bits_[0] &= ~0x00100000u;
}
void CMsgClientServiceCallResponse::clear_last_callcomplete_delta() {
  last_callcomplete_delta_ = 0u;
  clear_has_last_callcomplete_delta();
}
::google::protobuf::uint32 CMsgClientServiceCallResponse::last_callcomplete_delta() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientServiceCallResponse.last_callcomplete_delta)
  return last_callcomplete_delta_;
}
void CMsgClientServiceCallResponse::set_last_callcomplete_delta(::google::protobuf::uint32 value) {
  set_has_last_callcomplete_delta();
  last_callcomplete_delta_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientServiceCallResponse.last_callcomplete_delta)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMUnlockStreaming::CMsgAMUnlockStreaming()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgAMUnlockStreaming)
}
CMsgAMUnlockStreaming::CMsgAMUnlockStreaming(const CMsgAMUnlockStreaming& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgAMUnlockStreaming)
}

void CMsgAMUnlockStreaming::SharedCtor() {
  _cached_size_ = 0;
}

CMsgAMUnlockStreaming::~CMsgAMUnlockStreaming() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgAMUnlockStreaming)
  SharedDtor();
}

void CMsgAMUnlockStreaming::SharedDtor() {
}

void CMsgAMUnlockStreaming::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMUnlockStreaming::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMUnlockStreaming& CMsgAMUnlockStreaming::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgAMUnlockStreaming* CMsgAMUnlockStreaming::New(::google::protobuf::Arena* arena) const {
  CMsgAMUnlockStreaming* n = new CMsgAMUnlockStreaming;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMUnlockStreaming::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgAMUnlockStreaming)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMUnlockStreaming::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgAMUnlockStreaming)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgAMUnlockStreaming)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgAMUnlockStreaming)
  return false;
#undef DO_
}

void CMsgAMUnlockStreaming::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgAMUnlockStreaming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgAMUnlockStreaming)
}

::google::protobuf::uint8* CMsgAMUnlockStreaming::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgAMUnlockStreaming)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgAMUnlockStreaming)
  return target;
}

size_t CMsgAMUnlockStreaming::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgAMUnlockStreaming)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMUnlockStreaming::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgAMUnlockStreaming)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMUnlockStreaming* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMUnlockStreaming>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgAMUnlockStreaming)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgAMUnlockStreaming)
    MergeFrom(*source);
  }
}

void CMsgAMUnlockStreaming::MergeFrom(const CMsgAMUnlockStreaming& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgAMUnlockStreaming)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CMsgAMUnlockStreaming::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgAMUnlockStreaming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMUnlockStreaming::CopyFrom(const CMsgAMUnlockStreaming& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgAMUnlockStreaming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMUnlockStreaming::IsInitialized() const {
  return true;
}

void CMsgAMUnlockStreaming::Swap(CMsgAMUnlockStreaming* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMUnlockStreaming::InternalSwap(CMsgAMUnlockStreaming* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMUnlockStreaming::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAMUnlockStreaming

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgAMUnlockStreamingResponse::kEresultFieldNumber;
const int CMsgAMUnlockStreamingResponse::kEncryptionKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgAMUnlockStreamingResponse::CMsgAMUnlockStreamingResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgAMUnlockStreamingResponse)
}
CMsgAMUnlockStreamingResponse::CMsgAMUnlockStreamingResponse(const CMsgAMUnlockStreamingResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  encryption_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_encryption_key()) {
    encryption_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encryption_key_);
  }
  eresult_ = from.eresult_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgAMUnlockStreamingResponse)
}

void CMsgAMUnlockStreamingResponse::SharedCtor() {
  _cached_size_ = 0;
  encryption_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  eresult_ = 2;
}

CMsgAMUnlockStreamingResponse::~CMsgAMUnlockStreamingResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgAMUnlockStreamingResponse)
  SharedDtor();
}

void CMsgAMUnlockStreamingResponse::SharedDtor() {
  encryption_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgAMUnlockStreamingResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgAMUnlockStreamingResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgAMUnlockStreamingResponse& CMsgAMUnlockStreamingResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgAMUnlockStreamingResponse* CMsgAMUnlockStreamingResponse::New(::google::protobuf::Arena* arena) const {
  CMsgAMUnlockStreamingResponse* n = new CMsgAMUnlockStreamingResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgAMUnlockStreamingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgAMUnlockStreamingResponse)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_encryption_key()) {
      GOOGLE_DCHECK(!encryption_key_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*encryption_key_.UnsafeRawStringPointer())->clear();
    }
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgAMUnlockStreamingResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgAMUnlockStreamingResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes encryption_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_encryption_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgAMUnlockStreamingResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgAMUnlockStreamingResponse)
  return false;
#undef DO_
}

void CMsgAMUnlockStreamingResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgAMUnlockStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional bytes encryption_key = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->encryption_key(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgAMUnlockStreamingResponse)
}

::google::protobuf::uint8* CMsgAMUnlockStreamingResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgAMUnlockStreamingResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional bytes encryption_key = 2;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->encryption_key(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgAMUnlockStreamingResponse)
  return target;
}

size_t CMsgAMUnlockStreamingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgAMUnlockStreamingResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes encryption_key = 2;
    if (has_encryption_key()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->encryption_key());
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgAMUnlockStreamingResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgAMUnlockStreamingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgAMUnlockStreamingResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgAMUnlockStreamingResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgAMUnlockStreamingResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgAMUnlockStreamingResponse)
    MergeFrom(*source);
  }
}

void CMsgAMUnlockStreamingResponse::MergeFrom(const CMsgAMUnlockStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgAMUnlockStreamingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_encryption_key();
      encryption_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encryption_key_);
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgAMUnlockStreamingResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgAMUnlockStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgAMUnlockStreamingResponse::CopyFrom(const CMsgAMUnlockStreamingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgAMUnlockStreamingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgAMUnlockStreamingResponse::IsInitialized() const {
  return true;
}

void CMsgAMUnlockStreamingResponse::Swap(CMsgAMUnlockStreamingResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgAMUnlockStreamingResponse::InternalSwap(CMsgAMUnlockStreamingResponse* other) {
  encryption_key_.Swap(&other->encryption_key_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgAMUnlockStreamingResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgAMUnlockStreamingResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgAMUnlockStreamingResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgAMUnlockStreamingResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgAMUnlockStreamingResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgAMUnlockStreamingResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgAMUnlockStreamingResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAMUnlockStreamingResponse.eresult)
  return eresult_;
}
void CMsgAMUnlockStreamingResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAMUnlockStreamingResponse.eresult)
}

// optional bytes encryption_key = 2;
bool CMsgAMUnlockStreamingResponse::has_encryption_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgAMUnlockStreamingResponse::set_has_encryption_key() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgAMUnlockStreamingResponse::clear_has_encryption_key() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgAMUnlockStreamingResponse::clear_encryption_key() {
  encryption_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encryption_key();
}
const ::std::string& CMsgAMUnlockStreamingResponse::encryption_key() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAMUnlockStreamingResponse.encryption_key)
  return encryption_key_.GetNoArena();
}
void CMsgAMUnlockStreamingResponse::set_encryption_key(const ::std::string& value) {
  set_has_encryption_key();
  encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAMUnlockStreamingResponse.encryption_key)
}
#if LANG_CXX11
void CMsgAMUnlockStreamingResponse::set_encryption_key(::std::string&& value) {
  set_has_encryption_key();
  encryption_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgAMUnlockStreamingResponse.encryption_key)
}
#endif
void CMsgAMUnlockStreamingResponse::set_encryption_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_encryption_key();
  encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgAMUnlockStreamingResponse.encryption_key)
}
void CMsgAMUnlockStreamingResponse::set_encryption_key(const void* value, size_t size) {
  set_has_encryption_key();
  encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgAMUnlockStreamingResponse.encryption_key)
}
::std::string* CMsgAMUnlockStreamingResponse::mutable_encryption_key() {
  set_has_encryption_key();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgAMUnlockStreamingResponse.encryption_key)
  return encryption_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgAMUnlockStreamingResponse::release_encryption_key() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgAMUnlockStreamingResponse.encryption_key)
  clear_has_encryption_key();
  return encryption_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgAMUnlockStreamingResponse::set_allocated_encryption_key(::std::string* encryption_key) {
  if (encryption_key != NULL) {
    set_has_encryption_key();
  } else {
    clear_has_encryption_key();
  }
  encryption_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encryption_key);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgAMUnlockStreamingResponse.encryption_key)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientPlayingSessionState::kPlayingBlockedFieldNumber;
const int CMsgClientPlayingSessionState::kPlayingAppFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientPlayingSessionState::CMsgClientPlayingSessionState()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientPlayingSessionState)
}
CMsgClientPlayingSessionState::CMsgClientPlayingSessionState(const CMsgClientPlayingSessionState& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playing_blocked_, &from.playing_blocked_,
    reinterpret_cast<char*>(&playing_app_) -
    reinterpret_cast<char*>(&playing_blocked_) + sizeof(playing_app_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientPlayingSessionState)
}

void CMsgClientPlayingSessionState::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&playing_blocked_, 0, reinterpret_cast<char*>(&playing_app_) -
    reinterpret_cast<char*>(&playing_blocked_) + sizeof(playing_app_));
}

CMsgClientPlayingSessionState::~CMsgClientPlayingSessionState() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientPlayingSessionState)
  SharedDtor();
}

void CMsgClientPlayingSessionState::SharedDtor() {
}

void CMsgClientPlayingSessionState::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientPlayingSessionState::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientPlayingSessionState& CMsgClientPlayingSessionState::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientPlayingSessionState* CMsgClientPlayingSessionState::New(::google::protobuf::Arena* arena) const {
  CMsgClientPlayingSessionState* n = new CMsgClientPlayingSessionState;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientPlayingSessionState::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientPlayingSessionState)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&playing_blocked_, 0, reinterpret_cast<char*>(&playing_app_) -
      reinterpret_cast<char*>(&playing_blocked_) + sizeof(playing_app_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientPlayingSessionState::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientPlayingSessionState)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool playing_blocked = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_playing_blocked();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &playing_blocked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 playing_app = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_playing_app();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &playing_app_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientPlayingSessionState)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientPlayingSessionState)
  return false;
#undef DO_
}

void CMsgClientPlayingSessionState::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientPlayingSessionState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool playing_blocked = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->playing_blocked(), output);
  }

  // optional uint32 playing_app = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->playing_app(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientPlayingSessionState)
}

::google::protobuf::uint8* CMsgClientPlayingSessionState::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientPlayingSessionState)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool playing_blocked = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->playing_blocked(), target);
  }

  // optional uint32 playing_app = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->playing_app(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientPlayingSessionState)
  return target;
}

size_t CMsgClientPlayingSessionState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientPlayingSessionState)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bool playing_blocked = 2;
    if (has_playing_blocked()) {
      total_size += 1 + 1;
    }

    // optional uint32 playing_app = 3;
    if (has_playing_app()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->playing_app());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientPlayingSessionState::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientPlayingSessionState)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientPlayingSessionState* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientPlayingSessionState>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientPlayingSessionState)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientPlayingSessionState)
    MergeFrom(*source);
  }
}

void CMsgClientPlayingSessionState::MergeFrom(const CMsgClientPlayingSessionState& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientPlayingSessionState)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      playing_blocked_ = from.playing_blocked_;
    }
    if (cached_has_bits & 0x00000002u) {
      playing_app_ = from.playing_app_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientPlayingSessionState::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientPlayingSessionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientPlayingSessionState::CopyFrom(const CMsgClientPlayingSessionState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientPlayingSessionState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientPlayingSessionState::IsInitialized() const {
  return true;
}

void CMsgClientPlayingSessionState::Swap(CMsgClientPlayingSessionState* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientPlayingSessionState::InternalSwap(CMsgClientPlayingSessionState* other) {
  std::swap(playing_blocked_, other->playing_blocked_);
  std::swap(playing_app_, other->playing_app_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientPlayingSessionState::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientPlayingSessionState

// optional bool playing_blocked = 2;
bool CMsgClientPlayingSessionState::has_playing_blocked() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientPlayingSessionState::set_has_playing_blocked() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientPlayingSessionState::clear_has_playing_blocked() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientPlayingSessionState::clear_playing_blocked() {
  playing_blocked_ = false;
  clear_has_playing_blocked();
}
bool CMsgClientPlayingSessionState::playing_blocked() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPlayingSessionState.playing_blocked)
  return playing_blocked_;
}
void CMsgClientPlayingSessionState::set_playing_blocked(bool value) {
  set_has_playing_blocked();
  playing_blocked_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPlayingSessionState.playing_blocked)
}

// optional uint32 playing_app = 3;
bool CMsgClientPlayingSessionState::has_playing_app() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientPlayingSessionState::set_has_playing_app() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientPlayingSessionState::clear_has_playing_app() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientPlayingSessionState::clear_playing_app() {
  playing_app_ = 0u;
  clear_has_playing_app();
}
::google::protobuf::uint32 CMsgClientPlayingSessionState::playing_app() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPlayingSessionState.playing_app)
  return playing_app_;
}
void CMsgClientPlayingSessionState::set_playing_app(::google::protobuf::uint32 value) {
  set_has_playing_app();
  playing_app_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPlayingSessionState.playing_app)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientKickPlayingSession::kOnlyStopGameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientKickPlayingSession::CMsgClientKickPlayingSession()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientKickPlayingSession)
}
CMsgClientKickPlayingSession::CMsgClientKickPlayingSession(const CMsgClientKickPlayingSession& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  only_stop_game_ = from.only_stop_game_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientKickPlayingSession)
}

void CMsgClientKickPlayingSession::SharedCtor() {
  _cached_size_ = 0;
  only_stop_game_ = false;
}

CMsgClientKickPlayingSession::~CMsgClientKickPlayingSession() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientKickPlayingSession)
  SharedDtor();
}

void CMsgClientKickPlayingSession::SharedDtor() {
}

void CMsgClientKickPlayingSession::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientKickPlayingSession::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientKickPlayingSession& CMsgClientKickPlayingSession::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientKickPlayingSession* CMsgClientKickPlayingSession::New(::google::protobuf::Arena* arena) const {
  CMsgClientKickPlayingSession* n = new CMsgClientKickPlayingSession;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientKickPlayingSession::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientKickPlayingSession)
  only_stop_game_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientKickPlayingSession::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientKickPlayingSession)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool only_stop_game = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_only_stop_game();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &only_stop_game_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientKickPlayingSession)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientKickPlayingSession)
  return false;
#undef DO_
}

void CMsgClientKickPlayingSession::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientKickPlayingSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool only_stop_game = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->only_stop_game(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientKickPlayingSession)
}

::google::protobuf::uint8* CMsgClientKickPlayingSession::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientKickPlayingSession)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bool only_stop_game = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->only_stop_game(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientKickPlayingSession)
  return target;
}

size_t CMsgClientKickPlayingSession::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientKickPlayingSession)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional bool only_stop_game = 1;
  if (has_only_stop_game()) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientKickPlayingSession::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientKickPlayingSession)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientKickPlayingSession* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientKickPlayingSession>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientKickPlayingSession)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientKickPlayingSession)
    MergeFrom(*source);
  }
}

void CMsgClientKickPlayingSession::MergeFrom(const CMsgClientKickPlayingSession& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientKickPlayingSession)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_only_stop_game()) {
    set_only_stop_game(from.only_stop_game());
  }
}

void CMsgClientKickPlayingSession::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientKickPlayingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientKickPlayingSession::CopyFrom(const CMsgClientKickPlayingSession& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientKickPlayingSession)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientKickPlayingSession::IsInitialized() const {
  return true;
}

void CMsgClientKickPlayingSession::Swap(CMsgClientKickPlayingSession* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientKickPlayingSession::InternalSwap(CMsgClientKickPlayingSession* other) {
  std::swap(only_stop_game_, other->only_stop_game_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientKickPlayingSession::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientKickPlayingSession

// optional bool only_stop_game = 1;
bool CMsgClientKickPlayingSession::has_only_stop_game() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientKickPlayingSession::set_has_only_stop_game() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientKickPlayingSession::clear_has_only_stop_game() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientKickPlayingSession::clear_only_stop_game() {
  only_stop_game_ = false;
  clear_has_only_stop_game();
}
bool CMsgClientKickPlayingSession::only_stop_game() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientKickPlayingSession.only_stop_game)
  return only_stop_game_;
}
void CMsgClientKickPlayingSession::set_only_stop_game(bool value) {
  set_has_only_stop_game();
  only_stop_game_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientKickPlayingSession.only_stop_game)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCreateAccount::kAccountNameFieldNumber;
const int CMsgClientCreateAccount::kPasswordFieldNumber;
const int CMsgClientCreateAccount::kEmailFieldNumber;
const int CMsgClientCreateAccount::kLauncherFieldNumber;
const int CMsgClientCreateAccount::kLanguageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCreateAccount::CMsgClientCreateAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientCreateAccount)
}
CMsgClientCreateAccount::CMsgClientCreateAccount(const CMsgClientCreateAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account_name()) {
    account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  ::memcpy(&launcher_, &from.launcher_,
    reinterpret_cast<char*>(&language_) -
    reinterpret_cast<char*>(&launcher_) + sizeof(language_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientCreateAccount)
}

void CMsgClientCreateAccount::SharedCtor() {
  _cached_size_ = 0;
  account_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&launcher_, 0, reinterpret_cast<char*>(&language_) -
    reinterpret_cast<char*>(&launcher_) + sizeof(language_));
}

CMsgClientCreateAccount::~CMsgClientCreateAccount() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientCreateAccount)
  SharedDtor();
}

void CMsgClientCreateAccount::SharedDtor() {
  account_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CMsgClientCreateAccount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientCreateAccount::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCreateAccount& CMsgClientCreateAccount::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientCreateAccount* CMsgClientCreateAccount::New(::google::protobuf::Arena* arena) const {
  CMsgClientCreateAccount* n = new CMsgClientCreateAccount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientCreateAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientCreateAccount)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_account_name()) {
      GOOGLE_DCHECK(!account_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_email()) {
      GOOGLE_DCHECK(!email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*email_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&launcher_, 0, reinterpret_cast<char*>(&language_) -
      reinterpret_cast<char*>(&launcher_) + sizeof(language_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCreateAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientCreateAccount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account_name().data(), this->account_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientCreateAccount.account_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientCreateAccount.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string email = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CMsgClientCreateAccount.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 launcher = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_launcher();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &launcher_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 language = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u)) {
          set_has_language();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &language_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientCreateAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientCreateAccount)
  return false;
#undef DO_
}

void CMsgClientCreateAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientCreateAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCreateAccount.account_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_name(), output);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCreateAccount.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // optional string email = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCreateAccount.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->email(), output);
  }

  // optional uint32 launcher = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->launcher(), output);
  }

  // optional uint32 language = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->language(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientCreateAccount)
}

::google::protobuf::uint8* CMsgClientCreateAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientCreateAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string account_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account_name().data(), this->account_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCreateAccount.account_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_name(), target);
  }

  // optional string password = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCreateAccount.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // optional string email = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CMsgClientCreateAccount.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->email(), target);
  }

  // optional uint32 launcher = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->launcher(), target);
  }

  // optional uint32 language = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->language(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientCreateAccount)
  return target;
}

size_t CMsgClientCreateAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientCreateAccount)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string account_name = 1;
    if (has_account_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account_name());
    }

    // optional string password = 2;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string email = 3;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional uint32 launcher = 6;
    if (has_launcher()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->launcher());
    }

    // optional uint32 language = 7;
    if (has_language()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->language());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientCreateAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientCreateAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCreateAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCreateAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientCreateAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientCreateAccount)
    MergeFrom(*source);
  }
}

void CMsgClientCreateAccount::MergeFrom(const CMsgClientCreateAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientCreateAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_account_name();
      account_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000008u) {
      launcher_ = from.launcher_;
    }
    if (cached_has_bits & 0x00000010u) {
      language_ = from.language_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientCreateAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientCreateAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCreateAccount::CopyFrom(const CMsgClientCreateAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientCreateAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCreateAccount::IsInitialized() const {
  return true;
}

void CMsgClientCreateAccount::Swap(CMsgClientCreateAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCreateAccount::InternalSwap(CMsgClientCreateAccount* other) {
  account_name_.Swap(&other->account_name_);
  password_.Swap(&other->password_);
  email_.Swap(&other->email_);
  std::swap(launcher_, other->launcher_);
  std::swap(language_, other->language_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientCreateAccount::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientCreateAccount

// optional string account_name = 1;
bool CMsgClientCreateAccount::has_account_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientCreateAccount::set_has_account_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientCreateAccount::clear_has_account_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientCreateAccount::clear_account_name() {
  account_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account_name();
}
const ::std::string& CMsgClientCreateAccount::account_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCreateAccount.account_name)
  return account_name_.GetNoArena();
}
void CMsgClientCreateAccount::set_account_name(const ::std::string& value) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCreateAccount.account_name)
}
#if LANG_CXX11
void CMsgClientCreateAccount::set_account_name(::std::string&& value) {
  set_has_account_name();
  account_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientCreateAccount.account_name)
}
#endif
void CMsgClientCreateAccount::set_account_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientCreateAccount.account_name)
}
void CMsgClientCreateAccount::set_account_name(const char* value, size_t size) {
  set_has_account_name();
  account_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientCreateAccount.account_name)
}
::std::string* CMsgClientCreateAccount::mutable_account_name() {
  set_has_account_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientCreateAccount.account_name)
  return account_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientCreateAccount::release_account_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientCreateAccount.account_name)
  clear_has_account_name();
  return account_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientCreateAccount::set_allocated_account_name(::std::string* account_name) {
  if (account_name != NULL) {
    set_has_account_name();
  } else {
    clear_has_account_name();
  }
  account_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientCreateAccount.account_name)
}

// optional string password = 2;
bool CMsgClientCreateAccount::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientCreateAccount::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientCreateAccount::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientCreateAccount::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CMsgClientCreateAccount::password() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCreateAccount.password)
  return password_.GetNoArena();
}
void CMsgClientCreateAccount::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCreateAccount.password)
}
#if LANG_CXX11
void CMsgClientCreateAccount::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientCreateAccount.password)
}
#endif
void CMsgClientCreateAccount::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientCreateAccount.password)
}
void CMsgClientCreateAccount::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientCreateAccount.password)
}
::std::string* CMsgClientCreateAccount::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientCreateAccount.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientCreateAccount::release_password() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientCreateAccount.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientCreateAccount::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientCreateAccount.password)
}

// optional string email = 3;
bool CMsgClientCreateAccount::has_email() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientCreateAccount::set_has_email() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientCreateAccount::clear_has_email() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientCreateAccount::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
const ::std::string& CMsgClientCreateAccount::email() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCreateAccount.email)
  return email_.GetNoArena();
}
void CMsgClientCreateAccount::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCreateAccount.email)
}
#if LANG_CXX11
void CMsgClientCreateAccount::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientCreateAccount.email)
}
#endif
void CMsgClientCreateAccount::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientCreateAccount.email)
}
void CMsgClientCreateAccount::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientCreateAccount.email)
}
::std::string* CMsgClientCreateAccount::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientCreateAccount.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CMsgClientCreateAccount::release_email() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientCreateAccount.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CMsgClientCreateAccount::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientCreateAccount.email)
}

// optional uint32 launcher = 6;
bool CMsgClientCreateAccount::has_launcher() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientCreateAccount::set_has_launcher() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientCreateAccount::clear_has_launcher() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientCreateAccount::clear_launcher() {
  launcher_ = 0u;
  clear_has_launcher();
}
::google::protobuf::uint32 CMsgClientCreateAccount::launcher() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCreateAccount.launcher)
  return launcher_;
}
void CMsgClientCreateAccount::set_launcher(::google::protobuf::uint32 value) {
  set_has_launcher();
  launcher_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCreateAccount.launcher)
}

// optional uint32 language = 7;
bool CMsgClientCreateAccount::has_language() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CMsgClientCreateAccount::set_has_language() {
  _has_bits_[0] |= 0x00000010u;
}
void CMsgClientCreateAccount::clear_has_language() {
  _has_bits_[0] &= ~0x00000010u;
}
void CMsgClientCreateAccount::clear_language() {
  language_ = 0u;
  clear_has_language();
}
::google::protobuf::uint32 CMsgClientCreateAccount::language() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCreateAccount.language)
  return language_;
}
void CMsgClientCreateAccount::set_language(::google::protobuf::uint32 value) {
  set_has_language();
  language_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCreateAccount.language)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientCreateAccountResponse::kEresultFieldNumber;
const int CMsgClientCreateAccountResponse::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientCreateAccountResponse::CMsgClientCreateAccountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientCreateAccountResponse)
}
CMsgClientCreateAccountResponse::CMsgClientCreateAccountResponse(const CMsgClientCreateAccountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steamid_, &from.steamid_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&steamid_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientCreateAccountResponse)
}

void CMsgClientCreateAccountResponse::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
  eresult_ = 2;
}

CMsgClientCreateAccountResponse::~CMsgClientCreateAccountResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientCreateAccountResponse)
  SharedDtor();
}

void CMsgClientCreateAccountResponse::SharedDtor() {
}

void CMsgClientCreateAccountResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientCreateAccountResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientCreateAccountResponse& CMsgClientCreateAccountResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientCreateAccountResponse* CMsgClientCreateAccountResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientCreateAccountResponse* n = new CMsgClientCreateAccountResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientCreateAccountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientCreateAccountResponse)
  if (_has_bits_[0 / 32] & 3u) {
    steamid_ = GOOGLE_ULONGLONG(0);
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientCreateAccountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientCreateAccountResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 eresult = 1 [default = 2];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientCreateAccountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientCreateAccountResponse)
  return false;
#undef DO_
}

void CMsgClientCreateAccountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientCreateAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->eresult(), output);
  }

  // optional fixed64 steamid = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientCreateAccountResponse)
}

::google::protobuf::uint8* CMsgClientCreateAccountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientCreateAccountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 eresult = 1 [default = 2];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->eresult(), target);
  }

  // optional fixed64 steamid = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientCreateAccountResponse)
  return target;
}

size_t CMsgClientCreateAccountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientCreateAccountResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional fixed64 steamid = 2;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional int32 eresult = 1 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientCreateAccountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientCreateAccountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientCreateAccountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientCreateAccountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientCreateAccountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientCreateAccountResponse)
    MergeFrom(*source);
  }
}

void CMsgClientCreateAccountResponse::MergeFrom(const CMsgClientCreateAccountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientCreateAccountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientCreateAccountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientCreateAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientCreateAccountResponse::CopyFrom(const CMsgClientCreateAccountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientCreateAccountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientCreateAccountResponse::IsInitialized() const {
  return true;
}

void CMsgClientCreateAccountResponse::Swap(CMsgClientCreateAccountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientCreateAccountResponse::InternalSwap(CMsgClientCreateAccountResponse* other) {
  std::swap(steamid_, other->steamid_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientCreateAccountResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientCreateAccountResponse

// optional int32 eresult = 1 [default = 2];
bool CMsgClientCreateAccountResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientCreateAccountResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientCreateAccountResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientCreateAccountResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientCreateAccountResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCreateAccountResponse.eresult)
  return eresult_;
}
void CMsgClientCreateAccountResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCreateAccountResponse.eresult)
}

// optional fixed64 steamid = 2;
bool CMsgClientCreateAccountResponse::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientCreateAccountResponse::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientCreateAccountResponse::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientCreateAccountResponse::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
::google::protobuf::uint64 CMsgClientCreateAccountResponse::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCreateAccountResponse.steamid)
  return steamid_;
}
void CMsgClientCreateAccountResponse::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCreateAccountResponse.steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientVoiceCallPreAuthorize::kCallerSteamidFieldNumber;
const int CMsgClientVoiceCallPreAuthorize::kReceiverSteamidFieldNumber;
const int CMsgClientVoiceCallPreAuthorize::kCallerIdFieldNumber;
const int CMsgClientVoiceCallPreAuthorize::kHangupFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientVoiceCallPreAuthorize::CMsgClientVoiceCallPreAuthorize()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientVoiceCallPreAuthorize)
}
CMsgClientVoiceCallPreAuthorize::CMsgClientVoiceCallPreAuthorize(const CMsgClientVoiceCallPreAuthorize& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&caller_steamid_, &from.caller_steamid_,
    reinterpret_cast<char*>(&hangup_) -
    reinterpret_cast<char*>(&caller_steamid_) + sizeof(hangup_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientVoiceCallPreAuthorize)
}

void CMsgClientVoiceCallPreAuthorize::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&caller_steamid_, 0, reinterpret_cast<char*>(&hangup_) -
    reinterpret_cast<char*>(&caller_steamid_) + sizeof(hangup_));
}

CMsgClientVoiceCallPreAuthorize::~CMsgClientVoiceCallPreAuthorize() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientVoiceCallPreAuthorize)
  SharedDtor();
}

void CMsgClientVoiceCallPreAuthorize::SharedDtor() {
}

void CMsgClientVoiceCallPreAuthorize::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientVoiceCallPreAuthorize::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientVoiceCallPreAuthorize& CMsgClientVoiceCallPreAuthorize::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientVoiceCallPreAuthorize* CMsgClientVoiceCallPreAuthorize::New(::google::protobuf::Arena* arena) const {
  CMsgClientVoiceCallPreAuthorize* n = new CMsgClientVoiceCallPreAuthorize;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientVoiceCallPreAuthorize::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&caller_steamid_, 0, reinterpret_cast<char*>(&hangup_) -
      reinterpret_cast<char*>(&caller_steamid_) + sizeof(hangup_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientVoiceCallPreAuthorize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 caller_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_caller_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &caller_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 receiver_steamid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_receiver_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &receiver_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 caller_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_caller_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caller_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool hangup = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_hangup();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hangup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientVoiceCallPreAuthorize)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientVoiceCallPreAuthorize)
  return false;
#undef DO_
}

void CMsgClientVoiceCallPreAuthorize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 caller_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->caller_steamid(), output);
  }

  // optional fixed64 receiver_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->receiver_steamid(), output);
  }

  // optional int32 caller_id = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->caller_id(), output);
  }

  // optional bool hangup = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->hangup(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientVoiceCallPreAuthorize)
}

::google::protobuf::uint8* CMsgClientVoiceCallPreAuthorize::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 caller_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->caller_steamid(), target);
  }

  // optional fixed64 receiver_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->receiver_steamid(), target);
  }

  // optional int32 caller_id = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->caller_id(), target);
  }

  // optional bool hangup = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->hangup(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientVoiceCallPreAuthorize)
  return target;
}

size_t CMsgClientVoiceCallPreAuthorize::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 caller_steamid = 1;
    if (has_caller_steamid()) {
      total_size += 1 + 8;
    }

    // optional fixed64 receiver_steamid = 2;
    if (has_receiver_steamid()) {
      total_size += 1 + 8;
    }

    // optional int32 caller_id = 3;
    if (has_caller_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caller_id());
    }

    // optional bool hangup = 4;
    if (has_hangup()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientVoiceCallPreAuthorize::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientVoiceCallPreAuthorize* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientVoiceCallPreAuthorize>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientVoiceCallPreAuthorize)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientVoiceCallPreAuthorize)
    MergeFrom(*source);
  }
}

void CMsgClientVoiceCallPreAuthorize::MergeFrom(const CMsgClientVoiceCallPreAuthorize& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      caller_steamid_ = from.caller_steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      receiver_steamid_ = from.receiver_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      caller_id_ = from.caller_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      hangup_ = from.hangup_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientVoiceCallPreAuthorize::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientVoiceCallPreAuthorize::CopyFrom(const CMsgClientVoiceCallPreAuthorize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientVoiceCallPreAuthorize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientVoiceCallPreAuthorize::IsInitialized() const {
  return true;
}

void CMsgClientVoiceCallPreAuthorize::Swap(CMsgClientVoiceCallPreAuthorize* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientVoiceCallPreAuthorize::InternalSwap(CMsgClientVoiceCallPreAuthorize* other) {
  std::swap(caller_steamid_, other->caller_steamid_);
  std::swap(receiver_steamid_, other->receiver_steamid_);
  std::swap(caller_id_, other->caller_id_);
  std::swap(hangup_, other->hangup_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientVoiceCallPreAuthorize::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientVoiceCallPreAuthorize

// optional fixed64 caller_steamid = 1;
bool CMsgClientVoiceCallPreAuthorize::has_caller_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientVoiceCallPreAuthorize::set_has_caller_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientVoiceCallPreAuthorize::clear_has_caller_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientVoiceCallPreAuthorize::clear_caller_steamid() {
  caller_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_caller_steamid();
}
::google::protobuf::uint64 CMsgClientVoiceCallPreAuthorize::caller_steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientVoiceCallPreAuthorize.caller_steamid)
  return caller_steamid_;
}
void CMsgClientVoiceCallPreAuthorize::set_caller_steamid(::google::protobuf::uint64 value) {
  set_has_caller_steamid();
  caller_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientVoiceCallPreAuthorize.caller_steamid)
}

// optional fixed64 receiver_steamid = 2;
bool CMsgClientVoiceCallPreAuthorize::has_receiver_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientVoiceCallPreAuthorize::set_has_receiver_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientVoiceCallPreAuthorize::clear_has_receiver_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientVoiceCallPreAuthorize::clear_receiver_steamid() {
  receiver_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_receiver_steamid();
}
::google::protobuf::uint64 CMsgClientVoiceCallPreAuthorize::receiver_steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientVoiceCallPreAuthorize.receiver_steamid)
  return receiver_steamid_;
}
void CMsgClientVoiceCallPreAuthorize::set_receiver_steamid(::google::protobuf::uint64 value) {
  set_has_receiver_steamid();
  receiver_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientVoiceCallPreAuthorize.receiver_steamid)
}

// optional int32 caller_id = 3;
bool CMsgClientVoiceCallPreAuthorize::has_caller_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientVoiceCallPreAuthorize::set_has_caller_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientVoiceCallPreAuthorize::clear_has_caller_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientVoiceCallPreAuthorize::clear_caller_id() {
  caller_id_ = 0;
  clear_has_caller_id();
}
::google::protobuf::int32 CMsgClientVoiceCallPreAuthorize::caller_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientVoiceCallPreAuthorize.caller_id)
  return caller_id_;
}
void CMsgClientVoiceCallPreAuthorize::set_caller_id(::google::protobuf::int32 value) {
  set_has_caller_id();
  caller_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientVoiceCallPreAuthorize.caller_id)
}

// optional bool hangup = 4;
bool CMsgClientVoiceCallPreAuthorize::has_hangup() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientVoiceCallPreAuthorize::set_has_hangup() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientVoiceCallPreAuthorize::clear_has_hangup() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientVoiceCallPreAuthorize::clear_hangup() {
  hangup_ = false;
  clear_has_hangup();
}
bool CMsgClientVoiceCallPreAuthorize::hangup() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientVoiceCallPreAuthorize.hangup)
  return hangup_;
}
void CMsgClientVoiceCallPreAuthorize::set_hangup(bool value) {
  set_has_hangup();
  hangup_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientVoiceCallPreAuthorize.hangup)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMsgClientVoiceCallPreAuthorizeResponse::kCallerSteamidFieldNumber;
const int CMsgClientVoiceCallPreAuthorizeResponse::kReceiverSteamidFieldNumber;
const int CMsgClientVoiceCallPreAuthorizeResponse::kEresultFieldNumber;
const int CMsgClientVoiceCallPreAuthorizeResponse::kCallerIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMsgClientVoiceCallPreAuthorizeResponse::CMsgClientVoiceCallPreAuthorizeResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
}
CMsgClientVoiceCallPreAuthorizeResponse::CMsgClientVoiceCallPreAuthorizeResponse(const CMsgClientVoiceCallPreAuthorizeResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&caller_steamid_, &from.caller_steamid_,
    reinterpret_cast<char*>(&eresult_) -
    reinterpret_cast<char*>(&caller_steamid_) + sizeof(eresult_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
}

void CMsgClientVoiceCallPreAuthorizeResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&caller_steamid_, 0, reinterpret_cast<char*>(&caller_id_) -
    reinterpret_cast<char*>(&caller_steamid_) + sizeof(caller_id_));
  eresult_ = 2;
}

CMsgClientVoiceCallPreAuthorizeResponse::~CMsgClientVoiceCallPreAuthorizeResponse() {
  // @@protoc_insertion_point(destructor:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  SharedDtor();
}

void CMsgClientVoiceCallPreAuthorizeResponse::SharedDtor() {
}

void CMsgClientVoiceCallPreAuthorizeResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMsgClientVoiceCallPreAuthorizeResponse::descriptor() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMsgClientVoiceCallPreAuthorizeResponse& CMsgClientVoiceCallPreAuthorizeResponse::default_instance() {
  protobuf_steammessages_5fclientserver_5f2_2eproto::InitDefaults();
  return *internal_default_instance();
}

CMsgClientVoiceCallPreAuthorizeResponse* CMsgClientVoiceCallPreAuthorizeResponse::New(::google::protobuf::Arena* arena) const {
  CMsgClientVoiceCallPreAuthorizeResponse* n = new CMsgClientVoiceCallPreAuthorizeResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMsgClientVoiceCallPreAuthorizeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&caller_steamid_, 0, reinterpret_cast<char*>(&caller_id_) -
      reinterpret_cast<char*>(&caller_steamid_) + sizeof(caller_id_));
    eresult_ = 2;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMsgClientVoiceCallPreAuthorizeResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 caller_steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_caller_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &caller_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 receiver_steamid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_receiver_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &receiver_steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 eresult = 3 [default = 2];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_eresult();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &eresult_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 caller_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_caller_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &caller_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  return false;
#undef DO_
}

void CMsgClientVoiceCallPreAuthorizeResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 caller_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->caller_steamid(), output);
  }

  // optional fixed64 receiver_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->receiver_steamid(), output);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->eresult(), output);
  }

  // optional int32 caller_id = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->caller_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
}

::google::protobuf::uint8* CMsgClientVoiceCallPreAuthorizeResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 caller_steamid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->caller_steamid(), target);
  }

  // optional fixed64 receiver_steamid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->receiver_steamid(), target);
  }

  // optional int32 eresult = 3 [default = 2];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->eresult(), target);
  }

  // optional int32 caller_id = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->caller_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  return target;
}

size_t CMsgClientVoiceCallPreAuthorizeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional fixed64 caller_steamid = 1;
    if (has_caller_steamid()) {
      total_size += 1 + 8;
    }

    // optional fixed64 receiver_steamid = 2;
    if (has_receiver_steamid()) {
      total_size += 1 + 8;
    }

    // optional int32 caller_id = 4;
    if (has_caller_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->caller_id());
    }

    // optional int32 eresult = 3 [default = 2];
    if (has_eresult()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->eresult());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMsgClientVoiceCallPreAuthorizeResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CMsgClientVoiceCallPreAuthorizeResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMsgClientVoiceCallPreAuthorizeResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
    MergeFrom(*source);
  }
}

void CMsgClientVoiceCallPreAuthorizeResponse::MergeFrom(const CMsgClientVoiceCallPreAuthorizeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      caller_steamid_ = from.caller_steamid_;
    }
    if (cached_has_bits & 0x00000002u) {
      receiver_steamid_ = from.receiver_steamid_;
    }
    if (cached_has_bits & 0x00000004u) {
      caller_id_ = from.caller_id_;
    }
    if (cached_has_bits & 0x00000008u) {
      eresult_ = from.eresult_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMsgClientVoiceCallPreAuthorizeResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMsgClientVoiceCallPreAuthorizeResponse::CopyFrom(const CMsgClientVoiceCallPreAuthorizeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMsgClientVoiceCallPreAuthorizeResponse::IsInitialized() const {
  return true;
}

void CMsgClientVoiceCallPreAuthorizeResponse::Swap(CMsgClientVoiceCallPreAuthorizeResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMsgClientVoiceCallPreAuthorizeResponse::InternalSwap(CMsgClientVoiceCallPreAuthorizeResponse* other) {
  std::swap(caller_steamid_, other->caller_steamid_);
  std::swap(receiver_steamid_, other->receiver_steamid_);
  std::swap(caller_id_, other->caller_id_);
  std::swap(eresult_, other->eresult_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMsgClientVoiceCallPreAuthorizeResponse::GetMetadata() const {
  protobuf_steammessages_5fclientserver_5f2_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fclientserver_5f2_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientVoiceCallPreAuthorizeResponse

// optional fixed64 caller_steamid = 1;
bool CMsgClientVoiceCallPreAuthorizeResponse::has_caller_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMsgClientVoiceCallPreAuthorizeResponse::set_has_caller_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CMsgClientVoiceCallPreAuthorizeResponse::clear_has_caller_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMsgClientVoiceCallPreAuthorizeResponse::clear_caller_steamid() {
  caller_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_caller_steamid();
}
::google::protobuf::uint64 CMsgClientVoiceCallPreAuthorizeResponse::caller_steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse.caller_steamid)
  return caller_steamid_;
}
void CMsgClientVoiceCallPreAuthorizeResponse::set_caller_steamid(::google::protobuf::uint64 value) {
  set_has_caller_steamid();
  caller_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse.caller_steamid)
}

// optional fixed64 receiver_steamid = 2;
bool CMsgClientVoiceCallPreAuthorizeResponse::has_receiver_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMsgClientVoiceCallPreAuthorizeResponse::set_has_receiver_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
void CMsgClientVoiceCallPreAuthorizeResponse::clear_has_receiver_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMsgClientVoiceCallPreAuthorizeResponse::clear_receiver_steamid() {
  receiver_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_receiver_steamid();
}
::google::protobuf::uint64 CMsgClientVoiceCallPreAuthorizeResponse::receiver_steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse.receiver_steamid)
  return receiver_steamid_;
}
void CMsgClientVoiceCallPreAuthorizeResponse::set_receiver_steamid(::google::protobuf::uint64 value) {
  set_has_receiver_steamid();
  receiver_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse.receiver_steamid)
}

// optional int32 eresult = 3 [default = 2];
bool CMsgClientVoiceCallPreAuthorizeResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMsgClientVoiceCallPreAuthorizeResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000008u;
}
void CMsgClientVoiceCallPreAuthorizeResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMsgClientVoiceCallPreAuthorizeResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
::google::protobuf::int32 CMsgClientVoiceCallPreAuthorizeResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse.eresult)
  return eresult_;
}
void CMsgClientVoiceCallPreAuthorizeResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse.eresult)
}

// optional int32 caller_id = 4;
bool CMsgClientVoiceCallPreAuthorizeResponse::has_caller_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMsgClientVoiceCallPreAuthorizeResponse::set_has_caller_id() {
  _has_bits_[0] |= 0x00000004u;
}
void CMsgClientVoiceCallPreAuthorizeResponse::clear_has_caller_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMsgClientVoiceCallPreAuthorizeResponse::clear_caller_id() {
  caller_id_ = 0;
  clear_has_caller_id();
}
::google::protobuf::int32 CMsgClientVoiceCallPreAuthorizeResponse::caller_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse.caller_id)
  return caller_id_;
}
void CMsgClientVoiceCallPreAuthorizeResponse::set_caller_id(::google::protobuf::int32 value) {
  set_has_caller_id();
  caller_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientVoiceCallPreAuthorizeResponse.caller_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)
