// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_base.proto

#ifndef PROTOBUF_steammessages_5fbase_2eproto__INCLUDED
#define PROTOBUF_steammessages_5fbase_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/descriptor.pb.h>
// @@protoc_insertion_point(includes)
namespace google {
namespace protobuf {
class DescriptorProto;
class DescriptorProtoDefaultTypeInternal;
extern DescriptorProtoDefaultTypeInternal _DescriptorProto_default_instance_;
class DescriptorProto_ExtensionRange;
class DescriptorProto_ExtensionRangeDefaultTypeInternal;
extern DescriptorProto_ExtensionRangeDefaultTypeInternal _DescriptorProto_ExtensionRange_default_instance_;
class EnumDescriptorProto;
class EnumDescriptorProtoDefaultTypeInternal;
extern EnumDescriptorProtoDefaultTypeInternal _EnumDescriptorProto_default_instance_;
class EnumOptions;
class EnumOptionsDefaultTypeInternal;
extern EnumOptionsDefaultTypeInternal _EnumOptions_default_instance_;
class EnumValueDescriptorProto;
class EnumValueDescriptorProtoDefaultTypeInternal;
extern EnumValueDescriptorProtoDefaultTypeInternal _EnumValueDescriptorProto_default_instance_;
class EnumValueOptions;
class EnumValueOptionsDefaultTypeInternal;
extern EnumValueOptionsDefaultTypeInternal _EnumValueOptions_default_instance_;
class FieldDescriptorProto;
class FieldDescriptorProtoDefaultTypeInternal;
extern FieldDescriptorProtoDefaultTypeInternal _FieldDescriptorProto_default_instance_;
class FieldOptions;
class FieldOptionsDefaultTypeInternal;
extern FieldOptionsDefaultTypeInternal _FieldOptions_default_instance_;
class FileDescriptorProto;
class FileDescriptorProtoDefaultTypeInternal;
extern FileDescriptorProtoDefaultTypeInternal _FileDescriptorProto_default_instance_;
class FileDescriptorSet;
class FileDescriptorSetDefaultTypeInternal;
extern FileDescriptorSetDefaultTypeInternal _FileDescriptorSet_default_instance_;
class FileOptions;
class FileOptionsDefaultTypeInternal;
extern FileOptionsDefaultTypeInternal _FileOptions_default_instance_;
class MessageOptions;
class MessageOptionsDefaultTypeInternal;
extern MessageOptionsDefaultTypeInternal _MessageOptions_default_instance_;
class MethodDescriptorProto;
class MethodDescriptorProtoDefaultTypeInternal;
extern MethodDescriptorProtoDefaultTypeInternal _MethodDescriptorProto_default_instance_;
class MethodOptions;
class MethodOptionsDefaultTypeInternal;
extern MethodOptionsDefaultTypeInternal _MethodOptions_default_instance_;
class OneofDescriptorProto;
class OneofDescriptorProtoDefaultTypeInternal;
extern OneofDescriptorProtoDefaultTypeInternal _OneofDescriptorProto_default_instance_;
class ServiceDescriptorProto;
class ServiceDescriptorProtoDefaultTypeInternal;
extern ServiceDescriptorProtoDefaultTypeInternal _ServiceDescriptorProto_default_instance_;
class ServiceOptions;
class ServiceOptionsDefaultTypeInternal;
extern ServiceOptionsDefaultTypeInternal _ServiceOptions_default_instance_;
class SourceCodeInfo;
class SourceCodeInfoDefaultTypeInternal;
extern SourceCodeInfoDefaultTypeInternal _SourceCodeInfo_default_instance_;
class SourceCodeInfo_Location;
class SourceCodeInfo_LocationDefaultTypeInternal;
extern SourceCodeInfo_LocationDefaultTypeInternal _SourceCodeInfo_Location_default_instance_;
class UninterpretedOption;
class UninterpretedOptionDefaultTypeInternal;
extern UninterpretedOptionDefaultTypeInternal _UninterpretedOption_default_instance_;
class UninterpretedOption_NamePart;
class UninterpretedOption_NamePartDefaultTypeInternal;
extern UninterpretedOption_NamePartDefaultTypeInternal _UninterpretedOption_NamePart_default_instance_;
}  // namespace protobuf
}  // namespace google
namespace proto {
namespace steam {
class CCDDBAppDetailCommon;
class CCDDBAppDetailCommonDefaultTypeInternal;
extern CCDDBAppDetailCommonDefaultTypeInternal _CCDDBAppDetailCommon_default_instance_;
class CMsgAppRights;
class CMsgAppRightsDefaultTypeInternal;
extern CMsgAppRightsDefaultTypeInternal _CMsgAppRights_default_instance_;
class CMsgAuthTicket;
class CMsgAuthTicketDefaultTypeInternal;
extern CMsgAuthTicketDefaultTypeInternal _CMsgAuthTicket_default_instance_;
class CMsgMulti;
class CMsgMultiDefaultTypeInternal;
extern CMsgMultiDefaultTypeInternal _CMsgMulti_default_instance_;
class CMsgProtoBufHeader;
class CMsgProtoBufHeaderDefaultTypeInternal;
extern CMsgProtoBufHeaderDefaultTypeInternal _CMsgProtoBufHeader_default_instance_;
class CMsgProtobufWrapped;
class CMsgProtobufWrappedDefaultTypeInternal;
extern CMsgProtobufWrappedDefaultTypeInternal _CMsgProtobufWrapped_default_instance_;
}  // namespace steam
}  // namespace proto

namespace proto {
namespace steam {

namespace protobuf_steammessages_5fbase_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_steammessages_5fbase_2eproto

// ===================================================================

class CMsgProtoBufHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgProtoBufHeader) */ {
 public:
  CMsgProtoBufHeader();
  virtual ~CMsgProtoBufHeader();

  CMsgProtoBufHeader(const CMsgProtoBufHeader& from);

  inline CMsgProtoBufHeader& operator=(const CMsgProtoBufHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgProtoBufHeader& default_instance();

  static inline const CMsgProtoBufHeader* internal_default_instance() {
    return reinterpret_cast<const CMsgProtoBufHeader*>(
               &_CMsgProtoBufHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMsgProtoBufHeader* other);

  // implements Message ----------------------------------------------

  inline CMsgProtoBufHeader* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgProtoBufHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgProtoBufHeader& from);
  void MergeFrom(const CMsgProtoBufHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgProtoBufHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 forward_to_sysid = 27;
  int forward_to_sysid_size() const;
  void clear_forward_to_sysid();
  static const int kForwardToSysidFieldNumber = 27;
  ::google::protobuf::uint32 forward_to_sysid(int index) const;
  void set_forward_to_sysid(int index, ::google::protobuf::uint32 value);
  void add_forward_to_sysid(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      forward_to_sysid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_forward_to_sysid();

  // optional string target_job_name = 12;
  bool has_target_job_name() const;
  void clear_target_job_name();
  static const int kTargetJobNameFieldNumber = 12;
  const ::std::string& target_job_name() const;
  void set_target_job_name(const ::std::string& value);
  #if LANG_CXX11
  void set_target_job_name(::std::string&& value);
  #endif
  void set_target_job_name(const char* value);
  void set_target_job_name(const char* value, size_t size);
  ::std::string* mutable_target_job_name();
  ::std::string* release_target_job_name();
  void set_allocated_target_job_name(::std::string* target_job_name);

  // optional string error_message = 14;
  bool has_error_message() const;
  void clear_error_message();
  static const int kErrorMessageFieldNumber = 14;
  const ::std::string& error_message() const;
  void set_error_message(const ::std::string& value);
  #if LANG_CXX11
  void set_error_message(::std::string&& value);
  #endif
  void set_error_message(const char* value);
  void set_error_message(const char* value, size_t size);
  ::std::string* mutable_error_message();
  ::std::string* release_error_message();
  void set_allocated_error_message(::std::string* error_message);

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional int32 client_sessionid = 2;
  bool has_client_sessionid() const;
  void clear_client_sessionid();
  static const int kClientSessionidFieldNumber = 2;
  ::google::protobuf::int32 client_sessionid() const;
  void set_client_sessionid(::google::protobuf::int32 value);

  // optional uint32 routing_appid = 3;
  bool has_routing_appid() const;
  void clear_routing_appid();
  static const int kRoutingAppidFieldNumber = 3;
  ::google::protobuf::uint32 routing_appid() const;
  void set_routing_appid(::google::protobuf::uint32 value);

  // optional uint32 ip = 15;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 15;
  ::google::protobuf::uint32 ip() const;
  void set_ip(::google::protobuf::uint32 value);

  // optional uint32 auth_account_flags = 16;
  bool has_auth_account_flags() const;
  void clear_auth_account_flags();
  static const int kAuthAccountFlagsFieldNumber = 16;
  ::google::protobuf::uint32 auth_account_flags() const;
  void set_auth_account_flags(::google::protobuf::uint32 value);

  // optional uint32 publisher_group_id = 19;
  bool has_publisher_group_id() const;
  void clear_publisher_group_id();
  static const int kPublisherGroupIdFieldNumber = 19;
  ::google::protobuf::uint32 publisher_group_id() const;
  void set_publisher_group_id(::google::protobuf::uint32 value);

  // optional uint32 sysid = 20;
  bool has_sysid() const;
  void clear_sysid();
  static const int kSysidFieldNumber = 20;
  ::google::protobuf::uint32 sysid() const;
  void set_sysid(::google::protobuf::uint32 value);

  // optional uint64 trace_tag = 21;
  bool has_trace_tag() const;
  void clear_trace_tag();
  static const int kTraceTagFieldNumber = 21;
  ::google::protobuf::uint64 trace_tag() const;
  void set_trace_tag(::google::protobuf::uint64 value);

  // optional uint32 token_source = 22;
  bool has_token_source() const;
  void clear_token_source();
  static const int kTokenSourceFieldNumber = 22;
  ::google::protobuf::uint32 token_source() const;
  void set_token_source(::google::protobuf::uint32 value);

  // optional int32 seq_num = 24;
  bool has_seq_num() const;
  void clear_seq_num();
  static const int kSeqNumFieldNumber = 24;
  ::google::protobuf::int32 seq_num() const;
  void set_seq_num(::google::protobuf::int32 value);

  // optional bool admin_spoofing_user = 23;
  bool has_admin_spoofing_user() const;
  void clear_admin_spoofing_user();
  static const int kAdminSpoofingUserFieldNumber = 23;
  bool admin_spoofing_user() const;
  void set_admin_spoofing_user(bool value);

  // optional bool is_from_external_source = 26;
  bool has_is_from_external_source() const;
  void clear_is_from_external_source();
  static const int kIsFromExternalSourceFieldNumber = 26;
  bool is_from_external_source() const;
  void set_is_from_external_source(bool value);

  // optional uint32 webapi_key_id = 25;
  bool has_webapi_key_id() const;
  void clear_webapi_key_id();
  static const int kWebapiKeyIdFieldNumber = 25;
  ::google::protobuf::uint32 webapi_key_id() const;
  void set_webapi_key_id(::google::protobuf::uint32 value);

  // optional fixed64 jobid_source = 10 [default = 18446744073709551615];
  bool has_jobid_source() const;
  void clear_jobid_source();
  static const int kJobidSourceFieldNumber = 10;
  ::google::protobuf::uint64 jobid_source() const;
  void set_jobid_source(::google::protobuf::uint64 value);

  // optional fixed64 jobid_target = 11 [default = 18446744073709551615];
  bool has_jobid_target() const;
  void clear_jobid_target();
  static const int kJobidTargetFieldNumber = 11;
  ::google::protobuf::uint64 jobid_target() const;
  void set_jobid_target(::google::protobuf::uint64 value);

  // optional int32 eresult = 13 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 13;
  ::google::protobuf::int32 eresult() const;
  void set_eresult(::google::protobuf::int32 value);

  // optional int32 transport_error = 17 [default = 1];
  bool has_transport_error() const;
  void clear_transport_error();
  static const int kTransportErrorFieldNumber = 17;
  ::google::protobuf::int32 transport_error() const;
  void set_transport_error(::google::protobuf::int32 value);

  // optional uint64 messageid = 18 [default = 18446744073709551615];
  bool has_messageid() const;
  void clear_messageid();
  static const int kMessageidFieldNumber = 18;
  ::google::protobuf::uint64 messageid() const;
  void set_messageid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgProtoBufHeader)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_client_sessionid();
  void clear_has_client_sessionid();
  void set_has_routing_appid();
  void clear_has_routing_appid();
  void set_has_jobid_source();
  void clear_has_jobid_source();
  void set_has_jobid_target();
  void clear_has_jobid_target();
  void set_has_target_job_name();
  void clear_has_target_job_name();
  void set_has_seq_num();
  void clear_has_seq_num();
  void set_has_eresult();
  void clear_has_eresult();
  void set_has_error_message();
  void clear_has_error_message();
  void set_has_ip();
  void clear_has_ip();
  void set_has_auth_account_flags();
  void clear_has_auth_account_flags();
  void set_has_token_source();
  void clear_has_token_source();
  void set_has_admin_spoofing_user();
  void clear_has_admin_spoofing_user();
  void set_has_transport_error();
  void clear_has_transport_error();
  void set_has_messageid();
  void clear_has_messageid();
  void set_has_publisher_group_id();
  void clear_has_publisher_group_id();
  void set_has_sysid();
  void clear_has_sysid();
  void set_has_trace_tag();
  void clear_has_trace_tag();
  void set_has_webapi_key_id();
  void clear_has_webapi_key_id();
  void set_has_is_from_external_source();
  void clear_has_is_from_external_source();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > forward_to_sysid_;
  ::google::protobuf::internal::ArenaStringPtr target_job_name_;
  ::google::protobuf::internal::ArenaStringPtr error_message_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::int32 client_sessionid_;
  ::google::protobuf::uint32 routing_appid_;
  ::google::protobuf::uint32 ip_;
  ::google::protobuf::uint32 auth_account_flags_;
  ::google::protobuf::uint32 publisher_group_id_;
  ::google::protobuf::uint32 sysid_;
  ::google::protobuf::uint64 trace_tag_;
  ::google::protobuf::uint32 token_source_;
  ::google::protobuf::int32 seq_num_;
  bool admin_spoofing_user_;
  bool is_from_external_source_;
  ::google::protobuf::uint32 webapi_key_id_;
  ::google::protobuf::uint64 jobid_source_;
  ::google::protobuf::uint64 jobid_target_;
  ::google::protobuf::int32 eresult_;
  ::google::protobuf::int32 transport_error_;
  ::google::protobuf::uint64 messageid_;
  friend struct protobuf_steammessages_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgMulti : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgMulti) */ {
 public:
  CMsgMulti();
  virtual ~CMsgMulti();

  CMsgMulti(const CMsgMulti& from);

  inline CMsgMulti& operator=(const CMsgMulti& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMulti& default_instance();

  static inline const CMsgMulti* internal_default_instance() {
    return reinterpret_cast<const CMsgMulti*>(
               &_CMsgMulti_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMsgMulti* other);

  // implements Message ----------------------------------------------

  inline CMsgMulti* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMulti* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMulti& from);
  void MergeFrom(const CMsgMulti& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMulti* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes message_body = 2;
  bool has_message_body() const;
  void clear_message_body();
  static const int kMessageBodyFieldNumber = 2;
  const ::std::string& message_body() const;
  void set_message_body(const ::std::string& value);
  #if LANG_CXX11
  void set_message_body(::std::string&& value);
  #endif
  void set_message_body(const char* value);
  void set_message_body(const void* value, size_t size);
  ::std::string* mutable_message_body();
  ::std::string* release_message_body();
  void set_allocated_message_body(::std::string* message_body);

  // optional uint32 size_unzipped = 1;
  bool has_size_unzipped() const;
  void clear_size_unzipped();
  static const int kSizeUnzippedFieldNumber = 1;
  ::google::protobuf::uint32 size_unzipped() const;
  void set_size_unzipped(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgMulti)
 private:
  void set_has_size_unzipped();
  void clear_has_size_unzipped();
  void set_has_message_body();
  void clear_has_message_body();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_body_;
  ::google::protobuf::uint32 size_unzipped_;
  friend struct protobuf_steammessages_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgProtobufWrapped : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgProtobufWrapped) */ {
 public:
  CMsgProtobufWrapped();
  virtual ~CMsgProtobufWrapped();

  CMsgProtobufWrapped(const CMsgProtobufWrapped& from);

  inline CMsgProtobufWrapped& operator=(const CMsgProtobufWrapped& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgProtobufWrapped& default_instance();

  static inline const CMsgProtobufWrapped* internal_default_instance() {
    return reinterpret_cast<const CMsgProtobufWrapped*>(
               &_CMsgProtobufWrapped_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMsgProtobufWrapped* other);

  // implements Message ----------------------------------------------

  inline CMsgProtobufWrapped* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgProtobufWrapped* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgProtobufWrapped& from);
  void MergeFrom(const CMsgProtobufWrapped& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgProtobufWrapped* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes message_body = 1;
  bool has_message_body() const;
  void clear_message_body();
  static const int kMessageBodyFieldNumber = 1;
  const ::std::string& message_body() const;
  void set_message_body(const ::std::string& value);
  #if LANG_CXX11
  void set_message_body(::std::string&& value);
  #endif
  void set_message_body(const char* value);
  void set_message_body(const void* value, size_t size);
  ::std::string* mutable_message_body();
  ::std::string* release_message_body();
  void set_allocated_message_body(::std::string* message_body);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgProtobufWrapped)
 private:
  void set_has_message_body();
  void clear_has_message_body();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_body_;
  friend struct protobuf_steammessages_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgAuthTicket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgAuthTicket) */ {
 public:
  CMsgAuthTicket();
  virtual ~CMsgAuthTicket();

  CMsgAuthTicket(const CMsgAuthTicket& from);

  inline CMsgAuthTicket& operator=(const CMsgAuthTicket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAuthTicket& default_instance();

  static inline const CMsgAuthTicket* internal_default_instance() {
    return reinterpret_cast<const CMsgAuthTicket*>(
               &_CMsgAuthTicket_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMsgAuthTicket* other);

  // implements Message ----------------------------------------------

  inline CMsgAuthTicket* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgAuthTicket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgAuthTicket& from);
  void MergeFrom(const CMsgAuthTicket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgAuthTicket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes ticket = 7;
  bool has_ticket() const;
  void clear_ticket();
  static const int kTicketFieldNumber = 7;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const void* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // optional fixed64 steamid = 3;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 3;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 estate = 1;
  bool has_estate() const;
  void clear_estate();
  static const int kEstateFieldNumber = 1;
  ::google::protobuf::uint32 estate() const;
  void set_estate(::google::protobuf::uint32 value);

  // optional uint32 h_steam_pipe = 5;
  bool has_h_steam_pipe() const;
  void clear_h_steam_pipe();
  static const int kHSteamPipeFieldNumber = 5;
  ::google::protobuf::uint32 h_steam_pipe() const;
  void set_h_steam_pipe(::google::protobuf::uint32 value);

  // optional fixed64 gameid = 4;
  bool has_gameid() const;
  void clear_gameid();
  static const int kGameidFieldNumber = 4;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // optional uint32 ticket_crc = 6;
  bool has_ticket_crc() const;
  void clear_ticket_crc();
  static const int kTicketCrcFieldNumber = 6;
  ::google::protobuf::uint32 ticket_crc() const;
  void set_ticket_crc(::google::protobuf::uint32 value);

  // optional uint32 eresult = 2 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 2;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgAuthTicket)
 private:
  void set_has_estate();
  void clear_has_estate();
  void set_has_eresult();
  void clear_has_eresult();
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_gameid();
  void clear_has_gameid();
  void set_has_h_steam_pipe();
  void clear_has_h_steam_pipe();
  void set_has_ticket_crc();
  void clear_has_ticket_crc();
  void set_has_ticket();
  void clear_has_ticket();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 estate_;
  ::google::protobuf::uint32 h_steam_pipe_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint32 ticket_crc_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_steammessages_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCDDBAppDetailCommon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCDDBAppDetailCommon) */ {
 public:
  CCDDBAppDetailCommon();
  virtual ~CCDDBAppDetailCommon();

  CCDDBAppDetailCommon(const CCDDBAppDetailCommon& from);

  inline CCDDBAppDetailCommon& operator=(const CCDDBAppDetailCommon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCDDBAppDetailCommon& default_instance();

  static inline const CCDDBAppDetailCommon* internal_default_instance() {
    return reinterpret_cast<const CCDDBAppDetailCommon*>(
               &_CCDDBAppDetailCommon_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CCDDBAppDetailCommon* other);

  // implements Message ----------------------------------------------

  inline CCDDBAppDetailCommon* New() const PROTOBUF_FINAL { return New(NULL); }

  CCDDBAppDetailCommon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CCDDBAppDetailCommon& from);
  void MergeFrom(const CCDDBAppDetailCommon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CCDDBAppDetailCommon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string icon = 3;
  bool has_icon() const;
  void clear_icon();
  static const int kIconFieldNumber = 3;
  const ::std::string& icon() const;
  void set_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_icon(::std::string&& value);
  #endif
  void set_icon(const char* value);
  void set_icon(const char* value, size_t size);
  ::std::string* mutable_icon();
  ::std::string* release_icon();
  void set_allocated_icon(::std::string* icon);

  // optional string logo = 4;
  bool has_logo() const;
  void clear_logo();
  static const int kLogoFieldNumber = 4;
  const ::std::string& logo() const;
  void set_logo(const ::std::string& value);
  #if LANG_CXX11
  void set_logo(::std::string&& value);
  #endif
  void set_logo(const char* value);
  void set_logo(const char* value, size_t size);
  ::std::string* mutable_logo();
  ::std::string* release_logo();
  void set_allocated_logo(::std::string* logo);

  // optional string logo_small = 5;
  bool has_logo_small() const;
  void clear_logo_small();
  static const int kLogoSmallFieldNumber = 5;
  const ::std::string& logo_small() const;
  void set_logo_small(const ::std::string& value);
  #if LANG_CXX11
  void set_logo_small(::std::string&& value);
  #endif
  void set_logo_small(const char* value);
  void set_logo_small(const char* value, size_t size);
  ::std::string* mutable_logo_small();
  ::std::string* release_logo_small();
  void set_allocated_logo_small(::std::string* logo_small);

  // optional string friendly_name = 10;
  bool has_friendly_name() const;
  void clear_friendly_name();
  static const int kFriendlyNameFieldNumber = 10;
  const ::std::string& friendly_name() const;
  void set_friendly_name(const ::std::string& value);
  #if LANG_CXX11
  void set_friendly_name(::std::string&& value);
  #endif
  void set_friendly_name(const char* value);
  void set_friendly_name(const char* value, size_t size);
  ::std::string* mutable_friendly_name();
  ::std::string* release_friendly_name();
  void set_allocated_friendly_name(::std::string* friendly_name);

  // optional string propagation = 11;
  bool has_propagation() const;
  void clear_propagation();
  static const int kPropagationFieldNumber = 11;
  const ::std::string& propagation() const;
  void set_propagation(const ::std::string& value);
  #if LANG_CXX11
  void set_propagation(::std::string&& value);
  #endif
  void set_propagation(const char* value);
  void set_propagation(const char* value, size_t size);
  ::std::string* mutable_propagation();
  ::std::string* release_propagation();
  void set_allocated_propagation(::std::string* propagation);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional bool tool = 6;
  bool has_tool() const;
  void clear_tool();
  static const int kToolFieldNumber = 6;
  bool tool() const;
  void set_tool(bool value);

  // optional bool demo = 7;
  bool has_demo() const;
  void clear_demo();
  static const int kDemoFieldNumber = 7;
  bool demo() const;
  void set_demo(bool value);

  // optional bool media = 8;
  bool has_media() const;
  void clear_media();
  static const int kMediaFieldNumber = 8;
  bool media() const;
  void set_media(bool value);

  // optional bool community_visible_stats = 9;
  bool has_community_visible_stats() const;
  void clear_community_visible_stats();
  static const int kCommunityVisibleStatsFieldNumber = 9;
  bool community_visible_stats() const;
  void set_community_visible_stats(bool value);

  // optional bool has_adult_content = 12;
  bool has_has_adult_content() const;
  void clear_has_adult_content();
  static const int kHasAdultContentFieldNumber = 12;
  bool has_adult_content() const;
  void set_has_adult_content(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CCDDBAppDetailCommon)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_name();
  void clear_has_name();
  void set_has_icon();
  void clear_has_icon();
  void set_has_logo();
  void clear_has_logo();
  void set_has_logo_small();
  void clear_has_logo_small();
  void set_has_tool();
  void clear_has_tool();
  void set_has_demo();
  void clear_has_demo();
  void set_has_media();
  void clear_has_media();
  void set_has_community_visible_stats();
  void clear_has_community_visible_stats();
  void set_has_friendly_name();
  void clear_has_friendly_name();
  void set_has_propagation();
  void clear_has_propagation();
  void set_has_has_adult_content();
  void clear_has_has_adult_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr icon_;
  ::google::protobuf::internal::ArenaStringPtr logo_;
  ::google::protobuf::internal::ArenaStringPtr logo_small_;
  ::google::protobuf::internal::ArenaStringPtr friendly_name_;
  ::google::protobuf::internal::ArenaStringPtr propagation_;
  ::google::protobuf::uint32 appid_;
  bool tool_;
  bool demo_;
  bool media_;
  bool community_visible_stats_;
  bool has_adult_content_;
  friend struct protobuf_steammessages_5fbase_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgAppRights : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgAppRights) */ {
 public:
  CMsgAppRights();
  virtual ~CMsgAppRights();

  CMsgAppRights(const CMsgAppRights& from);

  inline CMsgAppRights& operator=(const CMsgAppRights& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAppRights& default_instance();

  static inline const CMsgAppRights* internal_default_instance() {
    return reinterpret_cast<const CMsgAppRights*>(
               &_CMsgAppRights_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CMsgAppRights* other);

  // implements Message ----------------------------------------------

  inline CMsgAppRights* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgAppRights* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgAppRights& from);
  void MergeFrom(const CMsgAppRights& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgAppRights* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool edit_info = 1;
  bool has_edit_info() const;
  void clear_edit_info();
  static const int kEditInfoFieldNumber = 1;
  bool edit_info() const;
  void set_edit_info(bool value);

  // optional bool publish = 2;
  bool has_publish() const;
  void clear_publish();
  static const int kPublishFieldNumber = 2;
  bool publish() const;
  void set_publish(bool value);

  // optional bool view_error_data = 3;
  bool has_view_error_data() const;
  void clear_view_error_data();
  static const int kViewErrorDataFieldNumber = 3;
  bool view_error_data() const;
  void set_view_error_data(bool value);

  // optional bool download = 4;
  bool has_download() const;
  void clear_download();
  static const int kDownloadFieldNumber = 4;
  bool download() const;
  void set_download(bool value);

  // optional bool upload_cdkeys = 5;
  bool has_upload_cdkeys() const;
  void clear_upload_cdkeys();
  static const int kUploadCdkeysFieldNumber = 5;
  bool upload_cdkeys() const;
  void set_upload_cdkeys(bool value);

  // optional bool generate_cdkeys = 6;
  bool has_generate_cdkeys() const;
  void clear_generate_cdkeys();
  static const int kGenerateCdkeysFieldNumber = 6;
  bool generate_cdkeys() const;
  void set_generate_cdkeys(bool value);

  // optional bool view_financials = 7;
  bool has_view_financials() const;
  void clear_view_financials();
  static const int kViewFinancialsFieldNumber = 7;
  bool view_financials() const;
  void set_view_financials(bool value);

  // optional bool manage_ceg = 8;
  bool has_manage_ceg() const;
  void clear_manage_ceg();
  static const int kManageCegFieldNumber = 8;
  bool manage_ceg() const;
  void set_manage_ceg(bool value);

  // optional bool manage_signing = 9;
  bool has_manage_signing() const;
  void clear_manage_signing();
  static const int kManageSigningFieldNumber = 9;
  bool manage_signing() const;
  void set_manage_signing(bool value);

  // optional bool manage_cdkeys = 10;
  bool has_manage_cdkeys() const;
  void clear_manage_cdkeys();
  static const int kManageCdkeysFieldNumber = 10;
  bool manage_cdkeys() const;
  void set_manage_cdkeys(bool value);

  // optional bool edit_marketing = 11;
  bool has_edit_marketing() const;
  void clear_edit_marketing();
  static const int kEditMarketingFieldNumber = 11;
  bool edit_marketing() const;
  void set_edit_marketing(bool value);

  // optional bool economy_support = 12;
  bool has_economy_support() const;
  void clear_economy_support();
  static const int kEconomySupportFieldNumber = 12;
  bool economy_support() const;
  void set_economy_support(bool value);

  // optional bool economy_support_supervisor = 13;
  bool has_economy_support_supervisor() const;
  void clear_economy_support_supervisor();
  static const int kEconomySupportSupervisorFieldNumber = 13;
  bool economy_support_supervisor() const;
  void set_economy_support_supervisor(bool value);

  // optional bool manage_pricing = 14;
  bool has_manage_pricing() const;
  void clear_manage_pricing();
  static const int kManagePricingFieldNumber = 14;
  bool manage_pricing() const;
  void set_manage_pricing(bool value);

  // optional bool broadcast_live = 15;
  bool has_broadcast_live() const;
  void clear_broadcast_live();
  static const int kBroadcastLiveFieldNumber = 15;
  bool broadcast_live() const;
  void set_broadcast_live(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgAppRights)
 private:
  void set_has_edit_info();
  void clear_has_edit_info();
  void set_has_publish();
  void clear_has_publish();
  void set_has_view_error_data();
  void clear_has_view_error_data();
  void set_has_download();
  void clear_has_download();
  void set_has_upload_cdkeys();
  void clear_has_upload_cdkeys();
  void set_has_generate_cdkeys();
  void clear_has_generate_cdkeys();
  void set_has_view_financials();
  void clear_has_view_financials();
  void set_has_manage_ceg();
  void clear_has_manage_ceg();
  void set_has_manage_signing();
  void clear_has_manage_signing();
  void set_has_manage_cdkeys();
  void clear_has_manage_cdkeys();
  void set_has_edit_marketing();
  void clear_has_edit_marketing();
  void set_has_economy_support();
  void clear_has_economy_support();
  void set_has_economy_support_supervisor();
  void clear_has_economy_support_supervisor();
  void set_has_manage_pricing();
  void clear_has_manage_pricing();
  void set_has_broadcast_live();
  void clear_has_broadcast_live();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool edit_info_;
  bool publish_;
  bool view_error_data_;
  bool download_;
  bool upload_cdkeys_;
  bool generate_cdkeys_;
  bool view_financials_;
  bool manage_ceg_;
  bool manage_signing_;
  bool manage_cdkeys_;
  bool edit_marketing_;
  bool economy_support_;
  bool economy_support_supervisor_;
  bool manage_pricing_;
  bool broadcast_live_;
  friend struct protobuf_steammessages_5fbase_2eproto::TableStruct;
};
// ===================================================================

static const int kMsgpoolSoftLimitFieldNumber = 50000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  msgpool_soft_limit;
static const int kMsgpoolHardLimitFieldNumber = 50001;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::MessageOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< ::google::protobuf::int32 >, 5, false >
  msgpool_hard_limit;
static const int kForcePhpGenerationFieldNumber = 50000;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  force_php_generation;
static const int kPhpOutputAlwaysNumberFieldNumber = 50020;
extern ::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FieldOptions,
    ::google::protobuf::internal::PrimitiveTypeTraits< bool >, 8, false >
  php_output_always_number;

// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgProtoBufHeader

// optional fixed64 steamid = 1;
inline bool CMsgProtoBufHeader::has_steamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgProtoBufHeader::set_has_steamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgProtoBufHeader::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgProtoBufHeader::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.steamid)
  return steamid_;
}
inline void CMsgProtoBufHeader::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.steamid)
}

// optional int32 client_sessionid = 2;
inline bool CMsgProtoBufHeader::has_client_sessionid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgProtoBufHeader::set_has_client_sessionid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgProtoBufHeader::clear_has_client_sessionid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgProtoBufHeader::clear_client_sessionid() {
  client_sessionid_ = 0;
  clear_has_client_sessionid();
}
inline ::google::protobuf::int32 CMsgProtoBufHeader::client_sessionid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.client_sessionid)
  return client_sessionid_;
}
inline void CMsgProtoBufHeader::set_client_sessionid(::google::protobuf::int32 value) {
  set_has_client_sessionid();
  client_sessionid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.client_sessionid)
}

// optional uint32 routing_appid = 3;
inline bool CMsgProtoBufHeader::has_routing_appid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgProtoBufHeader::set_has_routing_appid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgProtoBufHeader::clear_has_routing_appid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgProtoBufHeader::clear_routing_appid() {
  routing_appid_ = 0u;
  clear_has_routing_appid();
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::routing_appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.routing_appid)
  return routing_appid_;
}
inline void CMsgProtoBufHeader::set_routing_appid(::google::protobuf::uint32 value) {
  set_has_routing_appid();
  routing_appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.routing_appid)
}

// optional fixed64 jobid_source = 10 [default = 18446744073709551615];
inline bool CMsgProtoBufHeader::has_jobid_source() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgProtoBufHeader::set_has_jobid_source() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgProtoBufHeader::clear_has_jobid_source() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgProtoBufHeader::clear_jobid_source() {
  jobid_source_ = GOOGLE_ULONGLONG(18446744073709551615);
  clear_has_jobid_source();
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::jobid_source() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.jobid_source)
  return jobid_source_;
}
inline void CMsgProtoBufHeader::set_jobid_source(::google::protobuf::uint64 value) {
  set_has_jobid_source();
  jobid_source_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.jobid_source)
}

// optional fixed64 jobid_target = 11 [default = 18446744073709551615];
inline bool CMsgProtoBufHeader::has_jobid_target() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgProtoBufHeader::set_has_jobid_target() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgProtoBufHeader::clear_has_jobid_target() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgProtoBufHeader::clear_jobid_target() {
  jobid_target_ = GOOGLE_ULONGLONG(18446744073709551615);
  clear_has_jobid_target();
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::jobid_target() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.jobid_target)
  return jobid_target_;
}
inline void CMsgProtoBufHeader::set_jobid_target(::google::protobuf::uint64 value) {
  set_has_jobid_target();
  jobid_target_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.jobid_target)
}

// optional string target_job_name = 12;
inline bool CMsgProtoBufHeader::has_target_job_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgProtoBufHeader::set_has_target_job_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgProtoBufHeader::clear_has_target_job_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgProtoBufHeader::clear_target_job_name() {
  target_job_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target_job_name();
}
inline const ::std::string& CMsgProtoBufHeader::target_job_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.target_job_name)
  return target_job_name_.GetNoArena();
}
inline void CMsgProtoBufHeader::set_target_job_name(const ::std::string& value) {
  set_has_target_job_name();
  target_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.target_job_name)
}
#if LANG_CXX11
inline void CMsgProtoBufHeader::set_target_job_name(::std::string&& value) {
  set_has_target_job_name();
  target_job_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgProtoBufHeader.target_job_name)
}
#endif
inline void CMsgProtoBufHeader::set_target_job_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target_job_name();
  target_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgProtoBufHeader.target_job_name)
}
inline void CMsgProtoBufHeader::set_target_job_name(const char* value, size_t size) {
  set_has_target_job_name();
  target_job_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgProtoBufHeader.target_job_name)
}
inline ::std::string* CMsgProtoBufHeader::mutable_target_job_name() {
  set_has_target_job_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgProtoBufHeader.target_job_name)
  return target_job_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgProtoBufHeader::release_target_job_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgProtoBufHeader.target_job_name)
  clear_has_target_job_name();
  return target_job_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgProtoBufHeader::set_allocated_target_job_name(::std::string* target_job_name) {
  if (target_job_name != NULL) {
    set_has_target_job_name();
  } else {
    clear_has_target_job_name();
  }
  target_job_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target_job_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgProtoBufHeader.target_job_name)
}

// optional int32 seq_num = 24;
inline bool CMsgProtoBufHeader::has_seq_num() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgProtoBufHeader::set_has_seq_num() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgProtoBufHeader::clear_has_seq_num() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgProtoBufHeader::clear_seq_num() {
  seq_num_ = 0;
  clear_has_seq_num();
}
inline ::google::protobuf::int32 CMsgProtoBufHeader::seq_num() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.seq_num)
  return seq_num_;
}
inline void CMsgProtoBufHeader::set_seq_num(::google::protobuf::int32 value) {
  set_has_seq_num();
  seq_num_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.seq_num)
}

// optional int32 eresult = 13 [default = 2];
inline bool CMsgProtoBufHeader::has_eresult() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgProtoBufHeader::set_has_eresult() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgProtoBufHeader::clear_has_eresult() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgProtoBufHeader::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgProtoBufHeader::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.eresult)
  return eresult_;
}
inline void CMsgProtoBufHeader::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.eresult)
}

// optional string error_message = 14;
inline bool CMsgProtoBufHeader::has_error_message() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgProtoBufHeader::set_has_error_message() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgProtoBufHeader::clear_has_error_message() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgProtoBufHeader::clear_error_message() {
  error_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_message();
}
inline const ::std::string& CMsgProtoBufHeader::error_message() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.error_message)
  return error_message_.GetNoArena();
}
inline void CMsgProtoBufHeader::set_error_message(const ::std::string& value) {
  set_has_error_message();
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.error_message)
}
#if LANG_CXX11
inline void CMsgProtoBufHeader::set_error_message(::std::string&& value) {
  set_has_error_message();
  error_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgProtoBufHeader.error_message)
}
#endif
inline void CMsgProtoBufHeader::set_error_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_error_message();
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgProtoBufHeader.error_message)
}
inline void CMsgProtoBufHeader::set_error_message(const char* value, size_t size) {
  set_has_error_message();
  error_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgProtoBufHeader.error_message)
}
inline ::std::string* CMsgProtoBufHeader::mutable_error_message() {
  set_has_error_message();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgProtoBufHeader.error_message)
  return error_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgProtoBufHeader::release_error_message() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgProtoBufHeader.error_message)
  clear_has_error_message();
  return error_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgProtoBufHeader::set_allocated_error_message(::std::string* error_message) {
  if (error_message != NULL) {
    set_has_error_message();
  } else {
    clear_has_error_message();
  }
  error_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_message);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgProtoBufHeader.error_message)
}

// optional uint32 ip = 15;
inline bool CMsgProtoBufHeader::has_ip() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgProtoBufHeader::set_has_ip() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgProtoBufHeader::clear_has_ip() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgProtoBufHeader::clear_ip() {
  ip_ = 0u;
  clear_has_ip();
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::ip() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.ip)
  return ip_;
}
inline void CMsgProtoBufHeader::set_ip(::google::protobuf::uint32 value) {
  set_has_ip();
  ip_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.ip)
}

// optional uint32 auth_account_flags = 16;
inline bool CMsgProtoBufHeader::has_auth_account_flags() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgProtoBufHeader::set_has_auth_account_flags() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgProtoBufHeader::clear_has_auth_account_flags() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgProtoBufHeader::clear_auth_account_flags() {
  auth_account_flags_ = 0u;
  clear_has_auth_account_flags();
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::auth_account_flags() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.auth_account_flags)
  return auth_account_flags_;
}
inline void CMsgProtoBufHeader::set_auth_account_flags(::google::protobuf::uint32 value) {
  set_has_auth_account_flags();
  auth_account_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.auth_account_flags)
}

// optional uint32 token_source = 22;
inline bool CMsgProtoBufHeader::has_token_source() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgProtoBufHeader::set_has_token_source() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgProtoBufHeader::clear_has_token_source() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgProtoBufHeader::clear_token_source() {
  token_source_ = 0u;
  clear_has_token_source();
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::token_source() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.token_source)
  return token_source_;
}
inline void CMsgProtoBufHeader::set_token_source(::google::protobuf::uint32 value) {
  set_has_token_source();
  token_source_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.token_source)
}

// optional bool admin_spoofing_user = 23;
inline bool CMsgProtoBufHeader::has_admin_spoofing_user() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgProtoBufHeader::set_has_admin_spoofing_user() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgProtoBufHeader::clear_has_admin_spoofing_user() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgProtoBufHeader::clear_admin_spoofing_user() {
  admin_spoofing_user_ = false;
  clear_has_admin_spoofing_user();
}
inline bool CMsgProtoBufHeader::admin_spoofing_user() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.admin_spoofing_user)
  return admin_spoofing_user_;
}
inline void CMsgProtoBufHeader::set_admin_spoofing_user(bool value) {
  set_has_admin_spoofing_user();
  admin_spoofing_user_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.admin_spoofing_user)
}

// optional int32 transport_error = 17 [default = 1];
inline bool CMsgProtoBufHeader::has_transport_error() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgProtoBufHeader::set_has_transport_error() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgProtoBufHeader::clear_has_transport_error() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgProtoBufHeader::clear_transport_error() {
  transport_error_ = 1;
  clear_has_transport_error();
}
inline ::google::protobuf::int32 CMsgProtoBufHeader::transport_error() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.transport_error)
  return transport_error_;
}
inline void CMsgProtoBufHeader::set_transport_error(::google::protobuf::int32 value) {
  set_has_transport_error();
  transport_error_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.transport_error)
}

// optional uint64 messageid = 18 [default = 18446744073709551615];
inline bool CMsgProtoBufHeader::has_messageid() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgProtoBufHeader::set_has_messageid() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgProtoBufHeader::clear_has_messageid() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgProtoBufHeader::clear_messageid() {
  messageid_ = GOOGLE_ULONGLONG(18446744073709551615);
  clear_has_messageid();
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::messageid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.messageid)
  return messageid_;
}
inline void CMsgProtoBufHeader::set_messageid(::google::protobuf::uint64 value) {
  set_has_messageid();
  messageid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.messageid)
}

// optional uint32 publisher_group_id = 19;
inline bool CMsgProtoBufHeader::has_publisher_group_id() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgProtoBufHeader::set_has_publisher_group_id() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgProtoBufHeader::clear_has_publisher_group_id() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgProtoBufHeader::clear_publisher_group_id() {
  publisher_group_id_ = 0u;
  clear_has_publisher_group_id();
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::publisher_group_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.publisher_group_id)
  return publisher_group_id_;
}
inline void CMsgProtoBufHeader::set_publisher_group_id(::google::protobuf::uint32 value) {
  set_has_publisher_group_id();
  publisher_group_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.publisher_group_id)
}

// optional uint32 sysid = 20;
inline bool CMsgProtoBufHeader::has_sysid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgProtoBufHeader::set_has_sysid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgProtoBufHeader::clear_has_sysid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgProtoBufHeader::clear_sysid() {
  sysid_ = 0u;
  clear_has_sysid();
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::sysid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.sysid)
  return sysid_;
}
inline void CMsgProtoBufHeader::set_sysid(::google::protobuf::uint32 value) {
  set_has_sysid();
  sysid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.sysid)
}

// optional uint64 trace_tag = 21;
inline bool CMsgProtoBufHeader::has_trace_tag() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgProtoBufHeader::set_has_trace_tag() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgProtoBufHeader::clear_has_trace_tag() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgProtoBufHeader::clear_trace_tag() {
  trace_tag_ = GOOGLE_ULONGLONG(0);
  clear_has_trace_tag();
}
inline ::google::protobuf::uint64 CMsgProtoBufHeader::trace_tag() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.trace_tag)
  return trace_tag_;
}
inline void CMsgProtoBufHeader::set_trace_tag(::google::protobuf::uint64 value) {
  set_has_trace_tag();
  trace_tag_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.trace_tag)
}

// optional uint32 webapi_key_id = 25;
inline bool CMsgProtoBufHeader::has_webapi_key_id() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgProtoBufHeader::set_has_webapi_key_id() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgProtoBufHeader::clear_has_webapi_key_id() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgProtoBufHeader::clear_webapi_key_id() {
  webapi_key_id_ = 0u;
  clear_has_webapi_key_id();
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::webapi_key_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.webapi_key_id)
  return webapi_key_id_;
}
inline void CMsgProtoBufHeader::set_webapi_key_id(::google::protobuf::uint32 value) {
  set_has_webapi_key_id();
  webapi_key_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.webapi_key_id)
}

// optional bool is_from_external_source = 26;
inline bool CMsgProtoBufHeader::has_is_from_external_source() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgProtoBufHeader::set_has_is_from_external_source() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgProtoBufHeader::clear_has_is_from_external_source() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgProtoBufHeader::clear_is_from_external_source() {
  is_from_external_source_ = false;
  clear_has_is_from_external_source();
}
inline bool CMsgProtoBufHeader::is_from_external_source() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.is_from_external_source)
  return is_from_external_source_;
}
inline void CMsgProtoBufHeader::set_is_from_external_source(bool value) {
  set_has_is_from_external_source();
  is_from_external_source_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.is_from_external_source)
}

// repeated uint32 forward_to_sysid = 27;
inline int CMsgProtoBufHeader::forward_to_sysid_size() const {
  return forward_to_sysid_.size();
}
inline void CMsgProtoBufHeader::clear_forward_to_sysid() {
  forward_to_sysid_.Clear();
}
inline ::google::protobuf::uint32 CMsgProtoBufHeader::forward_to_sysid(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtoBufHeader.forward_to_sysid)
  return forward_to_sysid_.Get(index);
}
inline void CMsgProtoBufHeader::set_forward_to_sysid(int index, ::google::protobuf::uint32 value) {
  forward_to_sysid_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtoBufHeader.forward_to_sysid)
}
inline void CMsgProtoBufHeader::add_forward_to_sysid(::google::protobuf::uint32 value) {
  forward_to_sysid_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgProtoBufHeader.forward_to_sysid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CMsgProtoBufHeader::forward_to_sysid() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgProtoBufHeader.forward_to_sysid)
  return forward_to_sysid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CMsgProtoBufHeader::mutable_forward_to_sysid() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgProtoBufHeader.forward_to_sysid)
  return &forward_to_sysid_;
}

// -------------------------------------------------------------------

// CMsgMulti

// optional uint32 size_unzipped = 1;
inline bool CMsgMulti::has_size_unzipped() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMulti::set_has_size_unzipped() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMulti::clear_has_size_unzipped() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMulti::clear_size_unzipped() {
  size_unzipped_ = 0u;
  clear_has_size_unzipped();
}
inline ::google::protobuf::uint32 CMsgMulti::size_unzipped() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMulti.size_unzipped)
  return size_unzipped_;
}
inline void CMsgMulti::set_size_unzipped(::google::protobuf::uint32 value) {
  set_has_size_unzipped();
  size_unzipped_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMulti.size_unzipped)
}

// optional bytes message_body = 2;
inline bool CMsgMulti::has_message_body() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMulti::set_has_message_body() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMulti::clear_has_message_body() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMulti::clear_message_body() {
  message_body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message_body();
}
inline const ::std::string& CMsgMulti::message_body() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMulti.message_body)
  return message_body_.GetNoArena();
}
inline void CMsgMulti::set_message_body(const ::std::string& value) {
  set_has_message_body();
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMulti.message_body)
}
#if LANG_CXX11
inline void CMsgMulti::set_message_body(::std::string&& value) {
  set_has_message_body();
  message_body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgMulti.message_body)
}
#endif
inline void CMsgMulti::set_message_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message_body();
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgMulti.message_body)
}
inline void CMsgMulti::set_message_body(const void* value, size_t size) {
  set_has_message_body();
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgMulti.message_body)
}
inline ::std::string* CMsgMulti::mutable_message_body() {
  set_has_message_body();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgMulti.message_body)
  return message_body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgMulti::release_message_body() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgMulti.message_body)
  clear_has_message_body();
  return message_body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgMulti::set_allocated_message_body(::std::string* message_body) {
  if (message_body != NULL) {
    set_has_message_body();
  } else {
    clear_has_message_body();
  }
  message_body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_body);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgMulti.message_body)
}

// -------------------------------------------------------------------

// CMsgProtobufWrapped

// optional bytes message_body = 1;
inline bool CMsgProtobufWrapped::has_message_body() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgProtobufWrapped::set_has_message_body() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgProtobufWrapped::clear_has_message_body() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgProtobufWrapped::clear_message_body() {
  message_body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message_body();
}
inline const ::std::string& CMsgProtobufWrapped::message_body() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgProtobufWrapped.message_body)
  return message_body_.GetNoArena();
}
inline void CMsgProtobufWrapped::set_message_body(const ::std::string& value) {
  set_has_message_body();
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgProtobufWrapped.message_body)
}
#if LANG_CXX11
inline void CMsgProtobufWrapped::set_message_body(::std::string&& value) {
  set_has_message_body();
  message_body_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgProtobufWrapped.message_body)
}
#endif
inline void CMsgProtobufWrapped::set_message_body(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message_body();
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgProtobufWrapped.message_body)
}
inline void CMsgProtobufWrapped::set_message_body(const void* value, size_t size) {
  set_has_message_body();
  message_body_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgProtobufWrapped.message_body)
}
inline ::std::string* CMsgProtobufWrapped::mutable_message_body() {
  set_has_message_body();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgProtobufWrapped.message_body)
  return message_body_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgProtobufWrapped::release_message_body() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgProtobufWrapped.message_body)
  clear_has_message_body();
  return message_body_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgProtobufWrapped::set_allocated_message_body(::std::string* message_body) {
  if (message_body != NULL) {
    set_has_message_body();
  } else {
    clear_has_message_body();
  }
  message_body_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message_body);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgProtobufWrapped.message_body)
}

// -------------------------------------------------------------------

// CMsgAuthTicket

// optional uint32 estate = 1;
inline bool CMsgAuthTicket::has_estate() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAuthTicket::set_has_estate() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAuthTicket::clear_has_estate() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAuthTicket::clear_estate() {
  estate_ = 0u;
  clear_has_estate();
}
inline ::google::protobuf::uint32 CMsgAuthTicket::estate() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthTicket.estate)
  return estate_;
}
inline void CMsgAuthTicket::set_estate(::google::protobuf::uint32 value) {
  set_has_estate();
  estate_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthTicket.estate)
}

// optional uint32 eresult = 2 [default = 2];
inline bool CMsgAuthTicket::has_eresult() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgAuthTicket::set_has_eresult() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgAuthTicket::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgAuthTicket::clear_eresult() {
  eresult_ = 2u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgAuthTicket::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthTicket.eresult)
  return eresult_;
}
inline void CMsgAuthTicket::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthTicket.eresult)
}

// optional fixed64 steamid = 3;
inline bool CMsgAuthTicket::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAuthTicket::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAuthTicket::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAuthTicket::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgAuthTicket::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthTicket.steamid)
  return steamid_;
}
inline void CMsgAuthTicket::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthTicket.steamid)
}

// optional fixed64 gameid = 4;
inline bool CMsgAuthTicket::has_gameid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgAuthTicket::set_has_gameid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgAuthTicket::clear_has_gameid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgAuthTicket::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
  clear_has_gameid();
}
inline ::google::protobuf::uint64 CMsgAuthTicket::gameid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthTicket.gameid)
  return gameid_;
}
inline void CMsgAuthTicket::set_gameid(::google::protobuf::uint64 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthTicket.gameid)
}

// optional uint32 h_steam_pipe = 5;
inline bool CMsgAuthTicket::has_h_steam_pipe() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgAuthTicket::set_has_h_steam_pipe() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgAuthTicket::clear_has_h_steam_pipe() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgAuthTicket::clear_h_steam_pipe() {
  h_steam_pipe_ = 0u;
  clear_has_h_steam_pipe();
}
inline ::google::protobuf::uint32 CMsgAuthTicket::h_steam_pipe() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthTicket.h_steam_pipe)
  return h_steam_pipe_;
}
inline void CMsgAuthTicket::set_h_steam_pipe(::google::protobuf::uint32 value) {
  set_has_h_steam_pipe();
  h_steam_pipe_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthTicket.h_steam_pipe)
}

// optional uint32 ticket_crc = 6;
inline bool CMsgAuthTicket::has_ticket_crc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgAuthTicket::set_has_ticket_crc() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgAuthTicket::clear_has_ticket_crc() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgAuthTicket::clear_ticket_crc() {
  ticket_crc_ = 0u;
  clear_has_ticket_crc();
}
inline ::google::protobuf::uint32 CMsgAuthTicket::ticket_crc() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthTicket.ticket_crc)
  return ticket_crc_;
}
inline void CMsgAuthTicket::set_ticket_crc(::google::protobuf::uint32 value) {
  set_has_ticket_crc();
  ticket_crc_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthTicket.ticket_crc)
}

// optional bytes ticket = 7;
inline bool CMsgAuthTicket::has_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAuthTicket::set_has_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAuthTicket::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAuthTicket::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ticket();
}
inline const ::std::string& CMsgAuthTicket::ticket() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthTicket.ticket)
  return ticket_.GetNoArena();
}
inline void CMsgAuthTicket::set_ticket(const ::std::string& value) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthTicket.ticket)
}
#if LANG_CXX11
inline void CMsgAuthTicket::set_ticket(::std::string&& value) {
  set_has_ticket();
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgAuthTicket.ticket)
}
#endif
inline void CMsgAuthTicket::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgAuthTicket.ticket)
}
inline void CMsgAuthTicket::set_ticket(const void* value, size_t size) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgAuthTicket.ticket)
}
inline ::std::string* CMsgAuthTicket::mutable_ticket() {
  set_has_ticket();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgAuthTicket.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgAuthTicket::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgAuthTicket.ticket)
  clear_has_ticket();
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgAuthTicket::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgAuthTicket.ticket)
}

// -------------------------------------------------------------------

// CCDDBAppDetailCommon

// optional uint32 appid = 1;
inline bool CCDDBAppDetailCommon::has_appid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CCDDBAppDetailCommon::set_has_appid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CCDDBAppDetailCommon::clear_has_appid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CCDDBAppDetailCommon::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CCDDBAppDetailCommon::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.appid)
  return appid_;
}
inline void CCDDBAppDetailCommon::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.appid)
}

// optional string name = 2;
inline bool CCDDBAppDetailCommon::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCDDBAppDetailCommon::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCDDBAppDetailCommon::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCDDBAppDetailCommon::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CCDDBAppDetailCommon::name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.name)
  return name_.GetNoArena();
}
inline void CCDDBAppDetailCommon::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.name)
}
#if LANG_CXX11
inline void CCDDBAppDetailCommon::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCDDBAppDetailCommon.name)
}
#endif
inline void CCDDBAppDetailCommon::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCDDBAppDetailCommon.name)
}
inline void CCDDBAppDetailCommon::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCDDBAppDetailCommon.name)
}
inline ::std::string* CCDDBAppDetailCommon::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CCDDBAppDetailCommon.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCDDBAppDetailCommon::release_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CCDDBAppDetailCommon.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCDDBAppDetailCommon::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCDDBAppDetailCommon.name)
}

// optional string icon = 3;
inline bool CCDDBAppDetailCommon::has_icon() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCDDBAppDetailCommon::set_has_icon() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCDDBAppDetailCommon::clear_has_icon() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCDDBAppDetailCommon::clear_icon() {
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon();
}
inline const ::std::string& CCDDBAppDetailCommon::icon() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.icon)
  return icon_.GetNoArena();
}
inline void CCDDBAppDetailCommon::set_icon(const ::std::string& value) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.icon)
}
#if LANG_CXX11
inline void CCDDBAppDetailCommon::set_icon(::std::string&& value) {
  set_has_icon();
  icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCDDBAppDetailCommon.icon)
}
#endif
inline void CCDDBAppDetailCommon::set_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCDDBAppDetailCommon.icon)
}
inline void CCDDBAppDetailCommon::set_icon(const char* value, size_t size) {
  set_has_icon();
  icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCDDBAppDetailCommon.icon)
}
inline ::std::string* CCDDBAppDetailCommon::mutable_icon() {
  set_has_icon();
  // @@protoc_insertion_point(field_mutable:proto.steam.CCDDBAppDetailCommon.icon)
  return icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCDDBAppDetailCommon::release_icon() {
  // @@protoc_insertion_point(field_release:proto.steam.CCDDBAppDetailCommon.icon)
  clear_has_icon();
  return icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCDDBAppDetailCommon::set_allocated_icon(::std::string* icon) {
  if (icon != NULL) {
    set_has_icon();
  } else {
    clear_has_icon();
  }
  icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCDDBAppDetailCommon.icon)
}

// optional string logo = 4;
inline bool CCDDBAppDetailCommon::has_logo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCDDBAppDetailCommon::set_has_logo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCDDBAppDetailCommon::clear_has_logo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCDDBAppDetailCommon::clear_logo() {
  logo_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logo();
}
inline const ::std::string& CCDDBAppDetailCommon::logo() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.logo)
  return logo_.GetNoArena();
}
inline void CCDDBAppDetailCommon::set_logo(const ::std::string& value) {
  set_has_logo();
  logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.logo)
}
#if LANG_CXX11
inline void CCDDBAppDetailCommon::set_logo(::std::string&& value) {
  set_has_logo();
  logo_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCDDBAppDetailCommon.logo)
}
#endif
inline void CCDDBAppDetailCommon::set_logo(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_logo();
  logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCDDBAppDetailCommon.logo)
}
inline void CCDDBAppDetailCommon::set_logo(const char* value, size_t size) {
  set_has_logo();
  logo_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCDDBAppDetailCommon.logo)
}
inline ::std::string* CCDDBAppDetailCommon::mutable_logo() {
  set_has_logo();
  // @@protoc_insertion_point(field_mutable:proto.steam.CCDDBAppDetailCommon.logo)
  return logo_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCDDBAppDetailCommon::release_logo() {
  // @@protoc_insertion_point(field_release:proto.steam.CCDDBAppDetailCommon.logo)
  clear_has_logo();
  return logo_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCDDBAppDetailCommon::set_allocated_logo(::std::string* logo) {
  if (logo != NULL) {
    set_has_logo();
  } else {
    clear_has_logo();
  }
  logo_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logo);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCDDBAppDetailCommon.logo)
}

// optional string logo_small = 5;
inline bool CCDDBAppDetailCommon::has_logo_small() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCDDBAppDetailCommon::set_has_logo_small() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCDDBAppDetailCommon::clear_has_logo_small() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCDDBAppDetailCommon::clear_logo_small() {
  logo_small_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_logo_small();
}
inline const ::std::string& CCDDBAppDetailCommon::logo_small() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.logo_small)
  return logo_small_.GetNoArena();
}
inline void CCDDBAppDetailCommon::set_logo_small(const ::std::string& value) {
  set_has_logo_small();
  logo_small_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.logo_small)
}
#if LANG_CXX11
inline void CCDDBAppDetailCommon::set_logo_small(::std::string&& value) {
  set_has_logo_small();
  logo_small_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCDDBAppDetailCommon.logo_small)
}
#endif
inline void CCDDBAppDetailCommon::set_logo_small(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_logo_small();
  logo_small_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCDDBAppDetailCommon.logo_small)
}
inline void CCDDBAppDetailCommon::set_logo_small(const char* value, size_t size) {
  set_has_logo_small();
  logo_small_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCDDBAppDetailCommon.logo_small)
}
inline ::std::string* CCDDBAppDetailCommon::mutable_logo_small() {
  set_has_logo_small();
  // @@protoc_insertion_point(field_mutable:proto.steam.CCDDBAppDetailCommon.logo_small)
  return logo_small_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCDDBAppDetailCommon::release_logo_small() {
  // @@protoc_insertion_point(field_release:proto.steam.CCDDBAppDetailCommon.logo_small)
  clear_has_logo_small();
  return logo_small_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCDDBAppDetailCommon::set_allocated_logo_small(::std::string* logo_small) {
  if (logo_small != NULL) {
    set_has_logo_small();
  } else {
    clear_has_logo_small();
  }
  logo_small_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logo_small);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCDDBAppDetailCommon.logo_small)
}

// optional bool tool = 6;
inline bool CCDDBAppDetailCommon::has_tool() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CCDDBAppDetailCommon::set_has_tool() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CCDDBAppDetailCommon::clear_has_tool() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CCDDBAppDetailCommon::clear_tool() {
  tool_ = false;
  clear_has_tool();
}
inline bool CCDDBAppDetailCommon::tool() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.tool)
  return tool_;
}
inline void CCDDBAppDetailCommon::set_tool(bool value) {
  set_has_tool();
  tool_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.tool)
}

// optional bool demo = 7;
inline bool CCDDBAppDetailCommon::has_demo() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CCDDBAppDetailCommon::set_has_demo() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CCDDBAppDetailCommon::clear_has_demo() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CCDDBAppDetailCommon::clear_demo() {
  demo_ = false;
  clear_has_demo();
}
inline bool CCDDBAppDetailCommon::demo() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.demo)
  return demo_;
}
inline void CCDDBAppDetailCommon::set_demo(bool value) {
  set_has_demo();
  demo_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.demo)
}

// optional bool media = 8;
inline bool CCDDBAppDetailCommon::has_media() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CCDDBAppDetailCommon::set_has_media() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CCDDBAppDetailCommon::clear_has_media() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CCDDBAppDetailCommon::clear_media() {
  media_ = false;
  clear_has_media();
}
inline bool CCDDBAppDetailCommon::media() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.media)
  return media_;
}
inline void CCDDBAppDetailCommon::set_media(bool value) {
  set_has_media();
  media_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.media)
}

// optional bool community_visible_stats = 9;
inline bool CCDDBAppDetailCommon::has_community_visible_stats() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CCDDBAppDetailCommon::set_has_community_visible_stats() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CCDDBAppDetailCommon::clear_has_community_visible_stats() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CCDDBAppDetailCommon::clear_community_visible_stats() {
  community_visible_stats_ = false;
  clear_has_community_visible_stats();
}
inline bool CCDDBAppDetailCommon::community_visible_stats() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.community_visible_stats)
  return community_visible_stats_;
}
inline void CCDDBAppDetailCommon::set_community_visible_stats(bool value) {
  set_has_community_visible_stats();
  community_visible_stats_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.community_visible_stats)
}

// optional string friendly_name = 10;
inline bool CCDDBAppDetailCommon::has_friendly_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CCDDBAppDetailCommon::set_has_friendly_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CCDDBAppDetailCommon::clear_has_friendly_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CCDDBAppDetailCommon::clear_friendly_name() {
  friendly_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_friendly_name();
}
inline const ::std::string& CCDDBAppDetailCommon::friendly_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.friendly_name)
  return friendly_name_.GetNoArena();
}
inline void CCDDBAppDetailCommon::set_friendly_name(const ::std::string& value) {
  set_has_friendly_name();
  friendly_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.friendly_name)
}
#if LANG_CXX11
inline void CCDDBAppDetailCommon::set_friendly_name(::std::string&& value) {
  set_has_friendly_name();
  friendly_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCDDBAppDetailCommon.friendly_name)
}
#endif
inline void CCDDBAppDetailCommon::set_friendly_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_friendly_name();
  friendly_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCDDBAppDetailCommon.friendly_name)
}
inline void CCDDBAppDetailCommon::set_friendly_name(const char* value, size_t size) {
  set_has_friendly_name();
  friendly_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCDDBAppDetailCommon.friendly_name)
}
inline ::std::string* CCDDBAppDetailCommon::mutable_friendly_name() {
  set_has_friendly_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CCDDBAppDetailCommon.friendly_name)
  return friendly_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCDDBAppDetailCommon::release_friendly_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CCDDBAppDetailCommon.friendly_name)
  clear_has_friendly_name();
  return friendly_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCDDBAppDetailCommon::set_allocated_friendly_name(::std::string* friendly_name) {
  if (friendly_name != NULL) {
    set_has_friendly_name();
  } else {
    clear_has_friendly_name();
  }
  friendly_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), friendly_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCDDBAppDetailCommon.friendly_name)
}

// optional string propagation = 11;
inline bool CCDDBAppDetailCommon::has_propagation() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CCDDBAppDetailCommon::set_has_propagation() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CCDDBAppDetailCommon::clear_has_propagation() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CCDDBAppDetailCommon::clear_propagation() {
  propagation_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_propagation();
}
inline const ::std::string& CCDDBAppDetailCommon::propagation() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.propagation)
  return propagation_.GetNoArena();
}
inline void CCDDBAppDetailCommon::set_propagation(const ::std::string& value) {
  set_has_propagation();
  propagation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.propagation)
}
#if LANG_CXX11
inline void CCDDBAppDetailCommon::set_propagation(::std::string&& value) {
  set_has_propagation();
  propagation_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCDDBAppDetailCommon.propagation)
}
#endif
inline void CCDDBAppDetailCommon::set_propagation(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_propagation();
  propagation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCDDBAppDetailCommon.propagation)
}
inline void CCDDBAppDetailCommon::set_propagation(const char* value, size_t size) {
  set_has_propagation();
  propagation_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCDDBAppDetailCommon.propagation)
}
inline ::std::string* CCDDBAppDetailCommon::mutable_propagation() {
  set_has_propagation();
  // @@protoc_insertion_point(field_mutable:proto.steam.CCDDBAppDetailCommon.propagation)
  return propagation_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCDDBAppDetailCommon::release_propagation() {
  // @@protoc_insertion_point(field_release:proto.steam.CCDDBAppDetailCommon.propagation)
  clear_has_propagation();
  return propagation_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCDDBAppDetailCommon::set_allocated_propagation(::std::string* propagation) {
  if (propagation != NULL) {
    set_has_propagation();
  } else {
    clear_has_propagation();
  }
  propagation_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), propagation);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCDDBAppDetailCommon.propagation)
}

// optional bool has_adult_content = 12;
inline bool CCDDBAppDetailCommon::has_has_adult_content() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CCDDBAppDetailCommon::set_has_has_adult_content() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CCDDBAppDetailCommon::clear_has_has_adult_content() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CCDDBAppDetailCommon::clear_has_adult_content() {
  has_adult_content_ = false;
  clear_has_has_adult_content();
}
inline bool CCDDBAppDetailCommon::has_adult_content() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCDDBAppDetailCommon.has_adult_content)
  return has_adult_content_;
}
inline void CCDDBAppDetailCommon::set_has_adult_content(bool value) {
  set_has_has_adult_content();
  has_adult_content_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CCDDBAppDetailCommon.has_adult_content)
}

// -------------------------------------------------------------------

// CMsgAppRights

// optional bool edit_info = 1;
inline bool CMsgAppRights::has_edit_info() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAppRights::set_has_edit_info() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAppRights::clear_has_edit_info() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAppRights::clear_edit_info() {
  edit_info_ = false;
  clear_has_edit_info();
}
inline bool CMsgAppRights::edit_info() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.edit_info)
  return edit_info_;
}
inline void CMsgAppRights::set_edit_info(bool value) {
  set_has_edit_info();
  edit_info_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.edit_info)
}

// optional bool publish = 2;
inline bool CMsgAppRights::has_publish() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAppRights::set_has_publish() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAppRights::clear_has_publish() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAppRights::clear_publish() {
  publish_ = false;
  clear_has_publish();
}
inline bool CMsgAppRights::publish() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.publish)
  return publish_;
}
inline void CMsgAppRights::set_publish(bool value) {
  set_has_publish();
  publish_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.publish)
}

// optional bool view_error_data = 3;
inline bool CMsgAppRights::has_view_error_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAppRights::set_has_view_error_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAppRights::clear_has_view_error_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAppRights::clear_view_error_data() {
  view_error_data_ = false;
  clear_has_view_error_data();
}
inline bool CMsgAppRights::view_error_data() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.view_error_data)
  return view_error_data_;
}
inline void CMsgAppRights::set_view_error_data(bool value) {
  set_has_view_error_data();
  view_error_data_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.view_error_data)
}

// optional bool download = 4;
inline bool CMsgAppRights::has_download() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgAppRights::set_has_download() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgAppRights::clear_has_download() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgAppRights::clear_download() {
  download_ = false;
  clear_has_download();
}
inline bool CMsgAppRights::download() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.download)
  return download_;
}
inline void CMsgAppRights::set_download(bool value) {
  set_has_download();
  download_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.download)
}

// optional bool upload_cdkeys = 5;
inline bool CMsgAppRights::has_upload_cdkeys() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgAppRights::set_has_upload_cdkeys() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgAppRights::clear_has_upload_cdkeys() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgAppRights::clear_upload_cdkeys() {
  upload_cdkeys_ = false;
  clear_has_upload_cdkeys();
}
inline bool CMsgAppRights::upload_cdkeys() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.upload_cdkeys)
  return upload_cdkeys_;
}
inline void CMsgAppRights::set_upload_cdkeys(bool value) {
  set_has_upload_cdkeys();
  upload_cdkeys_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.upload_cdkeys)
}

// optional bool generate_cdkeys = 6;
inline bool CMsgAppRights::has_generate_cdkeys() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgAppRights::set_has_generate_cdkeys() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgAppRights::clear_has_generate_cdkeys() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgAppRights::clear_generate_cdkeys() {
  generate_cdkeys_ = false;
  clear_has_generate_cdkeys();
}
inline bool CMsgAppRights::generate_cdkeys() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.generate_cdkeys)
  return generate_cdkeys_;
}
inline void CMsgAppRights::set_generate_cdkeys(bool value) {
  set_has_generate_cdkeys();
  generate_cdkeys_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.generate_cdkeys)
}

// optional bool view_financials = 7;
inline bool CMsgAppRights::has_view_financials() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgAppRights::set_has_view_financials() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgAppRights::clear_has_view_financials() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgAppRights::clear_view_financials() {
  view_financials_ = false;
  clear_has_view_financials();
}
inline bool CMsgAppRights::view_financials() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.view_financials)
  return view_financials_;
}
inline void CMsgAppRights::set_view_financials(bool value) {
  set_has_view_financials();
  view_financials_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.view_financials)
}

// optional bool manage_ceg = 8;
inline bool CMsgAppRights::has_manage_ceg() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgAppRights::set_has_manage_ceg() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgAppRights::clear_has_manage_ceg() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgAppRights::clear_manage_ceg() {
  manage_ceg_ = false;
  clear_has_manage_ceg();
}
inline bool CMsgAppRights::manage_ceg() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.manage_ceg)
  return manage_ceg_;
}
inline void CMsgAppRights::set_manage_ceg(bool value) {
  set_has_manage_ceg();
  manage_ceg_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.manage_ceg)
}

// optional bool manage_signing = 9;
inline bool CMsgAppRights::has_manage_signing() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgAppRights::set_has_manage_signing() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgAppRights::clear_has_manage_signing() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgAppRights::clear_manage_signing() {
  manage_signing_ = false;
  clear_has_manage_signing();
}
inline bool CMsgAppRights::manage_signing() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.manage_signing)
  return manage_signing_;
}
inline void CMsgAppRights::set_manage_signing(bool value) {
  set_has_manage_signing();
  manage_signing_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.manage_signing)
}

// optional bool manage_cdkeys = 10;
inline bool CMsgAppRights::has_manage_cdkeys() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgAppRights::set_has_manage_cdkeys() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgAppRights::clear_has_manage_cdkeys() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgAppRights::clear_manage_cdkeys() {
  manage_cdkeys_ = false;
  clear_has_manage_cdkeys();
}
inline bool CMsgAppRights::manage_cdkeys() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.manage_cdkeys)
  return manage_cdkeys_;
}
inline void CMsgAppRights::set_manage_cdkeys(bool value) {
  set_has_manage_cdkeys();
  manage_cdkeys_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.manage_cdkeys)
}

// optional bool edit_marketing = 11;
inline bool CMsgAppRights::has_edit_marketing() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgAppRights::set_has_edit_marketing() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgAppRights::clear_has_edit_marketing() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgAppRights::clear_edit_marketing() {
  edit_marketing_ = false;
  clear_has_edit_marketing();
}
inline bool CMsgAppRights::edit_marketing() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.edit_marketing)
  return edit_marketing_;
}
inline void CMsgAppRights::set_edit_marketing(bool value) {
  set_has_edit_marketing();
  edit_marketing_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.edit_marketing)
}

// optional bool economy_support = 12;
inline bool CMsgAppRights::has_economy_support() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgAppRights::set_has_economy_support() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgAppRights::clear_has_economy_support() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgAppRights::clear_economy_support() {
  economy_support_ = false;
  clear_has_economy_support();
}
inline bool CMsgAppRights::economy_support() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.economy_support)
  return economy_support_;
}
inline void CMsgAppRights::set_economy_support(bool value) {
  set_has_economy_support();
  economy_support_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.economy_support)
}

// optional bool economy_support_supervisor = 13;
inline bool CMsgAppRights::has_economy_support_supervisor() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgAppRights::set_has_economy_support_supervisor() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgAppRights::clear_has_economy_support_supervisor() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgAppRights::clear_economy_support_supervisor() {
  economy_support_supervisor_ = false;
  clear_has_economy_support_supervisor();
}
inline bool CMsgAppRights::economy_support_supervisor() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.economy_support_supervisor)
  return economy_support_supervisor_;
}
inline void CMsgAppRights::set_economy_support_supervisor(bool value) {
  set_has_economy_support_supervisor();
  economy_support_supervisor_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.economy_support_supervisor)
}

// optional bool manage_pricing = 14;
inline bool CMsgAppRights::has_manage_pricing() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgAppRights::set_has_manage_pricing() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgAppRights::clear_has_manage_pricing() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgAppRights::clear_manage_pricing() {
  manage_pricing_ = false;
  clear_has_manage_pricing();
}
inline bool CMsgAppRights::manage_pricing() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.manage_pricing)
  return manage_pricing_;
}
inline void CMsgAppRights::set_manage_pricing(bool value) {
  set_has_manage_pricing();
  manage_pricing_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.manage_pricing)
}

// optional bool broadcast_live = 15;
inline bool CMsgAppRights::has_broadcast_live() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgAppRights::set_has_broadcast_live() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgAppRights::clear_has_broadcast_live() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgAppRights::clear_broadcast_live() {
  broadcast_live_ = false;
  clear_has_broadcast_live();
}
inline bool CMsgAppRights::broadcast_live() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAppRights.broadcast_live)
  return broadcast_live_;
}
inline void CMsgAppRights::set_broadcast_live(bool value) {
  set_has_broadcast_live();
  broadcast_live_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAppRights.broadcast_live)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_steammessages_5fbase_2eproto__INCLUDED
