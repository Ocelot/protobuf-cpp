// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_deviceauth.steamclient.proto

#ifndef PROTOBUF_steammessages_5fdeviceauth_2esteamclient_2eproto__INCLUDED
#define PROTOBUF_steammessages_5fdeviceauth_2esteamclient_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
namespace steam {
class CDeviceAuth_AcceptAuthorizationRequest_Request;
class CDeviceAuth_AcceptAuthorizationRequest_RequestDefaultTypeInternal;
extern CDeviceAuth_AcceptAuthorizationRequest_RequestDefaultTypeInternal _CDeviceAuth_AcceptAuthorizationRequest_Request_default_instance_;
class CDeviceAuth_AcceptAuthorizationRequest_Response;
class CDeviceAuth_AcceptAuthorizationRequest_ResponseDefaultTypeInternal;
extern CDeviceAuth_AcceptAuthorizationRequest_ResponseDefaultTypeInternal _CDeviceAuth_AcceptAuthorizationRequest_Response_default_instance_;
class CDeviceAuth_AddAuthorizedBorrowers_Request;
class CDeviceAuth_AddAuthorizedBorrowers_RequestDefaultTypeInternal;
extern CDeviceAuth_AddAuthorizedBorrowers_RequestDefaultTypeInternal _CDeviceAuth_AddAuthorizedBorrowers_Request_default_instance_;
class CDeviceAuth_AddAuthorizedBorrowers_Response;
class CDeviceAuth_AddAuthorizedBorrowers_ResponseDefaultTypeInternal;
extern CDeviceAuth_AddAuthorizedBorrowers_ResponseDefaultTypeInternal _CDeviceAuth_AddAuthorizedBorrowers_Response_default_instance_;
class CDeviceAuth_AuthorizeRemoteDevice_Request;
class CDeviceAuth_AuthorizeRemoteDevice_RequestDefaultTypeInternal;
extern CDeviceAuth_AuthorizeRemoteDevice_RequestDefaultTypeInternal _CDeviceAuth_AuthorizeRemoteDevice_Request_default_instance_;
class CDeviceAuth_AuthorizeRemoteDevice_Response;
class CDeviceAuth_AuthorizeRemoteDevice_ResponseDefaultTypeInternal;
extern CDeviceAuth_AuthorizeRemoteDevice_ResponseDefaultTypeInternal _CDeviceAuth_AuthorizeRemoteDevice_Response_default_instance_;
class CDeviceAuth_DeauthorizeRemoteDevice_Request;
class CDeviceAuth_DeauthorizeRemoteDevice_RequestDefaultTypeInternal;
extern CDeviceAuth_DeauthorizeRemoteDevice_RequestDefaultTypeInternal _CDeviceAuth_DeauthorizeRemoteDevice_Request_default_instance_;
class CDeviceAuth_DeauthorizeRemoteDevice_Response;
class CDeviceAuth_DeauthorizeRemoteDevice_ResponseDefaultTypeInternal;
extern CDeviceAuth_DeauthorizeRemoteDevice_ResponseDefaultTypeInternal _CDeviceAuth_DeauthorizeRemoteDevice_Response_default_instance_;
class CDeviceAuth_GetAuthorizedAsBorrower_Request;
class CDeviceAuth_GetAuthorizedAsBorrower_RequestDefaultTypeInternal;
extern CDeviceAuth_GetAuthorizedAsBorrower_RequestDefaultTypeInternal _CDeviceAuth_GetAuthorizedAsBorrower_Request_default_instance_;
class CDeviceAuth_GetAuthorizedAsBorrower_Response;
class CDeviceAuth_GetAuthorizedAsBorrower_ResponseDefaultTypeInternal;
extern CDeviceAuth_GetAuthorizedAsBorrower_ResponseDefaultTypeInternal _CDeviceAuth_GetAuthorizedAsBorrower_Response_default_instance_;
class CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender;
class CDeviceAuth_GetAuthorizedAsBorrower_Response_LenderDefaultTypeInternal;
extern CDeviceAuth_GetAuthorizedAsBorrower_Response_LenderDefaultTypeInternal _CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender_default_instance_;
class CDeviceAuth_GetAuthorizedBorrowers_Request;
class CDeviceAuth_GetAuthorizedBorrowers_RequestDefaultTypeInternal;
extern CDeviceAuth_GetAuthorizedBorrowers_RequestDefaultTypeInternal _CDeviceAuth_GetAuthorizedBorrowers_Request_default_instance_;
class CDeviceAuth_GetAuthorizedBorrowers_Response;
class CDeviceAuth_GetAuthorizedBorrowers_ResponseDefaultTypeInternal;
extern CDeviceAuth_GetAuthorizedBorrowers_ResponseDefaultTypeInternal _CDeviceAuth_GetAuthorizedBorrowers_Response_default_instance_;
class CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower;
class CDeviceAuth_GetAuthorizedBorrowers_Response_BorrowerDefaultTypeInternal;
extern CDeviceAuth_GetAuthorizedBorrowers_Response_BorrowerDefaultTypeInternal _CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower_default_instance_;
class CDeviceAuth_GetExcludedGamesInLibrary_Request;
class CDeviceAuth_GetExcludedGamesInLibrary_RequestDefaultTypeInternal;
extern CDeviceAuth_GetExcludedGamesInLibrary_RequestDefaultTypeInternal _CDeviceAuth_GetExcludedGamesInLibrary_Request_default_instance_;
class CDeviceAuth_GetExcludedGamesInLibrary_Response;
class CDeviceAuth_GetExcludedGamesInLibrary_ResponseDefaultTypeInternal;
extern CDeviceAuth_GetExcludedGamesInLibrary_ResponseDefaultTypeInternal _CDeviceAuth_GetExcludedGamesInLibrary_Response_default_instance_;
class CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame;
class CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGameDefaultTypeInternal;
extern CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGameDefaultTypeInternal _CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame_default_instance_;
class CDeviceAuth_GetOwnAuthorizedDevices_Request;
class CDeviceAuth_GetOwnAuthorizedDevices_RequestDefaultTypeInternal;
extern CDeviceAuth_GetOwnAuthorizedDevices_RequestDefaultTypeInternal _CDeviceAuth_GetOwnAuthorizedDevices_Request_default_instance_;
class CDeviceAuth_GetOwnAuthorizedDevices_Response;
class CDeviceAuth_GetOwnAuthorizedDevices_ResponseDefaultTypeInternal;
extern CDeviceAuth_GetOwnAuthorizedDevices_ResponseDefaultTypeInternal _CDeviceAuth_GetOwnAuthorizedDevices_Response_default_instance_;
class CDeviceAuth_GetOwnAuthorizedDevices_Response_Device;
class CDeviceAuth_GetOwnAuthorizedDevices_Response_DeviceDefaultTypeInternal;
extern CDeviceAuth_GetOwnAuthorizedDevices_Response_DeviceDefaultTypeInternal _CDeviceAuth_GetOwnAuthorizedDevices_Response_Device_default_instance_;
class CDeviceAuth_GetUsedAuthorizedDevices_Request;
class CDeviceAuth_GetUsedAuthorizedDevices_RequestDefaultTypeInternal;
extern CDeviceAuth_GetUsedAuthorizedDevices_RequestDefaultTypeInternal _CDeviceAuth_GetUsedAuthorizedDevices_Request_default_instance_;
class CDeviceAuth_GetUsedAuthorizedDevices_Response;
class CDeviceAuth_GetUsedAuthorizedDevices_ResponseDefaultTypeInternal;
extern CDeviceAuth_GetUsedAuthorizedDevices_ResponseDefaultTypeInternal _CDeviceAuth_GetUsedAuthorizedDevices_Response_default_instance_;
class CDeviceAuth_GetUsedAuthorizedDevices_Response_Device;
class CDeviceAuth_GetUsedAuthorizedDevices_Response_DeviceDefaultTypeInternal;
extern CDeviceAuth_GetUsedAuthorizedDevices_Response_DeviceDefaultTypeInternal _CDeviceAuth_GetUsedAuthorizedDevices_Response_Device_default_instance_;
class CDeviceAuth_RemoveAuthorizedBorrowers_Request;
class CDeviceAuth_RemoveAuthorizedBorrowers_RequestDefaultTypeInternal;
extern CDeviceAuth_RemoveAuthorizedBorrowers_RequestDefaultTypeInternal _CDeviceAuth_RemoveAuthorizedBorrowers_Request_default_instance_;
class CDeviceAuth_RemoveAuthorizedBorrowers_Response;
class CDeviceAuth_RemoveAuthorizedBorrowers_ResponseDefaultTypeInternal;
extern CDeviceAuth_RemoveAuthorizedBorrowers_ResponseDefaultTypeInternal _CDeviceAuth_RemoveAuthorizedBorrowers_Response_default_instance_;
class NoResponse;
class NoResponseDefaultTypeInternal;
extern NoResponseDefaultTypeInternal _NoResponse_default_instance_;
}  // namespace steam
}  // namespace proto

namespace proto {
namespace steam {

namespace protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto

// ===================================================================

class CDeviceAuth_GetOwnAuthorizedDevices_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Request) */ {
 public:
  CDeviceAuth_GetOwnAuthorizedDevices_Request();
  virtual ~CDeviceAuth_GetOwnAuthorizedDevices_Request();

  CDeviceAuth_GetOwnAuthorizedDevices_Request(const CDeviceAuth_GetOwnAuthorizedDevices_Request& from);

  inline CDeviceAuth_GetOwnAuthorizedDevices_Request& operator=(const CDeviceAuth_GetOwnAuthorizedDevices_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetOwnAuthorizedDevices_Request& default_instance();

  static inline const CDeviceAuth_GetOwnAuthorizedDevices_Request* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetOwnAuthorizedDevices_Request*>(
               &_CDeviceAuth_GetOwnAuthorizedDevices_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CDeviceAuth_GetOwnAuthorizedDevices_Request* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetOwnAuthorizedDevices_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetOwnAuthorizedDevices_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetOwnAuthorizedDevices_Request& from);
  void MergeFrom(const CDeviceAuth_GetOwnAuthorizedDevices_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetOwnAuthorizedDevices_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional bool include_canceled = 2;
  bool has_include_canceled() const;
  void clear_include_canceled();
  static const int kIncludeCanceledFieldNumber = 2;
  bool include_canceled() const;
  void set_include_canceled(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Request)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_include_canceled();
  void clear_has_include_canceled();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  bool include_canceled_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_GetOwnAuthorizedDevices_Response_Device : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device) */ {
 public:
  CDeviceAuth_GetOwnAuthorizedDevices_Response_Device();
  virtual ~CDeviceAuth_GetOwnAuthorizedDevices_Response_Device();

  CDeviceAuth_GetOwnAuthorizedDevices_Response_Device(const CDeviceAuth_GetOwnAuthorizedDevices_Response_Device& from);

  inline CDeviceAuth_GetOwnAuthorizedDevices_Response_Device& operator=(const CDeviceAuth_GetOwnAuthorizedDevices_Response_Device& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetOwnAuthorizedDevices_Response_Device& default_instance();

  static inline const CDeviceAuth_GetOwnAuthorizedDevices_Response_Device* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetOwnAuthorizedDevices_Response_Device*>(
               &_CDeviceAuth_GetOwnAuthorizedDevices_Response_Device_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CDeviceAuth_GetOwnAuthorizedDevices_Response_Device* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetOwnAuthorizedDevices_Response_Device* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetOwnAuthorizedDevices_Response_Device* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetOwnAuthorizedDevices_Response_Device& from);
  void MergeFrom(const CDeviceAuth_GetOwnAuthorizedDevices_Response_Device& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetOwnAuthorizedDevices_Response_Device* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string device_name = 2;
  bool has_device_name() const;
  void clear_device_name();
  static const int kDeviceNameFieldNumber = 2;
  const ::std::string& device_name() const;
  void set_device_name(const ::std::string& value);
  #if LANG_CXX11
  void set_device_name(::std::string&& value);
  #endif
  void set_device_name(const char* value);
  void set_device_name(const char* value, size_t size);
  ::std::string* mutable_device_name();
  ::std::string* release_device_name();
  void set_allocated_device_name(::std::string* device_name);

  // optional fixed64 auth_device_token = 1;
  bool has_auth_device_token() const;
  void clear_auth_device_token();
  static const int kAuthDeviceTokenFieldNumber = 1;
  ::google::protobuf::uint64 auth_device_token() const;
  void set_auth_device_token(::google::protobuf::uint64 value);

  // optional uint32 last_time_used = 5;
  bool has_last_time_used() const;
  void clear_last_time_used();
  static const int kLastTimeUsedFieldNumber = 5;
  ::google::protobuf::uint32 last_time_used() const;
  void set_last_time_used(::google::protobuf::uint32 value);

  // optional bool is_pending = 3;
  bool has_is_pending() const;
  void clear_is_pending();
  static const int kIsPendingFieldNumber = 3;
  bool is_pending() const;
  void set_is_pending(bool value);

  // optional bool is_canceled = 4;
  bool has_is_canceled() const;
  void clear_is_canceled();
  static const int kIsCanceledFieldNumber = 4;
  bool is_canceled() const;
  void set_is_canceled(bool value);

  // optional bool is_limited = 8;
  bool has_is_limited() const;
  void clear_is_limited();
  static const int kIsLimitedFieldNumber = 8;
  bool is_limited() const;
  void set_is_limited(bool value);

  // optional fixed64 last_borrower_id = 6;
  bool has_last_borrower_id() const;
  void clear_last_borrower_id();
  static const int kLastBorrowerIdFieldNumber = 6;
  ::google::protobuf::uint64 last_borrower_id() const;
  void set_last_borrower_id(::google::protobuf::uint64 value);

  // optional uint32 last_app_played = 7;
  bool has_last_app_played() const;
  void clear_last_app_played();
  static const int kLastAppPlayedFieldNumber = 7;
  ::google::protobuf::uint32 last_app_played() const;
  void set_last_app_played(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device)
 private:
  void set_has_auth_device_token();
  void clear_has_auth_device_token();
  void set_has_device_name();
  void clear_has_device_name();
  void set_has_is_pending();
  void clear_has_is_pending();
  void set_has_is_canceled();
  void clear_has_is_canceled();
  void set_has_last_time_used();
  void clear_has_last_time_used();
  void set_has_last_borrower_id();
  void clear_has_last_borrower_id();
  void set_has_last_app_played();
  void clear_has_last_app_played();
  void set_has_is_limited();
  void clear_has_is_limited();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr device_name_;
  ::google::protobuf::uint64 auth_device_token_;
  ::google::protobuf::uint32 last_time_used_;
  bool is_pending_;
  bool is_canceled_;
  bool is_limited_;
  ::google::protobuf::uint64 last_borrower_id_;
  ::google::protobuf::uint32 last_app_played_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_GetOwnAuthorizedDevices_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response) */ {
 public:
  CDeviceAuth_GetOwnAuthorizedDevices_Response();
  virtual ~CDeviceAuth_GetOwnAuthorizedDevices_Response();

  CDeviceAuth_GetOwnAuthorizedDevices_Response(const CDeviceAuth_GetOwnAuthorizedDevices_Response& from);

  inline CDeviceAuth_GetOwnAuthorizedDevices_Response& operator=(const CDeviceAuth_GetOwnAuthorizedDevices_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetOwnAuthorizedDevices_Response& default_instance();

  static inline const CDeviceAuth_GetOwnAuthorizedDevices_Response* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetOwnAuthorizedDevices_Response*>(
               &_CDeviceAuth_GetOwnAuthorizedDevices_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CDeviceAuth_GetOwnAuthorizedDevices_Response* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetOwnAuthorizedDevices_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetOwnAuthorizedDevices_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetOwnAuthorizedDevices_Response& from);
  void MergeFrom(const CDeviceAuth_GetOwnAuthorizedDevices_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetOwnAuthorizedDevices_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDeviceAuth_GetOwnAuthorizedDevices_Response_Device Device;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;
  int devices_size() const;
  void clear_devices();
  static const int kDevicesFieldNumber = 1;
  const ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Response_Device& devices(int index) const;
  ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Response_Device* mutable_devices(int index);
  ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Response_Device* add_devices();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Response_Device >*
      mutable_devices();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Response_Device >&
      devices() const;

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Response_Device > devices_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_AcceptAuthorizationRequest_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_AcceptAuthorizationRequest_Request) */ {
 public:
  CDeviceAuth_AcceptAuthorizationRequest_Request();
  virtual ~CDeviceAuth_AcceptAuthorizationRequest_Request();

  CDeviceAuth_AcceptAuthorizationRequest_Request(const CDeviceAuth_AcceptAuthorizationRequest_Request& from);

  inline CDeviceAuth_AcceptAuthorizationRequest_Request& operator=(const CDeviceAuth_AcceptAuthorizationRequest_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_AcceptAuthorizationRequest_Request& default_instance();

  static inline const CDeviceAuth_AcceptAuthorizationRequest_Request* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_AcceptAuthorizationRequest_Request*>(
               &_CDeviceAuth_AcceptAuthorizationRequest_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CDeviceAuth_AcceptAuthorizationRequest_Request* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_AcceptAuthorizationRequest_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_AcceptAuthorizationRequest_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_AcceptAuthorizationRequest_Request& from);
  void MergeFrom(const CDeviceAuth_AcceptAuthorizationRequest_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_AcceptAuthorizationRequest_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional fixed64 auth_device_token = 2;
  bool has_auth_device_token() const;
  void clear_auth_device_token();
  static const int kAuthDeviceTokenFieldNumber = 2;
  ::google::protobuf::uint64 auth_device_token() const;
  void set_auth_device_token(::google::protobuf::uint64 value);

  // optional fixed64 auth_code = 3;
  bool has_auth_code() const;
  void clear_auth_code();
  static const int kAuthCodeFieldNumber = 3;
  ::google::protobuf::uint64 auth_code() const;
  void set_auth_code(::google::protobuf::uint64 value);

  // optional fixed64 from_steamid = 4;
  bool has_from_steamid() const;
  void clear_from_steamid();
  static const int kFromSteamidFieldNumber = 4;
  ::google::protobuf::uint64 from_steamid() const;
  void set_from_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_AcceptAuthorizationRequest_Request)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_auth_device_token();
  void clear_has_auth_device_token();
  void set_has_auth_code();
  void clear_has_auth_code();
  void set_has_from_steamid();
  void clear_has_from_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 auth_device_token_;
  ::google::protobuf::uint64 auth_code_;
  ::google::protobuf::uint64 from_steamid_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_AcceptAuthorizationRequest_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_AcceptAuthorizationRequest_Response) */ {
 public:
  CDeviceAuth_AcceptAuthorizationRequest_Response();
  virtual ~CDeviceAuth_AcceptAuthorizationRequest_Response();

  CDeviceAuth_AcceptAuthorizationRequest_Response(const CDeviceAuth_AcceptAuthorizationRequest_Response& from);

  inline CDeviceAuth_AcceptAuthorizationRequest_Response& operator=(const CDeviceAuth_AcceptAuthorizationRequest_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_AcceptAuthorizationRequest_Response& default_instance();

  static inline const CDeviceAuth_AcceptAuthorizationRequest_Response* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_AcceptAuthorizationRequest_Response*>(
               &_CDeviceAuth_AcceptAuthorizationRequest_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CDeviceAuth_AcceptAuthorizationRequest_Response* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_AcceptAuthorizationRequest_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_AcceptAuthorizationRequest_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_AcceptAuthorizationRequest_Response& from);
  void MergeFrom(const CDeviceAuth_AcceptAuthorizationRequest_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_AcceptAuthorizationRequest_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_AcceptAuthorizationRequest_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_AuthorizeRemoteDevice_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_AuthorizeRemoteDevice_Request) */ {
 public:
  CDeviceAuth_AuthorizeRemoteDevice_Request();
  virtual ~CDeviceAuth_AuthorizeRemoteDevice_Request();

  CDeviceAuth_AuthorizeRemoteDevice_Request(const CDeviceAuth_AuthorizeRemoteDevice_Request& from);

  inline CDeviceAuth_AuthorizeRemoteDevice_Request& operator=(const CDeviceAuth_AuthorizeRemoteDevice_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_AuthorizeRemoteDevice_Request& default_instance();

  static inline const CDeviceAuth_AuthorizeRemoteDevice_Request* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_AuthorizeRemoteDevice_Request*>(
               &_CDeviceAuth_AuthorizeRemoteDevice_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CDeviceAuth_AuthorizeRemoteDevice_Request* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_AuthorizeRemoteDevice_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_AuthorizeRemoteDevice_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_AuthorizeRemoteDevice_Request& from);
  void MergeFrom(const CDeviceAuth_AuthorizeRemoteDevice_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_AuthorizeRemoteDevice_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional fixed64 auth_device_token = 2;
  bool has_auth_device_token() const;
  void clear_auth_device_token();
  static const int kAuthDeviceTokenFieldNumber = 2;
  ::google::protobuf::uint64 auth_device_token() const;
  void set_auth_device_token(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_AuthorizeRemoteDevice_Request)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_auth_device_token();
  void clear_has_auth_device_token();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 auth_device_token_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_AuthorizeRemoteDevice_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_AuthorizeRemoteDevice_Response) */ {
 public:
  CDeviceAuth_AuthorizeRemoteDevice_Response();
  virtual ~CDeviceAuth_AuthorizeRemoteDevice_Response();

  CDeviceAuth_AuthorizeRemoteDevice_Response(const CDeviceAuth_AuthorizeRemoteDevice_Response& from);

  inline CDeviceAuth_AuthorizeRemoteDevice_Response& operator=(const CDeviceAuth_AuthorizeRemoteDevice_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_AuthorizeRemoteDevice_Response& default_instance();

  static inline const CDeviceAuth_AuthorizeRemoteDevice_Response* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_AuthorizeRemoteDevice_Response*>(
               &_CDeviceAuth_AuthorizeRemoteDevice_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CDeviceAuth_AuthorizeRemoteDevice_Response* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_AuthorizeRemoteDevice_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_AuthorizeRemoteDevice_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_AuthorizeRemoteDevice_Response& from);
  void MergeFrom(const CDeviceAuth_AuthorizeRemoteDevice_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_AuthorizeRemoteDevice_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_AuthorizeRemoteDevice_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_DeauthorizeRemoteDevice_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_DeauthorizeRemoteDevice_Request) */ {
 public:
  CDeviceAuth_DeauthorizeRemoteDevice_Request();
  virtual ~CDeviceAuth_DeauthorizeRemoteDevice_Request();

  CDeviceAuth_DeauthorizeRemoteDevice_Request(const CDeviceAuth_DeauthorizeRemoteDevice_Request& from);

  inline CDeviceAuth_DeauthorizeRemoteDevice_Request& operator=(const CDeviceAuth_DeauthorizeRemoteDevice_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_DeauthorizeRemoteDevice_Request& default_instance();

  static inline const CDeviceAuth_DeauthorizeRemoteDevice_Request* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_DeauthorizeRemoteDevice_Request*>(
               &_CDeviceAuth_DeauthorizeRemoteDevice_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CDeviceAuth_DeauthorizeRemoteDevice_Request* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_DeauthorizeRemoteDevice_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_DeauthorizeRemoteDevice_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_DeauthorizeRemoteDevice_Request& from);
  void MergeFrom(const CDeviceAuth_DeauthorizeRemoteDevice_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_DeauthorizeRemoteDevice_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional fixed64 auth_device_token = 2;
  bool has_auth_device_token() const;
  void clear_auth_device_token();
  static const int kAuthDeviceTokenFieldNumber = 2;
  ::google::protobuf::uint64 auth_device_token() const;
  void set_auth_device_token(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_DeauthorizeRemoteDevice_Request)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_auth_device_token();
  void clear_has_auth_device_token();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 auth_device_token_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_DeauthorizeRemoteDevice_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_DeauthorizeRemoteDevice_Response) */ {
 public:
  CDeviceAuth_DeauthorizeRemoteDevice_Response();
  virtual ~CDeviceAuth_DeauthorizeRemoteDevice_Response();

  CDeviceAuth_DeauthorizeRemoteDevice_Response(const CDeviceAuth_DeauthorizeRemoteDevice_Response& from);

  inline CDeviceAuth_DeauthorizeRemoteDevice_Response& operator=(const CDeviceAuth_DeauthorizeRemoteDevice_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_DeauthorizeRemoteDevice_Response& default_instance();

  static inline const CDeviceAuth_DeauthorizeRemoteDevice_Response* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_DeauthorizeRemoteDevice_Response*>(
               &_CDeviceAuth_DeauthorizeRemoteDevice_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CDeviceAuth_DeauthorizeRemoteDevice_Response* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_DeauthorizeRemoteDevice_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_DeauthorizeRemoteDevice_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_DeauthorizeRemoteDevice_Response& from);
  void MergeFrom(const CDeviceAuth_DeauthorizeRemoteDevice_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_DeauthorizeRemoteDevice_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_DeauthorizeRemoteDevice_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_GetUsedAuthorizedDevices_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Request) */ {
 public:
  CDeviceAuth_GetUsedAuthorizedDevices_Request();
  virtual ~CDeviceAuth_GetUsedAuthorizedDevices_Request();

  CDeviceAuth_GetUsedAuthorizedDevices_Request(const CDeviceAuth_GetUsedAuthorizedDevices_Request& from);

  inline CDeviceAuth_GetUsedAuthorizedDevices_Request& operator=(const CDeviceAuth_GetUsedAuthorizedDevices_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetUsedAuthorizedDevices_Request& default_instance();

  static inline const CDeviceAuth_GetUsedAuthorizedDevices_Request* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetUsedAuthorizedDevices_Request*>(
               &_CDeviceAuth_GetUsedAuthorizedDevices_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CDeviceAuth_GetUsedAuthorizedDevices_Request* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetUsedAuthorizedDevices_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetUsedAuthorizedDevices_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetUsedAuthorizedDevices_Request& from);
  void MergeFrom(const CDeviceAuth_GetUsedAuthorizedDevices_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetUsedAuthorizedDevices_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Request)
 private:
  void set_has_steamid();
  void clear_has_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_GetUsedAuthorizedDevices_Response_Device : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device) */ {
 public:
  CDeviceAuth_GetUsedAuthorizedDevices_Response_Device();
  virtual ~CDeviceAuth_GetUsedAuthorizedDevices_Response_Device();

  CDeviceAuth_GetUsedAuthorizedDevices_Response_Device(const CDeviceAuth_GetUsedAuthorizedDevices_Response_Device& from);

  inline CDeviceAuth_GetUsedAuthorizedDevices_Response_Device& operator=(const CDeviceAuth_GetUsedAuthorizedDevices_Response_Device& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetUsedAuthorizedDevices_Response_Device& default_instance();

  static inline const CDeviceAuth_GetUsedAuthorizedDevices_Response_Device* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetUsedAuthorizedDevices_Response_Device*>(
               &_CDeviceAuth_GetUsedAuthorizedDevices_Response_Device_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CDeviceAuth_GetUsedAuthorizedDevices_Response_Device* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetUsedAuthorizedDevices_Response_Device* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetUsedAuthorizedDevices_Response_Device* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetUsedAuthorizedDevices_Response_Device& from);
  void MergeFrom(const CDeviceAuth_GetUsedAuthorizedDevices_Response_Device& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetUsedAuthorizedDevices_Response_Device* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string device_name = 2;
  bool has_device_name() const;
  void clear_device_name();
  static const int kDeviceNameFieldNumber = 2;
  const ::std::string& device_name() const;
  void set_device_name(const ::std::string& value);
  #if LANG_CXX11
  void set_device_name(::std::string&& value);
  #endif
  void set_device_name(const char* value);
  void set_device_name(const char* value, size_t size);
  ::std::string* mutable_device_name();
  ::std::string* release_device_name();
  void set_allocated_device_name(::std::string* device_name);

  // optional fixed64 auth_device_token = 1;
  bool has_auth_device_token() const;
  void clear_auth_device_token();
  static const int kAuthDeviceTokenFieldNumber = 1;
  ::google::protobuf::uint64 auth_device_token() const;
  void set_auth_device_token(::google::protobuf::uint64 value);

  // optional fixed64 owner_steamid = 3;
  bool has_owner_steamid() const;
  void clear_owner_steamid();
  static const int kOwnerSteamidFieldNumber = 3;
  ::google::protobuf::uint64 owner_steamid() const;
  void set_owner_steamid(::google::protobuf::uint64 value);

  // optional uint32 last_time_used = 4;
  bool has_last_time_used() const;
  void clear_last_time_used();
  static const int kLastTimeUsedFieldNumber = 4;
  ::google::protobuf::uint32 last_time_used() const;
  void set_last_time_used(::google::protobuf::uint32 value);

  // optional uint32 last_app_played = 5;
  bool has_last_app_played() const;
  void clear_last_app_played();
  static const int kLastAppPlayedFieldNumber = 5;
  ::google::protobuf::uint32 last_app_played() const;
  void set_last_app_played(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device)
 private:
  void set_has_auth_device_token();
  void clear_has_auth_device_token();
  void set_has_device_name();
  void clear_has_device_name();
  void set_has_owner_steamid();
  void clear_has_owner_steamid();
  void set_has_last_time_used();
  void clear_has_last_time_used();
  void set_has_last_app_played();
  void clear_has_last_app_played();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr device_name_;
  ::google::protobuf::uint64 auth_device_token_;
  ::google::protobuf::uint64 owner_steamid_;
  ::google::protobuf::uint32 last_time_used_;
  ::google::protobuf::uint32 last_app_played_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_GetUsedAuthorizedDevices_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response) */ {
 public:
  CDeviceAuth_GetUsedAuthorizedDevices_Response();
  virtual ~CDeviceAuth_GetUsedAuthorizedDevices_Response();

  CDeviceAuth_GetUsedAuthorizedDevices_Response(const CDeviceAuth_GetUsedAuthorizedDevices_Response& from);

  inline CDeviceAuth_GetUsedAuthorizedDevices_Response& operator=(const CDeviceAuth_GetUsedAuthorizedDevices_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetUsedAuthorizedDevices_Response& default_instance();

  static inline const CDeviceAuth_GetUsedAuthorizedDevices_Response* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetUsedAuthorizedDevices_Response*>(
               &_CDeviceAuth_GetUsedAuthorizedDevices_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CDeviceAuth_GetUsedAuthorizedDevices_Response* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetUsedAuthorizedDevices_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetUsedAuthorizedDevices_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetUsedAuthorizedDevices_Response& from);
  void MergeFrom(const CDeviceAuth_GetUsedAuthorizedDevices_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetUsedAuthorizedDevices_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDeviceAuth_GetUsedAuthorizedDevices_Response_Device Device;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;
  int devices_size() const;
  void clear_devices();
  static const int kDevicesFieldNumber = 1;
  const ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Response_Device& devices(int index) const;
  ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Response_Device* mutable_devices(int index);
  ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Response_Device* add_devices();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Response_Device >*
      mutable_devices();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Response_Device >&
      devices() const;

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Response_Device > devices_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_GetAuthorizedBorrowers_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Request) */ {
 public:
  CDeviceAuth_GetAuthorizedBorrowers_Request();
  virtual ~CDeviceAuth_GetAuthorizedBorrowers_Request();

  CDeviceAuth_GetAuthorizedBorrowers_Request(const CDeviceAuth_GetAuthorizedBorrowers_Request& from);

  inline CDeviceAuth_GetAuthorizedBorrowers_Request& operator=(const CDeviceAuth_GetAuthorizedBorrowers_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetAuthorizedBorrowers_Request& default_instance();

  static inline const CDeviceAuth_GetAuthorizedBorrowers_Request* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetAuthorizedBorrowers_Request*>(
               &_CDeviceAuth_GetAuthorizedBorrowers_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CDeviceAuth_GetAuthorizedBorrowers_Request* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetAuthorizedBorrowers_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetAuthorizedBorrowers_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetAuthorizedBorrowers_Request& from);
  void MergeFrom(const CDeviceAuth_GetAuthorizedBorrowers_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetAuthorizedBorrowers_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional bool include_canceled = 2;
  bool has_include_canceled() const;
  void clear_include_canceled();
  static const int kIncludeCanceledFieldNumber = 2;
  bool include_canceled() const;
  void set_include_canceled(bool value);

  // optional bool include_pending = 3;
  bool has_include_pending() const;
  void clear_include_pending();
  static const int kIncludePendingFieldNumber = 3;
  bool include_pending() const;
  void set_include_pending(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Request)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_include_canceled();
  void clear_has_include_canceled();
  void set_has_include_pending();
  void clear_has_include_pending();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  bool include_canceled_;
  bool include_pending_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower) */ {
 public:
  CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower();
  virtual ~CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower();

  CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower(const CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower& from);

  inline CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower& operator=(const CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower& default_instance();

  static inline const CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower*>(
               &_CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower& from);
  void MergeFrom(const CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional bool is_pending = 2;
  bool has_is_pending() const;
  void clear_is_pending();
  static const int kIsPendingFieldNumber = 2;
  bool is_pending() const;
  void set_is_pending(bool value);

  // optional bool is_canceled = 3;
  bool has_is_canceled() const;
  void clear_is_canceled();
  static const int kIsCanceledFieldNumber = 3;
  bool is_canceled() const;
  void set_is_canceled(bool value);

  // optional uint32 time_created = 4;
  bool has_time_created() const;
  void clear_time_created();
  static const int kTimeCreatedFieldNumber = 4;
  ::google::protobuf::uint32 time_created() const;
  void set_time_created(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_is_pending();
  void clear_has_is_pending();
  void set_has_is_canceled();
  void clear_has_is_canceled();
  void set_has_time_created();
  void clear_has_time_created();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  bool is_pending_;
  bool is_canceled_;
  ::google::protobuf::uint32 time_created_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_GetAuthorizedBorrowers_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response) */ {
 public:
  CDeviceAuth_GetAuthorizedBorrowers_Response();
  virtual ~CDeviceAuth_GetAuthorizedBorrowers_Response();

  CDeviceAuth_GetAuthorizedBorrowers_Response(const CDeviceAuth_GetAuthorizedBorrowers_Response& from);

  inline CDeviceAuth_GetAuthorizedBorrowers_Response& operator=(const CDeviceAuth_GetAuthorizedBorrowers_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetAuthorizedBorrowers_Response& default_instance();

  static inline const CDeviceAuth_GetAuthorizedBorrowers_Response* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetAuthorizedBorrowers_Response*>(
               &_CDeviceAuth_GetAuthorizedBorrowers_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(CDeviceAuth_GetAuthorizedBorrowers_Response* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetAuthorizedBorrowers_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetAuthorizedBorrowers_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetAuthorizedBorrowers_Response& from);
  void MergeFrom(const CDeviceAuth_GetAuthorizedBorrowers_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetAuthorizedBorrowers_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower Borrower;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;
  int borrowers_size() const;
  void clear_borrowers();
  static const int kBorrowersFieldNumber = 1;
  const ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower& borrowers(int index) const;
  ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower* mutable_borrowers(int index);
  ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower* add_borrowers();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower >*
      mutable_borrowers();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower >&
      borrowers() const;

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower > borrowers_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_AddAuthorizedBorrowers_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_AddAuthorizedBorrowers_Request) */ {
 public:
  CDeviceAuth_AddAuthorizedBorrowers_Request();
  virtual ~CDeviceAuth_AddAuthorizedBorrowers_Request();

  CDeviceAuth_AddAuthorizedBorrowers_Request(const CDeviceAuth_AddAuthorizedBorrowers_Request& from);

  inline CDeviceAuth_AddAuthorizedBorrowers_Request& operator=(const CDeviceAuth_AddAuthorizedBorrowers_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_AddAuthorizedBorrowers_Request& default_instance();

  static inline const CDeviceAuth_AddAuthorizedBorrowers_Request* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_AddAuthorizedBorrowers_Request*>(
               &_CDeviceAuth_AddAuthorizedBorrowers_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CDeviceAuth_AddAuthorizedBorrowers_Request* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_AddAuthorizedBorrowers_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_AddAuthorizedBorrowers_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_AddAuthorizedBorrowers_Request& from);
  void MergeFrom(const CDeviceAuth_AddAuthorizedBorrowers_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_AddAuthorizedBorrowers_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 steamid_borrower = 2;
  int steamid_borrower_size() const;
  void clear_steamid_borrower();
  static const int kSteamidBorrowerFieldNumber = 2;
  ::google::protobuf::uint64 steamid_borrower(int index) const;
  void set_steamid_borrower(int index, ::google::protobuf::uint64 value);
  void add_steamid_borrower(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steamid_borrower() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steamid_borrower();

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_AddAuthorizedBorrowers_Request)
 private:
  void set_has_steamid();
  void clear_has_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steamid_borrower_;
  ::google::protobuf::uint64 steamid_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_AddAuthorizedBorrowers_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_AddAuthorizedBorrowers_Response) */ {
 public:
  CDeviceAuth_AddAuthorizedBorrowers_Response();
  virtual ~CDeviceAuth_AddAuthorizedBorrowers_Response();

  CDeviceAuth_AddAuthorizedBorrowers_Response(const CDeviceAuth_AddAuthorizedBorrowers_Response& from);

  inline CDeviceAuth_AddAuthorizedBorrowers_Response& operator=(const CDeviceAuth_AddAuthorizedBorrowers_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_AddAuthorizedBorrowers_Response& default_instance();

  static inline const CDeviceAuth_AddAuthorizedBorrowers_Response* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_AddAuthorizedBorrowers_Response*>(
               &_CDeviceAuth_AddAuthorizedBorrowers_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CDeviceAuth_AddAuthorizedBorrowers_Response* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_AddAuthorizedBorrowers_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_AddAuthorizedBorrowers_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_AddAuthorizedBorrowers_Response& from);
  void MergeFrom(const CDeviceAuth_AddAuthorizedBorrowers_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_AddAuthorizedBorrowers_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 seconds_to_wait = 1;
  bool has_seconds_to_wait() const;
  void clear_seconds_to_wait();
  static const int kSecondsToWaitFieldNumber = 1;
  ::google::protobuf::int32 seconds_to_wait() const;
  void set_seconds_to_wait(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_AddAuthorizedBorrowers_Response)
 private:
  void set_has_seconds_to_wait();
  void clear_has_seconds_to_wait();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 seconds_to_wait_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_RemoveAuthorizedBorrowers_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_RemoveAuthorizedBorrowers_Request) */ {
 public:
  CDeviceAuth_RemoveAuthorizedBorrowers_Request();
  virtual ~CDeviceAuth_RemoveAuthorizedBorrowers_Request();

  CDeviceAuth_RemoveAuthorizedBorrowers_Request(const CDeviceAuth_RemoveAuthorizedBorrowers_Request& from);

  inline CDeviceAuth_RemoveAuthorizedBorrowers_Request& operator=(const CDeviceAuth_RemoveAuthorizedBorrowers_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_RemoveAuthorizedBorrowers_Request& default_instance();

  static inline const CDeviceAuth_RemoveAuthorizedBorrowers_Request* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_RemoveAuthorizedBorrowers_Request*>(
               &_CDeviceAuth_RemoveAuthorizedBorrowers_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(CDeviceAuth_RemoveAuthorizedBorrowers_Request* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_RemoveAuthorizedBorrowers_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_RemoveAuthorizedBorrowers_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_RemoveAuthorizedBorrowers_Request& from);
  void MergeFrom(const CDeviceAuth_RemoveAuthorizedBorrowers_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_RemoveAuthorizedBorrowers_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 steamid_borrower = 2;
  int steamid_borrower_size() const;
  void clear_steamid_borrower();
  static const int kSteamidBorrowerFieldNumber = 2;
  ::google::protobuf::uint64 steamid_borrower(int index) const;
  void set_steamid_borrower(int index, ::google::protobuf::uint64 value);
  void add_steamid_borrower(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      steamid_borrower() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_steamid_borrower();

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_RemoveAuthorizedBorrowers_Request)
 private:
  void set_has_steamid();
  void clear_has_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > steamid_borrower_;
  ::google::protobuf::uint64 steamid_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_RemoveAuthorizedBorrowers_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_RemoveAuthorizedBorrowers_Response) */ {
 public:
  CDeviceAuth_RemoveAuthorizedBorrowers_Response();
  virtual ~CDeviceAuth_RemoveAuthorizedBorrowers_Response();

  CDeviceAuth_RemoveAuthorizedBorrowers_Response(const CDeviceAuth_RemoveAuthorizedBorrowers_Response& from);

  inline CDeviceAuth_RemoveAuthorizedBorrowers_Response& operator=(const CDeviceAuth_RemoveAuthorizedBorrowers_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_RemoveAuthorizedBorrowers_Response& default_instance();

  static inline const CDeviceAuth_RemoveAuthorizedBorrowers_Response* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_RemoveAuthorizedBorrowers_Response*>(
               &_CDeviceAuth_RemoveAuthorizedBorrowers_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CDeviceAuth_RemoveAuthorizedBorrowers_Response* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_RemoveAuthorizedBorrowers_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_RemoveAuthorizedBorrowers_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_RemoveAuthorizedBorrowers_Response& from);
  void MergeFrom(const CDeviceAuth_RemoveAuthorizedBorrowers_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_RemoveAuthorizedBorrowers_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_RemoveAuthorizedBorrowers_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_GetAuthorizedAsBorrower_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Request) */ {
 public:
  CDeviceAuth_GetAuthorizedAsBorrower_Request();
  virtual ~CDeviceAuth_GetAuthorizedAsBorrower_Request();

  CDeviceAuth_GetAuthorizedAsBorrower_Request(const CDeviceAuth_GetAuthorizedAsBorrower_Request& from);

  inline CDeviceAuth_GetAuthorizedAsBorrower_Request& operator=(const CDeviceAuth_GetAuthorizedAsBorrower_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetAuthorizedAsBorrower_Request& default_instance();

  static inline const CDeviceAuth_GetAuthorizedAsBorrower_Request* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetAuthorizedAsBorrower_Request*>(
               &_CDeviceAuth_GetAuthorizedAsBorrower_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(CDeviceAuth_GetAuthorizedAsBorrower_Request* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetAuthorizedAsBorrower_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetAuthorizedAsBorrower_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetAuthorizedAsBorrower_Request& from);
  void MergeFrom(const CDeviceAuth_GetAuthorizedAsBorrower_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetAuthorizedAsBorrower_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional bool include_canceled = 2;
  bool has_include_canceled() const;
  void clear_include_canceled();
  static const int kIncludeCanceledFieldNumber = 2;
  bool include_canceled() const;
  void set_include_canceled(bool value);

  // optional bool include_pending = 3;
  bool has_include_pending() const;
  void clear_include_pending();
  static const int kIncludePendingFieldNumber = 3;
  bool include_pending() const;
  void set_include_pending(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Request)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_include_canceled();
  void clear_has_include_canceled();
  void set_has_include_pending();
  void clear_has_include_pending();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  bool include_canceled_;
  bool include_pending_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender) */ {
 public:
  CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender();
  virtual ~CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender();

  CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender(const CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender& from);

  inline CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender& operator=(const CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender& default_instance();

  static inline const CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender*>(
               &_CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender& from);
  void MergeFrom(const CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 time_created = 2;
  bool has_time_created() const;
  void clear_time_created();
  static const int kTimeCreatedFieldNumber = 2;
  ::google::protobuf::uint32 time_created() const;
  void set_time_created(::google::protobuf::uint32 value);

  // optional bool is_pending = 3;
  bool has_is_pending() const;
  void clear_is_pending();
  static const int kIsPendingFieldNumber = 3;
  bool is_pending() const;
  void set_is_pending(bool value);

  // optional bool is_canceled = 4;
  bool has_is_canceled() const;
  void clear_is_canceled();
  static const int kIsCanceledFieldNumber = 4;
  bool is_canceled() const;
  void set_is_canceled(bool value);

  // optional bool is_used = 5;
  bool has_is_used() const;
  void clear_is_used();
  static const int kIsUsedFieldNumber = 5;
  bool is_used() const;
  void set_is_used(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_time_created();
  void clear_has_time_created();
  void set_has_is_pending();
  void clear_has_is_pending();
  void set_has_is_canceled();
  void clear_has_is_canceled();
  void set_has_is_used();
  void clear_has_is_used();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 time_created_;
  bool is_pending_;
  bool is_canceled_;
  bool is_used_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_GetAuthorizedAsBorrower_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response) */ {
 public:
  CDeviceAuth_GetAuthorizedAsBorrower_Response();
  virtual ~CDeviceAuth_GetAuthorizedAsBorrower_Response();

  CDeviceAuth_GetAuthorizedAsBorrower_Response(const CDeviceAuth_GetAuthorizedAsBorrower_Response& from);

  inline CDeviceAuth_GetAuthorizedAsBorrower_Response& operator=(const CDeviceAuth_GetAuthorizedAsBorrower_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetAuthorizedAsBorrower_Response& default_instance();

  static inline const CDeviceAuth_GetAuthorizedAsBorrower_Response* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetAuthorizedAsBorrower_Response*>(
               &_CDeviceAuth_GetAuthorizedAsBorrower_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(CDeviceAuth_GetAuthorizedAsBorrower_Response* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetAuthorizedAsBorrower_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetAuthorizedAsBorrower_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetAuthorizedAsBorrower_Response& from);
  void MergeFrom(const CDeviceAuth_GetAuthorizedAsBorrower_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetAuthorizedAsBorrower_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender Lender;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender lenders = 1;
  int lenders_size() const;
  void clear_lenders();
  static const int kLendersFieldNumber = 1;
  const ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender& lenders(int index) const;
  ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender* mutable_lenders(int index);
  ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender* add_lenders();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender >*
      mutable_lenders();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender >&
      lenders() const;

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender > lenders_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_GetExcludedGamesInLibrary_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Request) */ {
 public:
  CDeviceAuth_GetExcludedGamesInLibrary_Request();
  virtual ~CDeviceAuth_GetExcludedGamesInLibrary_Request();

  CDeviceAuth_GetExcludedGamesInLibrary_Request(const CDeviceAuth_GetExcludedGamesInLibrary_Request& from);

  inline CDeviceAuth_GetExcludedGamesInLibrary_Request& operator=(const CDeviceAuth_GetExcludedGamesInLibrary_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetExcludedGamesInLibrary_Request& default_instance();

  static inline const CDeviceAuth_GetExcludedGamesInLibrary_Request* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetExcludedGamesInLibrary_Request*>(
               &_CDeviceAuth_GetExcludedGamesInLibrary_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(CDeviceAuth_GetExcludedGamesInLibrary_Request* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetExcludedGamesInLibrary_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetExcludedGamesInLibrary_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetExcludedGamesInLibrary_Request& from);
  void MergeFrom(const CDeviceAuth_GetExcludedGamesInLibrary_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetExcludedGamesInLibrary_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Request)
 private:
  void set_has_steamid();
  void clear_has_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame) */ {
 public:
  CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame();
  virtual ~CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame();

  CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame(const CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame& from);

  inline CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame& operator=(const CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame& default_instance();

  static inline const CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame*>(
               &_CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame& from);
  void MergeFrom(const CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string game_name = 2;
  bool has_game_name() const;
  void clear_game_name();
  static const int kGameNameFieldNumber = 2;
  const ::std::string& game_name() const;
  void set_game_name(const ::std::string& value);
  #if LANG_CXX11
  void set_game_name(::std::string&& value);
  #endif
  void set_game_name(const char* value);
  void set_game_name(const char* value, size_t size);
  ::std::string* mutable_game_name();
  ::std::string* release_game_name();
  void set_allocated_game_name(::std::string* game_name);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional bool vac_banned = 3;
  bool has_vac_banned() const;
  void clear_vac_banned();
  static const int kVacBannedFieldNumber = 3;
  bool vac_banned() const;
  void set_vac_banned(bool value);

  // optional bool package_excluded = 4;
  bool has_package_excluded() const;
  void clear_package_excluded();
  static const int kPackageExcludedFieldNumber = 4;
  bool package_excluded() const;
  void set_package_excluded(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_game_name();
  void clear_has_game_name();
  void set_has_vac_banned();
  void clear_has_vac_banned();
  void set_has_package_excluded();
  void clear_has_package_excluded();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr game_name_;
  ::google::protobuf::uint32 appid_;
  bool vac_banned_;
  bool package_excluded_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CDeviceAuth_GetExcludedGamesInLibrary_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response) */ {
 public:
  CDeviceAuth_GetExcludedGamesInLibrary_Response();
  virtual ~CDeviceAuth_GetExcludedGamesInLibrary_Response();

  CDeviceAuth_GetExcludedGamesInLibrary_Response(const CDeviceAuth_GetExcludedGamesInLibrary_Response& from);

  inline CDeviceAuth_GetExcludedGamesInLibrary_Response& operator=(const CDeviceAuth_GetExcludedGamesInLibrary_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CDeviceAuth_GetExcludedGamesInLibrary_Response& default_instance();

  static inline const CDeviceAuth_GetExcludedGamesInLibrary_Response* internal_default_instance() {
    return reinterpret_cast<const CDeviceAuth_GetExcludedGamesInLibrary_Response*>(
               &_CDeviceAuth_GetExcludedGamesInLibrary_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(CDeviceAuth_GetExcludedGamesInLibrary_Response* other);

  // implements Message ----------------------------------------------

  inline CDeviceAuth_GetExcludedGamesInLibrary_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CDeviceAuth_GetExcludedGamesInLibrary_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CDeviceAuth_GetExcludedGamesInLibrary_Response& from);
  void MergeFrom(const CDeviceAuth_GetExcludedGamesInLibrary_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CDeviceAuth_GetExcludedGamesInLibrary_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame ExcludedGame;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame excluded_games = 1;
  int excluded_games_size() const;
  void clear_excluded_games();
  static const int kExcludedGamesFieldNumber = 1;
  const ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame& excluded_games(int index) const;
  ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame* mutable_excluded_games(int index);
  ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame* add_excluded_games();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame >*
      mutable_excluded_games();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame >&
      excluded_games() const;

  // @@protoc_insertion_point(class_scope:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame > excluded_games_;
  friend struct protobuf_steammessages_5fdeviceauth_2esteamclient_2eproto::TableStruct;
};
// ===================================================================

class DeviceAuth_Stub;

class DeviceAuth : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline DeviceAuth() {};
 public:
  virtual ~DeviceAuth();

  typedef DeviceAuth_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void GetOwnAuthorizedDevices(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Request* request,
                       ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void AcceptAuthorizationRequest(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_AcceptAuthorizationRequest_Request* request,
                       ::proto::steam::CDeviceAuth_AcceptAuthorizationRequest_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void AuthorizeRemoteDevice(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_AuthorizeRemoteDevice_Request* request,
                       ::proto::steam::CDeviceAuth_AuthorizeRemoteDevice_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DeauthorizeRemoteDevice(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_DeauthorizeRemoteDevice_Request* request,
                       ::proto::steam::CDeviceAuth_DeauthorizeRemoteDevice_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetUsedAuthorizedDevices(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Request* request,
                       ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetAuthorizedBorrowers(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Request* request,
                       ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void AddAuthorizedBorrowers(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_AddAuthorizedBorrowers_Request* request,
                       ::proto::steam::CDeviceAuth_AddAuthorizedBorrowers_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void RemoveAuthorizedBorrowers(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_RemoveAuthorizedBorrowers_Request* request,
                       ::proto::steam::CDeviceAuth_RemoveAuthorizedBorrowers_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetAuthorizedAsBorrower(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Request* request,
                       ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetExcludedGamesInLibrary(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Request* request,
                       ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(DeviceAuth);
};

class DeviceAuth_Stub : public DeviceAuth {
 public:
  DeviceAuth_Stub(::google::protobuf::RpcChannel* channel);
  DeviceAuth_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~DeviceAuth_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements DeviceAuth ------------------------------------------

  void GetOwnAuthorizedDevices(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Request* request,
                       ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Response* response,
                       ::google::protobuf::Closure* done);
  void AcceptAuthorizationRequest(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_AcceptAuthorizationRequest_Request* request,
                       ::proto::steam::CDeviceAuth_AcceptAuthorizationRequest_Response* response,
                       ::google::protobuf::Closure* done);
  void AuthorizeRemoteDevice(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_AuthorizeRemoteDevice_Request* request,
                       ::proto::steam::CDeviceAuth_AuthorizeRemoteDevice_Response* response,
                       ::google::protobuf::Closure* done);
  void DeauthorizeRemoteDevice(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_DeauthorizeRemoteDevice_Request* request,
                       ::proto::steam::CDeviceAuth_DeauthorizeRemoteDevice_Response* response,
                       ::google::protobuf::Closure* done);
  void GetUsedAuthorizedDevices(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Request* request,
                       ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Response* response,
                       ::google::protobuf::Closure* done);
  void GetAuthorizedBorrowers(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Request* request,
                       ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Response* response,
                       ::google::protobuf::Closure* done);
  void AddAuthorizedBorrowers(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_AddAuthorizedBorrowers_Request* request,
                       ::proto::steam::CDeviceAuth_AddAuthorizedBorrowers_Response* response,
                       ::google::protobuf::Closure* done);
  void RemoveAuthorizedBorrowers(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_RemoveAuthorizedBorrowers_Request* request,
                       ::proto::steam::CDeviceAuth_RemoveAuthorizedBorrowers_Response* response,
                       ::google::protobuf::Closure* done);
  void GetAuthorizedAsBorrower(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Request* request,
                       ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Response* response,
                       ::google::protobuf::Closure* done);
  void GetExcludedGamesInLibrary(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Request* request,
                       ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(DeviceAuth_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CDeviceAuth_GetOwnAuthorizedDevices_Request

// optional fixed64 steamid = 1;
inline bool CDeviceAuth_GetOwnAuthorizedDevices_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CDeviceAuth_GetOwnAuthorizedDevices_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Request.steamid)
  return steamid_;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Request.steamid)
}

// optional bool include_canceled = 2;
inline bool CDeviceAuth_GetOwnAuthorizedDevices_Request::has_include_canceled() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Request::set_has_include_canceled() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Request::clear_has_include_canceled() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Request::clear_include_canceled() {
  include_canceled_ = false;
  clear_has_include_canceled();
}
inline bool CDeviceAuth_GetOwnAuthorizedDevices_Request::include_canceled() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Request.include_canceled)
  return include_canceled_;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Request::set_include_canceled(bool value) {
  set_has_include_canceled();
  include_canceled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Request.include_canceled)
}

// -------------------------------------------------------------------

// CDeviceAuth_GetOwnAuthorizedDevices_Response_Device

// optional fixed64 auth_device_token = 1;
inline bool CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::has_auth_device_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_has_auth_device_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_has_auth_device_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_auth_device_token() {
  auth_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_auth_device_token();
}
inline ::google::protobuf::uint64 CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::auth_device_token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.auth_device_token)
  return auth_device_token_;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_auth_device_token(::google::protobuf::uint64 value) {
  set_has_auth_device_token();
  auth_device_token_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.auth_device_token)
}

// optional string device_name = 2;
inline bool CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::has_device_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_has_device_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_has_device_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_device_name() {
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device_name();
}
inline const ::std::string& CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::device_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.device_name)
  return device_name_.GetNoArena();
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_device_name(const ::std::string& value) {
  set_has_device_name();
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.device_name)
}
#if LANG_CXX11
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_device_name(::std::string&& value) {
  set_has_device_name();
  device_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.device_name)
}
#endif
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_device_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_device_name();
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.device_name)
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_device_name(const char* value, size_t size) {
  set_has_device_name();
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.device_name)
}
inline ::std::string* CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::mutable_device_name() {
  set_has_device_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.device_name)
  return device_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::release_device_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.device_name)
  clear_has_device_name();
  return device_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_allocated_device_name(::std::string* device_name) {
  if (device_name != NULL) {
    set_has_device_name();
  } else {
    clear_has_device_name();
  }
  device_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.device_name)
}

// optional bool is_pending = 3;
inline bool CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::has_is_pending() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_has_is_pending() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_has_is_pending() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_is_pending() {
  is_pending_ = false;
  clear_has_is_pending();
}
inline bool CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::is_pending() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.is_pending)
  return is_pending_;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_is_pending(bool value) {
  set_has_is_pending();
  is_pending_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.is_pending)
}

// optional bool is_canceled = 4;
inline bool CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::has_is_canceled() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_has_is_canceled() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_has_is_canceled() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_is_canceled() {
  is_canceled_ = false;
  clear_has_is_canceled();
}
inline bool CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::is_canceled() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.is_canceled)
  return is_canceled_;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_is_canceled(bool value) {
  set_has_is_canceled();
  is_canceled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.is_canceled)
}

// optional uint32 last_time_used = 5;
inline bool CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::has_last_time_used() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_has_last_time_used() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_has_last_time_used() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_last_time_used() {
  last_time_used_ = 0u;
  clear_has_last_time_used();
}
inline ::google::protobuf::uint32 CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::last_time_used() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.last_time_used)
  return last_time_used_;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_last_time_used(::google::protobuf::uint32 value) {
  set_has_last_time_used();
  last_time_used_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.last_time_used)
}

// optional fixed64 last_borrower_id = 6;
inline bool CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::has_last_borrower_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_has_last_borrower_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_has_last_borrower_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_last_borrower_id() {
  last_borrower_id_ = GOOGLE_ULONGLONG(0);
  clear_has_last_borrower_id();
}
inline ::google::protobuf::uint64 CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::last_borrower_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.last_borrower_id)
  return last_borrower_id_;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_last_borrower_id(::google::protobuf::uint64 value) {
  set_has_last_borrower_id();
  last_borrower_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.last_borrower_id)
}

// optional uint32 last_app_played = 7;
inline bool CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::has_last_app_played() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_has_last_app_played() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_has_last_app_played() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_last_app_played() {
  last_app_played_ = 0u;
  clear_has_last_app_played();
}
inline ::google::protobuf::uint32 CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::last_app_played() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.last_app_played)
  return last_app_played_;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_last_app_played(::google::protobuf::uint32 value) {
  set_has_last_app_played();
  last_app_played_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.last_app_played)
}

// optional bool is_limited = 8;
inline bool CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::has_is_limited() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_has_is_limited() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_has_is_limited() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::clear_is_limited() {
  is_limited_ = false;
  clear_has_is_limited();
}
inline bool CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::is_limited() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.is_limited)
  return is_limited_;
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response_Device::set_is_limited(bool value) {
  set_has_is_limited();
  is_limited_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device.is_limited)
}

// -------------------------------------------------------------------

// CDeviceAuth_GetOwnAuthorizedDevices_Response

// repeated .proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.Device devices = 1;
inline int CDeviceAuth_GetOwnAuthorizedDevices_Response::devices_size() const {
  return devices_.size();
}
inline void CDeviceAuth_GetOwnAuthorizedDevices_Response::clear_devices() {
  devices_.Clear();
}
inline const ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Response_Device& CDeviceAuth_GetOwnAuthorizedDevices_Response::devices(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.devices)
  return devices_.Get(index);
}
inline ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Response_Device* CDeviceAuth_GetOwnAuthorizedDevices_Response::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.devices)
  return devices_.Mutable(index);
}
inline ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Response_Device* CDeviceAuth_GetOwnAuthorizedDevices_Response::add_devices() {
  // @@protoc_insertion_point(field_add:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.devices)
  return devices_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Response_Device >*
CDeviceAuth_GetOwnAuthorizedDevices_Response::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.devices)
  return &devices_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetOwnAuthorizedDevices_Response_Device >&
CDeviceAuth_GetOwnAuthorizedDevices_Response::devices() const {
  // @@protoc_insertion_point(field_list:proto.steam.CDeviceAuth_GetOwnAuthorizedDevices_Response.devices)
  return devices_;
}

// -------------------------------------------------------------------

// CDeviceAuth_AcceptAuthorizationRequest_Request

// optional fixed64 steamid = 1;
inline bool CDeviceAuth_AcceptAuthorizationRequest_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CDeviceAuth_AcceptAuthorizationRequest_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_AcceptAuthorizationRequest_Request.steamid)
  return steamid_;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_AcceptAuthorizationRequest_Request.steamid)
}

// optional fixed64 auth_device_token = 2;
inline bool CDeviceAuth_AcceptAuthorizationRequest_Request::has_auth_device_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::set_has_auth_device_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::clear_has_auth_device_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::clear_auth_device_token() {
  auth_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_auth_device_token();
}
inline ::google::protobuf::uint64 CDeviceAuth_AcceptAuthorizationRequest_Request::auth_device_token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_AcceptAuthorizationRequest_Request.auth_device_token)
  return auth_device_token_;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::set_auth_device_token(::google::protobuf::uint64 value) {
  set_has_auth_device_token();
  auth_device_token_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_AcceptAuthorizationRequest_Request.auth_device_token)
}

// optional fixed64 auth_code = 3;
inline bool CDeviceAuth_AcceptAuthorizationRequest_Request::has_auth_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::set_has_auth_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::clear_has_auth_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::clear_auth_code() {
  auth_code_ = GOOGLE_ULONGLONG(0);
  clear_has_auth_code();
}
inline ::google::protobuf::uint64 CDeviceAuth_AcceptAuthorizationRequest_Request::auth_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_AcceptAuthorizationRequest_Request.auth_code)
  return auth_code_;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::set_auth_code(::google::protobuf::uint64 value) {
  set_has_auth_code();
  auth_code_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_AcceptAuthorizationRequest_Request.auth_code)
}

// optional fixed64 from_steamid = 4;
inline bool CDeviceAuth_AcceptAuthorizationRequest_Request::has_from_steamid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::set_has_from_steamid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::clear_has_from_steamid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::clear_from_steamid() {
  from_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_from_steamid();
}
inline ::google::protobuf::uint64 CDeviceAuth_AcceptAuthorizationRequest_Request::from_steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_AcceptAuthorizationRequest_Request.from_steamid)
  return from_steamid_;
}
inline void CDeviceAuth_AcceptAuthorizationRequest_Request::set_from_steamid(::google::protobuf::uint64 value) {
  set_has_from_steamid();
  from_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_AcceptAuthorizationRequest_Request.from_steamid)
}

// -------------------------------------------------------------------

// CDeviceAuth_AcceptAuthorizationRequest_Response

// -------------------------------------------------------------------

// CDeviceAuth_AuthorizeRemoteDevice_Request

// optional fixed64 steamid = 1;
inline bool CDeviceAuth_AuthorizeRemoteDevice_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_AuthorizeRemoteDevice_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_AuthorizeRemoteDevice_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_AuthorizeRemoteDevice_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CDeviceAuth_AuthorizeRemoteDevice_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_AuthorizeRemoteDevice_Request.steamid)
  return steamid_;
}
inline void CDeviceAuth_AuthorizeRemoteDevice_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_AuthorizeRemoteDevice_Request.steamid)
}

// optional fixed64 auth_device_token = 2;
inline bool CDeviceAuth_AuthorizeRemoteDevice_Request::has_auth_device_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDeviceAuth_AuthorizeRemoteDevice_Request::set_has_auth_device_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDeviceAuth_AuthorizeRemoteDevice_Request::clear_has_auth_device_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDeviceAuth_AuthorizeRemoteDevice_Request::clear_auth_device_token() {
  auth_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_auth_device_token();
}
inline ::google::protobuf::uint64 CDeviceAuth_AuthorizeRemoteDevice_Request::auth_device_token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_AuthorizeRemoteDevice_Request.auth_device_token)
  return auth_device_token_;
}
inline void CDeviceAuth_AuthorizeRemoteDevice_Request::set_auth_device_token(::google::protobuf::uint64 value) {
  set_has_auth_device_token();
  auth_device_token_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_AuthorizeRemoteDevice_Request.auth_device_token)
}

// -------------------------------------------------------------------

// CDeviceAuth_AuthorizeRemoteDevice_Response

// -------------------------------------------------------------------

// CDeviceAuth_DeauthorizeRemoteDevice_Request

// optional fixed64 steamid = 1;
inline bool CDeviceAuth_DeauthorizeRemoteDevice_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_DeauthorizeRemoteDevice_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_DeauthorizeRemoteDevice_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_DeauthorizeRemoteDevice_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CDeviceAuth_DeauthorizeRemoteDevice_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_DeauthorizeRemoteDevice_Request.steamid)
  return steamid_;
}
inline void CDeviceAuth_DeauthorizeRemoteDevice_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_DeauthorizeRemoteDevice_Request.steamid)
}

// optional fixed64 auth_device_token = 2;
inline bool CDeviceAuth_DeauthorizeRemoteDevice_Request::has_auth_device_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDeviceAuth_DeauthorizeRemoteDevice_Request::set_has_auth_device_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDeviceAuth_DeauthorizeRemoteDevice_Request::clear_has_auth_device_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDeviceAuth_DeauthorizeRemoteDevice_Request::clear_auth_device_token() {
  auth_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_auth_device_token();
}
inline ::google::protobuf::uint64 CDeviceAuth_DeauthorizeRemoteDevice_Request::auth_device_token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_DeauthorizeRemoteDevice_Request.auth_device_token)
  return auth_device_token_;
}
inline void CDeviceAuth_DeauthorizeRemoteDevice_Request::set_auth_device_token(::google::protobuf::uint64 value) {
  set_has_auth_device_token();
  auth_device_token_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_DeauthorizeRemoteDevice_Request.auth_device_token)
}

// -------------------------------------------------------------------

// CDeviceAuth_DeauthorizeRemoteDevice_Response

// -------------------------------------------------------------------

// CDeviceAuth_GetUsedAuthorizedDevices_Request

// optional fixed64 steamid = 1;
inline bool CDeviceAuth_GetUsedAuthorizedDevices_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CDeviceAuth_GetUsedAuthorizedDevices_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Request.steamid)
  return steamid_;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Request.steamid)
}

// -------------------------------------------------------------------

// CDeviceAuth_GetUsedAuthorizedDevices_Response_Device

// optional fixed64 auth_device_token = 1;
inline bool CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::has_auth_device_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::set_has_auth_device_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::clear_has_auth_device_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::clear_auth_device_token() {
  auth_device_token_ = GOOGLE_ULONGLONG(0);
  clear_has_auth_device_token();
}
inline ::google::protobuf::uint64 CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::auth_device_token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.auth_device_token)
  return auth_device_token_;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::set_auth_device_token(::google::protobuf::uint64 value) {
  set_has_auth_device_token();
  auth_device_token_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.auth_device_token)
}

// optional string device_name = 2;
inline bool CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::has_device_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::set_has_device_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::clear_has_device_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::clear_device_name() {
  device_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_device_name();
}
inline const ::std::string& CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::device_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.device_name)
  return device_name_.GetNoArena();
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::set_device_name(const ::std::string& value) {
  set_has_device_name();
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.device_name)
}
#if LANG_CXX11
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::set_device_name(::std::string&& value) {
  set_has_device_name();
  device_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.device_name)
}
#endif
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::set_device_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_device_name();
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.device_name)
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::set_device_name(const char* value, size_t size) {
  set_has_device_name();
  device_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.device_name)
}
inline ::std::string* CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::mutable_device_name() {
  set_has_device_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.device_name)
  return device_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::release_device_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.device_name)
  clear_has_device_name();
  return device_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::set_allocated_device_name(::std::string* device_name) {
  if (device_name != NULL) {
    set_has_device_name();
  } else {
    clear_has_device_name();
  }
  device_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), device_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.device_name)
}

// optional fixed64 owner_steamid = 3;
inline bool CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::has_owner_steamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::set_has_owner_steamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::clear_has_owner_steamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::clear_owner_steamid() {
  owner_steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_owner_steamid();
}
inline ::google::protobuf::uint64 CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::owner_steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.owner_steamid)
  return owner_steamid_;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::set_owner_steamid(::google::protobuf::uint64 value) {
  set_has_owner_steamid();
  owner_steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.owner_steamid)
}

// optional uint32 last_time_used = 4;
inline bool CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::has_last_time_used() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::set_has_last_time_used() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::clear_has_last_time_used() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::clear_last_time_used() {
  last_time_used_ = 0u;
  clear_has_last_time_used();
}
inline ::google::protobuf::uint32 CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::last_time_used() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.last_time_used)
  return last_time_used_;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::set_last_time_used(::google::protobuf::uint32 value) {
  set_has_last_time_used();
  last_time_used_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.last_time_used)
}

// optional uint32 last_app_played = 5;
inline bool CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::has_last_app_played() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::set_has_last_app_played() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::clear_has_last_app_played() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::clear_last_app_played() {
  last_app_played_ = 0u;
  clear_has_last_app_played();
}
inline ::google::protobuf::uint32 CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::last_app_played() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.last_app_played)
  return last_app_played_;
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response_Device::set_last_app_played(::google::protobuf::uint32 value) {
  set_has_last_app_played();
  last_app_played_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device.last_app_played)
}

// -------------------------------------------------------------------

// CDeviceAuth_GetUsedAuthorizedDevices_Response

// repeated .proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.Device devices = 1;
inline int CDeviceAuth_GetUsedAuthorizedDevices_Response::devices_size() const {
  return devices_.size();
}
inline void CDeviceAuth_GetUsedAuthorizedDevices_Response::clear_devices() {
  devices_.Clear();
}
inline const ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Response_Device& CDeviceAuth_GetUsedAuthorizedDevices_Response::devices(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.devices)
  return devices_.Get(index);
}
inline ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Response_Device* CDeviceAuth_GetUsedAuthorizedDevices_Response::mutable_devices(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.devices)
  return devices_.Mutable(index);
}
inline ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Response_Device* CDeviceAuth_GetUsedAuthorizedDevices_Response::add_devices() {
  // @@protoc_insertion_point(field_add:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.devices)
  return devices_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Response_Device >*
CDeviceAuth_GetUsedAuthorizedDevices_Response::mutable_devices() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.devices)
  return &devices_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetUsedAuthorizedDevices_Response_Device >&
CDeviceAuth_GetUsedAuthorizedDevices_Response::devices() const {
  // @@protoc_insertion_point(field_list:proto.steam.CDeviceAuth_GetUsedAuthorizedDevices_Response.devices)
  return devices_;
}

// -------------------------------------------------------------------

// CDeviceAuth_GetAuthorizedBorrowers_Request

// optional fixed64 steamid = 1;
inline bool CDeviceAuth_GetAuthorizedBorrowers_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CDeviceAuth_GetAuthorizedBorrowers_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Request.steamid)
  return steamid_;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Request.steamid)
}

// optional bool include_canceled = 2;
inline bool CDeviceAuth_GetAuthorizedBorrowers_Request::has_include_canceled() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Request::set_has_include_canceled() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Request::clear_has_include_canceled() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Request::clear_include_canceled() {
  include_canceled_ = false;
  clear_has_include_canceled();
}
inline bool CDeviceAuth_GetAuthorizedBorrowers_Request::include_canceled() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Request.include_canceled)
  return include_canceled_;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Request::set_include_canceled(bool value) {
  set_has_include_canceled();
  include_canceled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Request.include_canceled)
}

// optional bool include_pending = 3;
inline bool CDeviceAuth_GetAuthorizedBorrowers_Request::has_include_pending() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Request::set_has_include_pending() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Request::clear_has_include_pending() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Request::clear_include_pending() {
  include_pending_ = false;
  clear_has_include_pending();
}
inline bool CDeviceAuth_GetAuthorizedBorrowers_Request::include_pending() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Request.include_pending)
  return include_pending_;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Request::set_include_pending(bool value) {
  set_has_include_pending();
  include_pending_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Request.include_pending)
}

// -------------------------------------------------------------------

// CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower

// optional fixed64 steamid = 1;
inline bool CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.steamid)
  return steamid_;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.steamid)
}

// optional bool is_pending = 2;
inline bool CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::has_is_pending() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::set_has_is_pending() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::clear_has_is_pending() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::clear_is_pending() {
  is_pending_ = false;
  clear_has_is_pending();
}
inline bool CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::is_pending() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.is_pending)
  return is_pending_;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::set_is_pending(bool value) {
  set_has_is_pending();
  is_pending_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.is_pending)
}

// optional bool is_canceled = 3;
inline bool CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::has_is_canceled() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::set_has_is_canceled() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::clear_has_is_canceled() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::clear_is_canceled() {
  is_canceled_ = false;
  clear_has_is_canceled();
}
inline bool CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::is_canceled() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.is_canceled)
  return is_canceled_;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::set_is_canceled(bool value) {
  set_has_is_canceled();
  is_canceled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.is_canceled)
}

// optional uint32 time_created = 4;
inline bool CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::has_time_created() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::set_has_time_created() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::clear_has_time_created() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::clear_time_created() {
  time_created_ = 0u;
  clear_has_time_created();
}
inline ::google::protobuf::uint32 CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::time_created() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.time_created)
  return time_created_;
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower::set_time_created(::google::protobuf::uint32 value) {
  set_has_time_created();
  time_created_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower.time_created)
}

// -------------------------------------------------------------------

// CDeviceAuth_GetAuthorizedBorrowers_Response

// repeated .proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.Borrower borrowers = 1;
inline int CDeviceAuth_GetAuthorizedBorrowers_Response::borrowers_size() const {
  return borrowers_.size();
}
inline void CDeviceAuth_GetAuthorizedBorrowers_Response::clear_borrowers() {
  borrowers_.Clear();
}
inline const ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower& CDeviceAuth_GetAuthorizedBorrowers_Response::borrowers(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.borrowers)
  return borrowers_.Get(index);
}
inline ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower* CDeviceAuth_GetAuthorizedBorrowers_Response::mutable_borrowers(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.borrowers)
  return borrowers_.Mutable(index);
}
inline ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower* CDeviceAuth_GetAuthorizedBorrowers_Response::add_borrowers() {
  // @@protoc_insertion_point(field_add:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.borrowers)
  return borrowers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower >*
CDeviceAuth_GetAuthorizedBorrowers_Response::mutable_borrowers() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.borrowers)
  return &borrowers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetAuthorizedBorrowers_Response_Borrower >&
CDeviceAuth_GetAuthorizedBorrowers_Response::borrowers() const {
  // @@protoc_insertion_point(field_list:proto.steam.CDeviceAuth_GetAuthorizedBorrowers_Response.borrowers)
  return borrowers_;
}

// -------------------------------------------------------------------

// CDeviceAuth_AddAuthorizedBorrowers_Request

// optional fixed64 steamid = 1;
inline bool CDeviceAuth_AddAuthorizedBorrowers_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_AddAuthorizedBorrowers_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_AddAuthorizedBorrowers_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_AddAuthorizedBorrowers_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CDeviceAuth_AddAuthorizedBorrowers_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_AddAuthorizedBorrowers_Request.steamid)
  return steamid_;
}
inline void CDeviceAuth_AddAuthorizedBorrowers_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_AddAuthorizedBorrowers_Request.steamid)
}

// repeated fixed64 steamid_borrower = 2;
inline int CDeviceAuth_AddAuthorizedBorrowers_Request::steamid_borrower_size() const {
  return steamid_borrower_.size();
}
inline void CDeviceAuth_AddAuthorizedBorrowers_Request::clear_steamid_borrower() {
  steamid_borrower_.Clear();
}
inline ::google::protobuf::uint64 CDeviceAuth_AddAuthorizedBorrowers_Request::steamid_borrower(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_AddAuthorizedBorrowers_Request.steamid_borrower)
  return steamid_borrower_.Get(index);
}
inline void CDeviceAuth_AddAuthorizedBorrowers_Request::set_steamid_borrower(int index, ::google::protobuf::uint64 value) {
  steamid_borrower_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_AddAuthorizedBorrowers_Request.steamid_borrower)
}
inline void CDeviceAuth_AddAuthorizedBorrowers_Request::add_steamid_borrower(::google::protobuf::uint64 value) {
  steamid_borrower_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CDeviceAuth_AddAuthorizedBorrowers_Request.steamid_borrower)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CDeviceAuth_AddAuthorizedBorrowers_Request::steamid_borrower() const {
  // @@protoc_insertion_point(field_list:proto.steam.CDeviceAuth_AddAuthorizedBorrowers_Request.steamid_borrower)
  return steamid_borrower_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CDeviceAuth_AddAuthorizedBorrowers_Request::mutable_steamid_borrower() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CDeviceAuth_AddAuthorizedBorrowers_Request.steamid_borrower)
  return &steamid_borrower_;
}

// -------------------------------------------------------------------

// CDeviceAuth_AddAuthorizedBorrowers_Response

// optional int32 seconds_to_wait = 1;
inline bool CDeviceAuth_AddAuthorizedBorrowers_Response::has_seconds_to_wait() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_AddAuthorizedBorrowers_Response::set_has_seconds_to_wait() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_AddAuthorizedBorrowers_Response::clear_has_seconds_to_wait() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_AddAuthorizedBorrowers_Response::clear_seconds_to_wait() {
  seconds_to_wait_ = 0;
  clear_has_seconds_to_wait();
}
inline ::google::protobuf::int32 CDeviceAuth_AddAuthorizedBorrowers_Response::seconds_to_wait() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_AddAuthorizedBorrowers_Response.seconds_to_wait)
  return seconds_to_wait_;
}
inline void CDeviceAuth_AddAuthorizedBorrowers_Response::set_seconds_to_wait(::google::protobuf::int32 value) {
  set_has_seconds_to_wait();
  seconds_to_wait_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_AddAuthorizedBorrowers_Response.seconds_to_wait)
}

// -------------------------------------------------------------------

// CDeviceAuth_RemoveAuthorizedBorrowers_Request

// optional fixed64 steamid = 1;
inline bool CDeviceAuth_RemoveAuthorizedBorrowers_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_RemoveAuthorizedBorrowers_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_RemoveAuthorizedBorrowers_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_RemoveAuthorizedBorrowers_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CDeviceAuth_RemoveAuthorizedBorrowers_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_RemoveAuthorizedBorrowers_Request.steamid)
  return steamid_;
}
inline void CDeviceAuth_RemoveAuthorizedBorrowers_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_RemoveAuthorizedBorrowers_Request.steamid)
}

// repeated fixed64 steamid_borrower = 2;
inline int CDeviceAuth_RemoveAuthorizedBorrowers_Request::steamid_borrower_size() const {
  return steamid_borrower_.size();
}
inline void CDeviceAuth_RemoveAuthorizedBorrowers_Request::clear_steamid_borrower() {
  steamid_borrower_.Clear();
}
inline ::google::protobuf::uint64 CDeviceAuth_RemoveAuthorizedBorrowers_Request::steamid_borrower(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_RemoveAuthorizedBorrowers_Request.steamid_borrower)
  return steamid_borrower_.Get(index);
}
inline void CDeviceAuth_RemoveAuthorizedBorrowers_Request::set_steamid_borrower(int index, ::google::protobuf::uint64 value) {
  steamid_borrower_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_RemoveAuthorizedBorrowers_Request.steamid_borrower)
}
inline void CDeviceAuth_RemoveAuthorizedBorrowers_Request::add_steamid_borrower(::google::protobuf::uint64 value) {
  steamid_borrower_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CDeviceAuth_RemoveAuthorizedBorrowers_Request.steamid_borrower)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CDeviceAuth_RemoveAuthorizedBorrowers_Request::steamid_borrower() const {
  // @@protoc_insertion_point(field_list:proto.steam.CDeviceAuth_RemoveAuthorizedBorrowers_Request.steamid_borrower)
  return steamid_borrower_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CDeviceAuth_RemoveAuthorizedBorrowers_Request::mutable_steamid_borrower() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CDeviceAuth_RemoveAuthorizedBorrowers_Request.steamid_borrower)
  return &steamid_borrower_;
}

// -------------------------------------------------------------------

// CDeviceAuth_RemoveAuthorizedBorrowers_Response

// -------------------------------------------------------------------

// CDeviceAuth_GetAuthorizedAsBorrower_Request

// optional fixed64 steamid = 1;
inline bool CDeviceAuth_GetAuthorizedAsBorrower_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CDeviceAuth_GetAuthorizedAsBorrower_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Request.steamid)
  return steamid_;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Request.steamid)
}

// optional bool include_canceled = 2;
inline bool CDeviceAuth_GetAuthorizedAsBorrower_Request::has_include_canceled() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Request::set_has_include_canceled() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Request::clear_has_include_canceled() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Request::clear_include_canceled() {
  include_canceled_ = false;
  clear_has_include_canceled();
}
inline bool CDeviceAuth_GetAuthorizedAsBorrower_Request::include_canceled() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Request.include_canceled)
  return include_canceled_;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Request::set_include_canceled(bool value) {
  set_has_include_canceled();
  include_canceled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Request.include_canceled)
}

// optional bool include_pending = 3;
inline bool CDeviceAuth_GetAuthorizedAsBorrower_Request::has_include_pending() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Request::set_has_include_pending() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Request::clear_has_include_pending() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Request::clear_include_pending() {
  include_pending_ = false;
  clear_has_include_pending();
}
inline bool CDeviceAuth_GetAuthorizedAsBorrower_Request::include_pending() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Request.include_pending)
  return include_pending_;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Request::set_include_pending(bool value) {
  set_has_include_pending();
  include_pending_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Request.include_pending)
}

// -------------------------------------------------------------------

// CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender

// optional fixed64 steamid = 1;
inline bool CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender.steamid)
  return steamid_;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender.steamid)
}

// optional uint32 time_created = 2;
inline bool CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::has_time_created() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::set_has_time_created() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::clear_has_time_created() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::clear_time_created() {
  time_created_ = 0u;
  clear_has_time_created();
}
inline ::google::protobuf::uint32 CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::time_created() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender.time_created)
  return time_created_;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::set_time_created(::google::protobuf::uint32 value) {
  set_has_time_created();
  time_created_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender.time_created)
}

// optional bool is_pending = 3;
inline bool CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::has_is_pending() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::set_has_is_pending() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::clear_has_is_pending() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::clear_is_pending() {
  is_pending_ = false;
  clear_has_is_pending();
}
inline bool CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::is_pending() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender.is_pending)
  return is_pending_;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::set_is_pending(bool value) {
  set_has_is_pending();
  is_pending_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender.is_pending)
}

// optional bool is_canceled = 4;
inline bool CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::has_is_canceled() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::set_has_is_canceled() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::clear_has_is_canceled() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::clear_is_canceled() {
  is_canceled_ = false;
  clear_has_is_canceled();
}
inline bool CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::is_canceled() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender.is_canceled)
  return is_canceled_;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::set_is_canceled(bool value) {
  set_has_is_canceled();
  is_canceled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender.is_canceled)
}

// optional bool is_used = 5;
inline bool CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::has_is_used() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::set_has_is_used() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::clear_has_is_used() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::clear_is_used() {
  is_used_ = false;
  clear_has_is_used();
}
inline bool CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::is_used() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender.is_used)
  return is_used_;
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender::set_is_used(bool value) {
  set_has_is_used();
  is_used_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender.is_used)
}

// -------------------------------------------------------------------

// CDeviceAuth_GetAuthorizedAsBorrower_Response

// repeated .proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.Lender lenders = 1;
inline int CDeviceAuth_GetAuthorizedAsBorrower_Response::lenders_size() const {
  return lenders_.size();
}
inline void CDeviceAuth_GetAuthorizedAsBorrower_Response::clear_lenders() {
  lenders_.Clear();
}
inline const ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender& CDeviceAuth_GetAuthorizedAsBorrower_Response::lenders(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.lenders)
  return lenders_.Get(index);
}
inline ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender* CDeviceAuth_GetAuthorizedAsBorrower_Response::mutable_lenders(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.lenders)
  return lenders_.Mutable(index);
}
inline ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender* CDeviceAuth_GetAuthorizedAsBorrower_Response::add_lenders() {
  // @@protoc_insertion_point(field_add:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.lenders)
  return lenders_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender >*
CDeviceAuth_GetAuthorizedAsBorrower_Response::mutable_lenders() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.lenders)
  return &lenders_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetAuthorizedAsBorrower_Response_Lender >&
CDeviceAuth_GetAuthorizedAsBorrower_Response::lenders() const {
  // @@protoc_insertion_point(field_list:proto.steam.CDeviceAuth_GetAuthorizedAsBorrower_Response.lenders)
  return lenders_;
}

// -------------------------------------------------------------------

// CDeviceAuth_GetExcludedGamesInLibrary_Request

// optional fixed64 steamid = 1;
inline bool CDeviceAuth_GetExcludedGamesInLibrary_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CDeviceAuth_GetExcludedGamesInLibrary_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Request.steamid)
  return steamid_;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Request.steamid)
}

// -------------------------------------------------------------------

// CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame

// optional uint32 appid = 1;
inline bool CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame.appid)
  return appid_;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame.appid)
}

// optional string game_name = 2;
inline bool CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::has_game_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::set_has_game_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::clear_has_game_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::clear_game_name() {
  game_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_name();
}
inline const ::std::string& CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::game_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame.game_name)
  return game_name_.GetNoArena();
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::set_game_name(const ::std::string& value) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame.game_name)
}
#if LANG_CXX11
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::set_game_name(::std::string&& value) {
  set_has_game_name();
  game_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame.game_name)
}
#endif
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::set_game_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame.game_name)
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::set_game_name(const char* value, size_t size) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame.game_name)
}
inline ::std::string* CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::mutable_game_name() {
  set_has_game_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame.game_name)
  return game_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::release_game_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame.game_name)
  clear_has_game_name();
  return game_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::set_allocated_game_name(::std::string* game_name) {
  if (game_name != NULL) {
    set_has_game_name();
  } else {
    clear_has_game_name();
  }
  game_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame.game_name)
}

// optional bool vac_banned = 3;
inline bool CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::has_vac_banned() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::set_has_vac_banned() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::clear_has_vac_banned() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::clear_vac_banned() {
  vac_banned_ = false;
  clear_has_vac_banned();
}
inline bool CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::vac_banned() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame.vac_banned)
  return vac_banned_;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::set_vac_banned(bool value) {
  set_has_vac_banned();
  vac_banned_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame.vac_banned)
}

// optional bool package_excluded = 4;
inline bool CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::has_package_excluded() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::set_has_package_excluded() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::clear_has_package_excluded() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::clear_package_excluded() {
  package_excluded_ = false;
  clear_has_package_excluded();
}
inline bool CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::package_excluded() const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame.package_excluded)
  return package_excluded_;
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame::set_package_excluded(bool value) {
  set_has_package_excluded();
  package_excluded_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame.package_excluded)
}

// -------------------------------------------------------------------

// CDeviceAuth_GetExcludedGamesInLibrary_Response

// repeated .proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.ExcludedGame excluded_games = 1;
inline int CDeviceAuth_GetExcludedGamesInLibrary_Response::excluded_games_size() const {
  return excluded_games_.size();
}
inline void CDeviceAuth_GetExcludedGamesInLibrary_Response::clear_excluded_games() {
  excluded_games_.Clear();
}
inline const ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame& CDeviceAuth_GetExcludedGamesInLibrary_Response::excluded_games(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.excluded_games)
  return excluded_games_.Get(index);
}
inline ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame* CDeviceAuth_GetExcludedGamesInLibrary_Response::mutable_excluded_games(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.excluded_games)
  return excluded_games_.Mutable(index);
}
inline ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame* CDeviceAuth_GetExcludedGamesInLibrary_Response::add_excluded_games() {
  // @@protoc_insertion_point(field_add:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.excluded_games)
  return excluded_games_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame >*
CDeviceAuth_GetExcludedGamesInLibrary_Response::mutable_excluded_games() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.excluded_games)
  return &excluded_games_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CDeviceAuth_GetExcludedGamesInLibrary_Response_ExcludedGame >&
CDeviceAuth_GetExcludedGamesInLibrary_Response::excluded_games() const {
  // @@protoc_insertion_point(field_list:proto.steam.CDeviceAuth_GetExcludedGamesInLibrary_Response.excluded_games)
  return excluded_games_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_steammessages_5fdeviceauth_2esteamclient_2eproto__INCLUDED
