// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_offline.steamclient.proto

#ifndef PROTOBUF_steammessages_5foffline_2esteamclient_2eproto__INCLUDED
#define PROTOBUF_steammessages_5foffline_2esteamclient_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
namespace steam {
class COffline_GetOfflineLogonTicket_Request;
class COffline_GetOfflineLogonTicket_RequestDefaultTypeInternal;
extern COffline_GetOfflineLogonTicket_RequestDefaultTypeInternal _COffline_GetOfflineLogonTicket_Request_default_instance_;
class COffline_GetOfflineLogonTicket_Response;
class COffline_GetOfflineLogonTicket_ResponseDefaultTypeInternal;
extern COffline_GetOfflineLogonTicket_ResponseDefaultTypeInternal _COffline_GetOfflineLogonTicket_Response_default_instance_;
class COffline_GetUnsignedOfflineLogonTicket_Request;
class COffline_GetUnsignedOfflineLogonTicket_RequestDefaultTypeInternal;
extern COffline_GetUnsignedOfflineLogonTicket_RequestDefaultTypeInternal _COffline_GetUnsignedOfflineLogonTicket_Request_default_instance_;
class COffline_GetUnsignedOfflineLogonTicket_Response;
class COffline_GetUnsignedOfflineLogonTicket_ResponseDefaultTypeInternal;
extern COffline_GetUnsignedOfflineLogonTicket_ResponseDefaultTypeInternal _COffline_GetUnsignedOfflineLogonTicket_Response_default_instance_;
class COffline_OfflineLogonTicket;
class COffline_OfflineLogonTicketDefaultTypeInternal;
extern COffline_OfflineLogonTicketDefaultTypeInternal _COffline_OfflineLogonTicket_default_instance_;
class NoResponse;
class NoResponseDefaultTypeInternal;
extern NoResponseDefaultTypeInternal _NoResponse_default_instance_;
}  // namespace steam
}  // namespace proto

namespace proto {
namespace steam {

namespace protobuf_steammessages_5foffline_2esteamclient_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_steammessages_5foffline_2esteamclient_2eproto

// ===================================================================

class COffline_GetOfflineLogonTicket_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.COffline_GetOfflineLogonTicket_Request) */ {
 public:
  COffline_GetOfflineLogonTicket_Request();
  virtual ~COffline_GetOfflineLogonTicket_Request();

  COffline_GetOfflineLogonTicket_Request(const COffline_GetOfflineLogonTicket_Request& from);

  inline COffline_GetOfflineLogonTicket_Request& operator=(const COffline_GetOfflineLogonTicket_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const COffline_GetOfflineLogonTicket_Request& default_instance();

  static inline const COffline_GetOfflineLogonTicket_Request* internal_default_instance() {
    return reinterpret_cast<const COffline_GetOfflineLogonTicket_Request*>(
               &_COffline_GetOfflineLogonTicket_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(COffline_GetOfflineLogonTicket_Request* other);

  // implements Message ----------------------------------------------

  inline COffline_GetOfflineLogonTicket_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  COffline_GetOfflineLogonTicket_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const COffline_GetOfflineLogonTicket_Request& from);
  void MergeFrom(const COffline_GetOfflineLogonTicket_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(COffline_GetOfflineLogonTicket_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 priority = 1;
  bool has_priority() const;
  void clear_priority();
  static const int kPriorityFieldNumber = 1;
  ::google::protobuf::uint32 priority() const;
  void set_priority(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.COffline_GetOfflineLogonTicket_Request)
 private:
  void set_has_priority();
  void clear_has_priority();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 priority_;
  friend struct protobuf_steammessages_5foffline_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class COffline_GetOfflineLogonTicket_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.COffline_GetOfflineLogonTicket_Response) */ {
 public:
  COffline_GetOfflineLogonTicket_Response();
  virtual ~COffline_GetOfflineLogonTicket_Response();

  COffline_GetOfflineLogonTicket_Response(const COffline_GetOfflineLogonTicket_Response& from);

  inline COffline_GetOfflineLogonTicket_Response& operator=(const COffline_GetOfflineLogonTicket_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const COffline_GetOfflineLogonTicket_Response& default_instance();

  static inline const COffline_GetOfflineLogonTicket_Response* internal_default_instance() {
    return reinterpret_cast<const COffline_GetOfflineLogonTicket_Response*>(
               &_COffline_GetOfflineLogonTicket_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(COffline_GetOfflineLogonTicket_Response* other);

  // implements Message ----------------------------------------------

  inline COffline_GetOfflineLogonTicket_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  COffline_GetOfflineLogonTicket_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const COffline_GetOfflineLogonTicket_Response& from);
  void MergeFrom(const COffline_GetOfflineLogonTicket_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(COffline_GetOfflineLogonTicket_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes serialized_ticket = 1;
  bool has_serialized_ticket() const;
  void clear_serialized_ticket();
  static const int kSerializedTicketFieldNumber = 1;
  const ::std::string& serialized_ticket() const;
  void set_serialized_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_serialized_ticket(::std::string&& value);
  #endif
  void set_serialized_ticket(const char* value);
  void set_serialized_ticket(const void* value, size_t size);
  ::std::string* mutable_serialized_ticket();
  ::std::string* release_serialized_ticket();
  void set_allocated_serialized_ticket(::std::string* serialized_ticket);

  // optional bytes signature = 2;
  bool has_signature() const;
  void clear_signature();
  static const int kSignatureFieldNumber = 2;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // @@protoc_insertion_point(class_scope:proto.steam.COffline_GetOfflineLogonTicket_Response)
 private:
  void set_has_serialized_ticket();
  void clear_has_serialized_ticket();
  void set_has_signature();
  void clear_has_signature();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr serialized_ticket_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  friend struct protobuf_steammessages_5foffline_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class COffline_GetUnsignedOfflineLogonTicket_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.COffline_GetUnsignedOfflineLogonTicket_Request) */ {
 public:
  COffline_GetUnsignedOfflineLogonTicket_Request();
  virtual ~COffline_GetUnsignedOfflineLogonTicket_Request();

  COffline_GetUnsignedOfflineLogonTicket_Request(const COffline_GetUnsignedOfflineLogonTicket_Request& from);

  inline COffline_GetUnsignedOfflineLogonTicket_Request& operator=(const COffline_GetUnsignedOfflineLogonTicket_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const COffline_GetUnsignedOfflineLogonTicket_Request& default_instance();

  static inline const COffline_GetUnsignedOfflineLogonTicket_Request* internal_default_instance() {
    return reinterpret_cast<const COffline_GetUnsignedOfflineLogonTicket_Request*>(
               &_COffline_GetUnsignedOfflineLogonTicket_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(COffline_GetUnsignedOfflineLogonTicket_Request* other);

  // implements Message ----------------------------------------------

  inline COffline_GetUnsignedOfflineLogonTicket_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  COffline_GetUnsignedOfflineLogonTicket_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const COffline_GetUnsignedOfflineLogonTicket_Request& from);
  void MergeFrom(const COffline_GetUnsignedOfflineLogonTicket_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(COffline_GetUnsignedOfflineLogonTicket_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.COffline_GetUnsignedOfflineLogonTicket_Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_steammessages_5foffline_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class COffline_OfflineLogonTicket : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.COffline_OfflineLogonTicket) */ {
 public:
  COffline_OfflineLogonTicket();
  virtual ~COffline_OfflineLogonTicket();

  COffline_OfflineLogonTicket(const COffline_OfflineLogonTicket& from);

  inline COffline_OfflineLogonTicket& operator=(const COffline_OfflineLogonTicket& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const COffline_OfflineLogonTicket& default_instance();

  static inline const COffline_OfflineLogonTicket* internal_default_instance() {
    return reinterpret_cast<const COffline_OfflineLogonTicket*>(
               &_COffline_OfflineLogonTicket_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(COffline_OfflineLogonTicket* other);

  // implements Message ----------------------------------------------

  inline COffline_OfflineLogonTicket* New() const PROTOBUF_FINAL { return New(NULL); }

  COffline_OfflineLogonTicket* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const COffline_OfflineLogonTicket& from);
  void MergeFrom(const COffline_OfflineLogonTicket& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(COffline_OfflineLogonTicket* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 accountid = 1;
  bool has_accountid() const;
  void clear_accountid();
  static const int kAccountidFieldNumber = 1;
  ::google::protobuf::uint32 accountid() const;
  void set_accountid(::google::protobuf::uint32 value);

  // optional fixed32 rtime32_creation_time = 2;
  bool has_rtime32_creation_time() const;
  void clear_rtime32_creation_time();
  static const int kRtime32CreationTimeFieldNumber = 2;
  ::google::protobuf::uint32 rtime32_creation_time() const;
  void set_rtime32_creation_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.COffline_OfflineLogonTicket)
 private:
  void set_has_accountid();
  void clear_has_accountid();
  void set_has_rtime32_creation_time();
  void clear_has_rtime32_creation_time();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 accountid_;
  ::google::protobuf::uint32 rtime32_creation_time_;
  friend struct protobuf_steammessages_5foffline_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class COffline_GetUnsignedOfflineLogonTicket_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.COffline_GetUnsignedOfflineLogonTicket_Response) */ {
 public:
  COffline_GetUnsignedOfflineLogonTicket_Response();
  virtual ~COffline_GetUnsignedOfflineLogonTicket_Response();

  COffline_GetUnsignedOfflineLogonTicket_Response(const COffline_GetUnsignedOfflineLogonTicket_Response& from);

  inline COffline_GetUnsignedOfflineLogonTicket_Response& operator=(const COffline_GetUnsignedOfflineLogonTicket_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const COffline_GetUnsignedOfflineLogonTicket_Response& default_instance();

  static inline const COffline_GetUnsignedOfflineLogonTicket_Response* internal_default_instance() {
    return reinterpret_cast<const COffline_GetUnsignedOfflineLogonTicket_Response*>(
               &_COffline_GetUnsignedOfflineLogonTicket_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(COffline_GetUnsignedOfflineLogonTicket_Response* other);

  // implements Message ----------------------------------------------

  inline COffline_GetUnsignedOfflineLogonTicket_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  COffline_GetUnsignedOfflineLogonTicket_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const COffline_GetUnsignedOfflineLogonTicket_Response& from);
  void MergeFrom(const COffline_GetUnsignedOfflineLogonTicket_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(COffline_GetUnsignedOfflineLogonTicket_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .proto.steam.COffline_OfflineLogonTicket ticket = 1;
  bool has_ticket() const;
  void clear_ticket();
  static const int kTicketFieldNumber = 1;
  const ::proto::steam::COffline_OfflineLogonTicket& ticket() const;
  ::proto::steam::COffline_OfflineLogonTicket* mutable_ticket();
  ::proto::steam::COffline_OfflineLogonTicket* release_ticket();
  void set_allocated_ticket(::proto::steam::COffline_OfflineLogonTicket* ticket);

  // @@protoc_insertion_point(class_scope:proto.steam.COffline_GetUnsignedOfflineLogonTicket_Response)
 private:
  void set_has_ticket();
  void clear_has_ticket();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::proto::steam::COffline_OfflineLogonTicket* ticket_;
  friend struct protobuf_steammessages_5foffline_2esteamclient_2eproto::TableStruct;
};
// ===================================================================

class Offline_Stub;

class Offline : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Offline() {};
 public:
  virtual ~Offline();

  typedef Offline_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void GetOfflineLogonTicket(::google::protobuf::RpcController* controller,
                       const ::proto::steam::COffline_GetOfflineLogonTicket_Request* request,
                       ::proto::steam::COffline_GetOfflineLogonTicket_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetUnsignedOfflineLogonTicket(::google::protobuf::RpcController* controller,
                       const ::proto::steam::COffline_GetUnsignedOfflineLogonTicket_Request* request,
                       ::proto::steam::COffline_GetUnsignedOfflineLogonTicket_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Offline);
};

class Offline_Stub : public Offline {
 public:
  Offline_Stub(::google::protobuf::RpcChannel* channel);
  Offline_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Offline_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Offline ------------------------------------------

  void GetOfflineLogonTicket(::google::protobuf::RpcController* controller,
                       const ::proto::steam::COffline_GetOfflineLogonTicket_Request* request,
                       ::proto::steam::COffline_GetOfflineLogonTicket_Response* response,
                       ::google::protobuf::Closure* done);
  void GetUnsignedOfflineLogonTicket(::google::protobuf::RpcController* controller,
                       const ::proto::steam::COffline_GetUnsignedOfflineLogonTicket_Request* request,
                       ::proto::steam::COffline_GetUnsignedOfflineLogonTicket_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Offline_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// COffline_GetOfflineLogonTicket_Request

// optional uint32 priority = 1;
inline bool COffline_GetOfflineLogonTicket_Request::has_priority() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void COffline_GetOfflineLogonTicket_Request::set_has_priority() {
  _has_bits_[0] |= 0x00000001u;
}
inline void COffline_GetOfflineLogonTicket_Request::clear_has_priority() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void COffline_GetOfflineLogonTicket_Request::clear_priority() {
  priority_ = 0u;
  clear_has_priority();
}
inline ::google::protobuf::uint32 COffline_GetOfflineLogonTicket_Request::priority() const {
  // @@protoc_insertion_point(field_get:proto.steam.COffline_GetOfflineLogonTicket_Request.priority)
  return priority_;
}
inline void COffline_GetOfflineLogonTicket_Request::set_priority(::google::protobuf::uint32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.COffline_GetOfflineLogonTicket_Request.priority)
}

// -------------------------------------------------------------------

// COffline_GetOfflineLogonTicket_Response

// optional bytes serialized_ticket = 1;
inline bool COffline_GetOfflineLogonTicket_Response::has_serialized_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void COffline_GetOfflineLogonTicket_Response::set_has_serialized_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void COffline_GetOfflineLogonTicket_Response::clear_has_serialized_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void COffline_GetOfflineLogonTicket_Response::clear_serialized_ticket() {
  serialized_ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serialized_ticket();
}
inline const ::std::string& COffline_GetOfflineLogonTicket_Response::serialized_ticket() const {
  // @@protoc_insertion_point(field_get:proto.steam.COffline_GetOfflineLogonTicket_Response.serialized_ticket)
  return serialized_ticket_.GetNoArena();
}
inline void COffline_GetOfflineLogonTicket_Response::set_serialized_ticket(const ::std::string& value) {
  set_has_serialized_ticket();
  serialized_ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.COffline_GetOfflineLogonTicket_Response.serialized_ticket)
}
#if LANG_CXX11
inline void COffline_GetOfflineLogonTicket_Response::set_serialized_ticket(::std::string&& value) {
  set_has_serialized_ticket();
  serialized_ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.COffline_GetOfflineLogonTicket_Response.serialized_ticket)
}
#endif
inline void COffline_GetOfflineLogonTicket_Response::set_serialized_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serialized_ticket();
  serialized_ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.COffline_GetOfflineLogonTicket_Response.serialized_ticket)
}
inline void COffline_GetOfflineLogonTicket_Response::set_serialized_ticket(const void* value, size_t size) {
  set_has_serialized_ticket();
  serialized_ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.COffline_GetOfflineLogonTicket_Response.serialized_ticket)
}
inline ::std::string* COffline_GetOfflineLogonTicket_Response::mutable_serialized_ticket() {
  set_has_serialized_ticket();
  // @@protoc_insertion_point(field_mutable:proto.steam.COffline_GetOfflineLogonTicket_Response.serialized_ticket)
  return serialized_ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* COffline_GetOfflineLogonTicket_Response::release_serialized_ticket() {
  // @@protoc_insertion_point(field_release:proto.steam.COffline_GetOfflineLogonTicket_Response.serialized_ticket)
  clear_has_serialized_ticket();
  return serialized_ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void COffline_GetOfflineLogonTicket_Response::set_allocated_serialized_ticket(::std::string* serialized_ticket) {
  if (serialized_ticket != NULL) {
    set_has_serialized_ticket();
  } else {
    clear_has_serialized_ticket();
  }
  serialized_ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialized_ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.COffline_GetOfflineLogonTicket_Response.serialized_ticket)
}

// optional bytes signature = 2;
inline bool COffline_GetOfflineLogonTicket_Response::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void COffline_GetOfflineLogonTicket_Response::set_has_signature() {
  _has_bits_[0] |= 0x00000002u;
}
inline void COffline_GetOfflineLogonTicket_Response::clear_has_signature() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void COffline_GetOfflineLogonTicket_Response::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
inline const ::std::string& COffline_GetOfflineLogonTicket_Response::signature() const {
  // @@protoc_insertion_point(field_get:proto.steam.COffline_GetOfflineLogonTicket_Response.signature)
  return signature_.GetNoArena();
}
inline void COffline_GetOfflineLogonTicket_Response::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.COffline_GetOfflineLogonTicket_Response.signature)
}
#if LANG_CXX11
inline void COffline_GetOfflineLogonTicket_Response::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.COffline_GetOfflineLogonTicket_Response.signature)
}
#endif
inline void COffline_GetOfflineLogonTicket_Response::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.COffline_GetOfflineLogonTicket_Response.signature)
}
inline void COffline_GetOfflineLogonTicket_Response::set_signature(const void* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.COffline_GetOfflineLogonTicket_Response.signature)
}
inline ::std::string* COffline_GetOfflineLogonTicket_Response::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:proto.steam.COffline_GetOfflineLogonTicket_Response.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* COffline_GetOfflineLogonTicket_Response::release_signature() {
  // @@protoc_insertion_point(field_release:proto.steam.COffline_GetOfflineLogonTicket_Response.signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void COffline_GetOfflineLogonTicket_Response::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.COffline_GetOfflineLogonTicket_Response.signature)
}

// -------------------------------------------------------------------

// COffline_GetUnsignedOfflineLogonTicket_Request

// -------------------------------------------------------------------

// COffline_OfflineLogonTicket

// optional uint32 accountid = 1;
inline bool COffline_OfflineLogonTicket::has_accountid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void COffline_OfflineLogonTicket::set_has_accountid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void COffline_OfflineLogonTicket::clear_has_accountid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void COffline_OfflineLogonTicket::clear_accountid() {
  accountid_ = 0u;
  clear_has_accountid();
}
inline ::google::protobuf::uint32 COffline_OfflineLogonTicket::accountid() const {
  // @@protoc_insertion_point(field_get:proto.steam.COffline_OfflineLogonTicket.accountid)
  return accountid_;
}
inline void COffline_OfflineLogonTicket::set_accountid(::google::protobuf::uint32 value) {
  set_has_accountid();
  accountid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.COffline_OfflineLogonTicket.accountid)
}

// optional fixed32 rtime32_creation_time = 2;
inline bool COffline_OfflineLogonTicket::has_rtime32_creation_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void COffline_OfflineLogonTicket::set_has_rtime32_creation_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void COffline_OfflineLogonTicket::clear_has_rtime32_creation_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void COffline_OfflineLogonTicket::clear_rtime32_creation_time() {
  rtime32_creation_time_ = 0u;
  clear_has_rtime32_creation_time();
}
inline ::google::protobuf::uint32 COffline_OfflineLogonTicket::rtime32_creation_time() const {
  // @@protoc_insertion_point(field_get:proto.steam.COffline_OfflineLogonTicket.rtime32_creation_time)
  return rtime32_creation_time_;
}
inline void COffline_OfflineLogonTicket::set_rtime32_creation_time(::google::protobuf::uint32 value) {
  set_has_rtime32_creation_time();
  rtime32_creation_time_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.COffline_OfflineLogonTicket.rtime32_creation_time)
}

// -------------------------------------------------------------------

// COffline_GetUnsignedOfflineLogonTicket_Response

// optional .proto.steam.COffline_OfflineLogonTicket ticket = 1;
inline bool COffline_GetUnsignedOfflineLogonTicket_Response::has_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void COffline_GetUnsignedOfflineLogonTicket_Response::set_has_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
inline void COffline_GetUnsignedOfflineLogonTicket_Response::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void COffline_GetUnsignedOfflineLogonTicket_Response::clear_ticket() {
  if (ticket_ != NULL) ticket_->::proto::steam::COffline_OfflineLogonTicket::Clear();
  clear_has_ticket();
}
inline const ::proto::steam::COffline_OfflineLogonTicket& COffline_GetUnsignedOfflineLogonTicket_Response::ticket() const {
  // @@protoc_insertion_point(field_get:proto.steam.COffline_GetUnsignedOfflineLogonTicket_Response.ticket)
  return ticket_ != NULL ? *ticket_
                         : *::proto::steam::COffline_OfflineLogonTicket::internal_default_instance();
}
inline ::proto::steam::COffline_OfflineLogonTicket* COffline_GetUnsignedOfflineLogonTicket_Response::mutable_ticket() {
  set_has_ticket();
  if (ticket_ == NULL) {
    ticket_ = new ::proto::steam::COffline_OfflineLogonTicket;
  }
  // @@protoc_insertion_point(field_mutable:proto.steam.COffline_GetUnsignedOfflineLogonTicket_Response.ticket)
  return ticket_;
}
inline ::proto::steam::COffline_OfflineLogonTicket* COffline_GetUnsignedOfflineLogonTicket_Response::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.steam.COffline_GetUnsignedOfflineLogonTicket_Response.ticket)
  clear_has_ticket();
  ::proto::steam::COffline_OfflineLogonTicket* temp = ticket_;
  ticket_ = NULL;
  return temp;
}
inline void COffline_GetUnsignedOfflineLogonTicket_Response::set_allocated_ticket(::proto::steam::COffline_OfflineLogonTicket* ticket) {
  delete ticket_;
  ticket_ = ticket;
  if (ticket) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.steam.COffline_GetUnsignedOfflineLogonTicket_Response.ticket)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_steammessages_5foffline_2esteamclient_2eproto__INCLUDED
