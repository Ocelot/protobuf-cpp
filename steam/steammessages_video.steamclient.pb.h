// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_video.steamclient.proto

#ifndef PROTOBUF_steammessages_5fvideo_2esteamclient_2eproto__INCLUDED
#define PROTOBUF_steammessages_5fvideo_2esteamclient_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
namespace steam {
class CFovasVideo_ClientGetOPFSettings_Request;
class CFovasVideo_ClientGetOPFSettings_RequestDefaultTypeInternal;
extern CFovasVideo_ClientGetOPFSettings_RequestDefaultTypeInternal _CFovasVideo_ClientGetOPFSettings_Request_default_instance_;
class CFovasVideo_ClientGetOPFSettings_Response;
class CFovasVideo_ClientGetOPFSettings_ResponseDefaultTypeInternal;
extern CFovasVideo_ClientGetOPFSettings_ResponseDefaultTypeInternal _CFovasVideo_ClientGetOPFSettings_Response_default_instance_;
class CVideo_ClientGetVideoURL_Request;
class CVideo_ClientGetVideoURL_RequestDefaultTypeInternal;
extern CVideo_ClientGetVideoURL_RequestDefaultTypeInternal _CVideo_ClientGetVideoURL_Request_default_instance_;
class CVideo_ClientGetVideoURL_Response;
class CVideo_ClientGetVideoURL_ResponseDefaultTypeInternal;
extern CVideo_ClientGetVideoURL_ResponseDefaultTypeInternal _CVideo_ClientGetVideoURL_Response_default_instance_;
class CVideo_UnlockedH264_Notification;
class CVideo_UnlockedH264_NotificationDefaultTypeInternal;
extern CVideo_UnlockedH264_NotificationDefaultTypeInternal _CVideo_UnlockedH264_Notification_default_instance_;
class NoResponse;
class NoResponseDefaultTypeInternal;
extern NoResponseDefaultTypeInternal _NoResponse_default_instance_;
}  // namespace steam
}  // namespace proto

namespace proto {
namespace steam {

namespace protobuf_steammessages_5fvideo_2esteamclient_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_steammessages_5fvideo_2esteamclient_2eproto

// ===================================================================

class CVideo_ClientGetVideoURL_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CVideo_ClientGetVideoURL_Request) */ {
 public:
  CVideo_ClientGetVideoURL_Request();
  virtual ~CVideo_ClientGetVideoURL_Request();

  CVideo_ClientGetVideoURL_Request(const CVideo_ClientGetVideoURL_Request& from);

  inline CVideo_ClientGetVideoURL_Request& operator=(const CVideo_ClientGetVideoURL_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CVideo_ClientGetVideoURL_Request& default_instance();

  static inline const CVideo_ClientGetVideoURL_Request* internal_default_instance() {
    return reinterpret_cast<const CVideo_ClientGetVideoURL_Request*>(
               &_CVideo_ClientGetVideoURL_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CVideo_ClientGetVideoURL_Request* other);

  // implements Message ----------------------------------------------

  inline CVideo_ClientGetVideoURL_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CVideo_ClientGetVideoURL_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CVideo_ClientGetVideoURL_Request& from);
  void MergeFrom(const CVideo_ClientGetVideoURL_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CVideo_ClientGetVideoURL_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 video_id = 1 [(.proto.steam.description) = "Video ID"];
  bool has_video_id() const;
  void clear_video_id();
  static const int kVideoIdFieldNumber = 1;
  ::google::protobuf::uint64 video_id() const;
  void set_video_id(::google::protobuf::uint64 value);

  // optional uint32 client_cellid = 2 [(.proto.steam.description) = "Cell ID of client, zero if unknown"];
  bool has_client_cellid() const;
  void clear_client_cellid();
  static const int kClientCellidFieldNumber = 2;
  ::google::protobuf::uint32 client_cellid() const;
  void set_client_cellid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CVideo_ClientGetVideoURL_Request)
 private:
  void set_has_video_id();
  void clear_has_video_id();
  void set_has_client_cellid();
  void clear_has_client_cellid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 video_id_;
  ::google::protobuf::uint32 client_cellid_;
  friend struct protobuf_steammessages_5fvideo_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CVideo_ClientGetVideoURL_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CVideo_ClientGetVideoURL_Response) */ {
 public:
  CVideo_ClientGetVideoURL_Response();
  virtual ~CVideo_ClientGetVideoURL_Response();

  CVideo_ClientGetVideoURL_Response(const CVideo_ClientGetVideoURL_Response& from);

  inline CVideo_ClientGetVideoURL_Response& operator=(const CVideo_ClientGetVideoURL_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CVideo_ClientGetVideoURL_Response& default_instance();

  static inline const CVideo_ClientGetVideoURL_Response* internal_default_instance() {
    return reinterpret_cast<const CVideo_ClientGetVideoURL_Response*>(
               &_CVideo_ClientGetVideoURL_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CVideo_ClientGetVideoURL_Response* other);

  // implements Message ----------------------------------------------

  inline CVideo_ClientGetVideoURL_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CVideo_ClientGetVideoURL_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CVideo_ClientGetVideoURL_Response& from);
  void MergeFrom(const CVideo_ClientGetVideoURL_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CVideo_ClientGetVideoURL_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string video_url = 2 [(.proto.steam.description) = "URL for video manifest"];
  bool has_video_url() const;
  void clear_video_url();
  static const int kVideoUrlFieldNumber = 2;
  const ::std::string& video_url() const;
  void set_video_url(const ::std::string& value);
  #if LANG_CXX11
  void set_video_url(::std::string&& value);
  #endif
  void set_video_url(const char* value);
  void set_video_url(const char* value, size_t size);
  ::std::string* mutable_video_url();
  ::std::string* release_video_url();
  void set_allocated_video_url(::std::string* video_url);

  // optional uint64 video_id = 1 [(.proto.steam.description) = "Video ID"];
  bool has_video_id() const;
  void clear_video_id();
  static const int kVideoIdFieldNumber = 1;
  ::google::protobuf::uint64 video_id() const;
  void set_video_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CVideo_ClientGetVideoURL_Response)
 private:
  void set_has_video_id();
  void clear_has_video_id();
  void set_has_video_url();
  void clear_has_video_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr video_url_;
  ::google::protobuf::uint64 video_id_;
  friend struct protobuf_steammessages_5fvideo_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CVideo_UnlockedH264_Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CVideo_UnlockedH264_Notification) */ {
 public:
  CVideo_UnlockedH264_Notification();
  virtual ~CVideo_UnlockedH264_Notification();

  CVideo_UnlockedH264_Notification(const CVideo_UnlockedH264_Notification& from);

  inline CVideo_UnlockedH264_Notification& operator=(const CVideo_UnlockedH264_Notification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CVideo_UnlockedH264_Notification& default_instance();

  static inline const CVideo_UnlockedH264_Notification* internal_default_instance() {
    return reinterpret_cast<const CVideo_UnlockedH264_Notification*>(
               &_CVideo_UnlockedH264_Notification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CVideo_UnlockedH264_Notification* other);

  // implements Message ----------------------------------------------

  inline CVideo_UnlockedH264_Notification* New() const PROTOBUF_FINAL { return New(NULL); }

  CVideo_UnlockedH264_Notification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CVideo_UnlockedH264_Notification& from);
  void MergeFrom(const CVideo_UnlockedH264_Notification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CVideo_UnlockedH264_Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes encryption_key = 1;
  bool has_encryption_key() const;
  void clear_encryption_key();
  static const int kEncryptionKeyFieldNumber = 1;
  const ::std::string& encryption_key() const;
  void set_encryption_key(const ::std::string& value);
  #if LANG_CXX11
  void set_encryption_key(::std::string&& value);
  #endif
  void set_encryption_key(const char* value);
  void set_encryption_key(const void* value, size_t size);
  ::std::string* mutable_encryption_key();
  ::std::string* release_encryption_key();
  void set_allocated_encryption_key(::std::string* encryption_key);

  // @@protoc_insertion_point(class_scope:proto.steam.CVideo_UnlockedH264_Notification)
 private:
  void set_has_encryption_key();
  void clear_has_encryption_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr encryption_key_;
  friend struct protobuf_steammessages_5fvideo_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CFovasVideo_ClientGetOPFSettings_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CFovasVideo_ClientGetOPFSettings_Request) */ {
 public:
  CFovasVideo_ClientGetOPFSettings_Request();
  virtual ~CFovasVideo_ClientGetOPFSettings_Request();

  CFovasVideo_ClientGetOPFSettings_Request(const CFovasVideo_ClientGetOPFSettings_Request& from);

  inline CFovasVideo_ClientGetOPFSettings_Request& operator=(const CFovasVideo_ClientGetOPFSettings_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CFovasVideo_ClientGetOPFSettings_Request& default_instance();

  static inline const CFovasVideo_ClientGetOPFSettings_Request* internal_default_instance() {
    return reinterpret_cast<const CFovasVideo_ClientGetOPFSettings_Request*>(
               &_CFovasVideo_ClientGetOPFSettings_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CFovasVideo_ClientGetOPFSettings_Request* other);

  // implements Message ----------------------------------------------

  inline CFovasVideo_ClientGetOPFSettings_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CFovasVideo_ClientGetOPFSettings_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CFovasVideo_ClientGetOPFSettings_Request& from);
  void MergeFrom(const CFovasVideo_ClientGetOPFSettings_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CFovasVideo_ClientGetOPFSettings_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 app_id = 1 [(.proto.steam.description) = "App ID"];
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // optional uint32 client_cellid = 2 [(.proto.steam.description) = "Cell ID of client, zero if unknown"];
  bool has_client_cellid() const;
  void clear_client_cellid();
  static const int kClientCellidFieldNumber = 2;
  ::google::protobuf::uint32 client_cellid() const;
  void set_client_cellid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CFovasVideo_ClientGetOPFSettings_Request)
 private:
  void set_has_app_id();
  void clear_has_app_id();
  void set_has_client_cellid();
  void clear_has_client_cellid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 app_id_;
  ::google::protobuf::uint32 client_cellid_;
  friend struct protobuf_steammessages_5fvideo_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CFovasVideo_ClientGetOPFSettings_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CFovasVideo_ClientGetOPFSettings_Response) */ {
 public:
  CFovasVideo_ClientGetOPFSettings_Response();
  virtual ~CFovasVideo_ClientGetOPFSettings_Response();

  CFovasVideo_ClientGetOPFSettings_Response(const CFovasVideo_ClientGetOPFSettings_Response& from);

  inline CFovasVideo_ClientGetOPFSettings_Response& operator=(const CFovasVideo_ClientGetOPFSettings_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CFovasVideo_ClientGetOPFSettings_Response& default_instance();

  static inline const CFovasVideo_ClientGetOPFSettings_Response* internal_default_instance() {
    return reinterpret_cast<const CFovasVideo_ClientGetOPFSettings_Response*>(
               &_CFovasVideo_ClientGetOPFSettings_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CFovasVideo_ClientGetOPFSettings_Response* other);

  // implements Message ----------------------------------------------

  inline CFovasVideo_ClientGetOPFSettings_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CFovasVideo_ClientGetOPFSettings_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CFovasVideo_ClientGetOPFSettings_Response& from);
  void MergeFrom(const CFovasVideo_ClientGetOPFSettings_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CFovasVideo_ClientGetOPFSettings_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string opf_settings = 2 [(.proto.steam.description) = "JSON blob of OPF Settings"];
  bool has_opf_settings() const;
  void clear_opf_settings();
  static const int kOpfSettingsFieldNumber = 2;
  const ::std::string& opf_settings() const;
  void set_opf_settings(const ::std::string& value);
  #if LANG_CXX11
  void set_opf_settings(::std::string&& value);
  #endif
  void set_opf_settings(const char* value);
  void set_opf_settings(const char* value, size_t size);
  ::std::string* mutable_opf_settings();
  ::std::string* release_opf_settings();
  void set_allocated_opf_settings(::std::string* opf_settings);

  // optional uint32 app_id = 1 [(.proto.steam.description) = "App ID"];
  bool has_app_id() const;
  void clear_app_id();
  static const int kAppIdFieldNumber = 1;
  ::google::protobuf::uint32 app_id() const;
  void set_app_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CFovasVideo_ClientGetOPFSettings_Response)
 private:
  void set_has_app_id();
  void clear_has_app_id();
  void set_has_opf_settings();
  void clear_has_opf_settings();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr opf_settings_;
  ::google::protobuf::uint32 app_id_;
  friend struct protobuf_steammessages_5fvideo_2esteamclient_2eproto::TableStruct;
};
// ===================================================================

class Video_Stub;

class Video : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Video() {};
 public:
  virtual ~Video();

  typedef Video_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void ClientGetVideoURL(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CVideo_ClientGetVideoURL_Request* request,
                       ::proto::steam::CVideo_ClientGetVideoURL_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Video);
};

class Video_Stub : public Video {
 public:
  Video_Stub(::google::protobuf::RpcChannel* channel);
  Video_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Video_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Video ------------------------------------------

  void ClientGetVideoURL(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CVideo_ClientGetVideoURL_Request* request,
                       ::proto::steam::CVideo_ClientGetVideoURL_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Video_Stub);
};


// -------------------------------------------------------------------

class VideoClient_Stub;

class VideoClient : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline VideoClient() {};
 public:
  virtual ~VideoClient();

  typedef VideoClient_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void NotifyUnlockedH264(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CVideo_UnlockedH264_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(VideoClient);
};

class VideoClient_Stub : public VideoClient {
 public:
  VideoClient_Stub(::google::protobuf::RpcChannel* channel);
  VideoClient_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~VideoClient_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements VideoClient ------------------------------------------

  void NotifyUnlockedH264(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CVideo_UnlockedH264_Notification* request,
                       ::proto::steam::NoResponse* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(VideoClient_Stub);
};


// -------------------------------------------------------------------

class FovasVideo_Stub;

class FovasVideo : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline FovasVideo() {};
 public:
  virtual ~FovasVideo();

  typedef FovasVideo_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void ClientGetOPFSettings(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CFovasVideo_ClientGetOPFSettings_Request* request,
                       ::proto::steam::CFovasVideo_ClientGetOPFSettings_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FovasVideo);
};

class FovasVideo_Stub : public FovasVideo {
 public:
  FovasVideo_Stub(::google::protobuf::RpcChannel* channel);
  FovasVideo_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~FovasVideo_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements FovasVideo ------------------------------------------

  void ClientGetOPFSettings(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CFovasVideo_ClientGetOPFSettings_Request* request,
                       ::proto::steam::CFovasVideo_ClientGetOPFSettings_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(FovasVideo_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CVideo_ClientGetVideoURL_Request

// optional uint64 video_id = 1 [(.proto.steam.description) = "Video ID"];
inline bool CVideo_ClientGetVideoURL_Request::has_video_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CVideo_ClientGetVideoURL_Request::set_has_video_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CVideo_ClientGetVideoURL_Request::clear_has_video_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CVideo_ClientGetVideoURL_Request::clear_video_id() {
  video_id_ = GOOGLE_ULONGLONG(0);
  clear_has_video_id();
}
inline ::google::protobuf::uint64 CVideo_ClientGetVideoURL_Request::video_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CVideo_ClientGetVideoURL_Request.video_id)
  return video_id_;
}
inline void CVideo_ClientGetVideoURL_Request::set_video_id(::google::protobuf::uint64 value) {
  set_has_video_id();
  video_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CVideo_ClientGetVideoURL_Request.video_id)
}

// optional uint32 client_cellid = 2 [(.proto.steam.description) = "Cell ID of client, zero if unknown"];
inline bool CVideo_ClientGetVideoURL_Request::has_client_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CVideo_ClientGetVideoURL_Request::set_has_client_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CVideo_ClientGetVideoURL_Request::clear_has_client_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CVideo_ClientGetVideoURL_Request::clear_client_cellid() {
  client_cellid_ = 0u;
  clear_has_client_cellid();
}
inline ::google::protobuf::uint32 CVideo_ClientGetVideoURL_Request::client_cellid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CVideo_ClientGetVideoURL_Request.client_cellid)
  return client_cellid_;
}
inline void CVideo_ClientGetVideoURL_Request::set_client_cellid(::google::protobuf::uint32 value) {
  set_has_client_cellid();
  client_cellid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CVideo_ClientGetVideoURL_Request.client_cellid)
}

// -------------------------------------------------------------------

// CVideo_ClientGetVideoURL_Response

// optional uint64 video_id = 1 [(.proto.steam.description) = "Video ID"];
inline bool CVideo_ClientGetVideoURL_Response::has_video_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CVideo_ClientGetVideoURL_Response::set_has_video_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CVideo_ClientGetVideoURL_Response::clear_has_video_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CVideo_ClientGetVideoURL_Response::clear_video_id() {
  video_id_ = GOOGLE_ULONGLONG(0);
  clear_has_video_id();
}
inline ::google::protobuf::uint64 CVideo_ClientGetVideoURL_Response::video_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CVideo_ClientGetVideoURL_Response.video_id)
  return video_id_;
}
inline void CVideo_ClientGetVideoURL_Response::set_video_id(::google::protobuf::uint64 value) {
  set_has_video_id();
  video_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CVideo_ClientGetVideoURL_Response.video_id)
}

// optional string video_url = 2 [(.proto.steam.description) = "URL for video manifest"];
inline bool CVideo_ClientGetVideoURL_Response::has_video_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CVideo_ClientGetVideoURL_Response::set_has_video_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CVideo_ClientGetVideoURL_Response::clear_has_video_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CVideo_ClientGetVideoURL_Response::clear_video_url() {
  video_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_video_url();
}
inline const ::std::string& CVideo_ClientGetVideoURL_Response::video_url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
  return video_url_.GetNoArena();
}
inline void CVideo_ClientGetVideoURL_Response::set_video_url(const ::std::string& value) {
  set_has_video_url();
  video_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
}
#if LANG_CXX11
inline void CVideo_ClientGetVideoURL_Response::set_video_url(::std::string&& value) {
  set_has_video_url();
  video_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
}
#endif
inline void CVideo_ClientGetVideoURL_Response::set_video_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_video_url();
  video_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
}
inline void CVideo_ClientGetVideoURL_Response::set_video_url(const char* value, size_t size) {
  set_has_video_url();
  video_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
}
inline ::std::string* CVideo_ClientGetVideoURL_Response::mutable_video_url() {
  set_has_video_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
  return video_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CVideo_ClientGetVideoURL_Response::release_video_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
  clear_has_video_url();
  return video_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CVideo_ClientGetVideoURL_Response::set_allocated_video_url(::std::string* video_url) {
  if (video_url != NULL) {
    set_has_video_url();
  } else {
    clear_has_video_url();
  }
  video_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), video_url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CVideo_ClientGetVideoURL_Response.video_url)
}

// -------------------------------------------------------------------

// CVideo_UnlockedH264_Notification

// optional bytes encryption_key = 1;
inline bool CVideo_UnlockedH264_Notification::has_encryption_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CVideo_UnlockedH264_Notification::set_has_encryption_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CVideo_UnlockedH264_Notification::clear_has_encryption_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CVideo_UnlockedH264_Notification::clear_encryption_key() {
  encryption_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encryption_key();
}
inline const ::std::string& CVideo_UnlockedH264_Notification::encryption_key() const {
  // @@protoc_insertion_point(field_get:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
  return encryption_key_.GetNoArena();
}
inline void CVideo_UnlockedH264_Notification::set_encryption_key(const ::std::string& value) {
  set_has_encryption_key();
  encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
}
#if LANG_CXX11
inline void CVideo_UnlockedH264_Notification::set_encryption_key(::std::string&& value) {
  set_has_encryption_key();
  encryption_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
}
#endif
inline void CVideo_UnlockedH264_Notification::set_encryption_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_encryption_key();
  encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
}
inline void CVideo_UnlockedH264_Notification::set_encryption_key(const void* value, size_t size) {
  set_has_encryption_key();
  encryption_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
}
inline ::std::string* CVideo_UnlockedH264_Notification::mutable_encryption_key() {
  set_has_encryption_key();
  // @@protoc_insertion_point(field_mutable:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
  return encryption_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CVideo_UnlockedH264_Notification::release_encryption_key() {
  // @@protoc_insertion_point(field_release:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
  clear_has_encryption_key();
  return encryption_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CVideo_UnlockedH264_Notification::set_allocated_encryption_key(::std::string* encryption_key) {
  if (encryption_key != NULL) {
    set_has_encryption_key();
  } else {
    clear_has_encryption_key();
  }
  encryption_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encryption_key);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CVideo_UnlockedH264_Notification.encryption_key)
}

// -------------------------------------------------------------------

// CFovasVideo_ClientGetOPFSettings_Request

// optional uint32 app_id = 1 [(.proto.steam.description) = "App ID"];
inline bool CFovasVideo_ClientGetOPFSettings_Request::has_app_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CFovasVideo_ClientGetOPFSettings_Request::set_has_app_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CFovasVideo_ClientGetOPFSettings_Request::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CFovasVideo_ClientGetOPFSettings_Request::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CFovasVideo_ClientGetOPFSettings_Request::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CFovasVideo_ClientGetOPFSettings_Request.app_id)
  return app_id_;
}
inline void CFovasVideo_ClientGetOPFSettings_Request::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CFovasVideo_ClientGetOPFSettings_Request.app_id)
}

// optional uint32 client_cellid = 2 [(.proto.steam.description) = "Cell ID of client, zero if unknown"];
inline bool CFovasVideo_ClientGetOPFSettings_Request::has_client_cellid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CFovasVideo_ClientGetOPFSettings_Request::set_has_client_cellid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CFovasVideo_ClientGetOPFSettings_Request::clear_has_client_cellid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CFovasVideo_ClientGetOPFSettings_Request::clear_client_cellid() {
  client_cellid_ = 0u;
  clear_has_client_cellid();
}
inline ::google::protobuf::uint32 CFovasVideo_ClientGetOPFSettings_Request::client_cellid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CFovasVideo_ClientGetOPFSettings_Request.client_cellid)
  return client_cellid_;
}
inline void CFovasVideo_ClientGetOPFSettings_Request::set_client_cellid(::google::protobuf::uint32 value) {
  set_has_client_cellid();
  client_cellid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CFovasVideo_ClientGetOPFSettings_Request.client_cellid)
}

// -------------------------------------------------------------------

// CFovasVideo_ClientGetOPFSettings_Response

// optional uint32 app_id = 1 [(.proto.steam.description) = "App ID"];
inline bool CFovasVideo_ClientGetOPFSettings_Response::has_app_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_has_app_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CFovasVideo_ClientGetOPFSettings_Response::clear_has_app_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CFovasVideo_ClientGetOPFSettings_Response::clear_app_id() {
  app_id_ = 0u;
  clear_has_app_id();
}
inline ::google::protobuf::uint32 CFovasVideo_ClientGetOPFSettings_Response::app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.app_id)
  return app_id_;
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_app_id(::google::protobuf::uint32 value) {
  set_has_app_id();
  app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.app_id)
}

// optional string opf_settings = 2 [(.proto.steam.description) = "JSON blob of OPF Settings"];
inline bool CFovasVideo_ClientGetOPFSettings_Response::has_opf_settings() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_has_opf_settings() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CFovasVideo_ClientGetOPFSettings_Response::clear_has_opf_settings() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CFovasVideo_ClientGetOPFSettings_Response::clear_opf_settings() {
  opf_settings_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_opf_settings();
}
inline const ::std::string& CFovasVideo_ClientGetOPFSettings_Response::opf_settings() const {
  // @@protoc_insertion_point(field_get:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
  return opf_settings_.GetNoArena();
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_opf_settings(const ::std::string& value) {
  set_has_opf_settings();
  opf_settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}
#if LANG_CXX11
inline void CFovasVideo_ClientGetOPFSettings_Response::set_opf_settings(::std::string&& value) {
  set_has_opf_settings();
  opf_settings_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}
#endif
inline void CFovasVideo_ClientGetOPFSettings_Response::set_opf_settings(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_opf_settings();
  opf_settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_opf_settings(const char* value, size_t size) {
  set_has_opf_settings();
  opf_settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}
inline ::std::string* CFovasVideo_ClientGetOPFSettings_Response::mutable_opf_settings() {
  set_has_opf_settings();
  // @@protoc_insertion_point(field_mutable:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
  return opf_settings_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CFovasVideo_ClientGetOPFSettings_Response::release_opf_settings() {
  // @@protoc_insertion_point(field_release:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
  clear_has_opf_settings();
  return opf_settings_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CFovasVideo_ClientGetOPFSettings_Response::set_allocated_opf_settings(::std::string* opf_settings) {
  if (opf_settings != NULL) {
    set_has_opf_settings();
  } else {
    clear_has_opf_settings();
  }
  opf_settings_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), opf_settings);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CFovasVideo_ClientGetOPFSettings_Response.opf_settings)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_steammessages_5fvideo_2esteamclient_2eproto__INCLUDED
