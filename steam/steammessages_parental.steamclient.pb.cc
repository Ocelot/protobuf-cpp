// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_parental.steamclient.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "steammessages_parental.steamclient.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace steam {
class ParentalAppDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ParentalApp> {
} _ParentalApp_default_instance_;
class ParentalSettingsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ParentalSettings> {
} _ParentalSettings_default_instance_;
class CParental_EnableParentalSettings_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_EnableParentalSettings_Request> {
} _CParental_EnableParentalSettings_Request_default_instance_;
class CParental_EnableParentalSettings_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_EnableParentalSettings_Response> {
} _CParental_EnableParentalSettings_Response_default_instance_;
class CParental_DisableParentalSettings_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_DisableParentalSettings_Request> {
} _CParental_DisableParentalSettings_Request_default_instance_;
class CParental_DisableParentalSettings_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_DisableParentalSettings_Response> {
} _CParental_DisableParentalSettings_Response_default_instance_;
class CParental_GetParentalSettings_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_GetParentalSettings_Request> {
} _CParental_GetParentalSettings_Request_default_instance_;
class CParental_GetParentalSettings_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_GetParentalSettings_Response> {
} _CParental_GetParentalSettings_Response_default_instance_;
class CParental_GetSignedParentalSettings_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_GetSignedParentalSettings_Request> {
} _CParental_GetSignedParentalSettings_Request_default_instance_;
class CParental_GetSignedParentalSettings_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_GetSignedParentalSettings_Response> {
} _CParental_GetSignedParentalSettings_Response_default_instance_;
class CParental_SetParentalSettings_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_SetParentalSettings_Request> {
} _CParental_SetParentalSettings_Request_default_instance_;
class CParental_SetParentalSettings_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_SetParentalSettings_Response> {
} _CParental_SetParentalSettings_Response_default_instance_;
class CParental_ValidateToken_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_ValidateToken_Request> {
} _CParental_ValidateToken_Request_default_instance_;
class CParental_ValidateToken_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_ValidateToken_Response> {
} _CParental_ValidateToken_Response_default_instance_;
class CParental_ValidatePassword_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_ValidatePassword_Request> {
} _CParental_ValidatePassword_Request_default_instance_;
class CParental_ValidatePassword_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_ValidatePassword_Response> {
} _CParental_ValidatePassword_Response_default_instance_;
class CParental_LockClient_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_LockClient_Request> {
} _CParental_LockClient_Request_default_instance_;
class CParental_LockClient_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_LockClient_Response> {
} _CParental_LockClient_Response_default_instance_;
class CParental_RequestRecoveryCode_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_RequestRecoveryCode_Request> {
} _CParental_RequestRecoveryCode_Request_default_instance_;
class CParental_RequestRecoveryCode_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_RequestRecoveryCode_Response> {
} _CParental_RequestRecoveryCode_Response_default_instance_;
class CParental_DisableWithRecoveryCode_RequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_DisableWithRecoveryCode_Request> {
} _CParental_DisableWithRecoveryCode_Request_default_instance_;
class CParental_DisableWithRecoveryCode_ResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_DisableWithRecoveryCode_Response> {
} _CParental_DisableWithRecoveryCode_Response_default_instance_;
class CParental_ParentalSettingsChange_NotificationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_ParentalSettingsChange_Notification> {
} _CParental_ParentalSettingsChange_Notification_default_instance_;
class CParental_ParentalUnlock_NotificationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_ParentalUnlock_Notification> {
} _CParental_ParentalUnlock_Notification_default_instance_;
class CParental_ParentalLock_NotificationDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CParental_ParentalLock_Notification> {
} _CParental_ParentalLock_Notification_default_instance_;

namespace protobuf_steammessages_5fparental_2esteamclient_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[25];
const ::google::protobuf::ServiceDescriptor* file_level_service_descriptors[2];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalApp, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalApp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalApp, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalApp, is_allowed_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalSettings, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalSettings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalSettings, steamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalSettings, applist_base_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalSettings, applist_base_description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalSettings, applist_base_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalSettings, applist_custom_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalSettings, passwordhashtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalSettings, salt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalSettings, passwordhash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalSettings, is_enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalSettings, enabled_features_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ParentalSettings, recovery_email_),
  4,
  5,
  0,
  ~0u,
  ~0u,
  6,
  1,
  2,
  7,
  8,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_EnableParentalSettings_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_EnableParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_EnableParentalSettings_Request, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_EnableParentalSettings_Request, settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_EnableParentalSettings_Request, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_EnableParentalSettings_Request, enablecode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_EnableParentalSettings_Request, steamid_),
  0,
  2,
  1,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_EnableParentalSettings_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_EnableParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_DisableParentalSettings_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_DisableParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_DisableParentalSettings_Request, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_DisableParentalSettings_Request, steamid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_DisableParentalSettings_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_DisableParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_GetParentalSettings_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_GetParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_GetParentalSettings_Request, steamid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_GetParentalSettings_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_GetParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_GetParentalSettings_Response, settings_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_GetSignedParentalSettings_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_GetSignedParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_GetSignedParentalSettings_Request, priority_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_GetSignedParentalSettings_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_GetSignedParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_GetSignedParentalSettings_Response, serialized_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_GetSignedParentalSettings_Response, signature_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_SetParentalSettings_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_SetParentalSettings_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_SetParentalSettings_Request, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_SetParentalSettings_Request, settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_SetParentalSettings_Request, new_password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_SetParentalSettings_Request, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_SetParentalSettings_Request, steamid_),
  0,
  3,
  1,
  2,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_SetParentalSettings_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_SetParentalSettings_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ValidateToken_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ValidateToken_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ValidateToken_Request, unlock_token_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ValidateToken_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ValidateToken_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ValidatePassword_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ValidatePassword_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ValidatePassword_Request, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ValidatePassword_Request, session_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ValidatePassword_Request, send_unlock_on_success_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ValidatePassword_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ValidatePassword_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ValidatePassword_Response, token_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_LockClient_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_LockClient_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_LockClient_Request, session_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_LockClient_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_LockClient_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_RequestRecoveryCode_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_RequestRecoveryCode_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_RequestRecoveryCode_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_RequestRecoveryCode_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_DisableWithRecoveryCode_Request, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_DisableWithRecoveryCode_Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_DisableWithRecoveryCode_Request, recovery_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_DisableWithRecoveryCode_Request, steamid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_DisableWithRecoveryCode_Response, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_DisableWithRecoveryCode_Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ParentalSettingsChange_Notification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ParentalSettingsChange_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ParentalSettingsChange_Notification, serialized_settings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ParentalSettingsChange_Notification, signature_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ParentalSettingsChange_Notification, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ParentalSettingsChange_Notification, sessionid_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ParentalUnlock_Notification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ParentalUnlock_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ParentalUnlock_Notification, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ParentalUnlock_Notification, sessionid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ParentalLock_Notification, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ParentalLock_Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CParental_ParentalLock_Notification, sessionid_),
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(ParentalApp)},
  { 9, 25, sizeof(ParentalSettings)},
  { 36, 46, sizeof(CParental_EnableParentalSettings_Request)},
  { 51, 56, sizeof(CParental_EnableParentalSettings_Response)},
  { 56, 63, sizeof(CParental_DisableParentalSettings_Request)},
  { 65, 70, sizeof(CParental_DisableParentalSettings_Response)},
  { 70, 76, sizeof(CParental_GetParentalSettings_Request)},
  { 77, 83, sizeof(CParental_GetParentalSettings_Response)},
  { 84, 90, sizeof(CParental_GetSignedParentalSettings_Request)},
  { 91, 98, sizeof(CParental_GetSignedParentalSettings_Response)},
  { 100, 110, sizeof(CParental_SetParentalSettings_Request)},
  { 115, 120, sizeof(CParental_SetParentalSettings_Response)},
  { 120, 126, sizeof(CParental_ValidateToken_Request)},
  { 127, 132, sizeof(CParental_ValidateToken_Response)},
  { 132, 140, sizeof(CParental_ValidatePassword_Request)},
  { 143, 149, sizeof(CParental_ValidatePassword_Response)},
  { 150, 156, sizeof(CParental_LockClient_Request)},
  { 157, 162, sizeof(CParental_LockClient_Response)},
  { 162, 167, sizeof(CParental_RequestRecoveryCode_Request)},
  { 167, 172, sizeof(CParental_RequestRecoveryCode_Response)},
  { 172, 179, sizeof(CParental_DisableWithRecoveryCode_Request)},
  { 181, 186, sizeof(CParental_DisableWithRecoveryCode_Response)},
  { 186, 195, sizeof(CParental_ParentalSettingsChange_Notification)},
  { 199, 206, sizeof(CParental_ParentalUnlock_Notification)},
  { 208, 214, sizeof(CParental_ParentalLock_Notification)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParentalApp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ParentalSettings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_EnableParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_EnableParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_DisableParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_DisableParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_GetParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_GetParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_GetSignedParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_GetSignedParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_SetParentalSettings_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_SetParentalSettings_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_ValidateToken_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_ValidateToken_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_ValidatePassword_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_ValidatePassword_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_LockClient_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_LockClient_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_RequestRecoveryCode_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_RequestRecoveryCode_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_DisableWithRecoveryCode_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_DisableWithRecoveryCode_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_ParentalSettingsChange_Notification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_ParentalUnlock_Notification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CParental_ParentalLock_Notification_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "steammessages_parental.steamclient.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, file_level_service_descriptors);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 25);
}

}  // namespace

void TableStruct::Shutdown() {
  _ParentalApp_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ParentalSettings_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _CParental_EnableParentalSettings_Request_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _CParental_EnableParentalSettings_Response_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _CParental_DisableParentalSettings_Request_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _CParental_DisableParentalSettings_Response_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _CParental_GetParentalSettings_Request_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _CParental_GetParentalSettings_Response_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _CParental_GetSignedParentalSettings_Request_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _CParental_GetSignedParentalSettings_Response_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _CParental_SetParentalSettings_Request_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _CParental_SetParentalSettings_Response_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _CParental_ValidateToken_Request_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _CParental_ValidateToken_Response_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _CParental_ValidatePassword_Request_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _CParental_ValidatePassword_Response_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _CParental_LockClient_Request_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _CParental_LockClient_Response_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _CParental_RequestRecoveryCode_Request_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _CParental_RequestRecoveryCode_Response_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _CParental_DisableWithRecoveryCode_Request_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _CParental_DisableWithRecoveryCode_Response_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _CParental_ParentalSettingsChange_Notification_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _CParental_ParentalUnlock_Notification_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _CParental_ParentalLock_Notification_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::proto::steam::protobuf_steammessages_5funified_5fbase_2esteamclient_2eproto::InitDefaults();
  _ParentalApp_default_instance_.DefaultConstruct();
  _ParentalSettings_default_instance_.DefaultConstruct();
  _CParental_EnableParentalSettings_Request_default_instance_.DefaultConstruct();
  _CParental_EnableParentalSettings_Response_default_instance_.DefaultConstruct();
  _CParental_DisableParentalSettings_Request_default_instance_.DefaultConstruct();
  _CParental_DisableParentalSettings_Response_default_instance_.DefaultConstruct();
  _CParental_GetParentalSettings_Request_default_instance_.DefaultConstruct();
  _CParental_GetParentalSettings_Response_default_instance_.DefaultConstruct();
  _CParental_GetSignedParentalSettings_Request_default_instance_.DefaultConstruct();
  _CParental_GetSignedParentalSettings_Response_default_instance_.DefaultConstruct();
  _CParental_SetParentalSettings_Request_default_instance_.DefaultConstruct();
  _CParental_SetParentalSettings_Response_default_instance_.DefaultConstruct();
  _CParental_ValidateToken_Request_default_instance_.DefaultConstruct();
  _CParental_ValidateToken_Response_default_instance_.DefaultConstruct();
  _CParental_ValidatePassword_Request_default_instance_.DefaultConstruct();
  _CParental_ValidatePassword_Response_default_instance_.DefaultConstruct();
  _CParental_LockClient_Request_default_instance_.DefaultConstruct();
  _CParental_LockClient_Response_default_instance_.DefaultConstruct();
  _CParental_RequestRecoveryCode_Request_default_instance_.DefaultConstruct();
  _CParental_RequestRecoveryCode_Response_default_instance_.DefaultConstruct();
  _CParental_DisableWithRecoveryCode_Request_default_instance_.DefaultConstruct();
  _CParental_DisableWithRecoveryCode_Response_default_instance_.DefaultConstruct();
  _CParental_ParentalSettingsChange_Notification_default_instance_.DefaultConstruct();
  _CParental_ParentalUnlock_Notification_default_instance_.DefaultConstruct();
  _CParental_ParentalLock_Notification_default_instance_.DefaultConstruct();
  _CParental_EnableParentalSettings_Request_default_instance_.get_mutable()->settings_ = const_cast< ::proto::steam::ParentalSettings*>(
      ::proto::steam::ParentalSettings::internal_default_instance());
  _CParental_GetParentalSettings_Response_default_instance_.get_mutable()->settings_ = const_cast< ::proto::steam::ParentalSettings*>(
      ::proto::steam::ParentalSettings::internal_default_instance());
  _CParental_SetParentalSettings_Request_default_instance_.get_mutable()->settings_ = const_cast< ::proto::steam::ParentalSettings*>(
      ::proto::steam::ParentalSettings::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n(steammessages_parental.steamclient.pro"
      "to\022\013proto.steam\032,steammessages_unified_b"
      "ase.steamclient.proto\"0\n\013ParentalApp\022\r\n\005"
      "appid\030\001 \001(\r\022\022\n\nis_allowed\030\002 \001(\010\"\304\002\n\020Pare"
      "ntalSettings\022\017\n\007steamid\030\001 \001(\006\022\027\n\017applist"
      "_base_id\030\002 \001(\r\022 \n\030applist_base_descripti"
      "on\030\003 \001(\t\022.\n\014applist_base\030\004 \003(\0132\030.proto.s"
      "team.ParentalApp\0220\n\016applist_custom\030\005 \003(\013"
      "2\030.proto.steam.ParentalApp\022\030\n\020passwordha"
      "shtype\030\006 \001(\r\022\014\n\004salt\030\007 \001(\014\022\024\n\014passwordha"
      "sh\030\010 \001(\014\022\022\n\nis_enabled\030\t \001(\010\022\030\n\020enabled_"
      "features\030\n \001(\r\022\026\n\016recovery_email\030\013 \001(\t\"\245"
      "\001\n(CParental_EnableParentalSettings_Requ"
      "est\022\020\n\010password\030\001 \001(\t\022/\n\010settings\030\002 \001(\0132"
      "\035.proto.steam.ParentalSettings\022\021\n\tsessio"
      "nid\030\003 \001(\t\022\022\n\nenablecode\030\004 \001(\r\022\017\n\007steamid"
      "\030\n \001(\006\"+\n)CParental_EnableParentalSettin"
      "gs_Response\"N\n)CParental_DisableParental"
      "Settings_Request\022\020\n\010password\030\001 \001(\t\022\017\n\007st"
      "eamid\030\n \001(\006\",\n*CParental_DisableParental"
      "Settings_Response\"8\n%CParental_GetParent"
      "alSettings_Request\022\017\n\007steamid\030\n \001(\006\"Y\n&C"
      "Parental_GetParentalSettings_Response\022/\n"
      "\010settings\030\001 \001(\0132\035.proto.steam.ParentalSe"
      "ttings\"\?\n+CParental_GetSignedParentalSet"
      "tings_Request\022\020\n\010priority\030\001 \001(\r\"^\n,CPare"
      "ntal_GetSignedParentalSettings_Response\022"
      "\033\n\023serialized_settings\030\001 \001(\014\022\021\n\tsignatur"
      "e\030\002 \001(\014\"\244\001\n%CParental_SetParentalSetting"
      "s_Request\022\020\n\010password\030\001 \001(\t\022/\n\010settings\030"
      "\002 \001(\0132\035.proto.steam.ParentalSettings\022\024\n\014"
      "new_password\030\003 \001(\t\022\021\n\tsessionid\030\004 \001(\t\022\017\n"
      "\007steamid\030\n \001(\006\"(\n&CParental_SetParentalS"
      "ettings_Response\"7\n\037CParental_ValidateTo"
      "ken_Request\022\024\n\014unlock_token\030\001 \001(\t\"\"\n CPa"
      "rental_ValidateToken_Response\"g\n\"CParent"
      "al_ValidatePassword_Request\022\020\n\010password\030"
      "\001 \001(\t\022\017\n\007session\030\002 \001(\t\022\036\n\026send_unlock_on"
      "_success\030\003 \001(\010\"4\n#CParental_ValidatePass"
      "word_Response\022\r\n\005token\030\001 \001(\t\"/\n\034CParenta"
      "l_LockClient_Request\022\017\n\007session\030\001 \001(\t\"\037\n"
      "\035CParental_LockClient_Response\"\'\n%CParen"
      "tal_RequestRecoveryCode_Request\"(\n&CPare"
      "ntal_RequestRecoveryCode_Response\"S\n)CPa"
      "rental_DisableWithRecoveryCode_Request\022\025"
      "\n\rrecovery_code\030\001 \001(\r\022\017\n\007steamid\030\n \001(\006\","
      "\n*CParental_DisableWithRecoveryCode_Resp"
      "onse\"\204\001\n-CParental_ParentalSettingsChang"
      "e_Notification\022\033\n\023serialized_settings\030\001 "
      "\001(\014\022\021\n\tsignature\030\002 \001(\014\022\020\n\010password\030\003 \001(\t"
      "\022\021\n\tsessionid\030\004 \001(\t\"L\n%CParental_Parenta"
      "lUnlock_Notification\022\020\n\010password\030\001 \001(\t\022\021"
      "\n\tsessionid\030\002 \001(\t\"8\n#CParental_ParentalL"
      "ock_Notification\022\021\n\tsessionid\030\001 \001(\t2\302\020\n\010"
      "Parental\022\350\001\n\026EnableParentalSettings\0225.pr"
      "oto.steam.CParental_EnableParentalSettin"
      "gs_Request\0326.proto.steam.CParental_Enabl"
      "eParentalSettings_Response\"_\202\265\030[Enable p"
      "arental settings for the logged in accou"
      "nt, optionally setting the current setti"
      "ngs\022\303\001\n\027DisableParentalSettings\0226.proto."
      "steam.CParental_DisableParentalSettings_"
      "Request\0327.proto.steam.CParental_DisableP"
      "arentalSettings_Response\"7\202\265\0303Disable pa"
      "rental settings for the logged in accoun"
      "t\022\277\001\n\023GetParentalSettings\0222.proto.steam."
      "CParental_GetParentalSettings_Request\0323."
      "proto.steam.CParental_GetParentalSetting"
      "s_Response\"\?\202\265\030;Get the current parental"
      " settings for the logged in account\022\200\002\n\031"
      "GetSignedParentalSettings\0228.proto.steam."
      "CParental_GetSignedParentalSettings_Requ"
      "est\0329.proto.steam.CParental_GetSignedPar"
      "entalSettings_Response\"n\202\265\030jGet the curr"
      "ent parental settings for the logged in "
      "account in a form that can by verified b"
      "y the receiver\022\277\001\n\023SetParentalSettings\0222"
      ".proto.steam.CParental_SetParentalSettin"
      "gs_Request\0323.proto.steam.CParental_SetPa"
      "rentalSettings_Response\"\?\202\265\030;Set the cur"
      "rent parental settings for the logged in"
      " account\022\277\001\n\rValidateToken\022,.proto.steam"
      ".CParental_ValidateToken_Request\032-.proto"
      ".steam.CParental_ValidateToken_Response\""
      "Q\202\265\030MCheck if the given parental unlock "
      "token is correct for the logged in accou"
      "nt\022\317\001\n\020ValidatePassword\022/.proto.steam.CP"
      "arental_ValidatePassword_Request\0320.proto"
      ".steam.CParental_ValidatePassword_Respon"
      "se\"X\202\265\030TValidate the plaintext password "
      "for the logged in account and return an "
      "unlock token\022\247\001\n\nLockClient\022).proto.stea"
      "m.CParental_LockClient_Request\032*.proto.s"
      "team.CParental_LockClient_Response\"B\202\265\030>"
      "Notify connected clients that a lock has"
      " occurred in a browser\022\333\001\n\023RequestRecove"
      "ryCode\0222.proto.steam.CParental_RequestRe"
      "coveryCode_Request\0323.proto.steam.CParent"
      "al_RequestRecoveryCode_Response\"[\202\265\030WReq"
      "uest a recovery code be sent to the reco"
      "very email address for the specified acc"
      "ount\022\302\001\n\027DisableWithRecoveryCode\0226.proto"
      ".steam.CParental_DisableWithRecoveryCode"
      "_Request\0327.proto.steam.CParental_Disable"
      "WithRecoveryCode_Response\"6\202\265\0302Attempt a"
      " recovery unlock on the specified accoun"
      "t\032\035\202\265\030\031Parental settings service2\316\004\n\016Par"
      "entalClient\022\264\001\n\024NotifySettingsChange\022:.p"
      "roto.steam.CParental_ParentalSettingsCha"
      "nge_Notification\032\027.proto.steam.NoRespons"
      "e\"G\202\265\030CNotification from server to clien"
      "t of a change in parental settings\022\254\001\n\014N"
      "otifyUnlock\0222.proto.steam.CParental_Pare"
      "ntalUnlock_Notification\032\027.proto.steam.No"
      "Response\"O\202\265\030KNotification from server t"
      "o client that an unlock has occurred in "
      "a browser\022\245\001\n\nNotifyLock\0220.proto.steam.C"
      "Parental_ParentalLock_Notification\032\027.pro"
      "to.steam.NoResponse\"L\202\265\030HNotification fr"
      "om server to client that a lock has occu"
      "rred in a browser\032.\202\265\030&Parental settings"
      " client notifications\300\265\030\002B\003\200\001\001"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4870);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "steammessages_parental.steamclient.proto", &protobuf_RegisterTypes);
  ::proto::steam::protobuf_steammessages_5funified_5fbase_2esteamclient_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_steammessages_5fparental_2esteamclient_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParentalApp::kAppidFieldNumber;
const int ParentalApp::kIsAllowedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParentalApp::ParentalApp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.ParentalApp)
}
ParentalApp::ParentalApp(const ParentalApp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&appid_, &from.appid_,
    reinterpret_cast<char*>(&is_allowed_) -
    reinterpret_cast<char*>(&appid_) + sizeof(is_allowed_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.ParentalApp)
}

void ParentalApp::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&appid_, 0, reinterpret_cast<char*>(&is_allowed_) -
    reinterpret_cast<char*>(&appid_) + sizeof(is_allowed_));
}

ParentalApp::~ParentalApp() {
  // @@protoc_insertion_point(destructor:proto.steam.ParentalApp)
  SharedDtor();
}

void ParentalApp::SharedDtor() {
}

void ParentalApp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParentalApp::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParentalApp& ParentalApp::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParentalApp* ParentalApp::New(::google::protobuf::Arena* arena) const {
  ParentalApp* n = new ParentalApp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParentalApp::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.ParentalApp)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&appid_, 0, reinterpret_cast<char*>(&is_allowed_) -
      reinterpret_cast<char*>(&appid_) + sizeof(is_allowed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParentalApp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.ParentalApp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_appid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_allowed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_is_allowed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_allowed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.ParentalApp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.ParentalApp)
  return false;
#undef DO_
}

void ParentalApp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.ParentalApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->appid(), output);
  }

  // optional bool is_allowed = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->is_allowed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.ParentalApp)
}

::google::protobuf::uint8* ParentalApp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.ParentalApp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 appid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->appid(), target);
  }

  // optional bool is_allowed = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->is_allowed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.ParentalApp)
  return target;
}

size_t ParentalApp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.ParentalApp)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 appid = 1;
    if (has_appid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->appid());
    }

    // optional bool is_allowed = 2;
    if (has_is_allowed()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParentalApp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.ParentalApp)
  GOOGLE_DCHECK_NE(&from, this);
  const ParentalApp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParentalApp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.ParentalApp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.ParentalApp)
    MergeFrom(*source);
  }
}

void ParentalApp::MergeFrom(const ParentalApp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.ParentalApp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      appid_ = from.appid_;
    }
    if (cached_has_bits & 0x00000002u) {
      is_allowed_ = from.is_allowed_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ParentalApp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.ParentalApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParentalApp::CopyFrom(const ParentalApp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.ParentalApp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParentalApp::IsInitialized() const {
  return true;
}

void ParentalApp::Swap(ParentalApp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParentalApp::InternalSwap(ParentalApp* other) {
  std::swap(appid_, other->appid_);
  std::swap(is_allowed_, other->is_allowed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParentalApp::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParentalApp

// optional uint32 appid = 1;
bool ParentalApp::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ParentalApp::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
void ParentalApp::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ParentalApp::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
::google::protobuf::uint32 ParentalApp::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.ParentalApp.appid)
  return appid_;
}
void ParentalApp::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.ParentalApp.appid)
}

// optional bool is_allowed = 2;
bool ParentalApp::has_is_allowed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ParentalApp::set_has_is_allowed() {
  _has_bits_[0] |= 0x00000002u;
}
void ParentalApp::clear_has_is_allowed() {
  _has_bits_[0] &= ~0x00000002u;
}
void ParentalApp::clear_is_allowed() {
  is_allowed_ = false;
  clear_has_is_allowed();
}
bool ParentalApp::is_allowed() const {
  // @@protoc_insertion_point(field_get:proto.steam.ParentalApp.is_allowed)
  return is_allowed_;
}
void ParentalApp::set_is_allowed(bool value) {
  set_has_is_allowed();
  is_allowed_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.ParentalApp.is_allowed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ParentalSettings::kSteamidFieldNumber;
const int ParentalSettings::kApplistBaseIdFieldNumber;
const int ParentalSettings::kApplistBaseDescriptionFieldNumber;
const int ParentalSettings::kApplistBaseFieldNumber;
const int ParentalSettings::kApplistCustomFieldNumber;
const int ParentalSettings::kPasswordhashtypeFieldNumber;
const int ParentalSettings::kSaltFieldNumber;
const int ParentalSettings::kPasswordhashFieldNumber;
const int ParentalSettings::kIsEnabledFieldNumber;
const int ParentalSettings::kEnabledFeaturesFieldNumber;
const int ParentalSettings::kRecoveryEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ParentalSettings::ParentalSettings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.ParentalSettings)
}
ParentalSettings::ParentalSettings(const ParentalSettings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      applist_base_(from.applist_base_),
      applist_custom_(from.applist_custom_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  applist_base_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_applist_base_description()) {
    applist_base_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.applist_base_description_);
  }
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_salt()) {
    salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
  }
  passwordhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_passwordhash()) {
    passwordhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwordhash_);
  }
  recovery_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_recovery_email()) {
    recovery_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recovery_email_);
  }
  ::memcpy(&steamid_, &from.steamid_,
    reinterpret_cast<char*>(&enabled_features_) -
    reinterpret_cast<char*>(&steamid_) + sizeof(enabled_features_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.ParentalSettings)
}

void ParentalSettings::SharedCtor() {
  _cached_size_ = 0;
  applist_base_description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwordhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recovery_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&steamid_, 0, reinterpret_cast<char*>(&enabled_features_) -
    reinterpret_cast<char*>(&steamid_) + sizeof(enabled_features_));
}

ParentalSettings::~ParentalSettings() {
  // @@protoc_insertion_point(destructor:proto.steam.ParentalSettings)
  SharedDtor();
}

void ParentalSettings::SharedDtor() {
  applist_base_description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  salt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  passwordhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recovery_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ParentalSettings::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ParentalSettings::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ParentalSettings& ParentalSettings::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

ParentalSettings* ParentalSettings::New(::google::protobuf::Arena* arena) const {
  ParentalSettings* n = new ParentalSettings;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ParentalSettings::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.ParentalSettings)
  applist_base_.Clear();
  applist_custom_.Clear();
  if (_has_bits_[0 / 32] & 15u) {
    if (has_applist_base_description()) {
      GOOGLE_DCHECK(!applist_base_description_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*applist_base_description_.UnsafeRawStringPointer())->clear();
    }
    if (has_salt()) {
      GOOGLE_DCHECK(!salt_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*salt_.UnsafeRawStringPointer())->clear();
    }
    if (has_passwordhash()) {
      GOOGLE_DCHECK(!passwordhash_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*passwordhash_.UnsafeRawStringPointer())->clear();
    }
    if (has_recovery_email()) {
      GOOGLE_DCHECK(!recovery_email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*recovery_email_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&steamid_, 0, reinterpret_cast<char*>(&is_enabled_) -
      reinterpret_cast<char*>(&steamid_) + sizeof(is_enabled_));
  }
  enabled_features_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ParentalSettings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.ParentalSettings)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 applist_base_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_applist_base_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &applist_base_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string applist_base_description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_applist_base_description()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->applist_base_description().data(), this->applist_base_description().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.ParentalSettings.applist_base_description");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.ParentalApp applist_base = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_applist_base()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .proto.steam.ParentalApp applist_custom = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_applist_custom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 passwordhashtype = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_passwordhashtype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &passwordhashtype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes salt = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_salt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes passwordhash = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_passwordhash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool is_enabled = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_is_enabled();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &is_enabled_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 enabled_features = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u)) {
          set_has_enabled_features();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enabled_features_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string recovery_email = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_recovery_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->recovery_email().data(), this->recovery_email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.ParentalSettings.recovery_email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.ParentalSettings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.ParentalSettings)
  return false;
#undef DO_
}

void ParentalSettings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.ParentalSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(1, this->steamid(), output);
  }

  // optional uint32 applist_base_id = 2;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->applist_base_id(), output);
  }

  // optional string applist_base_description = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applist_base_description().data(), this->applist_base_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.ParentalSettings.applist_base_description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->applist_base_description(), output);
  }

  // repeated .proto.steam.ParentalApp applist_base = 4;
  for (unsigned int i = 0, n = this->applist_base_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->applist_base(i), output);
  }

  // repeated .proto.steam.ParentalApp applist_custom = 5;
  for (unsigned int i = 0, n = this->applist_custom_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->applist_custom(i), output);
  }

  // optional uint32 passwordhashtype = 6;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->passwordhashtype(), output);
  }

  // optional bytes salt = 7;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->salt(), output);
  }

  // optional bytes passwordhash = 8;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->passwordhash(), output);
  }

  // optional bool is_enabled = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->is_enabled(), output);
  }

  // optional uint32 enabled_features = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->enabled_features(), output);
  }

  // optional string recovery_email = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recovery_email().data(), this->recovery_email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.ParentalSettings.recovery_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->recovery_email(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.ParentalSettings)
}

::google::protobuf::uint8* ParentalSettings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.ParentalSettings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(1, this->steamid(), target);
  }

  // optional uint32 applist_base_id = 2;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->applist_base_id(), target);
  }

  // optional string applist_base_description = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->applist_base_description().data(), this->applist_base_description().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.ParentalSettings.applist_base_description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->applist_base_description(), target);
  }

  // repeated .proto.steam.ParentalApp applist_base = 4;
  for (unsigned int i = 0, n = this->applist_base_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->applist_base(i), deterministic, target);
  }

  // repeated .proto.steam.ParentalApp applist_custom = 5;
  for (unsigned int i = 0, n = this->applist_custom_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->applist_custom(i), deterministic, target);
  }

  // optional uint32 passwordhashtype = 6;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->passwordhashtype(), target);
  }

  // optional bytes salt = 7;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->salt(), target);
  }

  // optional bytes passwordhash = 8;
  if (cached_has_bits & 0x00000004u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->passwordhash(), target);
  }

  // optional bool is_enabled = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->is_enabled(), target);
  }

  // optional uint32 enabled_features = 10;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->enabled_features(), target);
  }

  // optional string recovery_email = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->recovery_email().data(), this->recovery_email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.ParentalSettings.recovery_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->recovery_email(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.ParentalSettings)
  return target;
}

size_t ParentalSettings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.ParentalSettings)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .proto.steam.ParentalApp applist_base = 4;
  {
    unsigned int count = this->applist_base_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->applist_base(i));
    }
  }

  // repeated .proto.steam.ParentalApp applist_custom = 5;
  {
    unsigned int count = this->applist_custom_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->applist_custom(i));
    }
  }

  if (_has_bits_[0 / 32] & 255u) {
    // optional string applist_base_description = 3;
    if (has_applist_base_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->applist_base_description());
    }

    // optional bytes salt = 7;
    if (has_salt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->salt());
    }

    // optional bytes passwordhash = 8;
    if (has_passwordhash()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->passwordhash());
    }

    // optional string recovery_email = 11;
    if (has_recovery_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->recovery_email());
    }

    // optional fixed64 steamid = 1;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

    // optional uint32 applist_base_id = 2;
    if (has_applist_base_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->applist_base_id());
    }

    // optional uint32 passwordhashtype = 6;
    if (has_passwordhashtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->passwordhashtype());
    }

    // optional bool is_enabled = 9;
    if (has_is_enabled()) {
      total_size += 1 + 1;
    }

  }
  // optional uint32 enabled_features = 10;
  if (has_enabled_features()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->enabled_features());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParentalSettings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.ParentalSettings)
  GOOGLE_DCHECK_NE(&from, this);
  const ParentalSettings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ParentalSettings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.ParentalSettings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.ParentalSettings)
    MergeFrom(*source);
  }
}

void ParentalSettings::MergeFrom(const ParentalSettings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.ParentalSettings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  applist_base_.MergeFrom(from.applist_base_);
  applist_custom_.MergeFrom(from.applist_custom_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_applist_base_description();
      applist_base_description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.applist_base_description_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_salt();
      salt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.salt_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_passwordhash();
      passwordhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwordhash_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_recovery_email();
      recovery_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.recovery_email_);
    }
    if (cached_has_bits & 0x00000010u) {
      steamid_ = from.steamid_;
    }
    if (cached_has_bits & 0x00000020u) {
      applist_base_id_ = from.applist_base_id_;
    }
    if (cached_has_bits & 0x00000040u) {
      passwordhashtype_ = from.passwordhashtype_;
    }
    if (cached_has_bits & 0x00000080u) {
      is_enabled_ = from.is_enabled_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    set_enabled_features(from.enabled_features());
  }
}

void ParentalSettings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.ParentalSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParentalSettings::CopyFrom(const ParentalSettings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.ParentalSettings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParentalSettings::IsInitialized() const {
  return true;
}

void ParentalSettings::Swap(ParentalSettings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ParentalSettings::InternalSwap(ParentalSettings* other) {
  applist_base_.InternalSwap(&other->applist_base_);
  applist_custom_.InternalSwap(&other->applist_custom_);
  applist_base_description_.Swap(&other->applist_base_description_);
  salt_.Swap(&other->salt_);
  passwordhash_.Swap(&other->passwordhash_);
  recovery_email_.Swap(&other->recovery_email_);
  std::swap(steamid_, other->steamid_);
  std::swap(applist_base_id_, other->applist_base_id_);
  std::swap(passwordhashtype_, other->passwordhashtype_);
  std::swap(is_enabled_, other->is_enabled_);
  std::swap(enabled_features_, other->enabled_features_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ParentalSettings::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ParentalSettings

// optional fixed64 steamid = 1;
bool ParentalSettings::has_steamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ParentalSettings::set_has_steamid() {
  _has_bits_[0] |= 0x00000010u;
}
void ParentalSettings::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000010u;
}
void ParentalSettings::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
::google::protobuf::uint64 ParentalSettings::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.ParentalSettings.steamid)
  return steamid_;
}
void ParentalSettings::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.ParentalSettings.steamid)
}

// optional uint32 applist_base_id = 2;
bool ParentalSettings::has_applist_base_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ParentalSettings::set_has_applist_base_id() {
  _has_bits_[0] |= 0x00000020u;
}
void ParentalSettings::clear_has_applist_base_id() {
  _has_bits_[0] &= ~0x00000020u;
}
void ParentalSettings::clear_applist_base_id() {
  applist_base_id_ = 0u;
  clear_has_applist_base_id();
}
::google::protobuf::uint32 ParentalSettings::applist_base_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.ParentalSettings.applist_base_id)
  return applist_base_id_;
}
void ParentalSettings::set_applist_base_id(::google::protobuf::uint32 value) {
  set_has_applist_base_id();
  applist_base_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.ParentalSettings.applist_base_id)
}

// optional string applist_base_description = 3;
bool ParentalSettings::has_applist_base_description() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ParentalSettings::set_has_applist_base_description() {
  _has_bits_[0] |= 0x00000001u;
}
void ParentalSettings::clear_has_applist_base_description() {
  _has_bits_[0] &= ~0x00000001u;
}
void ParentalSettings::clear_applist_base_description() {
  applist_base_description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_applist_base_description();
}
const ::std::string& ParentalSettings::applist_base_description() const {
  // @@protoc_insertion_point(field_get:proto.steam.ParentalSettings.applist_base_description)
  return applist_base_description_.GetNoArena();
}
void ParentalSettings::set_applist_base_description(const ::std::string& value) {
  set_has_applist_base_description();
  applist_base_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.ParentalSettings.applist_base_description)
}
#if LANG_CXX11
void ParentalSettings::set_applist_base_description(::std::string&& value) {
  set_has_applist_base_description();
  applist_base_description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.ParentalSettings.applist_base_description)
}
#endif
void ParentalSettings::set_applist_base_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_applist_base_description();
  applist_base_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.ParentalSettings.applist_base_description)
}
void ParentalSettings::set_applist_base_description(const char* value, size_t size) {
  set_has_applist_base_description();
  applist_base_description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.ParentalSettings.applist_base_description)
}
::std::string* ParentalSettings::mutable_applist_base_description() {
  set_has_applist_base_description();
  // @@protoc_insertion_point(field_mutable:proto.steam.ParentalSettings.applist_base_description)
  return applist_base_description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParentalSettings::release_applist_base_description() {
  // @@protoc_insertion_point(field_release:proto.steam.ParentalSettings.applist_base_description)
  clear_has_applist_base_description();
  return applist_base_description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParentalSettings::set_allocated_applist_base_description(::std::string* applist_base_description) {
  if (applist_base_description != NULL) {
    set_has_applist_base_description();
  } else {
    clear_has_applist_base_description();
  }
  applist_base_description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), applist_base_description);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.ParentalSettings.applist_base_description)
}

// repeated .proto.steam.ParentalApp applist_base = 4;
int ParentalSettings::applist_base_size() const {
  return applist_base_.size();
}
void ParentalSettings::clear_applist_base() {
  applist_base_.Clear();
}
const ::proto::steam::ParentalApp& ParentalSettings::applist_base(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.ParentalSettings.applist_base)
  return applist_base_.Get(index);
}
::proto::steam::ParentalApp* ParentalSettings::mutable_applist_base(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.ParentalSettings.applist_base)
  return applist_base_.Mutable(index);
}
::proto::steam::ParentalApp* ParentalSettings::add_applist_base() {
  // @@protoc_insertion_point(field_add:proto.steam.ParentalSettings.applist_base)
  return applist_base_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::ParentalApp >*
ParentalSettings::mutable_applist_base() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.ParentalSettings.applist_base)
  return &applist_base_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::ParentalApp >&
ParentalSettings::applist_base() const {
  // @@protoc_insertion_point(field_list:proto.steam.ParentalSettings.applist_base)
  return applist_base_;
}

// repeated .proto.steam.ParentalApp applist_custom = 5;
int ParentalSettings::applist_custom_size() const {
  return applist_custom_.size();
}
void ParentalSettings::clear_applist_custom() {
  applist_custom_.Clear();
}
const ::proto::steam::ParentalApp& ParentalSettings::applist_custom(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.ParentalSettings.applist_custom)
  return applist_custom_.Get(index);
}
::proto::steam::ParentalApp* ParentalSettings::mutable_applist_custom(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.ParentalSettings.applist_custom)
  return applist_custom_.Mutable(index);
}
::proto::steam::ParentalApp* ParentalSettings::add_applist_custom() {
  // @@protoc_insertion_point(field_add:proto.steam.ParentalSettings.applist_custom)
  return applist_custom_.Add();
}
::google::protobuf::RepeatedPtrField< ::proto::steam::ParentalApp >*
ParentalSettings::mutable_applist_custom() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.ParentalSettings.applist_custom)
  return &applist_custom_;
}
const ::google::protobuf::RepeatedPtrField< ::proto::steam::ParentalApp >&
ParentalSettings::applist_custom() const {
  // @@protoc_insertion_point(field_list:proto.steam.ParentalSettings.applist_custom)
  return applist_custom_;
}

// optional uint32 passwordhashtype = 6;
bool ParentalSettings::has_passwordhashtype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void ParentalSettings::set_has_passwordhashtype() {
  _has_bits_[0] |= 0x00000040u;
}
void ParentalSettings::clear_has_passwordhashtype() {
  _has_bits_[0] &= ~0x00000040u;
}
void ParentalSettings::clear_passwordhashtype() {
  passwordhashtype_ = 0u;
  clear_has_passwordhashtype();
}
::google::protobuf::uint32 ParentalSettings::passwordhashtype() const {
  // @@protoc_insertion_point(field_get:proto.steam.ParentalSettings.passwordhashtype)
  return passwordhashtype_;
}
void ParentalSettings::set_passwordhashtype(::google::protobuf::uint32 value) {
  set_has_passwordhashtype();
  passwordhashtype_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.ParentalSettings.passwordhashtype)
}

// optional bytes salt = 7;
bool ParentalSettings::has_salt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ParentalSettings::set_has_salt() {
  _has_bits_[0] |= 0x00000002u;
}
void ParentalSettings::clear_has_salt() {
  _has_bits_[0] &= ~0x00000002u;
}
void ParentalSettings::clear_salt() {
  salt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_salt();
}
const ::std::string& ParentalSettings::salt() const {
  // @@protoc_insertion_point(field_get:proto.steam.ParentalSettings.salt)
  return salt_.GetNoArena();
}
void ParentalSettings::set_salt(const ::std::string& value) {
  set_has_salt();
  salt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.ParentalSettings.salt)
}
#if LANG_CXX11
void ParentalSettings::set_salt(::std::string&& value) {
  set_has_salt();
  salt_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.ParentalSettings.salt)
}
#endif
void ParentalSettings::set_salt(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_salt();
  salt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.ParentalSettings.salt)
}
void ParentalSettings::set_salt(const void* value, size_t size) {
  set_has_salt();
  salt_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.ParentalSettings.salt)
}
::std::string* ParentalSettings::mutable_salt() {
  set_has_salt();
  // @@protoc_insertion_point(field_mutable:proto.steam.ParentalSettings.salt)
  return salt_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParentalSettings::release_salt() {
  // @@protoc_insertion_point(field_release:proto.steam.ParentalSettings.salt)
  clear_has_salt();
  return salt_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParentalSettings::set_allocated_salt(::std::string* salt) {
  if (salt != NULL) {
    set_has_salt();
  } else {
    clear_has_salt();
  }
  salt_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), salt);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.ParentalSettings.salt)
}

// optional bytes passwordhash = 8;
bool ParentalSettings::has_passwordhash() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ParentalSettings::set_has_passwordhash() {
  _has_bits_[0] |= 0x00000004u;
}
void ParentalSettings::clear_has_passwordhash() {
  _has_bits_[0] &= ~0x00000004u;
}
void ParentalSettings::clear_passwordhash() {
  passwordhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_passwordhash();
}
const ::std::string& ParentalSettings::passwordhash() const {
  // @@protoc_insertion_point(field_get:proto.steam.ParentalSettings.passwordhash)
  return passwordhash_.GetNoArena();
}
void ParentalSettings::set_passwordhash(const ::std::string& value) {
  set_has_passwordhash();
  passwordhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.ParentalSettings.passwordhash)
}
#if LANG_CXX11
void ParentalSettings::set_passwordhash(::std::string&& value) {
  set_has_passwordhash();
  passwordhash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.ParentalSettings.passwordhash)
}
#endif
void ParentalSettings::set_passwordhash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_passwordhash();
  passwordhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.ParentalSettings.passwordhash)
}
void ParentalSettings::set_passwordhash(const void* value, size_t size) {
  set_has_passwordhash();
  passwordhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.ParentalSettings.passwordhash)
}
::std::string* ParentalSettings::mutable_passwordhash() {
  set_has_passwordhash();
  // @@protoc_insertion_point(field_mutable:proto.steam.ParentalSettings.passwordhash)
  return passwordhash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParentalSettings::release_passwordhash() {
  // @@protoc_insertion_point(field_release:proto.steam.ParentalSettings.passwordhash)
  clear_has_passwordhash();
  return passwordhash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParentalSettings::set_allocated_passwordhash(::std::string* passwordhash) {
  if (passwordhash != NULL) {
    set_has_passwordhash();
  } else {
    clear_has_passwordhash();
  }
  passwordhash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwordhash);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.ParentalSettings.passwordhash)
}

// optional bool is_enabled = 9;
bool ParentalSettings::has_is_enabled() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void ParentalSettings::set_has_is_enabled() {
  _has_bits_[0] |= 0x00000080u;
}
void ParentalSettings::clear_has_is_enabled() {
  _has_bits_[0] &= ~0x00000080u;
}
void ParentalSettings::clear_is_enabled() {
  is_enabled_ = false;
  clear_has_is_enabled();
}
bool ParentalSettings::is_enabled() const {
  // @@protoc_insertion_point(field_get:proto.steam.ParentalSettings.is_enabled)
  return is_enabled_;
}
void ParentalSettings::set_is_enabled(bool value) {
  set_has_is_enabled();
  is_enabled_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.ParentalSettings.is_enabled)
}

// optional uint32 enabled_features = 10;
bool ParentalSettings::has_enabled_features() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void ParentalSettings::set_has_enabled_features() {
  _has_bits_[0] |= 0x00000100u;
}
void ParentalSettings::clear_has_enabled_features() {
  _has_bits_[0] &= ~0x00000100u;
}
void ParentalSettings::clear_enabled_features() {
  enabled_features_ = 0u;
  clear_has_enabled_features();
}
::google::protobuf::uint32 ParentalSettings::enabled_features() const {
  // @@protoc_insertion_point(field_get:proto.steam.ParentalSettings.enabled_features)
  return enabled_features_;
}
void ParentalSettings::set_enabled_features(::google::protobuf::uint32 value) {
  set_has_enabled_features();
  enabled_features_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.ParentalSettings.enabled_features)
}

// optional string recovery_email = 11;
bool ParentalSettings::has_recovery_email() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ParentalSettings::set_has_recovery_email() {
  _has_bits_[0] |= 0x00000008u;
}
void ParentalSettings::clear_has_recovery_email() {
  _has_bits_[0] &= ~0x00000008u;
}
void ParentalSettings::clear_recovery_email() {
  recovery_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_recovery_email();
}
const ::std::string& ParentalSettings::recovery_email() const {
  // @@protoc_insertion_point(field_get:proto.steam.ParentalSettings.recovery_email)
  return recovery_email_.GetNoArena();
}
void ParentalSettings::set_recovery_email(const ::std::string& value) {
  set_has_recovery_email();
  recovery_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.ParentalSettings.recovery_email)
}
#if LANG_CXX11
void ParentalSettings::set_recovery_email(::std::string&& value) {
  set_has_recovery_email();
  recovery_email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.ParentalSettings.recovery_email)
}
#endif
void ParentalSettings::set_recovery_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_recovery_email();
  recovery_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.ParentalSettings.recovery_email)
}
void ParentalSettings::set_recovery_email(const char* value, size_t size) {
  set_has_recovery_email();
  recovery_email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.ParentalSettings.recovery_email)
}
::std::string* ParentalSettings::mutable_recovery_email() {
  set_has_recovery_email();
  // @@protoc_insertion_point(field_mutable:proto.steam.ParentalSettings.recovery_email)
  return recovery_email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ParentalSettings::release_recovery_email() {
  // @@protoc_insertion_point(field_release:proto.steam.ParentalSettings.recovery_email)
  clear_has_recovery_email();
  return recovery_email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ParentalSettings::set_allocated_recovery_email(::std::string* recovery_email) {
  if (recovery_email != NULL) {
    set_has_recovery_email();
  } else {
    clear_has_recovery_email();
  }
  recovery_email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), recovery_email);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.ParentalSettings.recovery_email)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_EnableParentalSettings_Request::kPasswordFieldNumber;
const int CParental_EnableParentalSettings_Request::kSettingsFieldNumber;
const int CParental_EnableParentalSettings_Request::kSessionidFieldNumber;
const int CParental_EnableParentalSettings_Request::kEnablecodeFieldNumber;
const int CParental_EnableParentalSettings_Request::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_EnableParentalSettings_Request::CParental_EnableParentalSettings_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_EnableParentalSettings_Request)
}
CParental_EnableParentalSettings_Request::CParental_EnableParentalSettings_Request(const CParental_EnableParentalSettings_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  if (from.has_settings()) {
    settings_ = new ::proto::steam::ParentalSettings(*from.settings_);
  } else {
    settings_ = NULL;
  }
  ::memcpy(&enablecode_, &from.enablecode_,
    reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&enablecode_) + sizeof(steamid_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_EnableParentalSettings_Request)
}

void CParental_EnableParentalSettings_Request::SharedCtor() {
  _cached_size_ = 0;
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&settings_, 0, reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&settings_) + sizeof(steamid_));
}

CParental_EnableParentalSettings_Request::~CParental_EnableParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_EnableParentalSettings_Request)
  SharedDtor();
}

void CParental_EnableParentalSettings_Request::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete settings_;
  }
}

void CParental_EnableParentalSettings_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_EnableParentalSettings_Request::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_EnableParentalSettings_Request& CParental_EnableParentalSettings_Request::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_EnableParentalSettings_Request* CParental_EnableParentalSettings_Request::New(::google::protobuf::Arena* arena) const {
  CParental_EnableParentalSettings_Request* n = new CParental_EnableParentalSettings_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_EnableParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_EnableParentalSettings_Request)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_sessionid()) {
      GOOGLE_DCHECK(!sessionid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sessionid_.UnsafeRawStringPointer())->clear();
    }
    if (has_settings()) {
      GOOGLE_DCHECK(settings_ != NULL);
      settings_->::proto::steam::ParentalSettings::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&enablecode_, 0, reinterpret_cast<char*>(&steamid_) -
      reinterpret_cast<char*>(&enablecode_) + sizeof(steamid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_EnableParentalSettings_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_EnableParentalSettings_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_EnableParentalSettings_Request.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.steam.ParentalSettings settings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sessionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_EnableParentalSettings_Request.sessionid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 enablecode = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_enablecode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &enablecode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_EnableParentalSettings_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_EnableParentalSettings_Request)
  return false;
#undef DO_
}

void CParental_EnableParentalSettings_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_EnableParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_EnableParentalSettings_Request.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional .proto.steam.ParentalSettings settings = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->settings_, output);
  }

  // optional string sessionid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_EnableParentalSettings_Request.sessionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->sessionid(), output);
  }

  // optional uint32 enablecode = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->enablecode(), output);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_EnableParentalSettings_Request)
}

::google::protobuf::uint8* CParental_EnableParentalSettings_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_EnableParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_EnableParentalSettings_Request.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional .proto.steam.ParentalSettings settings = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->settings_, deterministic, target);
  }

  // optional string sessionid = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_EnableParentalSettings_Request.sessionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->sessionid(), target);
  }

  // optional uint32 enablecode = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->enablecode(), target);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_EnableParentalSettings_Request)
  return target;
}

size_t CParental_EnableParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_EnableParentalSettings_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string password = 1;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string sessionid = 3;
    if (has_sessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sessionid());
    }

    // optional .proto.steam.ParentalSettings settings = 2;
    if (has_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->settings_);
    }

    // optional uint32 enablecode = 4;
    if (has_enablecode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->enablecode());
    }

    // optional fixed64 steamid = 10;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_EnableParentalSettings_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_EnableParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_EnableParentalSettings_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_EnableParentalSettings_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_EnableParentalSettings_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_EnableParentalSettings_Request)
    MergeFrom(*source);
  }
}

void CParental_EnableParentalSettings_Request::MergeFrom(const CParental_EnableParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_EnableParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sessionid();
      sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_settings()->::proto::steam::ParentalSettings::MergeFrom(from.settings());
    }
    if (cached_has_bits & 0x00000008u) {
      enablecode_ = from.enablecode_;
    }
    if (cached_has_bits & 0x00000010u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CParental_EnableParentalSettings_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_EnableParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_EnableParentalSettings_Request::CopyFrom(const CParental_EnableParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_EnableParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_EnableParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_EnableParentalSettings_Request::Swap(CParental_EnableParentalSettings_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_EnableParentalSettings_Request::InternalSwap(CParental_EnableParentalSettings_Request* other) {
  password_.Swap(&other->password_);
  sessionid_.Swap(&other->sessionid_);
  std::swap(settings_, other->settings_);
  std::swap(enablecode_, other->enablecode_);
  std::swap(steamid_, other->steamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_EnableParentalSettings_Request::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_EnableParentalSettings_Request

// optional string password = 1;
bool CParental_EnableParentalSettings_Request::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_EnableParentalSettings_Request::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_EnableParentalSettings_Request::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_EnableParentalSettings_Request::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CParental_EnableParentalSettings_Request::password() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_EnableParentalSettings_Request.password)
  return password_.GetNoArena();
}
void CParental_EnableParentalSettings_Request::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_EnableParentalSettings_Request.password)
}
#if LANG_CXX11
void CParental_EnableParentalSettings_Request::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_EnableParentalSettings_Request.password)
}
#endif
void CParental_EnableParentalSettings_Request::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_EnableParentalSettings_Request.password)
}
void CParental_EnableParentalSettings_Request::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_EnableParentalSettings_Request.password)
}
::std::string* CParental_EnableParentalSettings_Request::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_EnableParentalSettings_Request.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_EnableParentalSettings_Request::release_password() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_EnableParentalSettings_Request.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_EnableParentalSettings_Request::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_EnableParentalSettings_Request.password)
}

// optional .proto.steam.ParentalSettings settings = 2;
bool CParental_EnableParentalSettings_Request::has_settings() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CParental_EnableParentalSettings_Request::set_has_settings() {
  _has_bits_[0] |= 0x00000004u;
}
void CParental_EnableParentalSettings_Request::clear_has_settings() {
  _has_bits_[0] &= ~0x00000004u;
}
void CParental_EnableParentalSettings_Request::clear_settings() {
  if (settings_ != NULL) settings_->::proto::steam::ParentalSettings::Clear();
  clear_has_settings();
}
const ::proto::steam::ParentalSettings& CParental_EnableParentalSettings_Request::settings() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_EnableParentalSettings_Request.settings)
  return settings_ != NULL ? *settings_
                         : *::proto::steam::ParentalSettings::internal_default_instance();
}
::proto::steam::ParentalSettings* CParental_EnableParentalSettings_Request::mutable_settings() {
  set_has_settings();
  if (settings_ == NULL) {
    settings_ = new ::proto::steam::ParentalSettings;
  }
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_EnableParentalSettings_Request.settings)
  return settings_;
}
::proto::steam::ParentalSettings* CParental_EnableParentalSettings_Request::release_settings() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_EnableParentalSettings_Request.settings)
  clear_has_settings();
  ::proto::steam::ParentalSettings* temp = settings_;
  settings_ = NULL;
  return temp;
}
void CParental_EnableParentalSettings_Request::set_allocated_settings(::proto::steam::ParentalSettings* settings) {
  delete settings_;
  settings_ = settings;
  if (settings) {
    set_has_settings();
  } else {
    clear_has_settings();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_EnableParentalSettings_Request.settings)
}

// optional string sessionid = 3;
bool CParental_EnableParentalSettings_Request::has_sessionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CParental_EnableParentalSettings_Request::set_has_sessionid() {
  _has_bits_[0] |= 0x00000002u;
}
void CParental_EnableParentalSettings_Request::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CParental_EnableParentalSettings_Request::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionid();
}
const ::std::string& CParental_EnableParentalSettings_Request::sessionid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_EnableParentalSettings_Request.sessionid)
  return sessionid_.GetNoArena();
}
void CParental_EnableParentalSettings_Request::set_sessionid(const ::std::string& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_EnableParentalSettings_Request.sessionid)
}
#if LANG_CXX11
void CParental_EnableParentalSettings_Request::set_sessionid(::std::string&& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_EnableParentalSettings_Request.sessionid)
}
#endif
void CParental_EnableParentalSettings_Request::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_EnableParentalSettings_Request.sessionid)
}
void CParental_EnableParentalSettings_Request::set_sessionid(const char* value, size_t size) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_EnableParentalSettings_Request.sessionid)
}
::std::string* CParental_EnableParentalSettings_Request::mutable_sessionid() {
  set_has_sessionid();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_EnableParentalSettings_Request.sessionid)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_EnableParentalSettings_Request::release_sessionid() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_EnableParentalSettings_Request.sessionid)
  clear_has_sessionid();
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_EnableParentalSettings_Request::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    set_has_sessionid();
  } else {
    clear_has_sessionid();
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_EnableParentalSettings_Request.sessionid)
}

// optional uint32 enablecode = 4;
bool CParental_EnableParentalSettings_Request::has_enablecode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CParental_EnableParentalSettings_Request::set_has_enablecode() {
  _has_bits_[0] |= 0x00000008u;
}
void CParental_EnableParentalSettings_Request::clear_has_enablecode() {
  _has_bits_[0] &= ~0x00000008u;
}
void CParental_EnableParentalSettings_Request::clear_enablecode() {
  enablecode_ = 0u;
  clear_has_enablecode();
}
::google::protobuf::uint32 CParental_EnableParentalSettings_Request::enablecode() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_EnableParentalSettings_Request.enablecode)
  return enablecode_;
}
void CParental_EnableParentalSettings_Request::set_enablecode(::google::protobuf::uint32 value) {
  set_has_enablecode();
  enablecode_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParental_EnableParentalSettings_Request.enablecode)
}

// optional fixed64 steamid = 10;
bool CParental_EnableParentalSettings_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CParental_EnableParentalSettings_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000010u;
}
void CParental_EnableParentalSettings_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000010u;
}
void CParental_EnableParentalSettings_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
::google::protobuf::uint64 CParental_EnableParentalSettings_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_EnableParentalSettings_Request.steamid)
  return steamid_;
}
void CParental_EnableParentalSettings_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParental_EnableParentalSettings_Request.steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_EnableParentalSettings_Response::CParental_EnableParentalSettings_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_EnableParentalSettings_Response)
}
CParental_EnableParentalSettings_Response::CParental_EnableParentalSettings_Response(const CParental_EnableParentalSettings_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_EnableParentalSettings_Response)
}

void CParental_EnableParentalSettings_Response::SharedCtor() {
  _cached_size_ = 0;
}

CParental_EnableParentalSettings_Response::~CParental_EnableParentalSettings_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_EnableParentalSettings_Response)
  SharedDtor();
}

void CParental_EnableParentalSettings_Response::SharedDtor() {
}

void CParental_EnableParentalSettings_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_EnableParentalSettings_Response::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_EnableParentalSettings_Response& CParental_EnableParentalSettings_Response::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_EnableParentalSettings_Response* CParental_EnableParentalSettings_Response::New(::google::protobuf::Arena* arena) const {
  CParental_EnableParentalSettings_Response* n = new CParental_EnableParentalSettings_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_EnableParentalSettings_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_EnableParentalSettings_Response)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_EnableParentalSettings_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_EnableParentalSettings_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_EnableParentalSettings_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_EnableParentalSettings_Response)
  return false;
#undef DO_
}

void CParental_EnableParentalSettings_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_EnableParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_EnableParentalSettings_Response)
}

::google::protobuf::uint8* CParental_EnableParentalSettings_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_EnableParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_EnableParentalSettings_Response)
  return target;
}

size_t CParental_EnableParentalSettings_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_EnableParentalSettings_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_EnableParentalSettings_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_EnableParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_EnableParentalSettings_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_EnableParentalSettings_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_EnableParentalSettings_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_EnableParentalSettings_Response)
    MergeFrom(*source);
  }
}

void CParental_EnableParentalSettings_Response::MergeFrom(const CParental_EnableParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_EnableParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_EnableParentalSettings_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_EnableParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_EnableParentalSettings_Response::CopyFrom(const CParental_EnableParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_EnableParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_EnableParentalSettings_Response::IsInitialized() const {
  return true;
}

void CParental_EnableParentalSettings_Response::Swap(CParental_EnableParentalSettings_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_EnableParentalSettings_Response::InternalSwap(CParental_EnableParentalSettings_Response* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_EnableParentalSettings_Response::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_EnableParentalSettings_Response

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_DisableParentalSettings_Request::kPasswordFieldNumber;
const int CParental_DisableParentalSettings_Request::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_DisableParentalSettings_Request::CParental_DisableParentalSettings_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_DisableParentalSettings_Request)
}
CParental_DisableParentalSettings_Request::CParental_DisableParentalSettings_Request(const CParental_DisableParentalSettings_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_DisableParentalSettings_Request)
}

void CParental_DisableParentalSettings_Request::SharedCtor() {
  _cached_size_ = 0;
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  steamid_ = GOOGLE_ULONGLONG(0);
}

CParental_DisableParentalSettings_Request::~CParental_DisableParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_DisableParentalSettings_Request)
  SharedDtor();
}

void CParental_DisableParentalSettings_Request::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_DisableParentalSettings_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_DisableParentalSettings_Request::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_DisableParentalSettings_Request& CParental_DisableParentalSettings_Request::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_DisableParentalSettings_Request* CParental_DisableParentalSettings_Request::New(::google::protobuf::Arena* arena) const {
  CParental_DisableParentalSettings_Request* n = new CParental_DisableParentalSettings_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_DisableParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_DisableParentalSettings_Request)
  if (has_password()) {
    GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*password_.UnsafeRawStringPointer())->clear();
  }
  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_DisableParentalSettings_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_DisableParentalSettings_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_DisableParentalSettings_Request.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_DisableParentalSettings_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_DisableParentalSettings_Request)
  return false;
#undef DO_
}

void CParental_DisableParentalSettings_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_DisableParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_DisableParentalSettings_Request.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_DisableParentalSettings_Request)
}

::google::protobuf::uint8* CParental_DisableParentalSettings_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_DisableParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_DisableParentalSettings_Request.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_DisableParentalSettings_Request)
  return target;
}

size_t CParental_DisableParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_DisableParentalSettings_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string password = 1;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional fixed64 steamid = 10;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_DisableParentalSettings_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_DisableParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_DisableParentalSettings_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_DisableParentalSettings_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_DisableParentalSettings_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_DisableParentalSettings_Request)
    MergeFrom(*source);
  }
}

void CParental_DisableParentalSettings_Request::MergeFrom(const CParental_DisableParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_DisableParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CParental_DisableParentalSettings_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_DisableParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_DisableParentalSettings_Request::CopyFrom(const CParental_DisableParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_DisableParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_DisableParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_DisableParentalSettings_Request::Swap(CParental_DisableParentalSettings_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_DisableParentalSettings_Request::InternalSwap(CParental_DisableParentalSettings_Request* other) {
  password_.Swap(&other->password_);
  std::swap(steamid_, other->steamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_DisableParentalSettings_Request::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_DisableParentalSettings_Request

// optional string password = 1;
bool CParental_DisableParentalSettings_Request::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_DisableParentalSettings_Request::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_DisableParentalSettings_Request::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_DisableParentalSettings_Request::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CParental_DisableParentalSettings_Request::password() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_DisableParentalSettings_Request.password)
  return password_.GetNoArena();
}
void CParental_DisableParentalSettings_Request::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_DisableParentalSettings_Request.password)
}
#if LANG_CXX11
void CParental_DisableParentalSettings_Request::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_DisableParentalSettings_Request.password)
}
#endif
void CParental_DisableParentalSettings_Request::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_DisableParentalSettings_Request.password)
}
void CParental_DisableParentalSettings_Request::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_DisableParentalSettings_Request.password)
}
::std::string* CParental_DisableParentalSettings_Request::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_DisableParentalSettings_Request.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_DisableParentalSettings_Request::release_password() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_DisableParentalSettings_Request.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_DisableParentalSettings_Request::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_DisableParentalSettings_Request.password)
}

// optional fixed64 steamid = 10;
bool CParental_DisableParentalSettings_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CParental_DisableParentalSettings_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
void CParental_DisableParentalSettings_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CParental_DisableParentalSettings_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
::google::protobuf::uint64 CParental_DisableParentalSettings_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_DisableParentalSettings_Request.steamid)
  return steamid_;
}
void CParental_DisableParentalSettings_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParental_DisableParentalSettings_Request.steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_DisableParentalSettings_Response::CParental_DisableParentalSettings_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_DisableParentalSettings_Response)
}
CParental_DisableParentalSettings_Response::CParental_DisableParentalSettings_Response(const CParental_DisableParentalSettings_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_DisableParentalSettings_Response)
}

void CParental_DisableParentalSettings_Response::SharedCtor() {
  _cached_size_ = 0;
}

CParental_DisableParentalSettings_Response::~CParental_DisableParentalSettings_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_DisableParentalSettings_Response)
  SharedDtor();
}

void CParental_DisableParentalSettings_Response::SharedDtor() {
}

void CParental_DisableParentalSettings_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_DisableParentalSettings_Response::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_DisableParentalSettings_Response& CParental_DisableParentalSettings_Response::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_DisableParentalSettings_Response* CParental_DisableParentalSettings_Response::New(::google::protobuf::Arena* arena) const {
  CParental_DisableParentalSettings_Response* n = new CParental_DisableParentalSettings_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_DisableParentalSettings_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_DisableParentalSettings_Response)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_DisableParentalSettings_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_DisableParentalSettings_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_DisableParentalSettings_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_DisableParentalSettings_Response)
  return false;
#undef DO_
}

void CParental_DisableParentalSettings_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_DisableParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_DisableParentalSettings_Response)
}

::google::protobuf::uint8* CParental_DisableParentalSettings_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_DisableParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_DisableParentalSettings_Response)
  return target;
}

size_t CParental_DisableParentalSettings_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_DisableParentalSettings_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_DisableParentalSettings_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_DisableParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_DisableParentalSettings_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_DisableParentalSettings_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_DisableParentalSettings_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_DisableParentalSettings_Response)
    MergeFrom(*source);
  }
}

void CParental_DisableParentalSettings_Response::MergeFrom(const CParental_DisableParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_DisableParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_DisableParentalSettings_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_DisableParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_DisableParentalSettings_Response::CopyFrom(const CParental_DisableParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_DisableParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_DisableParentalSettings_Response::IsInitialized() const {
  return true;
}

void CParental_DisableParentalSettings_Response::Swap(CParental_DisableParentalSettings_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_DisableParentalSettings_Response::InternalSwap(CParental_DisableParentalSettings_Response* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_DisableParentalSettings_Response::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_DisableParentalSettings_Response

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_GetParentalSettings_Request::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_GetParentalSettings_Request::CParental_GetParentalSettings_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_GetParentalSettings_Request)
}
CParental_GetParentalSettings_Request::CParental_GetParentalSettings_Request(const CParental_GetParentalSettings_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_GetParentalSettings_Request)
}

void CParental_GetParentalSettings_Request::SharedCtor() {
  _cached_size_ = 0;
  steamid_ = GOOGLE_ULONGLONG(0);
}

CParental_GetParentalSettings_Request::~CParental_GetParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_GetParentalSettings_Request)
  SharedDtor();
}

void CParental_GetParentalSettings_Request::SharedDtor() {
}

void CParental_GetParentalSettings_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_GetParentalSettings_Request::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_GetParentalSettings_Request& CParental_GetParentalSettings_Request::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_GetParentalSettings_Request* CParental_GetParentalSettings_Request::New(::google::protobuf::Arena* arena) const {
  CParental_GetParentalSettings_Request* n = new CParental_GetParentalSettings_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_GetParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_GetParentalSettings_Request)
  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_GetParentalSettings_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_GetParentalSettings_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_GetParentalSettings_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_GetParentalSettings_Request)
  return false;
#undef DO_
}

void CParental_GetParentalSettings_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_GetParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_GetParentalSettings_Request)
}

::google::protobuf::uint8* CParental_GetParentalSettings_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_GetParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_GetParentalSettings_Request)
  return target;
}

size_t CParental_GetParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_GetParentalSettings_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional fixed64 steamid = 10;
  if (has_steamid()) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_GetParentalSettings_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_GetParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_GetParentalSettings_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_GetParentalSettings_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_GetParentalSettings_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_GetParentalSettings_Request)
    MergeFrom(*source);
  }
}

void CParental_GetParentalSettings_Request::MergeFrom(const CParental_GetParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_GetParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_steamid()) {
    set_steamid(from.steamid());
  }
}

void CParental_GetParentalSettings_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_GetParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_GetParentalSettings_Request::CopyFrom(const CParental_GetParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_GetParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_GetParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_GetParentalSettings_Request::Swap(CParental_GetParentalSettings_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_GetParentalSettings_Request::InternalSwap(CParental_GetParentalSettings_Request* other) {
  std::swap(steamid_, other->steamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_GetParentalSettings_Request::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_GetParentalSettings_Request

// optional fixed64 steamid = 10;
bool CParental_GetParentalSettings_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_GetParentalSettings_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_GetParentalSettings_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_GetParentalSettings_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
::google::protobuf::uint64 CParental_GetParentalSettings_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_GetParentalSettings_Request.steamid)
  return steamid_;
}
void CParental_GetParentalSettings_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParental_GetParentalSettings_Request.steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_GetParentalSettings_Response::kSettingsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_GetParentalSettings_Response::CParental_GetParentalSettings_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_GetParentalSettings_Response)
}
CParental_GetParentalSettings_Response::CParental_GetParentalSettings_Response(const CParental_GetParentalSettings_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_settings()) {
    settings_ = new ::proto::steam::ParentalSettings(*from.settings_);
  } else {
    settings_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_GetParentalSettings_Response)
}

void CParental_GetParentalSettings_Response::SharedCtor() {
  _cached_size_ = 0;
  settings_ = NULL;
}

CParental_GetParentalSettings_Response::~CParental_GetParentalSettings_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_GetParentalSettings_Response)
  SharedDtor();
}

void CParental_GetParentalSettings_Response::SharedDtor() {
  if (this != internal_default_instance()) {
    delete settings_;
  }
}

void CParental_GetParentalSettings_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_GetParentalSettings_Response::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_GetParentalSettings_Response& CParental_GetParentalSettings_Response::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_GetParentalSettings_Response* CParental_GetParentalSettings_Response::New(::google::protobuf::Arena* arena) const {
  CParental_GetParentalSettings_Response* n = new CParental_GetParentalSettings_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_GetParentalSettings_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_GetParentalSettings_Response)
  if (has_settings()) {
    GOOGLE_DCHECK(settings_ != NULL);
    settings_->::proto::steam::ParentalSettings::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_GetParentalSettings_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_GetParentalSettings_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .proto.steam.ParentalSettings settings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_GetParentalSettings_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_GetParentalSettings_Response)
  return false;
#undef DO_
}

void CParental_GetParentalSettings_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_GetParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.steam.ParentalSettings settings = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->settings_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_GetParentalSettings_Response)
}

::google::protobuf::uint8* CParental_GetParentalSettings_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_GetParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .proto.steam.ParentalSettings settings = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->settings_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_GetParentalSettings_Response)
  return target;
}

size_t CParental_GetParentalSettings_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_GetParentalSettings_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .proto.steam.ParentalSettings settings = 1;
  if (has_settings()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->settings_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_GetParentalSettings_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_GetParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_GetParentalSettings_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_GetParentalSettings_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_GetParentalSettings_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_GetParentalSettings_Response)
    MergeFrom(*source);
  }
}

void CParental_GetParentalSettings_Response::MergeFrom(const CParental_GetParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_GetParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_settings()) {
    mutable_settings()->::proto::steam::ParentalSettings::MergeFrom(from.settings());
  }
}

void CParental_GetParentalSettings_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_GetParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_GetParentalSettings_Response::CopyFrom(const CParental_GetParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_GetParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_GetParentalSettings_Response::IsInitialized() const {
  return true;
}

void CParental_GetParentalSettings_Response::Swap(CParental_GetParentalSettings_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_GetParentalSettings_Response::InternalSwap(CParental_GetParentalSettings_Response* other) {
  std::swap(settings_, other->settings_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_GetParentalSettings_Response::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_GetParentalSettings_Response

// optional .proto.steam.ParentalSettings settings = 1;
bool CParental_GetParentalSettings_Response::has_settings() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_GetParentalSettings_Response::set_has_settings() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_GetParentalSettings_Response::clear_has_settings() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_GetParentalSettings_Response::clear_settings() {
  if (settings_ != NULL) settings_->::proto::steam::ParentalSettings::Clear();
  clear_has_settings();
}
const ::proto::steam::ParentalSettings& CParental_GetParentalSettings_Response::settings() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_GetParentalSettings_Response.settings)
  return settings_ != NULL ? *settings_
                         : *::proto::steam::ParentalSettings::internal_default_instance();
}
::proto::steam::ParentalSettings* CParental_GetParentalSettings_Response::mutable_settings() {
  set_has_settings();
  if (settings_ == NULL) {
    settings_ = new ::proto::steam::ParentalSettings;
  }
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_GetParentalSettings_Response.settings)
  return settings_;
}
::proto::steam::ParentalSettings* CParental_GetParentalSettings_Response::release_settings() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_GetParentalSettings_Response.settings)
  clear_has_settings();
  ::proto::steam::ParentalSettings* temp = settings_;
  settings_ = NULL;
  return temp;
}
void CParental_GetParentalSettings_Response::set_allocated_settings(::proto::steam::ParentalSettings* settings) {
  delete settings_;
  settings_ = settings;
  if (settings) {
    set_has_settings();
  } else {
    clear_has_settings();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_GetParentalSettings_Response.settings)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_GetSignedParentalSettings_Request::kPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_GetSignedParentalSettings_Request::CParental_GetSignedParentalSettings_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_GetSignedParentalSettings_Request)
}
CParental_GetSignedParentalSettings_Request::CParental_GetSignedParentalSettings_Request(const CParental_GetSignedParentalSettings_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  priority_ = from.priority_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_GetSignedParentalSettings_Request)
}

void CParental_GetSignedParentalSettings_Request::SharedCtor() {
  _cached_size_ = 0;
  priority_ = 0u;
}

CParental_GetSignedParentalSettings_Request::~CParental_GetSignedParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_GetSignedParentalSettings_Request)
  SharedDtor();
}

void CParental_GetSignedParentalSettings_Request::SharedDtor() {
}

void CParental_GetSignedParentalSettings_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_GetSignedParentalSettings_Request::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_GetSignedParentalSettings_Request& CParental_GetSignedParentalSettings_Request::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_GetSignedParentalSettings_Request* CParental_GetSignedParentalSettings_Request::New(::google::protobuf::Arena* arena) const {
  CParental_GetSignedParentalSettings_Request* n = new CParental_GetSignedParentalSettings_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_GetSignedParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  priority_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_GetSignedParentalSettings_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 priority = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_priority();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_GetSignedParentalSettings_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_GetSignedParentalSettings_Request)
  return false;
#undef DO_
}

void CParental_GetSignedParentalSettings_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 priority = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->priority(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_GetSignedParentalSettings_Request)
}

::google::protobuf::uint8* CParental_GetSignedParentalSettings_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 priority = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->priority(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_GetSignedParentalSettings_Request)
  return target;
}

size_t CParental_GetSignedParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 priority = 1;
  if (has_priority()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->priority());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_GetSignedParentalSettings_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_GetSignedParentalSettings_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_GetSignedParentalSettings_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_GetSignedParentalSettings_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_GetSignedParentalSettings_Request)
    MergeFrom(*source);
  }
}

void CParental_GetSignedParentalSettings_Request::MergeFrom(const CParental_GetSignedParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_priority()) {
    set_priority(from.priority());
  }
}

void CParental_GetSignedParentalSettings_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_GetSignedParentalSettings_Request::CopyFrom(const CParental_GetSignedParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_GetSignedParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_GetSignedParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_GetSignedParentalSettings_Request::Swap(CParental_GetSignedParentalSettings_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_GetSignedParentalSettings_Request::InternalSwap(CParental_GetSignedParentalSettings_Request* other) {
  std::swap(priority_, other->priority_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_GetSignedParentalSettings_Request::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_GetSignedParentalSettings_Request

// optional uint32 priority = 1;
bool CParental_GetSignedParentalSettings_Request::has_priority() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_GetSignedParentalSettings_Request::set_has_priority() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_GetSignedParentalSettings_Request::clear_has_priority() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_GetSignedParentalSettings_Request::clear_priority() {
  priority_ = 0u;
  clear_has_priority();
}
::google::protobuf::uint32 CParental_GetSignedParentalSettings_Request::priority() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_GetSignedParentalSettings_Request.priority)
  return priority_;
}
void CParental_GetSignedParentalSettings_Request::set_priority(::google::protobuf::uint32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParental_GetSignedParentalSettings_Request.priority)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_GetSignedParentalSettings_Response::kSerializedSettingsFieldNumber;
const int CParental_GetSignedParentalSettings_Response::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_GetSignedParentalSettings_Response::CParental_GetSignedParentalSettings_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_GetSignedParentalSettings_Response)
}
CParental_GetSignedParentalSettings_Response::CParental_GetSignedParentalSettings_Response(const CParental_GetSignedParentalSettings_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serialized_settings_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_settings()) {
    serialized_settings_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_settings_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_GetSignedParentalSettings_Response)
}

void CParental_GetSignedParentalSettings_Response::SharedCtor() {
  _cached_size_ = 0;
  serialized_settings_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CParental_GetSignedParentalSettings_Response::~CParental_GetSignedParentalSettings_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_GetSignedParentalSettings_Response)
  SharedDtor();
}

void CParental_GetSignedParentalSettings_Response::SharedDtor() {
  serialized_settings_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_GetSignedParentalSettings_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_GetSignedParentalSettings_Response::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_GetSignedParentalSettings_Response& CParental_GetSignedParentalSettings_Response::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_GetSignedParentalSettings_Response* CParental_GetSignedParentalSettings_Response::New(::google::protobuf::Arena* arena) const {
  CParental_GetSignedParentalSettings_Response* n = new CParental_GetSignedParentalSettings_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_GetSignedParentalSettings_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_serialized_settings()) {
      GOOGLE_DCHECK(!serialized_settings_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*serialized_settings_.UnsafeRawStringPointer())->clear();
    }
    if (has_signature()) {
      GOOGLE_DCHECK(!signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*signature_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_GetSignedParentalSettings_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes serialized_settings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_GetSignedParentalSettings_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_GetSignedParentalSettings_Response)
  return false;
#undef DO_
}

void CParental_GetSignedParentalSettings_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes serialized_settings = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->serialized_settings(), output);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->signature(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_GetSignedParentalSettings_Response)
}

::google::protobuf::uint8* CParental_GetSignedParentalSettings_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes serialized_settings = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->serialized_settings(), target);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->signature(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_GetSignedParentalSettings_Response)
  return target;
}

size_t CParental_GetSignedParentalSettings_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional bytes serialized_settings = 1;
    if (has_serialized_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serialized_settings());
    }

    // optional bytes signature = 2;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->signature());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_GetSignedParentalSettings_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_GetSignedParentalSettings_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_GetSignedParentalSettings_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_GetSignedParentalSettings_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_GetSignedParentalSettings_Response)
    MergeFrom(*source);
  }
}

void CParental_GetSignedParentalSettings_Response::MergeFrom(const CParental_GetSignedParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_serialized_settings();
      serialized_settings_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_settings_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_signature();
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
  }
}

void CParental_GetSignedParentalSettings_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_GetSignedParentalSettings_Response::CopyFrom(const CParental_GetSignedParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_GetSignedParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_GetSignedParentalSettings_Response::IsInitialized() const {
  return true;
}

void CParental_GetSignedParentalSettings_Response::Swap(CParental_GetSignedParentalSettings_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_GetSignedParentalSettings_Response::InternalSwap(CParental_GetSignedParentalSettings_Response* other) {
  serialized_settings_.Swap(&other->serialized_settings_);
  signature_.Swap(&other->signature_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_GetSignedParentalSettings_Response::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_GetSignedParentalSettings_Response

// optional bytes serialized_settings = 1;
bool CParental_GetSignedParentalSettings_Response::has_serialized_settings() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_GetSignedParentalSettings_Response::set_has_serialized_settings() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_GetSignedParentalSettings_Response::clear_has_serialized_settings() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_GetSignedParentalSettings_Response::clear_serialized_settings() {
  serialized_settings_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serialized_settings();
}
const ::std::string& CParental_GetSignedParentalSettings_Response::serialized_settings() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_GetSignedParentalSettings_Response.serialized_settings)
  return serialized_settings_.GetNoArena();
}
void CParental_GetSignedParentalSettings_Response::set_serialized_settings(const ::std::string& value) {
  set_has_serialized_settings();
  serialized_settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_GetSignedParentalSettings_Response.serialized_settings)
}
#if LANG_CXX11
void CParental_GetSignedParentalSettings_Response::set_serialized_settings(::std::string&& value) {
  set_has_serialized_settings();
  serialized_settings_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_GetSignedParentalSettings_Response.serialized_settings)
}
#endif
void CParental_GetSignedParentalSettings_Response::set_serialized_settings(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serialized_settings();
  serialized_settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_GetSignedParentalSettings_Response.serialized_settings)
}
void CParental_GetSignedParentalSettings_Response::set_serialized_settings(const void* value, size_t size) {
  set_has_serialized_settings();
  serialized_settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_GetSignedParentalSettings_Response.serialized_settings)
}
::std::string* CParental_GetSignedParentalSettings_Response::mutable_serialized_settings() {
  set_has_serialized_settings();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_GetSignedParentalSettings_Response.serialized_settings)
  return serialized_settings_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_GetSignedParentalSettings_Response::release_serialized_settings() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_GetSignedParentalSettings_Response.serialized_settings)
  clear_has_serialized_settings();
  return serialized_settings_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_GetSignedParentalSettings_Response::set_allocated_serialized_settings(::std::string* serialized_settings) {
  if (serialized_settings != NULL) {
    set_has_serialized_settings();
  } else {
    clear_has_serialized_settings();
  }
  serialized_settings_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialized_settings);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_GetSignedParentalSettings_Response.serialized_settings)
}

// optional bytes signature = 2;
bool CParental_GetSignedParentalSettings_Response::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CParental_GetSignedParentalSettings_Response::set_has_signature() {
  _has_bits_[0] |= 0x00000002u;
}
void CParental_GetSignedParentalSettings_Response::clear_has_signature() {
  _has_bits_[0] &= ~0x00000002u;
}
void CParental_GetSignedParentalSettings_Response::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
const ::std::string& CParental_GetSignedParentalSettings_Response::signature() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_GetSignedParentalSettings_Response.signature)
  return signature_.GetNoArena();
}
void CParental_GetSignedParentalSettings_Response::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_GetSignedParentalSettings_Response.signature)
}
#if LANG_CXX11
void CParental_GetSignedParentalSettings_Response::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_GetSignedParentalSettings_Response.signature)
}
#endif
void CParental_GetSignedParentalSettings_Response::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_GetSignedParentalSettings_Response.signature)
}
void CParental_GetSignedParentalSettings_Response::set_signature(const void* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_GetSignedParentalSettings_Response.signature)
}
::std::string* CParental_GetSignedParentalSettings_Response::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_GetSignedParentalSettings_Response.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_GetSignedParentalSettings_Response::release_signature() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_GetSignedParentalSettings_Response.signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_GetSignedParentalSettings_Response::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_GetSignedParentalSettings_Response.signature)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_SetParentalSettings_Request::kPasswordFieldNumber;
const int CParental_SetParentalSettings_Request::kSettingsFieldNumber;
const int CParental_SetParentalSettings_Request::kNewPasswordFieldNumber;
const int CParental_SetParentalSettings_Request::kSessionidFieldNumber;
const int CParental_SetParentalSettings_Request::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_SetParentalSettings_Request::CParental_SetParentalSettings_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_SetParentalSettings_Request)
}
CParental_SetParentalSettings_Request::CParental_SetParentalSettings_Request(const CParental_SetParentalSettings_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  new_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_new_password()) {
    new_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_password_);
  }
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  if (from.has_settings()) {
    settings_ = new ::proto::steam::ParentalSettings(*from.settings_);
  } else {
    settings_ = NULL;
  }
  steamid_ = from.steamid_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_SetParentalSettings_Request)
}

void CParental_SetParentalSettings_Request::SharedCtor() {
  _cached_size_ = 0;
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&settings_, 0, reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&settings_) + sizeof(steamid_));
}

CParental_SetParentalSettings_Request::~CParental_SetParentalSettings_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_SetParentalSettings_Request)
  SharedDtor();
}

void CParental_SetParentalSettings_Request::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete settings_;
  }
}

void CParental_SetParentalSettings_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_SetParentalSettings_Request::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_SetParentalSettings_Request& CParental_SetParentalSettings_Request::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_SetParentalSettings_Request* CParental_SetParentalSettings_Request::New(::google::protobuf::Arena* arena) const {
  CParental_SetParentalSettings_Request* n = new CParental_SetParentalSettings_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_SetParentalSettings_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_SetParentalSettings_Request)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_new_password()) {
      GOOGLE_DCHECK(!new_password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*new_password_.UnsafeRawStringPointer())->clear();
    }
    if (has_sessionid()) {
      GOOGLE_DCHECK(!sessionid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sessionid_.UnsafeRawStringPointer())->clear();
    }
    if (has_settings()) {
      GOOGLE_DCHECK(settings_ != NULL);
      settings_->::proto::steam::ParentalSettings::Clear();
    }
  }
  steamid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_SetParentalSettings_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_SetParentalSettings_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_SetParentalSettings_Request.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .proto.steam.ParentalSettings settings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string new_password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->new_password().data(), this->new_password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_SetParentalSettings_Request.new_password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sessionid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_SetParentalSettings_Request.sessionid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_SetParentalSettings_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_SetParentalSettings_Request)
  return false;
#undef DO_
}

void CParental_SetParentalSettings_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_SetParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_SetParentalSettings_Request.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional .proto.steam.ParentalSettings settings = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->settings_, output);
  }

  // optional string new_password = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_password().data(), this->new_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_SetParentalSettings_Request.new_password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->new_password(), output);
  }

  // optional string sessionid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_SetParentalSettings_Request.sessionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sessionid(), output);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_SetParentalSettings_Request)
}

::google::protobuf::uint8* CParental_SetParentalSettings_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_SetParentalSettings_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_SetParentalSettings_Request.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional .proto.steam.ParentalSettings settings = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->settings_, deterministic, target);
  }

  // optional string new_password = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_password().data(), this->new_password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_SetParentalSettings_Request.new_password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->new_password(), target);
  }

  // optional string sessionid = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_SetParentalSettings_Request.sessionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sessionid(), target);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_SetParentalSettings_Request)
  return target;
}

size_t CParental_SetParentalSettings_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_SetParentalSettings_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string password = 1;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string new_password = 3;
    if (has_new_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->new_password());
    }

    // optional string sessionid = 4;
    if (has_sessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sessionid());
    }

    // optional .proto.steam.ParentalSettings settings = 2;
    if (has_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->settings_);
    }

    // optional fixed64 steamid = 10;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_SetParentalSettings_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_SetParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_SetParentalSettings_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_SetParentalSettings_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_SetParentalSettings_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_SetParentalSettings_Request)
    MergeFrom(*source);
  }
}

void CParental_SetParentalSettings_Request::MergeFrom(const CParental_SetParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_SetParentalSettings_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_new_password();
      new_password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_password_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_sessionid();
      sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_settings()->::proto::steam::ParentalSettings::MergeFrom(from.settings());
    }
    if (cached_has_bits & 0x00000010u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CParental_SetParentalSettings_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_SetParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_SetParentalSettings_Request::CopyFrom(const CParental_SetParentalSettings_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_SetParentalSettings_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_SetParentalSettings_Request::IsInitialized() const {
  return true;
}

void CParental_SetParentalSettings_Request::Swap(CParental_SetParentalSettings_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_SetParentalSettings_Request::InternalSwap(CParental_SetParentalSettings_Request* other) {
  password_.Swap(&other->password_);
  new_password_.Swap(&other->new_password_);
  sessionid_.Swap(&other->sessionid_);
  std::swap(settings_, other->settings_);
  std::swap(steamid_, other->steamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_SetParentalSettings_Request::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_SetParentalSettings_Request

// optional string password = 1;
bool CParental_SetParentalSettings_Request::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_SetParentalSettings_Request::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_SetParentalSettings_Request::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_SetParentalSettings_Request::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CParental_SetParentalSettings_Request::password() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_SetParentalSettings_Request.password)
  return password_.GetNoArena();
}
void CParental_SetParentalSettings_Request::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_SetParentalSettings_Request.password)
}
#if LANG_CXX11
void CParental_SetParentalSettings_Request::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_SetParentalSettings_Request.password)
}
#endif
void CParental_SetParentalSettings_Request::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_SetParentalSettings_Request.password)
}
void CParental_SetParentalSettings_Request::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_SetParentalSettings_Request.password)
}
::std::string* CParental_SetParentalSettings_Request::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_SetParentalSettings_Request.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_SetParentalSettings_Request::release_password() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_SetParentalSettings_Request.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_SetParentalSettings_Request::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_SetParentalSettings_Request.password)
}

// optional .proto.steam.ParentalSettings settings = 2;
bool CParental_SetParentalSettings_Request::has_settings() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CParental_SetParentalSettings_Request::set_has_settings() {
  _has_bits_[0] |= 0x00000008u;
}
void CParental_SetParentalSettings_Request::clear_has_settings() {
  _has_bits_[0] &= ~0x00000008u;
}
void CParental_SetParentalSettings_Request::clear_settings() {
  if (settings_ != NULL) settings_->::proto::steam::ParentalSettings::Clear();
  clear_has_settings();
}
const ::proto::steam::ParentalSettings& CParental_SetParentalSettings_Request::settings() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_SetParentalSettings_Request.settings)
  return settings_ != NULL ? *settings_
                         : *::proto::steam::ParentalSettings::internal_default_instance();
}
::proto::steam::ParentalSettings* CParental_SetParentalSettings_Request::mutable_settings() {
  set_has_settings();
  if (settings_ == NULL) {
    settings_ = new ::proto::steam::ParentalSettings;
  }
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_SetParentalSettings_Request.settings)
  return settings_;
}
::proto::steam::ParentalSettings* CParental_SetParentalSettings_Request::release_settings() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_SetParentalSettings_Request.settings)
  clear_has_settings();
  ::proto::steam::ParentalSettings* temp = settings_;
  settings_ = NULL;
  return temp;
}
void CParental_SetParentalSettings_Request::set_allocated_settings(::proto::steam::ParentalSettings* settings) {
  delete settings_;
  settings_ = settings;
  if (settings) {
    set_has_settings();
  } else {
    clear_has_settings();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_SetParentalSettings_Request.settings)
}

// optional string new_password = 3;
bool CParental_SetParentalSettings_Request::has_new_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CParental_SetParentalSettings_Request::set_has_new_password() {
  _has_bits_[0] |= 0x00000002u;
}
void CParental_SetParentalSettings_Request::clear_has_new_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void CParental_SetParentalSettings_Request::clear_new_password() {
  new_password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_new_password();
}
const ::std::string& CParental_SetParentalSettings_Request::new_password() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_SetParentalSettings_Request.new_password)
  return new_password_.GetNoArena();
}
void CParental_SetParentalSettings_Request::set_new_password(const ::std::string& value) {
  set_has_new_password();
  new_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_SetParentalSettings_Request.new_password)
}
#if LANG_CXX11
void CParental_SetParentalSettings_Request::set_new_password(::std::string&& value) {
  set_has_new_password();
  new_password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_SetParentalSettings_Request.new_password)
}
#endif
void CParental_SetParentalSettings_Request::set_new_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_new_password();
  new_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_SetParentalSettings_Request.new_password)
}
void CParental_SetParentalSettings_Request::set_new_password(const char* value, size_t size) {
  set_has_new_password();
  new_password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_SetParentalSettings_Request.new_password)
}
::std::string* CParental_SetParentalSettings_Request::mutable_new_password() {
  set_has_new_password();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_SetParentalSettings_Request.new_password)
  return new_password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_SetParentalSettings_Request::release_new_password() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_SetParentalSettings_Request.new_password)
  clear_has_new_password();
  return new_password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_SetParentalSettings_Request::set_allocated_new_password(::std::string* new_password) {
  if (new_password != NULL) {
    set_has_new_password();
  } else {
    clear_has_new_password();
  }
  new_password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_password);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_SetParentalSettings_Request.new_password)
}

// optional string sessionid = 4;
bool CParental_SetParentalSettings_Request::has_sessionid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CParental_SetParentalSettings_Request::set_has_sessionid() {
  _has_bits_[0] |= 0x00000004u;
}
void CParental_SetParentalSettings_Request::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CParental_SetParentalSettings_Request::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionid();
}
const ::std::string& CParental_SetParentalSettings_Request::sessionid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_SetParentalSettings_Request.sessionid)
  return sessionid_.GetNoArena();
}
void CParental_SetParentalSettings_Request::set_sessionid(const ::std::string& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_SetParentalSettings_Request.sessionid)
}
#if LANG_CXX11
void CParental_SetParentalSettings_Request::set_sessionid(::std::string&& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_SetParentalSettings_Request.sessionid)
}
#endif
void CParental_SetParentalSettings_Request::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_SetParentalSettings_Request.sessionid)
}
void CParental_SetParentalSettings_Request::set_sessionid(const char* value, size_t size) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_SetParentalSettings_Request.sessionid)
}
::std::string* CParental_SetParentalSettings_Request::mutable_sessionid() {
  set_has_sessionid();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_SetParentalSettings_Request.sessionid)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_SetParentalSettings_Request::release_sessionid() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_SetParentalSettings_Request.sessionid)
  clear_has_sessionid();
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_SetParentalSettings_Request::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    set_has_sessionid();
  } else {
    clear_has_sessionid();
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_SetParentalSettings_Request.sessionid)
}

// optional fixed64 steamid = 10;
bool CParental_SetParentalSettings_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void CParental_SetParentalSettings_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000010u;
}
void CParental_SetParentalSettings_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000010u;
}
void CParental_SetParentalSettings_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
::google::protobuf::uint64 CParental_SetParentalSettings_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_SetParentalSettings_Request.steamid)
  return steamid_;
}
void CParental_SetParentalSettings_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParental_SetParentalSettings_Request.steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_SetParentalSettings_Response::CParental_SetParentalSettings_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_SetParentalSettings_Response)
}
CParental_SetParentalSettings_Response::CParental_SetParentalSettings_Response(const CParental_SetParentalSettings_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_SetParentalSettings_Response)
}

void CParental_SetParentalSettings_Response::SharedCtor() {
  _cached_size_ = 0;
}

CParental_SetParentalSettings_Response::~CParental_SetParentalSettings_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_SetParentalSettings_Response)
  SharedDtor();
}

void CParental_SetParentalSettings_Response::SharedDtor() {
}

void CParental_SetParentalSettings_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_SetParentalSettings_Response::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_SetParentalSettings_Response& CParental_SetParentalSettings_Response::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_SetParentalSettings_Response* CParental_SetParentalSettings_Response::New(::google::protobuf::Arena* arena) const {
  CParental_SetParentalSettings_Response* n = new CParental_SetParentalSettings_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_SetParentalSettings_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_SetParentalSettings_Response)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_SetParentalSettings_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_SetParentalSettings_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_SetParentalSettings_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_SetParentalSettings_Response)
  return false;
#undef DO_
}

void CParental_SetParentalSettings_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_SetParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_SetParentalSettings_Response)
}

::google::protobuf::uint8* CParental_SetParentalSettings_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_SetParentalSettings_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_SetParentalSettings_Response)
  return target;
}

size_t CParental_SetParentalSettings_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_SetParentalSettings_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_SetParentalSettings_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_SetParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_SetParentalSettings_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_SetParentalSettings_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_SetParentalSettings_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_SetParentalSettings_Response)
    MergeFrom(*source);
  }
}

void CParental_SetParentalSettings_Response::MergeFrom(const CParental_SetParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_SetParentalSettings_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_SetParentalSettings_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_SetParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_SetParentalSettings_Response::CopyFrom(const CParental_SetParentalSettings_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_SetParentalSettings_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_SetParentalSettings_Response::IsInitialized() const {
  return true;
}

void CParental_SetParentalSettings_Response::Swap(CParental_SetParentalSettings_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_SetParentalSettings_Response::InternalSwap(CParental_SetParentalSettings_Response* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_SetParentalSettings_Response::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_SetParentalSettings_Response

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_ValidateToken_Request::kUnlockTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_ValidateToken_Request::CParental_ValidateToken_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_ValidateToken_Request)
}
CParental_ValidateToken_Request::CParental_ValidateToken_Request(const CParental_ValidateToken_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  unlock_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_unlock_token()) {
    unlock_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unlock_token_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_ValidateToken_Request)
}

void CParental_ValidateToken_Request::SharedCtor() {
  _cached_size_ = 0;
  unlock_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CParental_ValidateToken_Request::~CParental_ValidateToken_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_ValidateToken_Request)
  SharedDtor();
}

void CParental_ValidateToken_Request::SharedDtor() {
  unlock_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_ValidateToken_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_ValidateToken_Request::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_ValidateToken_Request& CParental_ValidateToken_Request::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_ValidateToken_Request* CParental_ValidateToken_Request::New(::google::protobuf::Arena* arena) const {
  CParental_ValidateToken_Request* n = new CParental_ValidateToken_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_ValidateToken_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_ValidateToken_Request)
  if (has_unlock_token()) {
    GOOGLE_DCHECK(!unlock_token_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*unlock_token_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_ValidateToken_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_ValidateToken_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string unlock_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_unlock_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->unlock_token().data(), this->unlock_token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ValidateToken_Request.unlock_token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_ValidateToken_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_ValidateToken_Request)
  return false;
#undef DO_
}

void CParental_ValidateToken_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_ValidateToken_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string unlock_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unlock_token().data(), this->unlock_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidateToken_Request.unlock_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->unlock_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_ValidateToken_Request)
}

::google::protobuf::uint8* CParental_ValidateToken_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_ValidateToken_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string unlock_token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->unlock_token().data(), this->unlock_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidateToken_Request.unlock_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->unlock_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_ValidateToken_Request)
  return target;
}

size_t CParental_ValidateToken_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_ValidateToken_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string unlock_token = 1;
  if (has_unlock_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->unlock_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_ValidateToken_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_ValidateToken_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_ValidateToken_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_ValidateToken_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_ValidateToken_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_ValidateToken_Request)
    MergeFrom(*source);
  }
}

void CParental_ValidateToken_Request::MergeFrom(const CParental_ValidateToken_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_ValidateToken_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_unlock_token()) {
    set_has_unlock_token();
    unlock_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.unlock_token_);
  }
}

void CParental_ValidateToken_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_ValidateToken_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_ValidateToken_Request::CopyFrom(const CParental_ValidateToken_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_ValidateToken_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ValidateToken_Request::IsInitialized() const {
  return true;
}

void CParental_ValidateToken_Request::Swap(CParental_ValidateToken_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_ValidateToken_Request::InternalSwap(CParental_ValidateToken_Request* other) {
  unlock_token_.Swap(&other->unlock_token_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_ValidateToken_Request::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_ValidateToken_Request

// optional string unlock_token = 1;
bool CParental_ValidateToken_Request::has_unlock_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_ValidateToken_Request::set_has_unlock_token() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_ValidateToken_Request::clear_has_unlock_token() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_ValidateToken_Request::clear_unlock_token() {
  unlock_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unlock_token();
}
const ::std::string& CParental_ValidateToken_Request::unlock_token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_ValidateToken_Request.unlock_token)
  return unlock_token_.GetNoArena();
}
void CParental_ValidateToken_Request::set_unlock_token(const ::std::string& value) {
  set_has_unlock_token();
  unlock_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_ValidateToken_Request.unlock_token)
}
#if LANG_CXX11
void CParental_ValidateToken_Request::set_unlock_token(::std::string&& value) {
  set_has_unlock_token();
  unlock_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_ValidateToken_Request.unlock_token)
}
#endif
void CParental_ValidateToken_Request::set_unlock_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_unlock_token();
  unlock_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_ValidateToken_Request.unlock_token)
}
void CParental_ValidateToken_Request::set_unlock_token(const char* value, size_t size) {
  set_has_unlock_token();
  unlock_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_ValidateToken_Request.unlock_token)
}
::std::string* CParental_ValidateToken_Request::mutable_unlock_token() {
  set_has_unlock_token();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_ValidateToken_Request.unlock_token)
  return unlock_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_ValidateToken_Request::release_unlock_token() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_ValidateToken_Request.unlock_token)
  clear_has_unlock_token();
  return unlock_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_ValidateToken_Request::set_allocated_unlock_token(::std::string* unlock_token) {
  if (unlock_token != NULL) {
    set_has_unlock_token();
  } else {
    clear_has_unlock_token();
  }
  unlock_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unlock_token);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_ValidateToken_Request.unlock_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_ValidateToken_Response::CParental_ValidateToken_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_ValidateToken_Response)
}
CParental_ValidateToken_Response::CParental_ValidateToken_Response(const CParental_ValidateToken_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_ValidateToken_Response)
}

void CParental_ValidateToken_Response::SharedCtor() {
  _cached_size_ = 0;
}

CParental_ValidateToken_Response::~CParental_ValidateToken_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_ValidateToken_Response)
  SharedDtor();
}

void CParental_ValidateToken_Response::SharedDtor() {
}

void CParental_ValidateToken_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_ValidateToken_Response::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_ValidateToken_Response& CParental_ValidateToken_Response::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_ValidateToken_Response* CParental_ValidateToken_Response::New(::google::protobuf::Arena* arena) const {
  CParental_ValidateToken_Response* n = new CParental_ValidateToken_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_ValidateToken_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_ValidateToken_Response)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_ValidateToken_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_ValidateToken_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_ValidateToken_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_ValidateToken_Response)
  return false;
#undef DO_
}

void CParental_ValidateToken_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_ValidateToken_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_ValidateToken_Response)
}

::google::protobuf::uint8* CParental_ValidateToken_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_ValidateToken_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_ValidateToken_Response)
  return target;
}

size_t CParental_ValidateToken_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_ValidateToken_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_ValidateToken_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_ValidateToken_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_ValidateToken_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_ValidateToken_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_ValidateToken_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_ValidateToken_Response)
    MergeFrom(*source);
  }
}

void CParental_ValidateToken_Response::MergeFrom(const CParental_ValidateToken_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_ValidateToken_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_ValidateToken_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_ValidateToken_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_ValidateToken_Response::CopyFrom(const CParental_ValidateToken_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_ValidateToken_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ValidateToken_Response::IsInitialized() const {
  return true;
}

void CParental_ValidateToken_Response::Swap(CParental_ValidateToken_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_ValidateToken_Response::InternalSwap(CParental_ValidateToken_Response* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_ValidateToken_Response::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_ValidateToken_Response

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_ValidatePassword_Request::kPasswordFieldNumber;
const int CParental_ValidatePassword_Request::kSessionFieldNumber;
const int CParental_ValidatePassword_Request::kSendUnlockOnSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_ValidatePassword_Request::CParental_ValidatePassword_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_ValidatePassword_Request)
}
CParental_ValidatePassword_Request::CParental_ValidatePassword_Request(const CParental_ValidatePassword_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_session()) {
    session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_);
  }
  send_unlock_on_success_ = from.send_unlock_on_success_;
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_ValidatePassword_Request)
}

void CParental_ValidatePassword_Request::SharedCtor() {
  _cached_size_ = 0;
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  send_unlock_on_success_ = false;
}

CParental_ValidatePassword_Request::~CParental_ValidatePassword_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_ValidatePassword_Request)
  SharedDtor();
}

void CParental_ValidatePassword_Request::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_ValidatePassword_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_ValidatePassword_Request::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_ValidatePassword_Request& CParental_ValidatePassword_Request::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_ValidatePassword_Request* CParental_ValidatePassword_Request::New(::google::protobuf::Arena* arena) const {
  CParental_ValidatePassword_Request* n = new CParental_ValidatePassword_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_ValidatePassword_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_ValidatePassword_Request)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_session()) {
      GOOGLE_DCHECK(!session_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*session_.UnsafeRawStringPointer())->clear();
    }
  }
  send_unlock_on_success_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_ValidatePassword_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_ValidatePassword_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ValidatePassword_Request.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string session = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->session().data(), this->session().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ValidatePassword_Request.session");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool send_unlock_on_success = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_send_unlock_on_success();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &send_unlock_on_success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_ValidatePassword_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_ValidatePassword_Request)
  return false;
#undef DO_
}

void CParental_ValidatePassword_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_ValidatePassword_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidatePassword_Request.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional string session = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session().data(), this->session().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidatePassword_Request.session");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->session(), output);
  }

  // optional bool send_unlock_on_success = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->send_unlock_on_success(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_ValidatePassword_Request)
}

::google::protobuf::uint8* CParental_ValidatePassword_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_ValidatePassword_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidatePassword_Request.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional string session = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session().data(), this->session().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidatePassword_Request.session");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->session(), target);
  }

  // optional bool send_unlock_on_success = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->send_unlock_on_success(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_ValidatePassword_Request)
  return target;
}

size_t CParental_ValidatePassword_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_ValidatePassword_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string password = 1;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string session = 2;
    if (has_session()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->session());
    }

    // optional bool send_unlock_on_success = 3;
    if (has_send_unlock_on_success()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_ValidatePassword_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_ValidatePassword_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_ValidatePassword_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_ValidatePassword_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_ValidatePassword_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_ValidatePassword_Request)
    MergeFrom(*source);
  }
}

void CParental_ValidatePassword_Request::MergeFrom(const CParental_ValidatePassword_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_ValidatePassword_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_session();
      session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_);
    }
    if (cached_has_bits & 0x00000004u) {
      send_unlock_on_success_ = from.send_unlock_on_success_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CParental_ValidatePassword_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_ValidatePassword_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_ValidatePassword_Request::CopyFrom(const CParental_ValidatePassword_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_ValidatePassword_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ValidatePassword_Request::IsInitialized() const {
  return true;
}

void CParental_ValidatePassword_Request::Swap(CParental_ValidatePassword_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_ValidatePassword_Request::InternalSwap(CParental_ValidatePassword_Request* other) {
  password_.Swap(&other->password_);
  session_.Swap(&other->session_);
  std::swap(send_unlock_on_success_, other->send_unlock_on_success_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_ValidatePassword_Request::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_ValidatePassword_Request

// optional string password = 1;
bool CParental_ValidatePassword_Request::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_ValidatePassword_Request::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_ValidatePassword_Request::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_ValidatePassword_Request::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CParental_ValidatePassword_Request::password() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_ValidatePassword_Request.password)
  return password_.GetNoArena();
}
void CParental_ValidatePassword_Request::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_ValidatePassword_Request.password)
}
#if LANG_CXX11
void CParental_ValidatePassword_Request::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_ValidatePassword_Request.password)
}
#endif
void CParental_ValidatePassword_Request::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_ValidatePassword_Request.password)
}
void CParental_ValidatePassword_Request::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_ValidatePassword_Request.password)
}
::std::string* CParental_ValidatePassword_Request::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_ValidatePassword_Request.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_ValidatePassword_Request::release_password() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_ValidatePassword_Request.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_ValidatePassword_Request::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_ValidatePassword_Request.password)
}

// optional string session = 2;
bool CParental_ValidatePassword_Request::has_session() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CParental_ValidatePassword_Request::set_has_session() {
  _has_bits_[0] |= 0x00000002u;
}
void CParental_ValidatePassword_Request::clear_has_session() {
  _has_bits_[0] &= ~0x00000002u;
}
void CParental_ValidatePassword_Request::clear_session() {
  session_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_session();
}
const ::std::string& CParental_ValidatePassword_Request::session() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_ValidatePassword_Request.session)
  return session_.GetNoArena();
}
void CParental_ValidatePassword_Request::set_session(const ::std::string& value) {
  set_has_session();
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_ValidatePassword_Request.session)
}
#if LANG_CXX11
void CParental_ValidatePassword_Request::set_session(::std::string&& value) {
  set_has_session();
  session_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_ValidatePassword_Request.session)
}
#endif
void CParental_ValidatePassword_Request::set_session(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_session();
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_ValidatePassword_Request.session)
}
void CParental_ValidatePassword_Request::set_session(const char* value, size_t size) {
  set_has_session();
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_ValidatePassword_Request.session)
}
::std::string* CParental_ValidatePassword_Request::mutable_session() {
  set_has_session();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_ValidatePassword_Request.session)
  return session_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_ValidatePassword_Request::release_session() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_ValidatePassword_Request.session)
  clear_has_session();
  return session_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_ValidatePassword_Request::set_allocated_session(::std::string* session) {
  if (session != NULL) {
    set_has_session();
  } else {
    clear_has_session();
  }
  session_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_ValidatePassword_Request.session)
}

// optional bool send_unlock_on_success = 3;
bool CParental_ValidatePassword_Request::has_send_unlock_on_success() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CParental_ValidatePassword_Request::set_has_send_unlock_on_success() {
  _has_bits_[0] |= 0x00000004u;
}
void CParental_ValidatePassword_Request::clear_has_send_unlock_on_success() {
  _has_bits_[0] &= ~0x00000004u;
}
void CParental_ValidatePassword_Request::clear_send_unlock_on_success() {
  send_unlock_on_success_ = false;
  clear_has_send_unlock_on_success();
}
bool CParental_ValidatePassword_Request::send_unlock_on_success() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_ValidatePassword_Request.send_unlock_on_success)
  return send_unlock_on_success_;
}
void CParental_ValidatePassword_Request::set_send_unlock_on_success(bool value) {
  set_has_send_unlock_on_success();
  send_unlock_on_success_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParental_ValidatePassword_Request.send_unlock_on_success)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_ValidatePassword_Response::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_ValidatePassword_Response::CParental_ValidatePassword_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_ValidatePassword_Response)
}
CParental_ValidatePassword_Response::CParental_ValidatePassword_Response(const CParental_ValidatePassword_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_token()) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_ValidatePassword_Response)
}

void CParental_ValidatePassword_Response::SharedCtor() {
  _cached_size_ = 0;
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CParental_ValidatePassword_Response::~CParental_ValidatePassword_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_ValidatePassword_Response)
  SharedDtor();
}

void CParental_ValidatePassword_Response::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_ValidatePassword_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_ValidatePassword_Response::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_ValidatePassword_Response& CParental_ValidatePassword_Response::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_ValidatePassword_Response* CParental_ValidatePassword_Response::New(::google::protobuf::Arena* arena) const {
  CParental_ValidatePassword_Response* n = new CParental_ValidatePassword_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_ValidatePassword_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_ValidatePassword_Response)
  if (has_token()) {
    GOOGLE_DCHECK(!token_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*token_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_ValidatePassword_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_ValidatePassword_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->token().data(), this->token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ValidatePassword_Response.token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_ValidatePassword_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_ValidatePassword_Response)
  return false;
#undef DO_
}

void CParental_ValidatePassword_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_ValidatePassword_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidatePassword_Response.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_ValidatePassword_Response)
}

::google::protobuf::uint8* CParental_ValidatePassword_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_ValidatePassword_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string token = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->token().data(), this->token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ValidatePassword_Response.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_ValidatePassword_Response)
  return target;
}

size_t CParental_ValidatePassword_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_ValidatePassword_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string token = 1;
  if (has_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_ValidatePassword_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_ValidatePassword_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_ValidatePassword_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_ValidatePassword_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_ValidatePassword_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_ValidatePassword_Response)
    MergeFrom(*source);
  }
}

void CParental_ValidatePassword_Response::MergeFrom(const CParental_ValidatePassword_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_ValidatePassword_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_token()) {
    set_has_token();
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void CParental_ValidatePassword_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_ValidatePassword_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_ValidatePassword_Response::CopyFrom(const CParental_ValidatePassword_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_ValidatePassword_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ValidatePassword_Response::IsInitialized() const {
  return true;
}

void CParental_ValidatePassword_Response::Swap(CParental_ValidatePassword_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_ValidatePassword_Response::InternalSwap(CParental_ValidatePassword_Response* other) {
  token_.Swap(&other->token_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_ValidatePassword_Response::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_ValidatePassword_Response

// optional string token = 1;
bool CParental_ValidatePassword_Response::has_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_ValidatePassword_Response::set_has_token() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_ValidatePassword_Response::clear_has_token() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_ValidatePassword_Response::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_token();
}
const ::std::string& CParental_ValidatePassword_Response::token() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_ValidatePassword_Response.token)
  return token_.GetNoArena();
}
void CParental_ValidatePassword_Response::set_token(const ::std::string& value) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_ValidatePassword_Response.token)
}
#if LANG_CXX11
void CParental_ValidatePassword_Response::set_token(::std::string&& value) {
  set_has_token();
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_ValidatePassword_Response.token)
}
#endif
void CParental_ValidatePassword_Response::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_ValidatePassword_Response.token)
}
void CParental_ValidatePassword_Response::set_token(const char* value, size_t size) {
  set_has_token();
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_ValidatePassword_Response.token)
}
::std::string* CParental_ValidatePassword_Response::mutable_token() {
  set_has_token();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_ValidatePassword_Response.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_ValidatePassword_Response::release_token() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_ValidatePassword_Response.token)
  clear_has_token();
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_ValidatePassword_Response::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    set_has_token();
  } else {
    clear_has_token();
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_ValidatePassword_Response.token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_LockClient_Request::kSessionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_LockClient_Request::CParental_LockClient_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_LockClient_Request)
}
CParental_LockClient_Request::CParental_LockClient_Request(const CParental_LockClient_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_session()) {
    session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_LockClient_Request)
}

void CParental_LockClient_Request::SharedCtor() {
  _cached_size_ = 0;
  session_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CParental_LockClient_Request::~CParental_LockClient_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_LockClient_Request)
  SharedDtor();
}

void CParental_LockClient_Request::SharedDtor() {
  session_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_LockClient_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_LockClient_Request::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_LockClient_Request& CParental_LockClient_Request::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_LockClient_Request* CParental_LockClient_Request::New(::google::protobuf::Arena* arena) const {
  CParental_LockClient_Request* n = new CParental_LockClient_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_LockClient_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_LockClient_Request)
  if (has_session()) {
    GOOGLE_DCHECK(!session_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*session_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_LockClient_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_LockClient_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string session = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_session()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->session().data(), this->session().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_LockClient_Request.session");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_LockClient_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_LockClient_Request)
  return false;
#undef DO_
}

void CParental_LockClient_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_LockClient_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string session = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session().data(), this->session().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_LockClient_Request.session");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->session(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_LockClient_Request)
}

::google::protobuf::uint8* CParental_LockClient_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_LockClient_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string session = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->session().data(), this->session().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_LockClient_Request.session");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->session(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_LockClient_Request)
  return target;
}

size_t CParental_LockClient_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_LockClient_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string session = 1;
  if (has_session()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->session());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_LockClient_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_LockClient_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_LockClient_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_LockClient_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_LockClient_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_LockClient_Request)
    MergeFrom(*source);
  }
}

void CParental_LockClient_Request::MergeFrom(const CParental_LockClient_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_LockClient_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_session()) {
    set_has_session();
    session_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.session_);
  }
}

void CParental_LockClient_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_LockClient_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_LockClient_Request::CopyFrom(const CParental_LockClient_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_LockClient_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_LockClient_Request::IsInitialized() const {
  return true;
}

void CParental_LockClient_Request::Swap(CParental_LockClient_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_LockClient_Request::InternalSwap(CParental_LockClient_Request* other) {
  session_.Swap(&other->session_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_LockClient_Request::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_LockClient_Request

// optional string session = 1;
bool CParental_LockClient_Request::has_session() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_LockClient_Request::set_has_session() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_LockClient_Request::clear_has_session() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_LockClient_Request::clear_session() {
  session_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_session();
}
const ::std::string& CParental_LockClient_Request::session() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_LockClient_Request.session)
  return session_.GetNoArena();
}
void CParental_LockClient_Request::set_session(const ::std::string& value) {
  set_has_session();
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_LockClient_Request.session)
}
#if LANG_CXX11
void CParental_LockClient_Request::set_session(::std::string&& value) {
  set_has_session();
  session_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_LockClient_Request.session)
}
#endif
void CParental_LockClient_Request::set_session(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_session();
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_LockClient_Request.session)
}
void CParental_LockClient_Request::set_session(const char* value, size_t size) {
  set_has_session();
  session_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_LockClient_Request.session)
}
::std::string* CParental_LockClient_Request::mutable_session() {
  set_has_session();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_LockClient_Request.session)
  return session_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_LockClient_Request::release_session() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_LockClient_Request.session)
  clear_has_session();
  return session_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_LockClient_Request::set_allocated_session(::std::string* session) {
  if (session != NULL) {
    set_has_session();
  } else {
    clear_has_session();
  }
  session_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_LockClient_Request.session)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_LockClient_Response::CParental_LockClient_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_LockClient_Response)
}
CParental_LockClient_Response::CParental_LockClient_Response(const CParental_LockClient_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_LockClient_Response)
}

void CParental_LockClient_Response::SharedCtor() {
  _cached_size_ = 0;
}

CParental_LockClient_Response::~CParental_LockClient_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_LockClient_Response)
  SharedDtor();
}

void CParental_LockClient_Response::SharedDtor() {
}

void CParental_LockClient_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_LockClient_Response::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_LockClient_Response& CParental_LockClient_Response::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_LockClient_Response* CParental_LockClient_Response::New(::google::protobuf::Arena* arena) const {
  CParental_LockClient_Response* n = new CParental_LockClient_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_LockClient_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_LockClient_Response)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_LockClient_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_LockClient_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_LockClient_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_LockClient_Response)
  return false;
#undef DO_
}

void CParental_LockClient_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_LockClient_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_LockClient_Response)
}

::google::protobuf::uint8* CParental_LockClient_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_LockClient_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_LockClient_Response)
  return target;
}

size_t CParental_LockClient_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_LockClient_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_LockClient_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_LockClient_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_LockClient_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_LockClient_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_LockClient_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_LockClient_Response)
    MergeFrom(*source);
  }
}

void CParental_LockClient_Response::MergeFrom(const CParental_LockClient_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_LockClient_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_LockClient_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_LockClient_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_LockClient_Response::CopyFrom(const CParental_LockClient_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_LockClient_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_LockClient_Response::IsInitialized() const {
  return true;
}

void CParental_LockClient_Response::Swap(CParental_LockClient_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_LockClient_Response::InternalSwap(CParental_LockClient_Response* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_LockClient_Response::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_LockClient_Response

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_RequestRecoveryCode_Request::CParental_RequestRecoveryCode_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_RequestRecoveryCode_Request)
}
CParental_RequestRecoveryCode_Request::CParental_RequestRecoveryCode_Request(const CParental_RequestRecoveryCode_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_RequestRecoveryCode_Request)
}

void CParental_RequestRecoveryCode_Request::SharedCtor() {
  _cached_size_ = 0;
}

CParental_RequestRecoveryCode_Request::~CParental_RequestRecoveryCode_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_RequestRecoveryCode_Request)
  SharedDtor();
}

void CParental_RequestRecoveryCode_Request::SharedDtor() {
}

void CParental_RequestRecoveryCode_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_RequestRecoveryCode_Request::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_RequestRecoveryCode_Request& CParental_RequestRecoveryCode_Request::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_RequestRecoveryCode_Request* CParental_RequestRecoveryCode_Request::New(::google::protobuf::Arena* arena) const {
  CParental_RequestRecoveryCode_Request* n = new CParental_RequestRecoveryCode_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_RequestRecoveryCode_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_RequestRecoveryCode_Request)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_RequestRecoveryCode_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_RequestRecoveryCode_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_RequestRecoveryCode_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_RequestRecoveryCode_Request)
  return false;
#undef DO_
}

void CParental_RequestRecoveryCode_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_RequestRecoveryCode_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_RequestRecoveryCode_Request)
}

::google::protobuf::uint8* CParental_RequestRecoveryCode_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_RequestRecoveryCode_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_RequestRecoveryCode_Request)
  return target;
}

size_t CParental_RequestRecoveryCode_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_RequestRecoveryCode_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_RequestRecoveryCode_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_RequestRecoveryCode_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_RequestRecoveryCode_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_RequestRecoveryCode_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_RequestRecoveryCode_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_RequestRecoveryCode_Request)
    MergeFrom(*source);
  }
}

void CParental_RequestRecoveryCode_Request::MergeFrom(const CParental_RequestRecoveryCode_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_RequestRecoveryCode_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_RequestRecoveryCode_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_RequestRecoveryCode_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_RequestRecoveryCode_Request::CopyFrom(const CParental_RequestRecoveryCode_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_RequestRecoveryCode_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_RequestRecoveryCode_Request::IsInitialized() const {
  return true;
}

void CParental_RequestRecoveryCode_Request::Swap(CParental_RequestRecoveryCode_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_RequestRecoveryCode_Request::InternalSwap(CParental_RequestRecoveryCode_Request* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_RequestRecoveryCode_Request::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_RequestRecoveryCode_Request

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_RequestRecoveryCode_Response::CParental_RequestRecoveryCode_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_RequestRecoveryCode_Response)
}
CParental_RequestRecoveryCode_Response::CParental_RequestRecoveryCode_Response(const CParental_RequestRecoveryCode_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_RequestRecoveryCode_Response)
}

void CParental_RequestRecoveryCode_Response::SharedCtor() {
  _cached_size_ = 0;
}

CParental_RequestRecoveryCode_Response::~CParental_RequestRecoveryCode_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_RequestRecoveryCode_Response)
  SharedDtor();
}

void CParental_RequestRecoveryCode_Response::SharedDtor() {
}

void CParental_RequestRecoveryCode_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_RequestRecoveryCode_Response::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_RequestRecoveryCode_Response& CParental_RequestRecoveryCode_Response::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_RequestRecoveryCode_Response* CParental_RequestRecoveryCode_Response::New(::google::protobuf::Arena* arena) const {
  CParental_RequestRecoveryCode_Response* n = new CParental_RequestRecoveryCode_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_RequestRecoveryCode_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_RequestRecoveryCode_Response)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_RequestRecoveryCode_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_RequestRecoveryCode_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_RequestRecoveryCode_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_RequestRecoveryCode_Response)
  return false;
#undef DO_
}

void CParental_RequestRecoveryCode_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_RequestRecoveryCode_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_RequestRecoveryCode_Response)
}

::google::protobuf::uint8* CParental_RequestRecoveryCode_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_RequestRecoveryCode_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_RequestRecoveryCode_Response)
  return target;
}

size_t CParental_RequestRecoveryCode_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_RequestRecoveryCode_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_RequestRecoveryCode_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_RequestRecoveryCode_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_RequestRecoveryCode_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_RequestRecoveryCode_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_RequestRecoveryCode_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_RequestRecoveryCode_Response)
    MergeFrom(*source);
  }
}

void CParental_RequestRecoveryCode_Response::MergeFrom(const CParental_RequestRecoveryCode_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_RequestRecoveryCode_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_RequestRecoveryCode_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_RequestRecoveryCode_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_RequestRecoveryCode_Response::CopyFrom(const CParental_RequestRecoveryCode_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_RequestRecoveryCode_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_RequestRecoveryCode_Response::IsInitialized() const {
  return true;
}

void CParental_RequestRecoveryCode_Response::Swap(CParental_RequestRecoveryCode_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_RequestRecoveryCode_Response::InternalSwap(CParental_RequestRecoveryCode_Response* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_RequestRecoveryCode_Response::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_RequestRecoveryCode_Response

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_DisableWithRecoveryCode_Request::kRecoveryCodeFieldNumber;
const int CParental_DisableWithRecoveryCode_Request::kSteamidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_DisableWithRecoveryCode_Request::CParental_DisableWithRecoveryCode_Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_DisableWithRecoveryCode_Request)
}
CParental_DisableWithRecoveryCode_Request::CParental_DisableWithRecoveryCode_Request(const CParental_DisableWithRecoveryCode_Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&recovery_code_, &from.recovery_code_,
    reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&recovery_code_) + sizeof(steamid_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_DisableWithRecoveryCode_Request)
}

void CParental_DisableWithRecoveryCode_Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&recovery_code_, 0, reinterpret_cast<char*>(&steamid_) -
    reinterpret_cast<char*>(&recovery_code_) + sizeof(steamid_));
}

CParental_DisableWithRecoveryCode_Request::~CParental_DisableWithRecoveryCode_Request() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_DisableWithRecoveryCode_Request)
  SharedDtor();
}

void CParental_DisableWithRecoveryCode_Request::SharedDtor() {
}

void CParental_DisableWithRecoveryCode_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_DisableWithRecoveryCode_Request::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_DisableWithRecoveryCode_Request& CParental_DisableWithRecoveryCode_Request::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_DisableWithRecoveryCode_Request* CParental_DisableWithRecoveryCode_Request::New(::google::protobuf::Arena* arena) const {
  CParental_DisableWithRecoveryCode_Request* n = new CParental_DisableWithRecoveryCode_Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_DisableWithRecoveryCode_Request::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&recovery_code_, 0, reinterpret_cast<char*>(&steamid_) -
      reinterpret_cast<char*>(&recovery_code_) + sizeof(steamid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_DisableWithRecoveryCode_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 recovery_code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_recovery_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &recovery_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional fixed64 steamid = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u)) {
          set_has_steamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &steamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_DisableWithRecoveryCode_Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_DisableWithRecoveryCode_Request)
  return false;
#undef DO_
}

void CParental_DisableWithRecoveryCode_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 recovery_code = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->recovery_code(), output);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->steamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_DisableWithRecoveryCode_Request)
}

::google::protobuf::uint8* CParental_DisableWithRecoveryCode_Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 recovery_code = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->recovery_code(), target);
  }

  // optional fixed64 steamid = 10;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->steamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_DisableWithRecoveryCode_Request)
  return target;
}

size_t CParental_DisableWithRecoveryCode_Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 recovery_code = 1;
    if (has_recovery_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->recovery_code());
    }

    // optional fixed64 steamid = 10;
    if (has_steamid()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_DisableWithRecoveryCode_Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_DisableWithRecoveryCode_Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_DisableWithRecoveryCode_Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_DisableWithRecoveryCode_Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_DisableWithRecoveryCode_Request)
    MergeFrom(*source);
  }
}

void CParental_DisableWithRecoveryCode_Request::MergeFrom(const CParental_DisableWithRecoveryCode_Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      recovery_code_ = from.recovery_code_;
    }
    if (cached_has_bits & 0x00000002u) {
      steamid_ = from.steamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CParental_DisableWithRecoveryCode_Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_DisableWithRecoveryCode_Request::CopyFrom(const CParental_DisableWithRecoveryCode_Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_DisableWithRecoveryCode_Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_DisableWithRecoveryCode_Request::IsInitialized() const {
  return true;
}

void CParental_DisableWithRecoveryCode_Request::Swap(CParental_DisableWithRecoveryCode_Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_DisableWithRecoveryCode_Request::InternalSwap(CParental_DisableWithRecoveryCode_Request* other) {
  std::swap(recovery_code_, other->recovery_code_);
  std::swap(steamid_, other->steamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_DisableWithRecoveryCode_Request::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_DisableWithRecoveryCode_Request

// optional uint32 recovery_code = 1;
bool CParental_DisableWithRecoveryCode_Request::has_recovery_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_DisableWithRecoveryCode_Request::set_has_recovery_code() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_DisableWithRecoveryCode_Request::clear_has_recovery_code() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_DisableWithRecoveryCode_Request::clear_recovery_code() {
  recovery_code_ = 0u;
  clear_has_recovery_code();
}
::google::protobuf::uint32 CParental_DisableWithRecoveryCode_Request::recovery_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_DisableWithRecoveryCode_Request.recovery_code)
  return recovery_code_;
}
void CParental_DisableWithRecoveryCode_Request::set_recovery_code(::google::protobuf::uint32 value) {
  set_has_recovery_code();
  recovery_code_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParental_DisableWithRecoveryCode_Request.recovery_code)
}

// optional fixed64 steamid = 10;
bool CParental_DisableWithRecoveryCode_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CParental_DisableWithRecoveryCode_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
void CParental_DisableWithRecoveryCode_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CParental_DisableWithRecoveryCode_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
::google::protobuf::uint64 CParental_DisableWithRecoveryCode_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_DisableWithRecoveryCode_Request.steamid)
  return steamid_;
}
void CParental_DisableWithRecoveryCode_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CParental_DisableWithRecoveryCode_Request.steamid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_DisableWithRecoveryCode_Response::CParental_DisableWithRecoveryCode_Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_DisableWithRecoveryCode_Response)
}
CParental_DisableWithRecoveryCode_Response::CParental_DisableWithRecoveryCode_Response(const CParental_DisableWithRecoveryCode_Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_DisableWithRecoveryCode_Response)
}

void CParental_DisableWithRecoveryCode_Response::SharedCtor() {
  _cached_size_ = 0;
}

CParental_DisableWithRecoveryCode_Response::~CParental_DisableWithRecoveryCode_Response() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_DisableWithRecoveryCode_Response)
  SharedDtor();
}

void CParental_DisableWithRecoveryCode_Response::SharedDtor() {
}

void CParental_DisableWithRecoveryCode_Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_DisableWithRecoveryCode_Response::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_DisableWithRecoveryCode_Response& CParental_DisableWithRecoveryCode_Response::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_DisableWithRecoveryCode_Response* CParental_DisableWithRecoveryCode_Response::New(::google::protobuf::Arena* arena) const {
  CParental_DisableWithRecoveryCode_Response* n = new CParental_DisableWithRecoveryCode_Response;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_DisableWithRecoveryCode_Response::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_DisableWithRecoveryCode_Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_DisableWithRecoveryCode_Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_DisableWithRecoveryCode_Response)
  return false;
#undef DO_
}

void CParental_DisableWithRecoveryCode_Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_DisableWithRecoveryCode_Response)
}

::google::protobuf::uint8* CParental_DisableWithRecoveryCode_Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_DisableWithRecoveryCode_Response)
  return target;
}

size_t CParental_DisableWithRecoveryCode_Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_DisableWithRecoveryCode_Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_DisableWithRecoveryCode_Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_DisableWithRecoveryCode_Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_DisableWithRecoveryCode_Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_DisableWithRecoveryCode_Response)
    MergeFrom(*source);
  }
}

void CParental_DisableWithRecoveryCode_Response::MergeFrom(const CParental_DisableWithRecoveryCode_Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CParental_DisableWithRecoveryCode_Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_DisableWithRecoveryCode_Response::CopyFrom(const CParental_DisableWithRecoveryCode_Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_DisableWithRecoveryCode_Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_DisableWithRecoveryCode_Response::IsInitialized() const {
  return true;
}

void CParental_DisableWithRecoveryCode_Response::Swap(CParental_DisableWithRecoveryCode_Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_DisableWithRecoveryCode_Response::InternalSwap(CParental_DisableWithRecoveryCode_Response* other) {
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_DisableWithRecoveryCode_Response::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_DisableWithRecoveryCode_Response

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_ParentalSettingsChange_Notification::kSerializedSettingsFieldNumber;
const int CParental_ParentalSettingsChange_Notification::kSignatureFieldNumber;
const int CParental_ParentalSettingsChange_Notification::kPasswordFieldNumber;
const int CParental_ParentalSettingsChange_Notification::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_ParentalSettingsChange_Notification::CParental_ParentalSettingsChange_Notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_ParentalSettingsChange_Notification)
}
CParental_ParentalSettingsChange_Notification::CParental_ParentalSettingsChange_Notification(const CParental_ParentalSettingsChange_Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serialized_settings_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_serialized_settings()) {
    serialized_settings_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_settings_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_signature()) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_ParentalSettingsChange_Notification)
}

void CParental_ParentalSettingsChange_Notification::SharedCtor() {
  _cached_size_ = 0;
  serialized_settings_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CParental_ParentalSettingsChange_Notification::~CParental_ParentalSettingsChange_Notification() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_ParentalSettingsChange_Notification)
  SharedDtor();
}

void CParental_ParentalSettingsChange_Notification::SharedDtor() {
  serialized_settings_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_ParentalSettingsChange_Notification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_ParentalSettingsChange_Notification::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_ParentalSettingsChange_Notification& CParental_ParentalSettingsChange_Notification::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_ParentalSettingsChange_Notification* CParental_ParentalSettingsChange_Notification::New(::google::protobuf::Arena* arena) const {
  CParental_ParentalSettingsChange_Notification* n = new CParental_ParentalSettingsChange_Notification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_ParentalSettingsChange_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_serialized_settings()) {
      GOOGLE_DCHECK(!serialized_settings_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*serialized_settings_.UnsafeRawStringPointer())->clear();
    }
    if (has_signature()) {
      GOOGLE_DCHECK(!signature_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*signature_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_sessionid()) {
      GOOGLE_DCHECK(!sessionid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sessionid_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_ParentalSettingsChange_Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes serialized_settings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_serialized_settings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes signature = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ParentalSettingsChange_Notification.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sessionid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ParentalSettingsChange_Notification.sessionid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_ParentalSettingsChange_Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_ParentalSettingsChange_Notification)
  return false;
#undef DO_
}

void CParental_ParentalSettingsChange_Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes serialized_settings = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->serialized_settings(), output);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->signature(), output);
  }

  // optional string password = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalSettingsChange_Notification.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->password(), output);
  }

  // optional string sessionid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalSettingsChange_Notification.sessionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sessionid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_ParentalSettingsChange_Notification)
}

::google::protobuf::uint8* CParental_ParentalSettingsChange_Notification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional bytes serialized_settings = 1;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->serialized_settings(), target);
  }

  // optional bytes signature = 2;
  if (cached_has_bits & 0x00000002u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->signature(), target);
  }

  // optional string password = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalSettingsChange_Notification.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->password(), target);
  }

  // optional string sessionid = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalSettingsChange_Notification.sessionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sessionid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_ParentalSettingsChange_Notification)
  return target;
}

size_t CParental_ParentalSettingsChange_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional bytes serialized_settings = 1;
    if (has_serialized_settings()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->serialized_settings());
    }

    // optional bytes signature = 2;
    if (has_signature()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->signature());
    }

    // optional string password = 3;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string sessionid = 4;
    if (has_sessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sessionid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_ParentalSettingsChange_Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_ParentalSettingsChange_Notification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_ParentalSettingsChange_Notification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_ParentalSettingsChange_Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_ParentalSettingsChange_Notification)
    MergeFrom(*source);
  }
}

void CParental_ParentalSettingsChange_Notification::MergeFrom(const CParental_ParentalSettingsChange_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_serialized_settings();
      serialized_settings_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.serialized_settings_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_signature();
      signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_sessionid();
      sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
    }
  }
}

void CParental_ParentalSettingsChange_Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_ParentalSettingsChange_Notification::CopyFrom(const CParental_ParentalSettingsChange_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_ParentalSettingsChange_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ParentalSettingsChange_Notification::IsInitialized() const {
  return true;
}

void CParental_ParentalSettingsChange_Notification::Swap(CParental_ParentalSettingsChange_Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_ParentalSettingsChange_Notification::InternalSwap(CParental_ParentalSettingsChange_Notification* other) {
  serialized_settings_.Swap(&other->serialized_settings_);
  signature_.Swap(&other->signature_);
  password_.Swap(&other->password_);
  sessionid_.Swap(&other->sessionid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_ParentalSettingsChange_Notification::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_ParentalSettingsChange_Notification

// optional bytes serialized_settings = 1;
bool CParental_ParentalSettingsChange_Notification::has_serialized_settings() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_ParentalSettingsChange_Notification::set_has_serialized_settings() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_ParentalSettingsChange_Notification::clear_has_serialized_settings() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_ParentalSettingsChange_Notification::clear_serialized_settings() {
  serialized_settings_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_serialized_settings();
}
const ::std::string& CParental_ParentalSettingsChange_Notification::serialized_settings() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_ParentalSettingsChange_Notification.serialized_settings)
  return serialized_settings_.GetNoArena();
}
void CParental_ParentalSettingsChange_Notification::set_serialized_settings(const ::std::string& value) {
  set_has_serialized_settings();
  serialized_settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_ParentalSettingsChange_Notification.serialized_settings)
}
#if LANG_CXX11
void CParental_ParentalSettingsChange_Notification::set_serialized_settings(::std::string&& value) {
  set_has_serialized_settings();
  serialized_settings_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_ParentalSettingsChange_Notification.serialized_settings)
}
#endif
void CParental_ParentalSettingsChange_Notification::set_serialized_settings(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_serialized_settings();
  serialized_settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_ParentalSettingsChange_Notification.serialized_settings)
}
void CParental_ParentalSettingsChange_Notification::set_serialized_settings(const void* value, size_t size) {
  set_has_serialized_settings();
  serialized_settings_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_ParentalSettingsChange_Notification.serialized_settings)
}
::std::string* CParental_ParentalSettingsChange_Notification::mutable_serialized_settings() {
  set_has_serialized_settings();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_ParentalSettingsChange_Notification.serialized_settings)
  return serialized_settings_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_ParentalSettingsChange_Notification::release_serialized_settings() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_ParentalSettingsChange_Notification.serialized_settings)
  clear_has_serialized_settings();
  return serialized_settings_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_ParentalSettingsChange_Notification::set_allocated_serialized_settings(::std::string* serialized_settings) {
  if (serialized_settings != NULL) {
    set_has_serialized_settings();
  } else {
    clear_has_serialized_settings();
  }
  serialized_settings_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), serialized_settings);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_ParentalSettingsChange_Notification.serialized_settings)
}

// optional bytes signature = 2;
bool CParental_ParentalSettingsChange_Notification::has_signature() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CParental_ParentalSettingsChange_Notification::set_has_signature() {
  _has_bits_[0] |= 0x00000002u;
}
void CParental_ParentalSettingsChange_Notification::clear_has_signature() {
  _has_bits_[0] &= ~0x00000002u;
}
void CParental_ParentalSettingsChange_Notification::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_signature();
}
const ::std::string& CParental_ParentalSettingsChange_Notification::signature() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_ParentalSettingsChange_Notification.signature)
  return signature_.GetNoArena();
}
void CParental_ParentalSettingsChange_Notification::set_signature(const ::std::string& value) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_ParentalSettingsChange_Notification.signature)
}
#if LANG_CXX11
void CParental_ParentalSettingsChange_Notification::set_signature(::std::string&& value) {
  set_has_signature();
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_ParentalSettingsChange_Notification.signature)
}
#endif
void CParental_ParentalSettingsChange_Notification::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_ParentalSettingsChange_Notification.signature)
}
void CParental_ParentalSettingsChange_Notification::set_signature(const void* value, size_t size) {
  set_has_signature();
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_ParentalSettingsChange_Notification.signature)
}
::std::string* CParental_ParentalSettingsChange_Notification::mutable_signature() {
  set_has_signature();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_ParentalSettingsChange_Notification.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_ParentalSettingsChange_Notification::release_signature() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_ParentalSettingsChange_Notification.signature)
  clear_has_signature();
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_ParentalSettingsChange_Notification::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    set_has_signature();
  } else {
    clear_has_signature();
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_ParentalSettingsChange_Notification.signature)
}

// optional string password = 3;
bool CParental_ParentalSettingsChange_Notification::has_password() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CParental_ParentalSettingsChange_Notification::set_has_password() {
  _has_bits_[0] |= 0x00000004u;
}
void CParental_ParentalSettingsChange_Notification::clear_has_password() {
  _has_bits_[0] &= ~0x00000004u;
}
void CParental_ParentalSettingsChange_Notification::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CParental_ParentalSettingsChange_Notification::password() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_ParentalSettingsChange_Notification.password)
  return password_.GetNoArena();
}
void CParental_ParentalSettingsChange_Notification::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_ParentalSettingsChange_Notification.password)
}
#if LANG_CXX11
void CParental_ParentalSettingsChange_Notification::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_ParentalSettingsChange_Notification.password)
}
#endif
void CParental_ParentalSettingsChange_Notification::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_ParentalSettingsChange_Notification.password)
}
void CParental_ParentalSettingsChange_Notification::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_ParentalSettingsChange_Notification.password)
}
::std::string* CParental_ParentalSettingsChange_Notification::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_ParentalSettingsChange_Notification.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_ParentalSettingsChange_Notification::release_password() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_ParentalSettingsChange_Notification.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_ParentalSettingsChange_Notification::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_ParentalSettingsChange_Notification.password)
}

// optional string sessionid = 4;
bool CParental_ParentalSettingsChange_Notification::has_sessionid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CParental_ParentalSettingsChange_Notification::set_has_sessionid() {
  _has_bits_[0] |= 0x00000008u;
}
void CParental_ParentalSettingsChange_Notification::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000008u;
}
void CParental_ParentalSettingsChange_Notification::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionid();
}
const ::std::string& CParental_ParentalSettingsChange_Notification::sessionid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_ParentalSettingsChange_Notification.sessionid)
  return sessionid_.GetNoArena();
}
void CParental_ParentalSettingsChange_Notification::set_sessionid(const ::std::string& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_ParentalSettingsChange_Notification.sessionid)
}
#if LANG_CXX11
void CParental_ParentalSettingsChange_Notification::set_sessionid(::std::string&& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_ParentalSettingsChange_Notification.sessionid)
}
#endif
void CParental_ParentalSettingsChange_Notification::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_ParentalSettingsChange_Notification.sessionid)
}
void CParental_ParentalSettingsChange_Notification::set_sessionid(const char* value, size_t size) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_ParentalSettingsChange_Notification.sessionid)
}
::std::string* CParental_ParentalSettingsChange_Notification::mutable_sessionid() {
  set_has_sessionid();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_ParentalSettingsChange_Notification.sessionid)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_ParentalSettingsChange_Notification::release_sessionid() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_ParentalSettingsChange_Notification.sessionid)
  clear_has_sessionid();
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_ParentalSettingsChange_Notification::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    set_has_sessionid();
  } else {
    clear_has_sessionid();
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_ParentalSettingsChange_Notification.sessionid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_ParentalUnlock_Notification::kPasswordFieldNumber;
const int CParental_ParentalUnlock_Notification::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_ParentalUnlock_Notification::CParental_ParentalUnlock_Notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_ParentalUnlock_Notification)
}
CParental_ParentalUnlock_Notification::CParental_ParentalUnlock_Notification(const CParental_ParentalUnlock_Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_ParentalUnlock_Notification)
}

void CParental_ParentalUnlock_Notification::SharedCtor() {
  _cached_size_ = 0;
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CParental_ParentalUnlock_Notification::~CParental_ParentalUnlock_Notification() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_ParentalUnlock_Notification)
  SharedDtor();
}

void CParental_ParentalUnlock_Notification::SharedDtor() {
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_ParentalUnlock_Notification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_ParentalUnlock_Notification::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_ParentalUnlock_Notification& CParental_ParentalUnlock_Notification::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_ParentalUnlock_Notification* CParental_ParentalUnlock_Notification::New(::google::protobuf::Arena* arena) const {
  CParental_ParentalUnlock_Notification* n = new CParental_ParentalUnlock_Notification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_ParentalUnlock_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_ParentalUnlock_Notification)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
    if (has_sessionid()) {
      GOOGLE_DCHECK(!sessionid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sessionid_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_ParentalUnlock_Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_ParentalUnlock_Notification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string password = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ParentalUnlock_Notification.password");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sessionid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ParentalUnlock_Notification.sessionid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_ParentalUnlock_Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_ParentalUnlock_Notification)
  return false;
#undef DO_
}

void CParental_ParentalUnlock_Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_ParentalUnlock_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalUnlock_Notification.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->password(), output);
  }

  // optional string sessionid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalUnlock_Notification.sessionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sessionid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_ParentalUnlock_Notification)
}

::google::protobuf::uint8* CParental_ParentalUnlock_Notification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_ParentalUnlock_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string password = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalUnlock_Notification.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->password(), target);
  }

  // optional string sessionid = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalUnlock_Notification.sessionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sessionid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_ParentalUnlock_Notification)
  return target;
}

size_t CParental_ParentalUnlock_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_ParentalUnlock_Notification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string password = 1;
    if (has_password()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->password());
    }

    // optional string sessionid = 2;
    if (has_sessionid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sessionid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_ParentalUnlock_Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_ParentalUnlock_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_ParentalUnlock_Notification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_ParentalUnlock_Notification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_ParentalUnlock_Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_ParentalUnlock_Notification)
    MergeFrom(*source);
  }
}

void CParental_ParentalUnlock_Notification::MergeFrom(const CParental_ParentalUnlock_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_ParentalUnlock_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_sessionid();
      sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
    }
  }
}

void CParental_ParentalUnlock_Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_ParentalUnlock_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_ParentalUnlock_Notification::CopyFrom(const CParental_ParentalUnlock_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_ParentalUnlock_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ParentalUnlock_Notification::IsInitialized() const {
  return true;
}

void CParental_ParentalUnlock_Notification::Swap(CParental_ParentalUnlock_Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_ParentalUnlock_Notification::InternalSwap(CParental_ParentalUnlock_Notification* other) {
  password_.Swap(&other->password_);
  sessionid_.Swap(&other->sessionid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_ParentalUnlock_Notification::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_ParentalUnlock_Notification

// optional string password = 1;
bool CParental_ParentalUnlock_Notification::has_password() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_ParentalUnlock_Notification::set_has_password() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_ParentalUnlock_Notification::clear_has_password() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_ParentalUnlock_Notification::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& CParental_ParentalUnlock_Notification::password() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_ParentalUnlock_Notification.password)
  return password_.GetNoArena();
}
void CParental_ParentalUnlock_Notification::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_ParentalUnlock_Notification.password)
}
#if LANG_CXX11
void CParental_ParentalUnlock_Notification::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_ParentalUnlock_Notification.password)
}
#endif
void CParental_ParentalUnlock_Notification::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_ParentalUnlock_Notification.password)
}
void CParental_ParentalUnlock_Notification::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_ParentalUnlock_Notification.password)
}
::std::string* CParental_ParentalUnlock_Notification::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_ParentalUnlock_Notification.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_ParentalUnlock_Notification::release_password() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_ParentalUnlock_Notification.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_ParentalUnlock_Notification::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_ParentalUnlock_Notification.password)
}

// optional string sessionid = 2;
bool CParental_ParentalUnlock_Notification::has_sessionid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CParental_ParentalUnlock_Notification::set_has_sessionid() {
  _has_bits_[0] |= 0x00000002u;
}
void CParental_ParentalUnlock_Notification::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CParental_ParentalUnlock_Notification::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionid();
}
const ::std::string& CParental_ParentalUnlock_Notification::sessionid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_ParentalUnlock_Notification.sessionid)
  return sessionid_.GetNoArena();
}
void CParental_ParentalUnlock_Notification::set_sessionid(const ::std::string& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_ParentalUnlock_Notification.sessionid)
}
#if LANG_CXX11
void CParental_ParentalUnlock_Notification::set_sessionid(::std::string&& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_ParentalUnlock_Notification.sessionid)
}
#endif
void CParental_ParentalUnlock_Notification::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_ParentalUnlock_Notification.sessionid)
}
void CParental_ParentalUnlock_Notification::set_sessionid(const char* value, size_t size) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_ParentalUnlock_Notification.sessionid)
}
::std::string* CParental_ParentalUnlock_Notification::mutable_sessionid() {
  set_has_sessionid();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_ParentalUnlock_Notification.sessionid)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_ParentalUnlock_Notification::release_sessionid() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_ParentalUnlock_Notification.sessionid)
  clear_has_sessionid();
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_ParentalUnlock_Notification::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    set_has_sessionid();
  } else {
    clear_has_sessionid();
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_ParentalUnlock_Notification.sessionid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CParental_ParentalLock_Notification::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CParental_ParentalLock_Notification::CParental_ParentalLock_Notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.CParental_ParentalLock_Notification)
}
CParental_ParentalLock_Notification::CParental_ParentalLock_Notification(const CParental_ParentalLock_Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.steam.CParental_ParentalLock_Notification)
}

void CParental_ParentalLock_Notification::SharedCtor() {
  _cached_size_ = 0;
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CParental_ParentalLock_Notification::~CParental_ParentalLock_Notification() {
  // @@protoc_insertion_point(destructor:proto.steam.CParental_ParentalLock_Notification)
  SharedDtor();
}

void CParental_ParentalLock_Notification::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CParental_ParentalLock_Notification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CParental_ParentalLock_Notification::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CParental_ParentalLock_Notification& CParental_ParentalLock_Notification::default_instance() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::InitDefaults();
  return *internal_default_instance();
}

CParental_ParentalLock_Notification* CParental_ParentalLock_Notification::New(::google::protobuf::Arena* arena) const {
  CParental_ParentalLock_Notification* n = new CParental_ParentalLock_Notification;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CParental_ParentalLock_Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.CParental_ParentalLock_Notification)
  if (has_sessionid()) {
    GOOGLE_DCHECK(!sessionid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*sessionid_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CParental_ParentalLock_Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.CParental_ParentalLock_Notification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sessionid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "proto.steam.CParental_ParentalLock_Notification.sessionid");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.CParental_ParentalLock_Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.CParental_ParentalLock_Notification)
  return false;
#undef DO_
}

void CParental_ParentalLock_Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.CParental_ParentalLock_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sessionid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalLock_Notification.sessionid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sessionid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.CParental_ParentalLock_Notification)
}

::google::protobuf::uint8* CParental_ParentalLock_Notification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.CParental_ParentalLock_Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string sessionid = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "proto.steam.CParental_ParentalLock_Notification.sessionid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sessionid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.CParental_ParentalLock_Notification)
  return target;
}

size_t CParental_ParentalLock_Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.CParental_ParentalLock_Notification)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string sessionid = 1;
  if (has_sessionid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CParental_ParentalLock_Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.CParental_ParentalLock_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const CParental_ParentalLock_Notification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CParental_ParentalLock_Notification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.CParental_ParentalLock_Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.CParental_ParentalLock_Notification)
    MergeFrom(*source);
  }
}

void CParental_ParentalLock_Notification::MergeFrom(const CParental_ParentalLock_Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.CParental_ParentalLock_Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sessionid()) {
    set_has_sessionid();
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
}

void CParental_ParentalLock_Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.CParental_ParentalLock_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CParental_ParentalLock_Notification::CopyFrom(const CParental_ParentalLock_Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.CParental_ParentalLock_Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CParental_ParentalLock_Notification::IsInitialized() const {
  return true;
}

void CParental_ParentalLock_Notification::Swap(CParental_ParentalLock_Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CParental_ParentalLock_Notification::InternalSwap(CParental_ParentalLock_Notification* other) {
  sessionid_.Swap(&other->sessionid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CParental_ParentalLock_Notification::GetMetadata() const {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CParental_ParentalLock_Notification

// optional string sessionid = 1;
bool CParental_ParentalLock_Notification::has_sessionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CParental_ParentalLock_Notification::set_has_sessionid() {
  _has_bits_[0] |= 0x00000001u;
}
void CParental_ParentalLock_Notification::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CParental_ParentalLock_Notification::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionid();
}
const ::std::string& CParental_ParentalLock_Notification::sessionid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CParental_ParentalLock_Notification.sessionid)
  return sessionid_.GetNoArena();
}
void CParental_ParentalLock_Notification::set_sessionid(const ::std::string& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CParental_ParentalLock_Notification.sessionid)
}
#if LANG_CXX11
void CParental_ParentalLock_Notification::set_sessionid(::std::string&& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CParental_ParentalLock_Notification.sessionid)
}
#endif
void CParental_ParentalLock_Notification::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CParental_ParentalLock_Notification.sessionid)
}
void CParental_ParentalLock_Notification::set_sessionid(const char* value, size_t size) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CParental_ParentalLock_Notification.sessionid)
}
::std::string* CParental_ParentalLock_Notification::mutable_sessionid() {
  set_has_sessionid();
  // @@protoc_insertion_point(field_mutable:proto.steam.CParental_ParentalLock_Notification.sessionid)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CParental_ParentalLock_Notification::release_sessionid() {
  // @@protoc_insertion_point(field_release:proto.steam.CParental_ParentalLock_Notification.sessionid)
  clear_has_sessionid();
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CParental_ParentalLock_Notification::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    set_has_sessionid();
  } else {
    clear_has_sessionid();
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CParental_ParentalLock_Notification.sessionid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Parental::~Parental() {}

const ::google::protobuf::ServiceDescriptor* Parental::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_service_descriptors[0];
}

const ::google::protobuf::ServiceDescriptor* Parental::GetDescriptor() {
  return descriptor();
}

void Parental::EnableParentalSettings(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_EnableParentalSettings_Request*,
                         ::proto::steam::CParental_EnableParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method EnableParentalSettings() not implemented.");
  done->Run();
}

void Parental::DisableParentalSettings(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_DisableParentalSettings_Request*,
                         ::proto::steam::CParental_DisableParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DisableParentalSettings() not implemented.");
  done->Run();
}

void Parental::GetParentalSettings(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_GetParentalSettings_Request*,
                         ::proto::steam::CParental_GetParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetParentalSettings() not implemented.");
  done->Run();
}

void Parental::GetSignedParentalSettings(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_GetSignedParentalSettings_Request*,
                         ::proto::steam::CParental_GetSignedParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetSignedParentalSettings() not implemented.");
  done->Run();
}

void Parental::SetParentalSettings(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_SetParentalSettings_Request*,
                         ::proto::steam::CParental_SetParentalSettings_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SetParentalSettings() not implemented.");
  done->Run();
}

void Parental::ValidateToken(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_ValidateToken_Request*,
                         ::proto::steam::CParental_ValidateToken_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ValidateToken() not implemented.");
  done->Run();
}

void Parental::ValidatePassword(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_ValidatePassword_Request*,
                         ::proto::steam::CParental_ValidatePassword_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method ValidatePassword() not implemented.");
  done->Run();
}

void Parental::LockClient(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_LockClient_Request*,
                         ::proto::steam::CParental_LockClient_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method LockClient() not implemented.");
  done->Run();
}

void Parental::RequestRecoveryCode(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_RequestRecoveryCode_Request*,
                         ::proto::steam::CParental_RequestRecoveryCode_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RequestRecoveryCode() not implemented.");
  done->Run();
}

void Parental::DisableWithRecoveryCode(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_DisableWithRecoveryCode_Request*,
                         ::proto::steam::CParental_DisableWithRecoveryCode_Response*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method DisableWithRecoveryCode() not implemented.");
  done->Run();
}

void Parental::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_service_descriptors[0]);
  switch(method->index()) {
    case 0:
      EnableParentalSettings(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_EnableParentalSettings_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_EnableParentalSettings_Response*>(response),
             done);
      break;
    case 1:
      DisableParentalSettings(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_DisableParentalSettings_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_DisableParentalSettings_Response*>(response),
             done);
      break;
    case 2:
      GetParentalSettings(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_GetParentalSettings_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_GetParentalSettings_Response*>(response),
             done);
      break;
    case 3:
      GetSignedParentalSettings(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_GetSignedParentalSettings_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_GetSignedParentalSettings_Response*>(response),
             done);
      break;
    case 4:
      SetParentalSettings(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_SetParentalSettings_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_SetParentalSettings_Response*>(response),
             done);
      break;
    case 5:
      ValidateToken(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_ValidateToken_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_ValidateToken_Response*>(response),
             done);
      break;
    case 6:
      ValidatePassword(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_ValidatePassword_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_ValidatePassword_Response*>(response),
             done);
      break;
    case 7:
      LockClient(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_LockClient_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_LockClient_Response*>(response),
             done);
      break;
    case 8:
      RequestRecoveryCode(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_RequestRecoveryCode_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_RequestRecoveryCode_Response*>(response),
             done);
      break;
    case 9:
      DisableWithRecoveryCode(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_DisableWithRecoveryCode_Request*>(request),
             ::google::protobuf::down_cast< ::proto::steam::CParental_DisableWithRecoveryCode_Response*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& Parental::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::proto::steam::CParental_EnableParentalSettings_Request::default_instance();
    case 1:
      return ::proto::steam::CParental_DisableParentalSettings_Request::default_instance();
    case 2:
      return ::proto::steam::CParental_GetParentalSettings_Request::default_instance();
    case 3:
      return ::proto::steam::CParental_GetSignedParentalSettings_Request::default_instance();
    case 4:
      return ::proto::steam::CParental_SetParentalSettings_Request::default_instance();
    case 5:
      return ::proto::steam::CParental_ValidateToken_Request::default_instance();
    case 6:
      return ::proto::steam::CParental_ValidatePassword_Request::default_instance();
    case 7:
      return ::proto::steam::CParental_LockClient_Request::default_instance();
    case 8:
      return ::proto::steam::CParental_RequestRecoveryCode_Request::default_instance();
    case 9:
      return ::proto::steam::CParental_DisableWithRecoveryCode_Request::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& Parental::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::proto::steam::CParental_EnableParentalSettings_Response::default_instance();
    case 1:
      return ::proto::steam::CParental_DisableParentalSettings_Response::default_instance();
    case 2:
      return ::proto::steam::CParental_GetParentalSettings_Response::default_instance();
    case 3:
      return ::proto::steam::CParental_GetSignedParentalSettings_Response::default_instance();
    case 4:
      return ::proto::steam::CParental_SetParentalSettings_Response::default_instance();
    case 5:
      return ::proto::steam::CParental_ValidateToken_Response::default_instance();
    case 6:
      return ::proto::steam::CParental_ValidatePassword_Response::default_instance();
    case 7:
      return ::proto::steam::CParental_LockClient_Response::default_instance();
    case 8:
      return ::proto::steam::CParental_RequestRecoveryCode_Response::default_instance();
    case 9:
      return ::proto::steam::CParental_DisableWithRecoveryCode_Response::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

Parental_Stub::Parental_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
Parental_Stub::Parental_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
Parental_Stub::~Parental_Stub() {
  if (owns_channel_) delete channel_;
}

void Parental_Stub::EnableParentalSettings(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_EnableParentalSettings_Request* request,
                              ::proto::steam::CParental_EnableParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void Parental_Stub::DisableParentalSettings(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_DisableParentalSettings_Request* request,
                              ::proto::steam::CParental_DisableParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void Parental_Stub::GetParentalSettings(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_GetParentalSettings_Request* request,
                              ::proto::steam::CParental_GetParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void Parental_Stub::GetSignedParentalSettings(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_GetSignedParentalSettings_Request* request,
                              ::proto::steam::CParental_GetSignedParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}
void Parental_Stub::SetParentalSettings(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_SetParentalSettings_Request* request,
                              ::proto::steam::CParental_SetParentalSettings_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(4),
                       controller, request, response, done);
}
void Parental_Stub::ValidateToken(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_ValidateToken_Request* request,
                              ::proto::steam::CParental_ValidateToken_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(5),
                       controller, request, response, done);
}
void Parental_Stub::ValidatePassword(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_ValidatePassword_Request* request,
                              ::proto::steam::CParental_ValidatePassword_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(6),
                       controller, request, response, done);
}
void Parental_Stub::LockClient(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_LockClient_Request* request,
                              ::proto::steam::CParental_LockClient_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(7),
                       controller, request, response, done);
}
void Parental_Stub::RequestRecoveryCode(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_RequestRecoveryCode_Request* request,
                              ::proto::steam::CParental_RequestRecoveryCode_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(8),
                       controller, request, response, done);
}
void Parental_Stub::DisableWithRecoveryCode(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_DisableWithRecoveryCode_Request* request,
                              ::proto::steam::CParental_DisableWithRecoveryCode_Response* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(9),
                       controller, request, response, done);
}
// ===================================================================

ParentalClient::~ParentalClient() {}

const ::google::protobuf::ServiceDescriptor* ParentalClient::descriptor() {
  protobuf_steammessages_5fparental_2esteamclient_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_service_descriptors[1];
}

const ::google::protobuf::ServiceDescriptor* ParentalClient::GetDescriptor() {
  return descriptor();
}

void ParentalClient::NotifySettingsChange(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_ParentalSettingsChange_Notification*,
                         ::proto::steam::NoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method NotifySettingsChange() not implemented.");
  done->Run();
}

void ParentalClient::NotifyUnlock(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_ParentalUnlock_Notification*,
                         ::proto::steam::NoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method NotifyUnlock() not implemented.");
  done->Run();
}

void ParentalClient::NotifyLock(::google::protobuf::RpcController* controller,
                         const ::proto::steam::CParental_ParentalLock_Notification*,
                         ::proto::steam::NoResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method NotifyLock() not implemented.");
  done->Run();
}

void ParentalClient::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             ::google::protobuf::RpcController* controller,
                             const ::google::protobuf::Message* request,
                             ::google::protobuf::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), protobuf_steammessages_5fparental_2esteamclient_2eproto::file_level_service_descriptors[1]);
  switch(method->index()) {
    case 0:
      NotifySettingsChange(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_ParentalSettingsChange_Notification*>(request),
             ::google::protobuf::down_cast< ::proto::steam::NoResponse*>(response),
             done);
      break;
    case 1:
      NotifyUnlock(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_ParentalUnlock_Notification*>(request),
             ::google::protobuf::down_cast< ::proto::steam::NoResponse*>(response),
             done);
      break;
    case 2:
      NotifyLock(controller,
             ::google::protobuf::down_cast<const ::proto::steam::CParental_ParentalLock_Notification*>(request),
             ::google::protobuf::down_cast< ::proto::steam::NoResponse*>(response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& ParentalClient::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::proto::steam::CParental_ParentalSettingsChange_Notification::default_instance();
    case 1:
      return ::proto::steam::CParental_ParentalUnlock_Notification::default_instance();
    case 2:
      return ::proto::steam::CParental_ParentalLock_Notification::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::google::protobuf::Message& ParentalClient::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::proto::steam::NoResponse::default_instance();
    case 1:
      return ::proto::steam::NoResponse::default_instance();
    case 2:
      return ::proto::steam::NoResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::google::protobuf::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

ParentalClient_Stub::ParentalClient_Stub(::google::protobuf::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
ParentalClient_Stub::ParentalClient_Stub(
    ::google::protobuf::RpcChannel* channel,
    ::google::protobuf::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::google::protobuf::Service::STUB_OWNS_CHANNEL) {}
ParentalClient_Stub::~ParentalClient_Stub() {
  if (owns_channel_) delete channel_;
}

void ParentalClient_Stub::NotifySettingsChange(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_ParentalSettingsChange_Notification* request,
                              ::proto::steam::NoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void ParentalClient_Stub::NotifyUnlock(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_ParentalUnlock_Notification* request,
                              ::proto::steam::NoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void ParentalClient_Stub::NotifyLock(::google::protobuf::RpcController* controller,
                              const ::proto::steam::CParental_ParentalLock_Notification* request,
                              ::proto::steam::NoResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)

}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)
