// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: htmlmessages.proto

#ifndef PROTOBUF_htmlmessages_2eproto__INCLUDED
#define PROTOBUF_htmlmessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proto {
namespace steam {
class CCookie;
class CCookieDefaultTypeInternal;
extern CCookieDefaultTypeInternal _CCookie_default_instance_;
class CHTMLHeader;
class CHTMLHeaderDefaultTypeInternal;
extern CHTMLHeaderDefaultTypeInternal _CHTMLHeader_default_instance_;
class CHTMLPageSecurityInfo;
class CHTMLPageSecurityInfoDefaultTypeInternal;
extern CHTMLPageSecurityInfoDefaultTypeInternal _CHTMLPageSecurityInfo_default_instance_;
class CJSMethodArgument;
class CJSMethodArgumentDefaultTypeInternal;
extern CJSMethodArgumentDefaultTypeInternal _CJSMethodArgument_default_instance_;
class CMSgJumpListMRUApp;
class CMSgJumpListMRUAppDefaultTypeInternal;
extern CMSgJumpListMRUAppDefaultTypeInternal _CMSgJumpListMRUApp_default_instance_;
class CMsgAddHeader;
class CMsgAddHeaderDefaultTypeInternal;
extern CMsgAddHeaderDefaultTypeInternal _CMsgAddHeader_default_instance_;
class CMsgAuthedSteamDomains;
class CMsgAuthedSteamDomainsDefaultTypeInternal;
extern CMsgAuthedSteamDomainsDefaultTypeInternal _CMsgAuthedSteamDomains_default_instance_;
class CMsgBrowserCreate;
class CMsgBrowserCreateDefaultTypeInternal;
extern CMsgBrowserCreateDefaultTypeInternal _CMsgBrowserCreate_default_instance_;
class CMsgBrowserCreateResponse;
class CMsgBrowserCreateResponseDefaultTypeInternal;
extern CMsgBrowserCreateResponseDefaultTypeInternal _CMsgBrowserCreateResponse_default_instance_;
class CMsgBrowserErrorStrings;
class CMsgBrowserErrorStringsDefaultTypeInternal;
extern CMsgBrowserErrorStringsDefaultTypeInternal _CMsgBrowserErrorStrings_default_instance_;
class CMsgBrowserReady;
class CMsgBrowserReadyDefaultTypeInternal;
extern CMsgBrowserReadyDefaultTypeInternal _CMsgBrowserReady_default_instance_;
class CMsgBrowserRemove;
class CMsgBrowserRemoveDefaultTypeInternal;
extern CMsgBrowserRemoveDefaultTypeInternal _CMsgBrowserRemove_default_instance_;
class CMsgBrowserSize;
class CMsgBrowserSizeDefaultTypeInternal;
extern CMsgBrowserSizeDefaultTypeInternal _CMsgBrowserSize_default_instance_;
class CMsgBuildID;
class CMsgBuildIDDefaultTypeInternal;
extern CMsgBuildIDDefaultTypeInternal _CMsgBuildID_default_instance_;
class CMsgCanGoBackAndForward;
class CMsgCanGoBackAndForwardDefaultTypeInternal;
extern CMsgCanGoBackAndForwardDefaultTypeInternal _CMsgCanGoBackAndForward_default_instance_;
class CMsgClearAllCookies;
class CMsgClearAllCookiesDefaultTypeInternal;
extern CMsgClearAllCookiesDefaultTypeInternal _CMsgClearAllCookies_default_instance_;
class CMsgClearHistory;
class CMsgClearHistoryDefaultTypeInternal;
extern CMsgClearHistoryDefaultTypeInternal _CMsgClearHistory_default_instance_;
class CMsgClose;
class CMsgCloseDefaultTypeInternal;
extern CMsgCloseDefaultTypeInternal _CMsgClose_default_instance_;
class CMsgCloseDevTools;
class CMsgCloseDevToolsDefaultTypeInternal;
extern CMsgCloseDevToolsDefaultTypeInternal _CMsgCloseDevTools_default_instance_;
class CMsgCloseFullScreenFlashIfOpen;
class CMsgCloseFullScreenFlashIfOpenDefaultTypeInternal;
extern CMsgCloseFullScreenFlashIfOpenDefaultTypeInternal _CMsgCloseFullScreenFlashIfOpen_default_instance_;
class CMsgComboNeedsPaint;
class CMsgComboNeedsPaintDefaultTypeInternal;
extern CMsgComboNeedsPaintDefaultTypeInternal _CMsgComboNeedsPaint_default_instance_;
class CMsgCopy;
class CMsgCopyDefaultTypeInternal;
extern CMsgCopyDefaultTypeInternal _CMsgCopy_default_instance_;
class CMsgEnableSteamClientAPI;
class CMsgEnableSteamClientAPIDefaultTypeInternal;
extern CMsgEnableSteamClientAPIDefaultTypeInternal _CMsgEnableSteamClientAPI_default_instance_;
class CMsgExecuteJavaScript;
class CMsgExecuteJavaScriptDefaultTypeInternal;
extern CMsgExecuteJavaScriptDefaultTypeInternal _CMsgExecuteJavaScript_default_instance_;
class CMsgExitFullScreen;
class CMsgExitFullScreenDefaultTypeInternal;
extern CMsgExitFullScreenDefaultTypeInternal _CMsgExitFullScreen_default_instance_;
class CMsgFileLoadDialog;
class CMsgFileLoadDialogDefaultTypeInternal;
extern CMsgFileLoadDialogDefaultTypeInternal _CMsgFileLoadDialog_default_instance_;
class CMsgFileLoadDialogResponse;
class CMsgFileLoadDialogResponseDefaultTypeInternal;
extern CMsgFileLoadDialogResponseDefaultTypeInternal _CMsgFileLoadDialogResponse_default_instance_;
class CMsgFind;
class CMsgFindDefaultTypeInternal;
extern CMsgFindDefaultTypeInternal _CMsgFind_default_instance_;
class CMsgFinishedRequest;
class CMsgFinishedRequestDefaultTypeInternal;
extern CMsgFinishedRequestDefaultTypeInternal _CMsgFinishedRequest_default_instance_;
class CMsgFocusedNodeText;
class CMsgFocusedNodeTextDefaultTypeInternal;
extern CMsgFocusedNodeTextDefaultTypeInternal _CMsgFocusedNodeText_default_instance_;
class CMsgFocusedNodeTextResponse;
class CMsgFocusedNodeTextResponseDefaultTypeInternal;
extern CMsgFocusedNodeTextResponseDefaultTypeInternal _CMsgFocusedNodeTextResponse_default_instance_;
class CMsgFullRepaint;
class CMsgFullRepaintDefaultTypeInternal;
extern CMsgFullRepaintDefaultTypeInternal _CMsgFullRepaint_default_instance_;
class CMsgGetCookiesForURL;
class CMsgGetCookiesForURLDefaultTypeInternal;
extern CMsgGetCookiesForURLDefaultTypeInternal _CMsgGetCookiesForURL_default_instance_;
class CMsgGetCookiesForURLResponse;
class CMsgGetCookiesForURLResponseDefaultTypeInternal;
extern CMsgGetCookiesForURLResponseDefaultTypeInternal _CMsgGetCookiesForURLResponse_default_instance_;
class CMsgGetZoom;
class CMsgGetZoomDefaultTypeInternal;
extern CMsgGetZoomDefaultTypeInternal _CMsgGetZoom_default_instance_;
class CMsgGetZoomResponse;
class CMsgGetZoomResponseDefaultTypeInternal;
extern CMsgGetZoomResponseDefaultTypeInternal _CMsgGetZoomResponse_default_instance_;
class CMsgGoBack;
class CMsgGoBackDefaultTypeInternal;
extern CMsgGoBackDefaultTypeInternal _CMsgGoBack_default_instance_;
class CMsgGoForward;
class CMsgGoForwardDefaultTypeInternal;
extern CMsgGoForwardDefaultTypeInternal _CMsgGoForward_default_instance_;
class CMsgHidePopup;
class CMsgHidePopupDefaultTypeInternal;
extern CMsgHidePopupDefaultTypeInternal _CMsgHidePopup_default_instance_;
class CMsgHideToolTip;
class CMsgHideToolTipDefaultTypeInternal;
extern CMsgHideToolTipDefaultTypeInternal _CMsgHideToolTip_default_instance_;
class CMsgHorizontalScrollBarSize;
class CMsgHorizontalScrollBarSizeDefaultTypeInternal;
extern CMsgHorizontalScrollBarSizeDefaultTypeInternal _CMsgHorizontalScrollBarSize_default_instance_;
class CMsgHorizontalScrollBarSizeResponse;
class CMsgHorizontalScrollBarSizeResponseDefaultTypeInternal;
extern CMsgHorizontalScrollBarSizeResponseDefaultTypeInternal _CMsgHorizontalScrollBarSizeResponse_default_instance_;
class CMsgJSAlert;
class CMsgJSAlertDefaultTypeInternal;
extern CMsgJSAlertDefaultTypeInternal _CMsgJSAlert_default_instance_;
class CMsgJSConfirm;
class CMsgJSConfirmDefaultTypeInternal;
extern CMsgJSConfirmDefaultTypeInternal _CMsgJSConfirm_default_instance_;
class CMsgJSDialogResponse;
class CMsgJSDialogResponseDefaultTypeInternal;
extern CMsgJSDialogResponseDefaultTypeInternal _CMsgJSDialogResponse_default_instance_;
class CMsgJSExecuteCallback;
class CMsgJSExecuteCallbackDefaultTypeInternal;
extern CMsgJSExecuteCallbackDefaultTypeInternal _CMsgJSExecuteCallback_default_instance_;
class CMsgJSMethodCall;
class CMsgJSMethodCallDefaultTypeInternal;
extern CMsgJSMethodCallDefaultTypeInternal _CMsgJSMethodCall_default_instance_;
class CMsgJSRaiseException;
class CMsgJSRaiseExceptionDefaultTypeInternal;
extern CMsgJSRaiseExceptionDefaultTypeInternal _CMsgJSRaiseException_default_instance_;
class CMsgJSRegisterMethod;
class CMsgJSRegisterMethodDefaultTypeInternal;
extern CMsgJSRegisterMethodDefaultTypeInternal _CMsgJSRegisterMethod_default_instance_;
class CMsgJSReleaseCallback;
class CMsgJSReleaseCallbackDefaultTypeInternal;
extern CMsgJSReleaseCallbackDefaultTypeInternal _CMsgJSReleaseCallback_default_instance_;
class CMsgJSValue;
class CMsgJSValueDefaultTypeInternal;
extern CMsgJSValueDefaultTypeInternal _CMsgJSValue_default_instance_;
class CMsgJSValue_JSObjectProperty;
class CMsgJSValue_JSObjectPropertyDefaultTypeInternal;
extern CMsgJSValue_JSObjectPropertyDefaultTypeInternal _CMsgJSValue_JSObjectProperty_default_instance_;
class CMsgJumpListLink;
class CMsgJumpListLinkDefaultTypeInternal;
extern CMsgJumpListLinkDefaultTypeInternal _CMsgJumpListLink_default_instance_;
class CMsgKeyChar;
class CMsgKeyCharDefaultTypeInternal;
extern CMsgKeyCharDefaultTypeInternal _CMsgKeyChar_default_instance_;
class CMsgKeyDown;
class CMsgKeyDownDefaultTypeInternal;
extern CMsgKeyDownDefaultTypeInternal _CMsgKeyDown_default_instance_;
class CMsgKeyUp;
class CMsgKeyUpDefaultTypeInternal;
extern CMsgKeyUpDefaultTypeInternal _CMsgKeyUp_default_instance_;
class CMsgLinkAtPosition;
class CMsgLinkAtPositionDefaultTypeInternal;
extern CMsgLinkAtPositionDefaultTypeInternal _CMsgLinkAtPosition_default_instance_;
class CMsgLinkAtPositionResponse;
class CMsgLinkAtPositionResponseDefaultTypeInternal;
extern CMsgLinkAtPositionResponseDefaultTypeInternal _CMsgLinkAtPositionResponse_default_instance_;
class CMsgLoadLocalization;
class CMsgLoadLocalizationDefaultTypeInternal;
extern CMsgLoadLocalizationDefaultTypeInternal _CMsgLoadLocalization_default_instance_;
class CMsgLoadedRequest;
class CMsgLoadedRequestDefaultTypeInternal;
extern CMsgLoadedRequestDefaultTypeInternal _CMsgLoadedRequest_default_instance_;
class CMsgLoadingResource;
class CMsgLoadingResourceDefaultTypeInternal;
extern CMsgLoadingResourceDefaultTypeInternal _CMsgLoadingResource_default_instance_;
class CMsgMouseDblClick;
class CMsgMouseDblClickDefaultTypeInternal;
extern CMsgMouseDblClickDefaultTypeInternal _CMsgMouseDblClick_default_instance_;
class CMsgMouseDown;
class CMsgMouseDownDefaultTypeInternal;
extern CMsgMouseDownDefaultTypeInternal _CMsgMouseDown_default_instance_;
class CMsgMouseLeave;
class CMsgMouseLeaveDefaultTypeInternal;
extern CMsgMouseLeaveDefaultTypeInternal _CMsgMouseLeave_default_instance_;
class CMsgMouseMove;
class CMsgMouseMoveDefaultTypeInternal;
extern CMsgMouseMoveDefaultTypeInternal _CMsgMouseMove_default_instance_;
class CMsgMouseUp;
class CMsgMouseUpDefaultTypeInternal;
extern CMsgMouseUpDefaultTypeInternal _CMsgMouseUp_default_instance_;
class CMsgMouseWheel;
class CMsgMouseWheelDefaultTypeInternal;
extern CMsgMouseWheelDefaultTypeInternal _CMsgMouseWheel_default_instance_;
class CMsgNeedsPaint;
class CMsgNeedsPaintDefaultTypeInternal;
extern CMsgNeedsPaintDefaultTypeInternal _CMsgNeedsPaint_default_instance_;
class CMsgNodeHasFocus;
class CMsgNodeHasFocusDefaultTypeInternal;
extern CMsgNodeHasFocusDefaultTypeInternal _CMsgNodeHasFocus_default_instance_;
class CMsgOpenDevTools;
class CMsgOpenDevToolsDefaultTypeInternal;
extern CMsgOpenDevToolsDefaultTypeInternal _CMsgOpenDevTools_default_instance_;
class CMsgOpenNewTab;
class CMsgOpenNewTabDefaultTypeInternal;
extern CMsgOpenNewTabDefaultTypeInternal _CMsgOpenNewTab_default_instance_;
class CMsgOpenSteamURL;
class CMsgOpenSteamURLDefaultTypeInternal;
extern CMsgOpenSteamURLDefaultTypeInternal _CMsgOpenSteamURL_default_instance_;
class CMsgPageSecurity;
class CMsgPageSecurityDefaultTypeInternal;
extern CMsgPageSecurityDefaultTypeInternal _CMsgPageSecurity_default_instance_;
class CMsgPaste;
class CMsgPasteDefaultTypeInternal;
extern CMsgPasteDefaultTypeInternal _CMsgPaste_default_instance_;
class CMsgPauseFullScreenFlashMovieIfOpen;
class CMsgPauseFullScreenFlashMovieIfOpenDefaultTypeInternal;
extern CMsgPauseFullScreenFlashMovieIfOpenDefaultTypeInternal _CMsgPauseFullScreenFlashMovieIfOpen_default_instance_;
class CMsgPauseRepaint;
class CMsgPauseRepaintDefaultTypeInternal;
extern CMsgPauseRepaintDefaultTypeInternal _CMsgPauseRepaint_default_instance_;
class CMsgPopupHTMLWindow;
class CMsgPopupHTMLWindowDefaultTypeInternal;
extern CMsgPopupHTMLWindowDefaultTypeInternal _CMsgPopupHTMLWindow_default_instance_;
class CMsgPopupHTMLWindowResponse;
class CMsgPopupHTMLWindowResponseDefaultTypeInternal;
extern CMsgPopupHTMLWindowResponseDefaultTypeInternal _CMsgPopupHTMLWindowResponse_default_instance_;
class CMsgPostURL;
class CMsgPostURLDefaultTypeInternal;
extern CMsgPostURLDefaultTypeInternal _CMsgPostURL_default_instance_;
class CMsgReload;
class CMsgReloadDefaultTypeInternal;
extern CMsgReloadDefaultTypeInternal _CMsgReload_default_instance_;
class CMsgRequestFullScreen;
class CMsgRequestFullScreenDefaultTypeInternal;
extern CMsgRequestFullScreenDefaultTypeInternal _CMsgRequestFullScreen_default_instance_;
class CMsgRequestFullScreenResponse;
class CMsgRequestFullScreenResponseDefaultTypeInternal;
extern CMsgRequestFullScreenResponseDefaultTypeInternal _CMsgRequestFullScreenResponse_default_instance_;
class CMsgSavePageToJPEG;
class CMsgSavePageToJPEGDefaultTypeInternal;
extern CMsgSavePageToJPEGDefaultTypeInternal _CMsgSavePageToJPEG_default_instance_;
class CMsgSavePageToJPEGResponse;
class CMsgSavePageToJPEGResponseDefaultTypeInternal;
extern CMsgSavePageToJPEGResponseDefaultTypeInternal _CMsgSavePageToJPEGResponse_default_instance_;
class CMsgScalePageToValue;
class CMsgScalePageToValueDefaultTypeInternal;
extern CMsgScalePageToValueDefaultTypeInternal _CMsgScalePageToValue_default_instance_;
class CMsgScalePageToValueResponse;
class CMsgScalePageToValueResponseDefaultTypeInternal;
extern CMsgScalePageToValueResponseDefaultTypeInternal _CMsgScalePageToValueResponse_default_instance_;
class CMsgScreenDPI;
class CMsgScreenDPIDefaultTypeInternal;
extern CMsgScreenDPIDefaultTypeInternal _CMsgScreenDPI_default_instance_;
class CMsgScreenInformationChanged;
class CMsgScreenInformationChangedDefaultTypeInternal;
extern CMsgScreenInformationChangedDefaultTypeInternal _CMsgScreenInformationChanged_default_instance_;
class CMsgSearchResults;
class CMsgSearchResultsDefaultTypeInternal;
extern CMsgSearchResultsDefaultTypeInternal _CMsgSearchResults_default_instance_;
class CMsgSetCookie;
class CMsgSetCookieDefaultTypeInternal;
extern CMsgSetCookieDefaultTypeInternal _CMsgSetCookie_default_instance_;
class CMsgSetCursor;
class CMsgSetCursorDefaultTypeInternal;
extern CMsgSetCursorDefaultTypeInternal _CMsgSetCursor_default_instance_;
class CMsgSetFocus;
class CMsgSetFocusDefaultTypeInternal;
extern CMsgSetFocusDefaultTypeInternal _CMsgSetFocus_default_instance_;
class CMsgSetHTMLTitle;
class CMsgSetHTMLTitleDefaultTypeInternal;
extern CMsgSetHTMLTitleDefaultTypeInternal _CMsgSetHTMLTitle_default_instance_;
class CMsgSetHorizontalScroll;
class CMsgSetHorizontalScrollDefaultTypeInternal;
extern CMsgSetHorizontalScrollDefaultTypeInternal _CMsgSetHorizontalScroll_default_instance_;
class CMsgSetJumpList;
class CMsgSetJumpListDefaultTypeInternal;
extern CMsgSetJumpListDefaultTypeInternal _CMsgSetJumpList_default_instance_;
class CMsgSetLocalFileRequestMapping;
class CMsgSetLocalFileRequestMappingDefaultTypeInternal;
extern CMsgSetLocalFileRequestMappingDefaultTypeInternal _CMsgSetLocalFileRequestMapping_default_instance_;
class CMsgSetLocalFileRequestMapping_AdditionalRoute;
class CMsgSetLocalFileRequestMapping_AdditionalRouteDefaultTypeInternal;
extern CMsgSetLocalFileRequestMapping_AdditionalRouteDefaultTypeInternal _CMsgSetLocalFileRequestMapping_AdditionalRoute_default_instance_;
class CMsgSetSharedPaintBuffers;
class CMsgSetSharedPaintBuffersDefaultTypeInternal;
extern CMsgSetSharedPaintBuffersDefaultTypeInternal _CMsgSetSharedPaintBuffers_default_instance_;
class CMsgSetTargetFrameRate;
class CMsgSetTargetFrameRateDefaultTypeInternal;
extern CMsgSetTargetFrameRateDefaultTypeInternal _CMsgSetTargetFrameRate_default_instance_;
class CMsgSetVerticalScroll;
class CMsgSetVerticalScrollDefaultTypeInternal;
extern CMsgSetVerticalScrollDefaultTypeInternal _CMsgSetVerticalScroll_default_instance_;
class CMsgSetZoomLevel;
class CMsgSetZoomLevelDefaultTypeInternal;
extern CMsgSetZoomLevelDefaultTypeInternal _CMsgSetZoomLevel_default_instance_;
class CMsgShowPopup;
class CMsgShowPopupDefaultTypeInternal;
extern CMsgShowPopupDefaultTypeInternal _CMsgShowPopup_default_instance_;
class CMsgShowToolTip;
class CMsgShowToolTipDefaultTypeInternal;
extern CMsgShowToolTipDefaultTypeInternal _CMsgShowToolTip_default_instance_;
class CMsgSizePopup;
class CMsgSizePopupDefaultTypeInternal;
extern CMsgSizePopupDefaultTypeInternal _CMsgSizePopup_default_instance_;
class CMsgStartRequest;
class CMsgStartRequestDefaultTypeInternal;
extern CMsgStartRequestDefaultTypeInternal _CMsgStartRequest_default_instance_;
class CMsgStartRequestResponse;
class CMsgStartRequestResponseDefaultTypeInternal;
extern CMsgStartRequestResponseDefaultTypeInternal _CMsgStartRequestResponse_default_instance_;
class CMsgStatusText;
class CMsgStatusTextDefaultTypeInternal;
extern CMsgStatusTextDefaultTypeInternal _CMsgStatusText_default_instance_;
class CMsgSteamAuthCookiesSet;
class CMsgSteamAuthCookiesSetDefaultTypeInternal;
extern CMsgSteamAuthCookiesSetDefaultTypeInternal _CMsgSteamAuthCookiesSet_default_instance_;
class CMsgSteamAuthNeeded;
class CMsgSteamAuthNeededDefaultTypeInternal;
extern CMsgSteamAuthNeededDefaultTypeInternal _CMsgSteamAuthNeeded_default_instance_;
class CMsgStopFind;
class CMsgStopFindDefaultTypeInternal;
extern CMsgStopFindDefaultTypeInternal _CMsgStopFind_default_instance_;
class CMsgStopLoad;
class CMsgStopLoadDefaultTypeInternal;
extern CMsgStopLoadDefaultTypeInternal _CMsgStopLoad_default_instance_;
class CMsgURLChanged;
class CMsgURLChangedDefaultTypeInternal;
extern CMsgURLChangedDefaultTypeInternal _CMsgURLChanged_default_instance_;
class CMsgUnlockH264;
class CMsgUnlockH264DefaultTypeInternal;
extern CMsgUnlockH264DefaultTypeInternal _CMsgUnlockH264_default_instance_;
class CMsgUpdateToolTip;
class CMsgUpdateToolTipDefaultTypeInternal;
extern CMsgUpdateToolTipDefaultTypeInternal _CMsgUpdateToolTip_default_instance_;
class CMsgVerticalScrollBarSize;
class CMsgVerticalScrollBarSizeDefaultTypeInternal;
extern CMsgVerticalScrollBarSizeDefaultTypeInternal _CMsgVerticalScrollBarSize_default_instance_;
class CMsgVerticalScrollBarSizeResponse;
class CMsgVerticalScrollBarSizeResponseDefaultTypeInternal;
extern CMsgVerticalScrollBarSizeResponseDefaultTypeInternal _CMsgVerticalScrollBarSizeResponse_default_instance_;
class CMsgViewSource;
class CMsgViewSourceDefaultTypeInternal;
extern CMsgViewSourceDefaultTypeInternal _CMsgViewSource_default_instance_;
class CMsgZoomToElementAtPosition;
class CMsgZoomToElementAtPositionDefaultTypeInternal;
extern CMsgZoomToElementAtPositionDefaultTypeInternal _CMsgZoomToElementAtPosition_default_instance_;
class CMsgZoomToElementAtPositionResponse;
class CMsgZoomToElementAtPositionResponseDefaultTypeInternal;
extern CMsgZoomToElementAtPositionResponseDefaultTypeInternal _CMsgZoomToElementAtPositionResponse_default_instance_;
class CMsgZoomToFocusedElement;
class CMsgZoomToFocusedElementDefaultTypeInternal;
extern CMsgZoomToFocusedElementDefaultTypeInternal _CMsgZoomToFocusedElement_default_instance_;
}  // namespace steam
}  // namespace proto

namespace proto {
namespace steam {

namespace protobuf_htmlmessages_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_htmlmessages_2eproto

enum EJSRegisterMethodType {
  k_EJSRegisterMethodType_Invalid = 0,
  k_EJSRegisterMethodType_Function = 1,
  k_EJSRegisterMethodType_Callback = 2,
  k_EJSRegisterMethodType_Promise = 3
};
bool EJSRegisterMethodType_IsValid(int value);
const EJSRegisterMethodType EJSRegisterMethodType_MIN = k_EJSRegisterMethodType_Invalid;
const EJSRegisterMethodType EJSRegisterMethodType_MAX = k_EJSRegisterMethodType_Promise;
const int EJSRegisterMethodType_ARRAYSIZE = EJSRegisterMethodType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EJSRegisterMethodType_descriptor();
inline const ::std::string& EJSRegisterMethodType_Name(EJSRegisterMethodType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EJSRegisterMethodType_descriptor(), value);
}
inline bool EJSRegisterMethodType_Parse(
    const ::std::string& name, EJSRegisterMethodType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EJSRegisterMethodType>(
    EJSRegisterMethodType_descriptor(), name, value);
}
// ===================================================================

class CMsgKeyUp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgKeyUp) */ {
 public:
  CMsgKeyUp();
  virtual ~CMsgKeyUp();

  CMsgKeyUp(const CMsgKeyUp& from);

  inline CMsgKeyUp& operator=(const CMsgKeyUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgKeyUp& default_instance();

  static inline const CMsgKeyUp* internal_default_instance() {
    return reinterpret_cast<const CMsgKeyUp*>(
               &_CMsgKeyUp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMsgKeyUp* other);

  // implements Message ----------------------------------------------

  inline CMsgKeyUp* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgKeyUp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgKeyUp& from);
  void MergeFrom(const CMsgKeyUp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgKeyUp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 keyCode = 2;
  bool has_keycode() const;
  void clear_keycode();
  static const int kKeyCodeFieldNumber = 2;
  ::google::protobuf::uint32 keycode() const;
  void set_keycode(::google::protobuf::uint32 value);

  // optional uint32 modifiers = 3;
  bool has_modifiers() const;
  void clear_modifiers();
  static const int kModifiersFieldNumber = 3;
  ::google::protobuf::uint32 modifiers() const;
  void set_modifiers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgKeyUp)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_keycode();
  void clear_has_keycode();
  void set_has_modifiers();
  void clear_has_modifiers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 keycode_;
  ::google::protobuf::uint32 modifiers_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgKeyDown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgKeyDown) */ {
 public:
  CMsgKeyDown();
  virtual ~CMsgKeyDown();

  CMsgKeyDown(const CMsgKeyDown& from);

  inline CMsgKeyDown& operator=(const CMsgKeyDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgKeyDown& default_instance();

  static inline const CMsgKeyDown* internal_default_instance() {
    return reinterpret_cast<const CMsgKeyDown*>(
               &_CMsgKeyDown_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMsgKeyDown* other);

  // implements Message ----------------------------------------------

  inline CMsgKeyDown* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgKeyDown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgKeyDown& from);
  void MergeFrom(const CMsgKeyDown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgKeyDown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 keyCode = 2;
  bool has_keycode() const;
  void clear_keycode();
  static const int kKeyCodeFieldNumber = 2;
  ::google::protobuf::uint32 keycode() const;
  void set_keycode(::google::protobuf::uint32 value);

  // optional uint32 modifiers = 3;
  bool has_modifiers() const;
  void clear_modifiers();
  static const int kModifiersFieldNumber = 3;
  ::google::protobuf::uint32 modifiers() const;
  void set_modifiers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgKeyDown)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_keycode();
  void clear_has_keycode();
  void set_has_modifiers();
  void clear_has_modifiers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 keycode_;
  ::google::protobuf::uint32 modifiers_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgKeyChar : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgKeyChar) */ {
 public:
  CMsgKeyChar();
  virtual ~CMsgKeyChar();

  CMsgKeyChar(const CMsgKeyChar& from);

  inline CMsgKeyChar& operator=(const CMsgKeyChar& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgKeyChar& default_instance();

  static inline const CMsgKeyChar* internal_default_instance() {
    return reinterpret_cast<const CMsgKeyChar*>(
               &_CMsgKeyChar_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMsgKeyChar* other);

  // implements Message ----------------------------------------------

  inline CMsgKeyChar* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgKeyChar* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgKeyChar& from);
  void MergeFrom(const CMsgKeyChar& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgKeyChar* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 unichar = 2;
  bool has_unichar() const;
  void clear_unichar();
  static const int kUnicharFieldNumber = 2;
  ::google::protobuf::uint32 unichar() const;
  void set_unichar(::google::protobuf::uint32 value);

  // optional uint32 modifiers = 3;
  bool has_modifiers() const;
  void clear_modifiers();
  static const int kModifiersFieldNumber = 3;
  ::google::protobuf::uint32 modifiers() const;
  void set_modifiers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgKeyChar)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_unichar();
  void clear_has_unichar();
  void set_has_modifiers();
  void clear_has_modifiers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 unichar_;
  ::google::protobuf::uint32 modifiers_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgMouseDown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgMouseDown) */ {
 public:
  CMsgMouseDown();
  virtual ~CMsgMouseDown();

  CMsgMouseDown(const CMsgMouseDown& from);

  inline CMsgMouseDown& operator=(const CMsgMouseDown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMouseDown& default_instance();

  static inline const CMsgMouseDown* internal_default_instance() {
    return reinterpret_cast<const CMsgMouseDown*>(
               &_CMsgMouseDown_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMsgMouseDown* other);

  // implements Message ----------------------------------------------

  inline CMsgMouseDown* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMouseDown* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMouseDown& from);
  void MergeFrom(const CMsgMouseDown& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMouseDown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 mouse_button = 2;
  bool has_mouse_button() const;
  void clear_mouse_button();
  static const int kMouseButtonFieldNumber = 2;
  ::google::protobuf::uint32 mouse_button() const;
  void set_mouse_button(::google::protobuf::uint32 value);

  // optional uint32 modifiers = 3;
  bool has_modifiers() const;
  void clear_modifiers();
  static const int kModifiersFieldNumber = 3;
  ::google::protobuf::uint32 modifiers() const;
  void set_modifiers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgMouseDown)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_mouse_button();
  void clear_has_mouse_button();
  void set_has_modifiers();
  void clear_has_modifiers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 mouse_button_;
  ::google::protobuf::uint32 modifiers_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgMouseUp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgMouseUp) */ {
 public:
  CMsgMouseUp();
  virtual ~CMsgMouseUp();

  CMsgMouseUp(const CMsgMouseUp& from);

  inline CMsgMouseUp& operator=(const CMsgMouseUp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMouseUp& default_instance();

  static inline const CMsgMouseUp* internal_default_instance() {
    return reinterpret_cast<const CMsgMouseUp*>(
               &_CMsgMouseUp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CMsgMouseUp* other);

  // implements Message ----------------------------------------------

  inline CMsgMouseUp* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMouseUp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMouseUp& from);
  void MergeFrom(const CMsgMouseUp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMouseUp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 mouse_button = 2;
  bool has_mouse_button() const;
  void clear_mouse_button();
  static const int kMouseButtonFieldNumber = 2;
  ::google::protobuf::uint32 mouse_button() const;
  void set_mouse_button(::google::protobuf::uint32 value);

  // optional uint32 modifiers = 3;
  bool has_modifiers() const;
  void clear_modifiers();
  static const int kModifiersFieldNumber = 3;
  ::google::protobuf::uint32 modifiers() const;
  void set_modifiers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgMouseUp)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_mouse_button();
  void clear_has_mouse_button();
  void set_has_modifiers();
  void clear_has_modifiers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 mouse_button_;
  ::google::protobuf::uint32 modifiers_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgMouseDblClick : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgMouseDblClick) */ {
 public:
  CMsgMouseDblClick();
  virtual ~CMsgMouseDblClick();

  CMsgMouseDblClick(const CMsgMouseDblClick& from);

  inline CMsgMouseDblClick& operator=(const CMsgMouseDblClick& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMouseDblClick& default_instance();

  static inline const CMsgMouseDblClick* internal_default_instance() {
    return reinterpret_cast<const CMsgMouseDblClick*>(
               &_CMsgMouseDblClick_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CMsgMouseDblClick* other);

  // implements Message ----------------------------------------------

  inline CMsgMouseDblClick* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMouseDblClick* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMouseDblClick& from);
  void MergeFrom(const CMsgMouseDblClick& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMouseDblClick* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 mouse_button = 2;
  bool has_mouse_button() const;
  void clear_mouse_button();
  static const int kMouseButtonFieldNumber = 2;
  ::google::protobuf::uint32 mouse_button() const;
  void set_mouse_button(::google::protobuf::uint32 value);

  // optional uint32 modifiers = 3;
  bool has_modifiers() const;
  void clear_modifiers();
  static const int kModifiersFieldNumber = 3;
  ::google::protobuf::uint32 modifiers() const;
  void set_modifiers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgMouseDblClick)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_mouse_button();
  void clear_has_mouse_button();
  void set_has_modifiers();
  void clear_has_modifiers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 mouse_button_;
  ::google::protobuf::uint32 modifiers_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgMouseWheel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgMouseWheel) */ {
 public:
  CMsgMouseWheel();
  virtual ~CMsgMouseWheel();

  CMsgMouseWheel(const CMsgMouseWheel& from);

  inline CMsgMouseWheel& operator=(const CMsgMouseWheel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMouseWheel& default_instance();

  static inline const CMsgMouseWheel* internal_default_instance() {
    return reinterpret_cast<const CMsgMouseWheel*>(
               &_CMsgMouseWheel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CMsgMouseWheel* other);

  // implements Message ----------------------------------------------

  inline CMsgMouseWheel* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMouseWheel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMouseWheel& from);
  void MergeFrom(const CMsgMouseWheel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMouseWheel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional int32 delta = 2;
  bool has_delta() const;
  void clear_delta();
  static const int kDeltaFieldNumber = 2;
  ::google::protobuf::int32 delta() const;
  void set_delta(::google::protobuf::int32 value);

  // optional uint32 modifiers = 3;
  bool has_modifiers() const;
  void clear_modifiers();
  static const int kModifiersFieldNumber = 3;
  ::google::protobuf::uint32 modifiers() const;
  void set_modifiers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgMouseWheel)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_delta();
  void clear_has_delta();
  void set_has_modifiers();
  void clear_has_modifiers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::int32 delta_;
  ::google::protobuf::uint32 modifiers_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgMouseMove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgMouseMove) */ {
 public:
  CMsgMouseMove();
  virtual ~CMsgMouseMove();

  CMsgMouseMove(const CMsgMouseMove& from);

  inline CMsgMouseMove& operator=(const CMsgMouseMove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMouseMove& default_instance();

  static inline const CMsgMouseMove* internal_default_instance() {
    return reinterpret_cast<const CMsgMouseMove*>(
               &_CMsgMouseMove_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CMsgMouseMove* other);

  // implements Message ----------------------------------------------

  inline CMsgMouseMove* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMouseMove* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMouseMove& from);
  void MergeFrom(const CMsgMouseMove& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMouseMove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional int32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // optional int32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // optional uint32 modifiers = 4;
  bool has_modifiers() const;
  void clear_modifiers();
  static const int kModifiersFieldNumber = 4;
  ::google::protobuf::uint32 modifiers() const;
  void set_modifiers(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgMouseMove)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_modifiers();
  void clear_has_modifiers();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::uint32 modifiers_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgMouseLeave : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgMouseLeave) */ {
 public:
  CMsgMouseLeave();
  virtual ~CMsgMouseLeave();

  CMsgMouseLeave(const CMsgMouseLeave& from);

  inline CMsgMouseLeave& operator=(const CMsgMouseLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgMouseLeave& default_instance();

  static inline const CMsgMouseLeave* internal_default_instance() {
    return reinterpret_cast<const CMsgMouseLeave*>(
               &_CMsgMouseLeave_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CMsgMouseLeave* other);

  // implements Message ----------------------------------------------

  inline CMsgMouseLeave* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgMouseLeave* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgMouseLeave& from);
  void MergeFrom(const CMsgMouseLeave& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgMouseLeave* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgMouseLeave)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgBrowserCreate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgBrowserCreate) */ {
 public:
  CMsgBrowserCreate();
  virtual ~CMsgBrowserCreate();

  CMsgBrowserCreate(const CMsgBrowserCreate& from);

  inline CMsgBrowserCreate& operator=(const CMsgBrowserCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBrowserCreate& default_instance();

  static inline const CMsgBrowserCreate* internal_default_instance() {
    return reinterpret_cast<const CMsgBrowserCreate*>(
               &_CMsgBrowserCreate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CMsgBrowserCreate* other);

  // implements Message ----------------------------------------------

  inline CMsgBrowserCreate* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgBrowserCreate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgBrowserCreate& from);
  void MergeFrom(const CMsgBrowserCreate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgBrowserCreate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string useragent = 3;
  bool has_useragent() const;
  void clear_useragent();
  static const int kUseragentFieldNumber = 3;
  const ::std::string& useragent() const;
  void set_useragent(const ::std::string& value);
  #if LANG_CXX11
  void set_useragent(::std::string&& value);
  #endif
  void set_useragent(const char* value);
  void set_useragent(const char* value, size_t size);
  ::std::string* mutable_useragent();
  ::std::string* release_useragent();
  void set_allocated_useragent(::std::string* useragent);

  // optional string user_css = 5;
  bool has_user_css() const;
  void clear_user_css();
  static const int kUserCssFieldNumber = 5;
  const ::std::string& user_css() const;
  void set_user_css(const ::std::string& value);
  #if LANG_CXX11
  void set_user_css(::std::string&& value);
  #endif
  void set_user_css(const char* value);
  void set_user_css(const char* value, size_t size);
  ::std::string* mutable_user_css();
  ::std::string* release_user_css();
  void set_allocated_user_css(::std::string* user_css);

  // optional string window_icon = 11;
  bool has_window_icon() const;
  void clear_window_icon();
  static const int kWindowIconFieldNumber = 11;
  const ::std::string& window_icon() const;
  void set_window_icon(const ::std::string& value);
  #if LANG_CXX11
  void set_window_icon(::std::string&& value);
  #endif
  void set_window_icon(const char* value);
  void set_window_icon(const char* value, size_t size);
  ::std::string* mutable_window_icon();
  ::std::string* release_window_icon();
  void set_allocated_window_icon(::std::string* window_icon);

  // optional string vroverlay_key = 13;
  bool has_vroverlay_key() const;
  void clear_vroverlay_key();
  static const int kVroverlayKeyFieldNumber = 13;
  const ::std::string& vroverlay_key() const;
  void set_vroverlay_key(const ::std::string& value);
  #if LANG_CXX11
  void set_vroverlay_key(::std::string&& value);
  #endif
  void set_vroverlay_key(const char* value);
  void set_vroverlay_key(const char* value, size_t size);
  ::std::string* mutable_vroverlay_key();
  ::std::string* release_vroverlay_key();
  void set_allocated_vroverlay_key(::std::string* vroverlay_key);

  // optional uint32 request_id = 1;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 1;
  ::google::protobuf::uint32 request_id() const;
  void set_request_id(::google::protobuf::uint32 value);

  // optional float dpi_scaling = 7;
  bool has_dpi_scaling() const;
  void clear_dpi_scaling();
  static const int kDpiScalingFieldNumber = 7;
  float dpi_scaling() const;
  void set_dpi_scaling(float value);

  // optional uint32 initial_width = 9 [default = 0];
  bool has_initial_width() const;
  void clear_initial_width();
  static const int kInitialWidthFieldNumber = 9;
  ::google::protobuf::uint32 initial_width() const;
  void set_initial_width(::google::protobuf::uint32 value);

  // optional bool native_dropdowns = 6;
  bool has_native_dropdowns() const;
  void clear_native_dropdowns();
  static const int kNativeDropdownsFieldNumber = 6;
  bool native_dropdowns() const;
  void set_native_dropdowns(bool value);

  // optional bool borderless = 12 [default = false];
  bool has_borderless() const;
  void clear_borderless();
  static const int kBorderlessFieldNumber = 12;
  bool borderless() const;
  void set_borderless(bool value);

  // optional uint32 initial_height = 10 [default = 0];
  bool has_initial_height() const;
  void clear_initial_height();
  static const int kInitialHeightFieldNumber = 10;
  ::google::protobuf::uint32 initial_height() const;
  void set_initial_height(::google::protobuf::uint32 value);

  // optional uint32 browser_type = 14 [default = 0];
  bool has_browser_type() const;
  void clear_browser_type();
  static const int kBrowserTypeFieldNumber = 14;
  ::google::protobuf::uint32 browser_type() const;
  void set_browser_type(::google::protobuf::uint32 value);

  // optional bool offscreen = 8 [default = true];
  bool has_offscreen() const;
  void clear_offscreen();
  static const int kOffscreenFieldNumber = 8;
  bool offscreen() const;
  void set_offscreen(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgBrowserCreate)
 private:
  void set_has_request_id();
  void clear_has_request_id();
  void set_has_useragent();
  void clear_has_useragent();
  void set_has_user_css();
  void clear_has_user_css();
  void set_has_native_dropdowns();
  void clear_has_native_dropdowns();
  void set_has_dpi_scaling();
  void clear_has_dpi_scaling();
  void set_has_offscreen();
  void clear_has_offscreen();
  void set_has_initial_width();
  void clear_has_initial_width();
  void set_has_initial_height();
  void clear_has_initial_height();
  void set_has_window_icon();
  void clear_has_window_icon();
  void set_has_borderless();
  void clear_has_borderless();
  void set_has_vroverlay_key();
  void clear_has_vroverlay_key();
  void set_has_browser_type();
  void clear_has_browser_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr useragent_;
  ::google::protobuf::internal::ArenaStringPtr user_css_;
  ::google::protobuf::internal::ArenaStringPtr window_icon_;
  ::google::protobuf::internal::ArenaStringPtr vroverlay_key_;
  ::google::protobuf::uint32 request_id_;
  float dpi_scaling_;
  ::google::protobuf::uint32 initial_width_;
  bool native_dropdowns_;
  bool borderless_;
  ::google::protobuf::uint32 initial_height_;
  ::google::protobuf::uint32 browser_type_;
  bool offscreen_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgBrowserCreateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgBrowserCreateResponse) */ {
 public:
  CMsgBrowserCreateResponse();
  virtual ~CMsgBrowserCreateResponse();

  CMsgBrowserCreateResponse(const CMsgBrowserCreateResponse& from);

  inline CMsgBrowserCreateResponse& operator=(const CMsgBrowserCreateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBrowserCreateResponse& default_instance();

  static inline const CMsgBrowserCreateResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgBrowserCreateResponse*>(
               &_CMsgBrowserCreateResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CMsgBrowserCreateResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgBrowserCreateResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgBrowserCreateResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgBrowserCreateResponse& from);
  void MergeFrom(const CMsgBrowserCreateResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgBrowserCreateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 request_id = 2;
  bool has_request_id() const;
  void clear_request_id();
  static const int kRequestIdFieldNumber = 2;
  ::google::protobuf::uint32 request_id() const;
  void set_request_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgBrowserCreateResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_request_id();
  void clear_has_request_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 request_id_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgBrowserRemove : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgBrowserRemove) */ {
 public:
  CMsgBrowserRemove();
  virtual ~CMsgBrowserRemove();

  CMsgBrowserRemove(const CMsgBrowserRemove& from);

  inline CMsgBrowserRemove& operator=(const CMsgBrowserRemove& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBrowserRemove& default_instance();

  static inline const CMsgBrowserRemove* internal_default_instance() {
    return reinterpret_cast<const CMsgBrowserRemove*>(
               &_CMsgBrowserRemove_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CMsgBrowserRemove* other);

  // implements Message ----------------------------------------------

  inline CMsgBrowserRemove* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgBrowserRemove* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgBrowserRemove& from);
  void MergeFrom(const CMsgBrowserRemove& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgBrowserRemove* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgBrowserRemove)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetLocalFileRequestMapping_AdditionalRoute : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute) */ {
 public:
  CMsgSetLocalFileRequestMapping_AdditionalRoute();
  virtual ~CMsgSetLocalFileRequestMapping_AdditionalRoute();

  CMsgSetLocalFileRequestMapping_AdditionalRoute(const CMsgSetLocalFileRequestMapping_AdditionalRoute& from);

  inline CMsgSetLocalFileRequestMapping_AdditionalRoute& operator=(const CMsgSetLocalFileRequestMapping_AdditionalRoute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetLocalFileRequestMapping_AdditionalRoute& default_instance();

  static inline const CMsgSetLocalFileRequestMapping_AdditionalRoute* internal_default_instance() {
    return reinterpret_cast<const CMsgSetLocalFileRequestMapping_AdditionalRoute*>(
               &_CMsgSetLocalFileRequestMapping_AdditionalRoute_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CMsgSetLocalFileRequestMapping_AdditionalRoute* other);

  // implements Message ----------------------------------------------

  inline CMsgSetLocalFileRequestMapping_AdditionalRoute* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetLocalFileRequestMapping_AdditionalRoute* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetLocalFileRequestMapping_AdditionalRoute& from);
  void MergeFrom(const CMsgSetLocalFileRequestMapping_AdditionalRoute& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetLocalFileRequestMapping_AdditionalRoute* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string relative_url = 1;
  bool has_relative_url() const;
  void clear_relative_url();
  static const int kRelativeUrlFieldNumber = 1;
  const ::std::string& relative_url() const;
  void set_relative_url(const ::std::string& value);
  #if LANG_CXX11
  void set_relative_url(::std::string&& value);
  #endif
  void set_relative_url(const char* value);
  void set_relative_url(const char* value, size_t size);
  ::std::string* mutable_relative_url();
  ::std::string* release_relative_url();
  void set_allocated_relative_url(::std::string* relative_url);

  // optional string local_path = 2;
  bool has_local_path() const;
  void clear_local_path();
  static const int kLocalPathFieldNumber = 2;
  const ::std::string& local_path() const;
  void set_local_path(const ::std::string& value);
  #if LANG_CXX11
  void set_local_path(::std::string&& value);
  #endif
  void set_local_path(const char* value);
  void set_local_path(const char* value, size_t size);
  ::std::string* mutable_local_path();
  ::std::string* release_local_path();
  void set_allocated_local_path(::std::string* local_path);

  // optional string allowed_extensions = 3;
  bool has_allowed_extensions() const;
  void clear_allowed_extensions();
  static const int kAllowedExtensionsFieldNumber = 3;
  const ::std::string& allowed_extensions() const;
  void set_allowed_extensions(const ::std::string& value);
  #if LANG_CXX11
  void set_allowed_extensions(::std::string&& value);
  #endif
  void set_allowed_extensions(const char* value);
  void set_allowed_extensions(const char* value, size_t size);
  ::std::string* mutable_allowed_extensions();
  ::std::string* release_allowed_extensions();
  void set_allocated_allowed_extensions(::std::string* allowed_extensions);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute)
 private:
  void set_has_relative_url();
  void clear_has_relative_url();
  void set_has_local_path();
  void clear_has_local_path();
  void set_has_allowed_extensions();
  void clear_has_allowed_extensions();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr relative_url_;
  ::google::protobuf::internal::ArenaStringPtr local_path_;
  ::google::protobuf::internal::ArenaStringPtr allowed_extensions_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetLocalFileRequestMapping : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSetLocalFileRequestMapping) */ {
 public:
  CMsgSetLocalFileRequestMapping();
  virtual ~CMsgSetLocalFileRequestMapping();

  CMsgSetLocalFileRequestMapping(const CMsgSetLocalFileRequestMapping& from);

  inline CMsgSetLocalFileRequestMapping& operator=(const CMsgSetLocalFileRequestMapping& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetLocalFileRequestMapping& default_instance();

  static inline const CMsgSetLocalFileRequestMapping* internal_default_instance() {
    return reinterpret_cast<const CMsgSetLocalFileRequestMapping*>(
               &_CMsgSetLocalFileRequestMapping_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CMsgSetLocalFileRequestMapping* other);

  // implements Message ----------------------------------------------

  inline CMsgSetLocalFileRequestMapping* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetLocalFileRequestMapping* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetLocalFileRequestMapping& from);
  void MergeFrom(const CMsgSetLocalFileRequestMapping& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetLocalFileRequestMapping* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgSetLocalFileRequestMapping_AdditionalRoute AdditionalRoute;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute routes = 4;
  int routes_size() const;
  void clear_routes();
  static const int kRoutesFieldNumber = 4;
  const ::proto::steam::CMsgSetLocalFileRequestMapping_AdditionalRoute& routes(int index) const;
  ::proto::steam::CMsgSetLocalFileRequestMapping_AdditionalRoute* mutable_routes(int index);
  ::proto::steam::CMsgSetLocalFileRequestMapping_AdditionalRoute* add_routes();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgSetLocalFileRequestMapping_AdditionalRoute >*
      mutable_routes();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgSetLocalFileRequestMapping_AdditionalRoute >&
      routes() const;

  // optional string request_url = 2;
  bool has_request_url() const;
  void clear_request_url();
  static const int kRequestUrlFieldNumber = 2;
  const ::std::string& request_url() const;
  void set_request_url(const ::std::string& value);
  #if LANG_CXX11
  void set_request_url(::std::string&& value);
  #endif
  void set_request_url(const char* value);
  void set_request_url(const char* value, size_t size);
  ::std::string* mutable_request_url();
  ::std::string* release_request_url();
  void set_allocated_request_url(::std::string* request_url);

  // optional string default_local_path = 3;
  bool has_default_local_path() const;
  void clear_default_local_path();
  static const int kDefaultLocalPathFieldNumber = 3;
  const ::std::string& default_local_path() const;
  void set_default_local_path(const ::std::string& value);
  #if LANG_CXX11
  void set_default_local_path(::std::string&& value);
  #endif
  void set_default_local_path(const char* value);
  void set_default_local_path(const char* value, size_t size);
  ::std::string* mutable_default_local_path();
  ::std::string* release_default_local_path();
  void set_allocated_default_local_path(::std::string* default_local_path);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSetLocalFileRequestMapping)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_request_url();
  void clear_has_request_url();
  void set_has_default_local_path();
  void clear_has_default_local_path();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgSetLocalFileRequestMapping_AdditionalRoute > routes_;
  ::google::protobuf::internal::ArenaStringPtr request_url_;
  ::google::protobuf::internal::ArenaStringPtr default_local_path_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgBrowserErrorStrings : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgBrowserErrorStrings) */ {
 public:
  CMsgBrowserErrorStrings();
  virtual ~CMsgBrowserErrorStrings();

  CMsgBrowserErrorStrings(const CMsgBrowserErrorStrings& from);

  inline CMsgBrowserErrorStrings& operator=(const CMsgBrowserErrorStrings& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBrowserErrorStrings& default_instance();

  static inline const CMsgBrowserErrorStrings* internal_default_instance() {
    return reinterpret_cast<const CMsgBrowserErrorStrings*>(
               &_CMsgBrowserErrorStrings_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(CMsgBrowserErrorStrings* other);

  // implements Message ----------------------------------------------

  inline CMsgBrowserErrorStrings* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgBrowserErrorStrings* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgBrowserErrorStrings& from);
  void MergeFrom(const CMsgBrowserErrorStrings& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgBrowserErrorStrings* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string header = 3;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 3;
  const ::std::string& header() const;
  void set_header(const ::std::string& value);
  #if LANG_CXX11
  void set_header(::std::string&& value);
  #endif
  void set_header(const char* value);
  void set_header(const char* value, size_t size);
  ::std::string* mutable_header();
  ::std::string* release_header();
  void set_allocated_header(::std::string* header);

  // optional string cache_miss = 4;
  bool has_cache_miss() const;
  void clear_cache_miss();
  static const int kCacheMissFieldNumber = 4;
  const ::std::string& cache_miss() const;
  void set_cache_miss(const ::std::string& value);
  #if LANG_CXX11
  void set_cache_miss(::std::string&& value);
  #endif
  void set_cache_miss(const char* value);
  void set_cache_miss(const char* value, size_t size);
  ::std::string* mutable_cache_miss();
  ::std::string* release_cache_miss();
  void set_allocated_cache_miss(::std::string* cache_miss);

  // optional string bad_url = 5;
  bool has_bad_url() const;
  void clear_bad_url();
  static const int kBadUrlFieldNumber = 5;
  const ::std::string& bad_url() const;
  void set_bad_url(const ::std::string& value);
  #if LANG_CXX11
  void set_bad_url(::std::string&& value);
  #endif
  void set_bad_url(const char* value);
  void set_bad_url(const char* value, size_t size);
  ::std::string* mutable_bad_url();
  ::std::string* release_bad_url();
  void set_allocated_bad_url(::std::string* bad_url);

  // optional string connection_problem = 6;
  bool has_connection_problem() const;
  void clear_connection_problem();
  static const int kConnectionProblemFieldNumber = 6;
  const ::std::string& connection_problem() const;
  void set_connection_problem(const ::std::string& value);
  #if LANG_CXX11
  void set_connection_problem(::std::string&& value);
  #endif
  void set_connection_problem(const char* value);
  void set_connection_problem(const char* value, size_t size);
  ::std::string* mutable_connection_problem();
  ::std::string* release_connection_problem();
  void set_allocated_connection_problem(::std::string* connection_problem);

  // optional string proxy_problem = 7;
  bool has_proxy_problem() const;
  void clear_proxy_problem();
  static const int kProxyProblemFieldNumber = 7;
  const ::std::string& proxy_problem() const;
  void set_proxy_problem(const ::std::string& value);
  #if LANG_CXX11
  void set_proxy_problem(::std::string&& value);
  #endif
  void set_proxy_problem(const char* value);
  void set_proxy_problem(const char* value, size_t size);
  ::std::string* mutable_proxy_problem();
  ::std::string* release_proxy_problem();
  void set_allocated_proxy_problem(::std::string* proxy_problem);

  // optional string unknown = 8;
  bool has_unknown() const;
  void clear_unknown();
  static const int kUnknownFieldNumber = 8;
  const ::std::string& unknown() const;
  void set_unknown(const ::std::string& value);
  #if LANG_CXX11
  void set_unknown(::std::string&& value);
  #endif
  void set_unknown(const char* value);
  void set_unknown(const char* value, size_t size);
  ::std::string* mutable_unknown();
  ::std::string* release_unknown();
  void set_allocated_unknown(::std::string* unknown);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgBrowserErrorStrings)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_title();
  void clear_has_title();
  void set_has_header();
  void clear_has_header();
  void set_has_cache_miss();
  void clear_has_cache_miss();
  void set_has_bad_url();
  void clear_has_bad_url();
  void set_has_connection_problem();
  void clear_has_connection_problem();
  void set_has_proxy_problem();
  void clear_has_proxy_problem();
  void set_has_unknown();
  void clear_has_unknown();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr header_;
  ::google::protobuf::internal::ArenaStringPtr cache_miss_;
  ::google::protobuf::internal::ArenaStringPtr bad_url_;
  ::google::protobuf::internal::ArenaStringPtr connection_problem_;
  ::google::protobuf::internal::ArenaStringPtr proxy_problem_;
  ::google::protobuf::internal::ArenaStringPtr unknown_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgBrowserSize : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgBrowserSize) */ {
 public:
  CMsgBrowserSize();
  virtual ~CMsgBrowserSize();

  CMsgBrowserSize(const CMsgBrowserSize& from);

  inline CMsgBrowserSize& operator=(const CMsgBrowserSize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBrowserSize& default_instance();

  static inline const CMsgBrowserSize* internal_default_instance() {
    return reinterpret_cast<const CMsgBrowserSize*>(
               &_CMsgBrowserSize_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CMsgBrowserSize* other);

  // implements Message ----------------------------------------------

  inline CMsgBrowserSize* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgBrowserSize* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgBrowserSize& from);
  void MergeFrom(const CMsgBrowserSize& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgBrowserSize* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 width = 2;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 2;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // optional uint32 height = 3;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 3;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgBrowserSize)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPostURL : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgPostURL) */ {
 public:
  CMsgPostURL();
  virtual ~CMsgPostURL();

  CMsgPostURL(const CMsgPostURL& from);

  inline CMsgPostURL& operator=(const CMsgPostURL& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPostURL& default_instance();

  static inline const CMsgPostURL* internal_default_instance() {
    return reinterpret_cast<const CMsgPostURL*>(
               &_CMsgPostURL_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CMsgPostURL* other);

  // implements Message ----------------------------------------------

  inline CMsgPostURL* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPostURL* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPostURL& from);
  void MergeFrom(const CMsgPostURL& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPostURL* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string post = 3;
  bool has_post() const;
  void clear_post();
  static const int kPostFieldNumber = 3;
  const ::std::string& post() const;
  void set_post(const ::std::string& value);
  #if LANG_CXX11
  void set_post(::std::string&& value);
  #endif
  void set_post(const char* value);
  void set_post(const char* value, size_t size);
  ::std::string* mutable_post();
  ::std::string* release_post();
  void set_allocated_post(::std::string* post);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 pageserial = 4;
  bool has_pageserial() const;
  void clear_pageserial();
  static const int kPageserialFieldNumber = 4;
  ::google::protobuf::uint32 pageserial() const;
  void set_pageserial(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgPostURL)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_url();
  void clear_has_url();
  void set_has_post();
  void clear_has_post();
  void set_has_pageserial();
  void clear_has_pageserial();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr post_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 pageserial_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgAddHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgAddHeader) */ {
 public:
  CMsgAddHeader();
  virtual ~CMsgAddHeader();

  CMsgAddHeader(const CMsgAddHeader& from);

  inline CMsgAddHeader& operator=(const CMsgAddHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAddHeader& default_instance();

  static inline const CMsgAddHeader* internal_default_instance() {
    return reinterpret_cast<const CMsgAddHeader*>(
               &_CMsgAddHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(CMsgAddHeader* other);

  // implements Message ----------------------------------------------

  inline CMsgAddHeader* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgAddHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgAddHeader& from);
  void MergeFrom(const CMsgAddHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgAddHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 2;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 3;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 3;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgAddHeader)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgStopLoad : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgStopLoad) */ {
 public:
  CMsgStopLoad();
  virtual ~CMsgStopLoad();

  CMsgStopLoad(const CMsgStopLoad& from);

  inline CMsgStopLoad& operator=(const CMsgStopLoad& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgStopLoad& default_instance();

  static inline const CMsgStopLoad* internal_default_instance() {
    return reinterpret_cast<const CMsgStopLoad*>(
               &_CMsgStopLoad_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CMsgStopLoad* other);

  // implements Message ----------------------------------------------

  inline CMsgStopLoad* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgStopLoad* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgStopLoad& from);
  void MergeFrom(const CMsgStopLoad& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgStopLoad* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgStopLoad)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgReload : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgReload) */ {
 public:
  CMsgReload();
  virtual ~CMsgReload();

  CMsgReload(const CMsgReload& from);

  inline CMsgReload& operator=(const CMsgReload& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgReload& default_instance();

  static inline const CMsgReload* internal_default_instance() {
    return reinterpret_cast<const CMsgReload*>(
               &_CMsgReload_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(CMsgReload* other);

  // implements Message ----------------------------------------------

  inline CMsgReload* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgReload* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgReload& from);
  void MergeFrom(const CMsgReload& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgReload* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgReload)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGoForward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgGoForward) */ {
 public:
  CMsgGoForward();
  virtual ~CMsgGoForward();

  CMsgGoForward(const CMsgGoForward& from);

  inline CMsgGoForward& operator=(const CMsgGoForward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGoForward& default_instance();

  static inline const CMsgGoForward* internal_default_instance() {
    return reinterpret_cast<const CMsgGoForward*>(
               &_CMsgGoForward_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(CMsgGoForward* other);

  // implements Message ----------------------------------------------

  inline CMsgGoForward* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGoForward* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGoForward& from);
  void MergeFrom(const CMsgGoForward& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGoForward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgGoForward)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGoBack : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgGoBack) */ {
 public:
  CMsgGoBack();
  virtual ~CMsgGoBack();

  CMsgGoBack(const CMsgGoBack& from);

  inline CMsgGoBack& operator=(const CMsgGoBack& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGoBack& default_instance();

  static inline const CMsgGoBack* internal_default_instance() {
    return reinterpret_cast<const CMsgGoBack*>(
               &_CMsgGoBack_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(CMsgGoBack* other);

  // implements Message ----------------------------------------------

  inline CMsgGoBack* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGoBack* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGoBack& from);
  void MergeFrom(const CMsgGoBack& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGoBack* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgGoBack)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClearHistory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClearHistory) */ {
 public:
  CMsgClearHistory();
  virtual ~CMsgClearHistory();

  CMsgClearHistory(const CMsgClearHistory& from);

  inline CMsgClearHistory& operator=(const CMsgClearHistory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClearHistory& default_instance();

  static inline const CMsgClearHistory* internal_default_instance() {
    return reinterpret_cast<const CMsgClearHistory*>(
               &_CMsgClearHistory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(CMsgClearHistory* other);

  // implements Message ----------------------------------------------

  inline CMsgClearHistory* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClearHistory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClearHistory& from);
  void MergeFrom(const CMsgClearHistory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClearHistory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClearHistory)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgCopy : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgCopy) */ {
 public:
  CMsgCopy();
  virtual ~CMsgCopy();

  CMsgCopy(const CMsgCopy& from);

  inline CMsgCopy& operator=(const CMsgCopy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCopy& default_instance();

  static inline const CMsgCopy* internal_default_instance() {
    return reinterpret_cast<const CMsgCopy*>(
               &_CMsgCopy_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(CMsgCopy* other);

  // implements Message ----------------------------------------------

  inline CMsgCopy* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgCopy* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgCopy& from);
  void MergeFrom(const CMsgCopy& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgCopy* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgCopy)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPaste : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgPaste) */ {
 public:
  CMsgPaste();
  virtual ~CMsgPaste();

  CMsgPaste(const CMsgPaste& from);

  inline CMsgPaste& operator=(const CMsgPaste& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPaste& default_instance();

  static inline const CMsgPaste* internal_default_instance() {
    return reinterpret_cast<const CMsgPaste*>(
               &_CMsgPaste_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(CMsgPaste* other);

  // implements Message ----------------------------------------------

  inline CMsgPaste* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPaste* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPaste& from);
  void MergeFrom(const CMsgPaste& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPaste* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgPaste)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgExecuteJavaScript : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgExecuteJavaScript) */ {
 public:
  CMsgExecuteJavaScript();
  virtual ~CMsgExecuteJavaScript();

  CMsgExecuteJavaScript(const CMsgExecuteJavaScript& from);

  inline CMsgExecuteJavaScript& operator=(const CMsgExecuteJavaScript& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgExecuteJavaScript& default_instance();

  static inline const CMsgExecuteJavaScript* internal_default_instance() {
    return reinterpret_cast<const CMsgExecuteJavaScript*>(
               &_CMsgExecuteJavaScript_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(CMsgExecuteJavaScript* other);

  // implements Message ----------------------------------------------

  inline CMsgExecuteJavaScript* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgExecuteJavaScript* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgExecuteJavaScript& from);
  void MergeFrom(const CMsgExecuteJavaScript& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgExecuteJavaScript* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string script = 2;
  bool has_script() const;
  void clear_script();
  static const int kScriptFieldNumber = 2;
  const ::std::string& script() const;
  void set_script(const ::std::string& value);
  #if LANG_CXX11
  void set_script(::std::string&& value);
  #endif
  void set_script(const char* value);
  void set_script(const char* value, size_t size);
  ::std::string* mutable_script();
  ::std::string* release_script();
  void set_allocated_script(::std::string* script);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgExecuteJavaScript)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_script();
  void clear_has_script();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr script_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetFocus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSetFocus) */ {
 public:
  CMsgSetFocus();
  virtual ~CMsgSetFocus();

  CMsgSetFocus(const CMsgSetFocus& from);

  inline CMsgSetFocus& operator=(const CMsgSetFocus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetFocus& default_instance();

  static inline const CMsgSetFocus* internal_default_instance() {
    return reinterpret_cast<const CMsgSetFocus*>(
               &_CMsgSetFocus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(CMsgSetFocus* other);

  // implements Message ----------------------------------------------

  inline CMsgSetFocus* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetFocus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetFocus& from);
  void MergeFrom(const CMsgSetFocus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetFocus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional bool focus = 2;
  bool has_focus() const;
  void clear_focus();
  static const int kFocusFieldNumber = 2;
  bool focus() const;
  void set_focus(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSetFocus)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_focus();
  void clear_has_focus();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  bool focus_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgHorizontalScrollBarSize : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgHorizontalScrollBarSize) */ {
 public:
  CMsgHorizontalScrollBarSize();
  virtual ~CMsgHorizontalScrollBarSize();

  CMsgHorizontalScrollBarSize(const CMsgHorizontalScrollBarSize& from);

  inline CMsgHorizontalScrollBarSize& operator=(const CMsgHorizontalScrollBarSize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHorizontalScrollBarSize& default_instance();

  static inline const CMsgHorizontalScrollBarSize* internal_default_instance() {
    return reinterpret_cast<const CMsgHorizontalScrollBarSize*>(
               &_CMsgHorizontalScrollBarSize_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(CMsgHorizontalScrollBarSize* other);

  // implements Message ----------------------------------------------

  inline CMsgHorizontalScrollBarSize* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgHorizontalScrollBarSize* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgHorizontalScrollBarSize& from);
  void MergeFrom(const CMsgHorizontalScrollBarSize& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgHorizontalScrollBarSize* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgHorizontalScrollBarSize)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgHorizontalScrollBarSizeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgHorizontalScrollBarSizeResponse) */ {
 public:
  CMsgHorizontalScrollBarSizeResponse();
  virtual ~CMsgHorizontalScrollBarSizeResponse();

  CMsgHorizontalScrollBarSizeResponse(const CMsgHorizontalScrollBarSizeResponse& from);

  inline CMsgHorizontalScrollBarSizeResponse& operator=(const CMsgHorizontalScrollBarSizeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHorizontalScrollBarSizeResponse& default_instance();

  static inline const CMsgHorizontalScrollBarSizeResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgHorizontalScrollBarSizeResponse*>(
               &_CMsgHorizontalScrollBarSizeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(CMsgHorizontalScrollBarSizeResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgHorizontalScrollBarSizeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgHorizontalScrollBarSizeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgHorizontalScrollBarSizeResponse& from);
  void MergeFrom(const CMsgHorizontalScrollBarSizeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgHorizontalScrollBarSizeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 scroll_max = 6;
  bool has_scroll_max() const;
  void clear_scroll_max();
  static const int kScrollMaxFieldNumber = 6;
  ::google::protobuf::uint32 scroll_max() const;
  void set_scroll_max(::google::protobuf::uint32 value);

  // optional uint32 scroll = 7;
  bool has_scroll() const;
  void clear_scroll();
  static const int kScrollFieldNumber = 7;
  ::google::protobuf::uint32 scroll() const;
  void set_scroll(::google::protobuf::uint32 value);

  // optional float zoom = 8;
  bool has_zoom() const;
  void clear_zoom();
  static const int kZoomFieldNumber = 8;
  float zoom() const;
  void set_zoom(float value);

  // optional bool visible = 9;
  bool has_visible() const;
  void clear_visible();
  static const int kVisibleFieldNumber = 9;
  bool visible() const;
  void set_visible(bool value);

  // optional uint32 page_size = 10;
  bool has_page_size() const;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 10;
  ::google::protobuf::uint32 page_size() const;
  void set_page_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgHorizontalScrollBarSizeResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_scroll_max();
  void clear_has_scroll_max();
  void set_has_scroll();
  void clear_has_scroll();
  void set_has_zoom();
  void clear_has_zoom();
  void set_has_visible();
  void clear_has_visible();
  void set_has_page_size();
  void clear_has_page_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 scroll_max_;
  ::google::protobuf::uint32 scroll_;
  float zoom_;
  bool visible_;
  ::google::protobuf::uint32 page_size_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgVerticalScrollBarSize : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgVerticalScrollBarSize) */ {
 public:
  CMsgVerticalScrollBarSize();
  virtual ~CMsgVerticalScrollBarSize();

  CMsgVerticalScrollBarSize(const CMsgVerticalScrollBarSize& from);

  inline CMsgVerticalScrollBarSize& operator=(const CMsgVerticalScrollBarSize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgVerticalScrollBarSize& default_instance();

  static inline const CMsgVerticalScrollBarSize* internal_default_instance() {
    return reinterpret_cast<const CMsgVerticalScrollBarSize*>(
               &_CMsgVerticalScrollBarSize_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(CMsgVerticalScrollBarSize* other);

  // implements Message ----------------------------------------------

  inline CMsgVerticalScrollBarSize* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgVerticalScrollBarSize* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgVerticalScrollBarSize& from);
  void MergeFrom(const CMsgVerticalScrollBarSize& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgVerticalScrollBarSize* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgVerticalScrollBarSize)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgVerticalScrollBarSizeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgVerticalScrollBarSizeResponse) */ {
 public:
  CMsgVerticalScrollBarSizeResponse();
  virtual ~CMsgVerticalScrollBarSizeResponse();

  CMsgVerticalScrollBarSizeResponse(const CMsgVerticalScrollBarSizeResponse& from);

  inline CMsgVerticalScrollBarSizeResponse& operator=(const CMsgVerticalScrollBarSizeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgVerticalScrollBarSizeResponse& default_instance();

  static inline const CMsgVerticalScrollBarSizeResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgVerticalScrollBarSizeResponse*>(
               &_CMsgVerticalScrollBarSizeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(CMsgVerticalScrollBarSizeResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgVerticalScrollBarSizeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgVerticalScrollBarSizeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgVerticalScrollBarSizeResponse& from);
  void MergeFrom(const CMsgVerticalScrollBarSizeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgVerticalScrollBarSizeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 scroll_max = 6;
  bool has_scroll_max() const;
  void clear_scroll_max();
  static const int kScrollMaxFieldNumber = 6;
  ::google::protobuf::uint32 scroll_max() const;
  void set_scroll_max(::google::protobuf::uint32 value);

  // optional uint32 scroll = 7;
  bool has_scroll() const;
  void clear_scroll();
  static const int kScrollFieldNumber = 7;
  ::google::protobuf::uint32 scroll() const;
  void set_scroll(::google::protobuf::uint32 value);

  // optional float zoom = 8;
  bool has_zoom() const;
  void clear_zoom();
  static const int kZoomFieldNumber = 8;
  float zoom() const;
  void set_zoom(float value);

  // optional bool visible = 9;
  bool has_visible() const;
  void clear_visible();
  static const int kVisibleFieldNumber = 9;
  bool visible() const;
  void set_visible(bool value);

  // optional uint32 page_size = 10;
  bool has_page_size() const;
  void clear_page_size();
  static const int kPageSizeFieldNumber = 10;
  ::google::protobuf::uint32 page_size() const;
  void set_page_size(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgVerticalScrollBarSizeResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_scroll_max();
  void clear_has_scroll_max();
  void set_has_scroll();
  void clear_has_scroll();
  void set_has_zoom();
  void clear_has_zoom();
  void set_has_visible();
  void clear_has_visible();
  void set_has_page_size();
  void clear_has_page_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 scroll_max_;
  ::google::protobuf::uint32 scroll_;
  float zoom_;
  bool visible_;
  ::google::protobuf::uint32 page_size_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgFind : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgFind) */ {
 public:
  CMsgFind();
  virtual ~CMsgFind();

  CMsgFind(const CMsgFind& from);

  inline CMsgFind& operator=(const CMsgFind& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFind& default_instance();

  static inline const CMsgFind* internal_default_instance() {
    return reinterpret_cast<const CMsgFind*>(
               &_CMsgFind_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(CMsgFind* other);

  // implements Message ----------------------------------------------

  inline CMsgFind* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgFind* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgFind& from);
  void MergeFrom(const CMsgFind& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgFind* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string find = 2;
  bool has_find() const;
  void clear_find();
  static const int kFindFieldNumber = 2;
  const ::std::string& find() const;
  void set_find(const ::std::string& value);
  #if LANG_CXX11
  void set_find(::std::string&& value);
  #endif
  void set_find(const char* value);
  void set_find(const char* value, size_t size);
  ::std::string* mutable_find();
  ::std::string* release_find();
  void set_allocated_find(::std::string* find);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional bool infind = 3;
  bool has_infind() const;
  void clear_infind();
  static const int kInfindFieldNumber = 3;
  bool infind() const;
  void set_infind(bool value);

  // optional bool reverse = 4 [default = false];
  bool has_reverse() const;
  void clear_reverse();
  static const int kReverseFieldNumber = 4;
  bool reverse() const;
  void set_reverse(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgFind)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_find();
  void clear_has_find();
  void set_has_infind();
  void clear_has_infind();
  void set_has_reverse();
  void clear_has_reverse();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr find_;
  ::google::protobuf::uint32 browser_handle_;
  bool infind_;
  bool reverse_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgStopFind : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgStopFind) */ {
 public:
  CMsgStopFind();
  virtual ~CMsgStopFind();

  CMsgStopFind(const CMsgStopFind& from);

  inline CMsgStopFind& operator=(const CMsgStopFind& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgStopFind& default_instance();

  static inline const CMsgStopFind* internal_default_instance() {
    return reinterpret_cast<const CMsgStopFind*>(
               &_CMsgStopFind_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(CMsgStopFind* other);

  // implements Message ----------------------------------------------

  inline CMsgStopFind* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgStopFind* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgStopFind& from);
  void MergeFrom(const CMsgStopFind& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgStopFind* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgStopFind)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetHorizontalScroll : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSetHorizontalScroll) */ {
 public:
  CMsgSetHorizontalScroll();
  virtual ~CMsgSetHorizontalScroll();

  CMsgSetHorizontalScroll(const CMsgSetHorizontalScroll& from);

  inline CMsgSetHorizontalScroll& operator=(const CMsgSetHorizontalScroll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetHorizontalScroll& default_instance();

  static inline const CMsgSetHorizontalScroll* internal_default_instance() {
    return reinterpret_cast<const CMsgSetHorizontalScroll*>(
               &_CMsgSetHorizontalScroll_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(CMsgSetHorizontalScroll* other);

  // implements Message ----------------------------------------------

  inline CMsgSetHorizontalScroll* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetHorizontalScroll* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetHorizontalScroll& from);
  void MergeFrom(const CMsgSetHorizontalScroll& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetHorizontalScroll* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 scroll = 2;
  bool has_scroll() const;
  void clear_scroll();
  static const int kScrollFieldNumber = 2;
  ::google::protobuf::uint32 scroll() const;
  void set_scroll(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSetHorizontalScroll)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_scroll();
  void clear_has_scroll();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 scroll_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetVerticalScroll : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSetVerticalScroll) */ {
 public:
  CMsgSetVerticalScroll();
  virtual ~CMsgSetVerticalScroll();

  CMsgSetVerticalScroll(const CMsgSetVerticalScroll& from);

  inline CMsgSetVerticalScroll& operator=(const CMsgSetVerticalScroll& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetVerticalScroll& default_instance();

  static inline const CMsgSetVerticalScroll* internal_default_instance() {
    return reinterpret_cast<const CMsgSetVerticalScroll*>(
               &_CMsgSetVerticalScroll_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(CMsgSetVerticalScroll* other);

  // implements Message ----------------------------------------------

  inline CMsgSetVerticalScroll* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetVerticalScroll* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetVerticalScroll& from);
  void MergeFrom(const CMsgSetVerticalScroll& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetVerticalScroll* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 scroll = 2;
  bool has_scroll() const;
  void clear_scroll();
  static const int kScrollFieldNumber = 2;
  ::google::protobuf::uint32 scroll() const;
  void set_scroll(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSetVerticalScroll)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_scroll();
  void clear_has_scroll();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 scroll_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetZoomLevel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSetZoomLevel) */ {
 public:
  CMsgSetZoomLevel();
  virtual ~CMsgSetZoomLevel();

  CMsgSetZoomLevel(const CMsgSetZoomLevel& from);

  inline CMsgSetZoomLevel& operator=(const CMsgSetZoomLevel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetZoomLevel& default_instance();

  static inline const CMsgSetZoomLevel* internal_default_instance() {
    return reinterpret_cast<const CMsgSetZoomLevel*>(
               &_CMsgSetZoomLevel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(CMsgSetZoomLevel* other);

  // implements Message ----------------------------------------------

  inline CMsgSetZoomLevel* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetZoomLevel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetZoomLevel& from);
  void MergeFrom(const CMsgSetZoomLevel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetZoomLevel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 zoom = 2;
  bool has_zoom() const;
  void clear_zoom();
  static const int kZoomFieldNumber = 2;
  ::google::protobuf::uint32 zoom() const;
  void set_zoom(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSetZoomLevel)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_zoom();
  void clear_has_zoom();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 zoom_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgViewSource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgViewSource) */ {
 public:
  CMsgViewSource();
  virtual ~CMsgViewSource();

  CMsgViewSource(const CMsgViewSource& from);

  inline CMsgViewSource& operator=(const CMsgViewSource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgViewSource& default_instance();

  static inline const CMsgViewSource* internal_default_instance() {
    return reinterpret_cast<const CMsgViewSource*>(
               &_CMsgViewSource_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(CMsgViewSource* other);

  // implements Message ----------------------------------------------

  inline CMsgViewSource* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgViewSource* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgViewSource& from);
  void MergeFrom(const CMsgViewSource& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgViewSource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgViewSource)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgBrowserReady : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgBrowserReady) */ {
 public:
  CMsgBrowserReady();
  virtual ~CMsgBrowserReady();

  CMsgBrowserReady(const CMsgBrowserReady& from);

  inline CMsgBrowserReady& operator=(const CMsgBrowserReady& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBrowserReady& default_instance();

  static inline const CMsgBrowserReady* internal_default_instance() {
    return reinterpret_cast<const CMsgBrowserReady*>(
               &_CMsgBrowserReady_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(CMsgBrowserReady* other);

  // implements Message ----------------------------------------------

  inline CMsgBrowserReady* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgBrowserReady* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgBrowserReady& from);
  void MergeFrom(const CMsgBrowserReady& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgBrowserReady* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string vr_overlay_key = 2;
  bool has_vr_overlay_key() const;
  void clear_vr_overlay_key();
  static const int kVrOverlayKeyFieldNumber = 2;
  const ::std::string& vr_overlay_key() const;
  void set_vr_overlay_key(const ::std::string& value);
  #if LANG_CXX11
  void set_vr_overlay_key(::std::string&& value);
  #endif
  void set_vr_overlay_key(const char* value);
  void set_vr_overlay_key(const char* value, size_t size);
  ::std::string* mutable_vr_overlay_key();
  ::std::string* release_vr_overlay_key();
  void set_allocated_vr_overlay_key(::std::string* vr_overlay_key);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgBrowserReady)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_vr_overlay_key();
  void clear_has_vr_overlay_key();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr vr_overlay_key_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgURLChanged : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgURLChanged) */ {
 public:
  CMsgURLChanged();
  virtual ~CMsgURLChanged();

  CMsgURLChanged(const CMsgURLChanged& from);

  inline CMsgURLChanged& operator=(const CMsgURLChanged& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgURLChanged& default_instance();

  static inline const CMsgURLChanged* internal_default_instance() {
    return reinterpret_cast<const CMsgURLChanged*>(
               &_CMsgURLChanged_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(CMsgURLChanged* other);

  // implements Message ----------------------------------------------

  inline CMsgURLChanged* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgURLChanged* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgURLChanged& from);
  void MergeFrom(const CMsgURLChanged& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgURLChanged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string postData = 3;
  bool has_postdata() const;
  void clear_postdata();
  static const int kPostDataFieldNumber = 3;
  const ::std::string& postdata() const;
  void set_postdata(const ::std::string& value);
  #if LANG_CXX11
  void set_postdata(::std::string&& value);
  #endif
  void set_postdata(const char* value);
  void set_postdata(const char* value, size_t size);
  ::std::string* mutable_postdata();
  ::std::string* release_postdata();
  void set_allocated_postdata(::std::string* postdata);

  // optional string pagetitle = 5;
  bool has_pagetitle() const;
  void clear_pagetitle();
  static const int kPagetitleFieldNumber = 5;
  const ::std::string& pagetitle() const;
  void set_pagetitle(const ::std::string& value);
  #if LANG_CXX11
  void set_pagetitle(::std::string&& value);
  #endif
  void set_pagetitle(const char* value);
  void set_pagetitle(const char* value, size_t size);
  ::std::string* mutable_pagetitle();
  ::std::string* release_pagetitle();
  void set_allocated_pagetitle(::std::string* pagetitle);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional bool bIsRedirect = 4;
  bool has_bisredirect() const;
  void clear_bisredirect();
  static const int kBIsRedirectFieldNumber = 4;
  bool bisredirect() const;
  void set_bisredirect(bool value);

  // optional bool bNewNavigation = 6;
  bool has_bnewnavigation() const;
  void clear_bnewnavigation();
  static const int kBNewNavigationFieldNumber = 6;
  bool bnewnavigation() const;
  void set_bnewnavigation(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgURLChanged)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_url();
  void clear_has_url();
  void set_has_postdata();
  void clear_has_postdata();
  void set_has_bisredirect();
  void clear_has_bisredirect();
  void set_has_pagetitle();
  void clear_has_pagetitle();
  void set_has_bnewnavigation();
  void clear_has_bnewnavigation();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr postdata_;
  ::google::protobuf::internal::ArenaStringPtr pagetitle_;
  ::google::protobuf::uint32 browser_handle_;
  bool bisredirect_;
  bool bnewnavigation_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CHTMLHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CHTMLHeader) */ {
 public:
  CHTMLHeader();
  virtual ~CHTMLHeader();

  CHTMLHeader(const CHTMLHeader& from);

  inline CHTMLHeader& operator=(const CHTMLHeader& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CHTMLHeader& default_instance();

  static inline const CHTMLHeader* internal_default_instance() {
    return reinterpret_cast<const CHTMLHeader*>(
               &_CHTMLHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(CHTMLHeader* other);

  // implements Message ----------------------------------------------

  inline CHTMLHeader* New() const PROTOBUF_FINAL { return New(NULL); }

  CHTMLHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CHTMLHeader& from);
  void MergeFrom(const CHTMLHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CHTMLHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:proto.steam.CHTMLHeader)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CHTMLPageSecurityInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CHTMLPageSecurityInfo) */ {
 public:
  CHTMLPageSecurityInfo();
  virtual ~CHTMLPageSecurityInfo();

  CHTMLPageSecurityInfo(const CHTMLPageSecurityInfo& from);

  inline CHTMLPageSecurityInfo& operator=(const CHTMLPageSecurityInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CHTMLPageSecurityInfo& default_instance();

  static inline const CHTMLPageSecurityInfo* internal_default_instance() {
    return reinterpret_cast<const CHTMLPageSecurityInfo*>(
               &_CHTMLPageSecurityInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(CHTMLPageSecurityInfo* other);

  // implements Message ----------------------------------------------

  inline CHTMLPageSecurityInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CHTMLPageSecurityInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CHTMLPageSecurityInfo& from);
  void MergeFrom(const CHTMLPageSecurityInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CHTMLPageSecurityInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string issuerName = 3;
  bool has_issuername() const;
  void clear_issuername();
  static const int kIssuerNameFieldNumber = 3;
  const ::std::string& issuername() const;
  void set_issuername(const ::std::string& value);
  #if LANG_CXX11
  void set_issuername(::std::string&& value);
  #endif
  void set_issuername(const char* value);
  void set_issuername(const char* value, size_t size);
  ::std::string* mutable_issuername();
  ::std::string* release_issuername();
  void set_allocated_issuername(::std::string* issuername);

  // optional string certName = 4;
  bool has_certname() const;
  void clear_certname();
  static const int kCertNameFieldNumber = 4;
  const ::std::string& certname() const;
  void set_certname(const ::std::string& value);
  #if LANG_CXX11
  void set_certname(::std::string&& value);
  #endif
  void set_certname(const char* value);
  void set_certname(const char* value, size_t size);
  ::std::string* mutable_certname();
  ::std::string* release_certname();
  void set_allocated_certname(::std::string* certname);

  // optional bool bIsSecure = 1 [default = false];
  bool has_bissecure() const;
  void clear_bissecure();
  static const int kBIsSecureFieldNumber = 1;
  bool bissecure() const;
  void set_bissecure(bool value);

  // optional bool bHasCertError = 2 [default = false];
  bool has_bhascerterror() const;
  void clear_bhascerterror();
  static const int kBHasCertErrorFieldNumber = 2;
  bool bhascerterror() const;
  void set_bhascerterror(bool value);

  // optional bool bIsEVCert = 7 [default = false];
  bool has_bisevcert() const;
  void clear_bisevcert();
  static const int kBIsEVCertFieldNumber = 7;
  bool bisevcert() const;
  void set_bisevcert(bool value);

  // optional int32 certExpiry = 5 [default = 0];
  bool has_certexpiry() const;
  void clear_certexpiry();
  static const int kCertExpiryFieldNumber = 5;
  ::google::protobuf::int32 certexpiry() const;
  void set_certexpiry(::google::protobuf::int32 value);

  // optional int32 nCertBits = 6 [default = 0];
  bool has_ncertbits() const;
  void clear_ncertbits();
  static const int kNCertBitsFieldNumber = 6;
  ::google::protobuf::int32 ncertbits() const;
  void set_ncertbits(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CHTMLPageSecurityInfo)
 private:
  void set_has_bissecure();
  void clear_has_bissecure();
  void set_has_bhascerterror();
  void clear_has_bhascerterror();
  void set_has_issuername();
  void clear_has_issuername();
  void set_has_certname();
  void clear_has_certname();
  void set_has_certexpiry();
  void clear_has_certexpiry();
  void set_has_ncertbits();
  void clear_has_ncertbits();
  void set_has_bisevcert();
  void clear_has_bisevcert();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr issuername_;
  ::google::protobuf::internal::ArenaStringPtr certname_;
  bool bissecure_;
  bool bhascerterror_;
  bool bisevcert_;
  ::google::protobuf::int32 certexpiry_;
  ::google::protobuf::int32 ncertbits_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgFinishedRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgFinishedRequest) */ {
 public:
  CMsgFinishedRequest();
  virtual ~CMsgFinishedRequest();

  CMsgFinishedRequest(const CMsgFinishedRequest& from);

  inline CMsgFinishedRequest& operator=(const CMsgFinishedRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFinishedRequest& default_instance();

  static inline const CMsgFinishedRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgFinishedRequest*>(
               &_CMsgFinishedRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(CMsgFinishedRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgFinishedRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgFinishedRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgFinishedRequest& from);
  void MergeFrom(const CMsgFinishedRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgFinishedRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string pageTitle = 3;
  bool has_pagetitle() const;
  void clear_pagetitle();
  static const int kPageTitleFieldNumber = 3;
  const ::std::string& pagetitle() const;
  void set_pagetitle(const ::std::string& value);
  #if LANG_CXX11
  void set_pagetitle(::std::string&& value);
  #endif
  void set_pagetitle(const char* value);
  void set_pagetitle(const char* value, size_t size);
  ::std::string* mutable_pagetitle();
  ::std::string* release_pagetitle();
  void set_allocated_pagetitle(::std::string* pagetitle);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgFinishedRequest)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_url();
  void clear_has_url();
  void set_has_pagetitle();
  void clear_has_pagetitle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr pagetitle_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgLoadedRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgLoadedRequest) */ {
 public:
  CMsgLoadedRequest();
  virtual ~CMsgLoadedRequest();

  CMsgLoadedRequest(const CMsgLoadedRequest& from);

  inline CMsgLoadedRequest& operator=(const CMsgLoadedRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLoadedRequest& default_instance();

  static inline const CMsgLoadedRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgLoadedRequest*>(
               &_CMsgLoadedRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(CMsgLoadedRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgLoadedRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgLoadedRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgLoadedRequest& from);
  void MergeFrom(const CMsgLoadedRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgLoadedRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CHTMLHeader headers = 5;
  int headers_size() const;
  void clear_headers();
  static const int kHeadersFieldNumber = 5;
  const ::proto::steam::CHTMLHeader& headers(int index) const;
  ::proto::steam::CHTMLHeader* mutable_headers(int index);
  ::proto::steam::CHTMLHeader* add_headers();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CHTMLHeader >*
      mutable_headers();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CHTMLHeader >&
      headers() const;

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string pageTitle = 3;
  bool has_pagetitle() const;
  void clear_pagetitle();
  static const int kPageTitleFieldNumber = 3;
  const ::std::string& pagetitle() const;
  void set_pagetitle(const ::std::string& value);
  #if LANG_CXX11
  void set_pagetitle(::std::string&& value);
  #endif
  void set_pagetitle(const char* value);
  void set_pagetitle(const char* value, size_t size);
  ::std::string* mutable_pagetitle();
  ::std::string* release_pagetitle();
  void set_allocated_pagetitle(::std::string* pagetitle);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgLoadedRequest)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_url();
  void clear_has_url();
  void set_has_pagetitle();
  void clear_has_pagetitle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CHTMLHeader > headers_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr pagetitle_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPageSecurity : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgPageSecurity) */ {
 public:
  CMsgPageSecurity();
  virtual ~CMsgPageSecurity();

  CMsgPageSecurity(const CMsgPageSecurity& from);

  inline CMsgPageSecurity& operator=(const CMsgPageSecurity& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPageSecurity& default_instance();

  static inline const CMsgPageSecurity* internal_default_instance() {
    return reinterpret_cast<const CMsgPageSecurity*>(
               &_CMsgPageSecurity_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(CMsgPageSecurity* other);

  // implements Message ----------------------------------------------

  inline CMsgPageSecurity* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPageSecurity* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPageSecurity& from);
  void MergeFrom(const CMsgPageSecurity& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPageSecurity* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional .proto.steam.CHTMLPageSecurityInfo security_info = 3;
  bool has_security_info() const;
  void clear_security_info();
  static const int kSecurityInfoFieldNumber = 3;
  const ::proto::steam::CHTMLPageSecurityInfo& security_info() const;
  ::proto::steam::CHTMLPageSecurityInfo* mutable_security_info();
  ::proto::steam::CHTMLPageSecurityInfo* release_security_info();
  void set_allocated_security_info(::proto::steam::CHTMLPageSecurityInfo* security_info);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgPageSecurity)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_url();
  void clear_has_url();
  void set_has_security_info();
  void clear_has_security_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::proto::steam::CHTMLPageSecurityInfo* security_info_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgStartRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgStartRequest) */ {
 public:
  CMsgStartRequest();
  virtual ~CMsgStartRequest();

  CMsgStartRequest(const CMsgStartRequest& from);

  inline CMsgStartRequest& operator=(const CMsgStartRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgStartRequest& default_instance();

  static inline const CMsgStartRequest* internal_default_instance() {
    return reinterpret_cast<const CMsgStartRequest*>(
               &_CMsgStartRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(CMsgStartRequest* other);

  // implements Message ----------------------------------------------

  inline CMsgStartRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgStartRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgStartRequest& from);
  void MergeFrom(const CMsgStartRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgStartRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string target = 3;
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 3;
  const ::std::string& target() const;
  void set_target(const ::std::string& value);
  #if LANG_CXX11
  void set_target(::std::string&& value);
  #endif
  void set_target(const char* value);
  void set_target(const char* value, size_t size);
  ::std::string* mutable_target();
  ::std::string* release_target();
  void set_allocated_target(::std::string* target);

  // optional string postData = 4;
  bool has_postdata() const;
  void clear_postdata();
  static const int kPostDataFieldNumber = 4;
  const ::std::string& postdata() const;
  void set_postdata(const ::std::string& value);
  #if LANG_CXX11
  void set_postdata(::std::string&& value);
  #endif
  void set_postdata(const char* value);
  void set_postdata(const char* value, size_t size);
  ::std::string* mutable_postdata();
  ::std::string* release_postdata();
  void set_allocated_postdata(::std::string* postdata);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional bool bIsRedirect = 5;
  bool has_bisredirect() const;
  void clear_bisredirect();
  static const int kBIsRedirectFieldNumber = 5;
  bool bisredirect() const;
  void set_bisredirect(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgStartRequest)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_url();
  void clear_has_url();
  void set_has_target();
  void clear_has_target();
  void set_has_postdata();
  void clear_has_postdata();
  void set_has_bisredirect();
  void clear_has_bisredirect();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr target_;
  ::google::protobuf::internal::ArenaStringPtr postdata_;
  ::google::protobuf::uint32 browser_handle_;
  bool bisredirect_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgStartRequestResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgStartRequestResponse) */ {
 public:
  CMsgStartRequestResponse();
  virtual ~CMsgStartRequestResponse();

  CMsgStartRequestResponse(const CMsgStartRequestResponse& from);

  inline CMsgStartRequestResponse& operator=(const CMsgStartRequestResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgStartRequestResponse& default_instance();

  static inline const CMsgStartRequestResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgStartRequestResponse*>(
               &_CMsgStartRequestResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(CMsgStartRequestResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgStartRequestResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgStartRequestResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgStartRequestResponse& from);
  void MergeFrom(const CMsgStartRequestResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgStartRequestResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional bool bAllow = 2;
  bool has_ballow() const;
  void clear_ballow();
  static const int kBAllowFieldNumber = 2;
  bool ballow() const;
  void set_ballow(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgStartRequestResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_ballow();
  void clear_has_ballow();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  bool ballow_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgShowPopup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgShowPopup) */ {
 public:
  CMsgShowPopup();
  virtual ~CMsgShowPopup();

  CMsgShowPopup(const CMsgShowPopup& from);

  inline CMsgShowPopup& operator=(const CMsgShowPopup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgShowPopup& default_instance();

  static inline const CMsgShowPopup* internal_default_instance() {
    return reinterpret_cast<const CMsgShowPopup*>(
               &_CMsgShowPopup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(CMsgShowPopup* other);

  // implements Message ----------------------------------------------

  inline CMsgShowPopup* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgShowPopup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgShowPopup& from);
  void MergeFrom(const CMsgShowPopup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgShowPopup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgShowPopup)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgHidePopup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgHidePopup) */ {
 public:
  CMsgHidePopup();
  virtual ~CMsgHidePopup();

  CMsgHidePopup(const CMsgHidePopup& from);

  inline CMsgHidePopup& operator=(const CMsgHidePopup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHidePopup& default_instance();

  static inline const CMsgHidePopup* internal_default_instance() {
    return reinterpret_cast<const CMsgHidePopup*>(
               &_CMsgHidePopup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(CMsgHidePopup* other);

  // implements Message ----------------------------------------------

  inline CMsgHidePopup* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgHidePopup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgHidePopup& from);
  void MergeFrom(const CMsgHidePopup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgHidePopup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgHidePopup)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSizePopup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSizePopup) */ {
 public:
  CMsgSizePopup();
  virtual ~CMsgSizePopup();

  CMsgSizePopup(const CMsgSizePopup& from);

  inline CMsgSizePopup& operator=(const CMsgSizePopup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSizePopup& default_instance();

  static inline const CMsgSizePopup* internal_default_instance() {
    return reinterpret_cast<const CMsgSizePopup*>(
               &_CMsgSizePopup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(CMsgSizePopup* other);

  // implements Message ----------------------------------------------

  inline CMsgSizePopup* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSizePopup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSizePopup& from);
  void MergeFrom(const CMsgSizePopup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSizePopup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::uint32 x() const;
  void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::uint32 y() const;
  void set_y(::google::protobuf::uint32 value);

  // optional uint32 wide = 4;
  bool has_wide() const;
  void clear_wide();
  static const int kWideFieldNumber = 4;
  ::google::protobuf::uint32 wide() const;
  void set_wide(::google::protobuf::uint32 value);

  // optional uint32 tall = 5;
  bool has_tall() const;
  void clear_tall();
  static const int kTallFieldNumber = 5;
  ::google::protobuf::uint32 tall() const;
  void set_tall(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSizePopup)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_wide();
  void clear_has_wide();
  void set_has_tall();
  void clear_has_tall();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 wide_;
  ::google::protobuf::uint32 tall_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgOpenNewTab : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgOpenNewTab) */ {
 public:
  CMsgOpenNewTab();
  virtual ~CMsgOpenNewTab();

  CMsgOpenNewTab(const CMsgOpenNewTab& from);

  inline CMsgOpenNewTab& operator=(const CMsgOpenNewTab& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgOpenNewTab& default_instance();

  static inline const CMsgOpenNewTab* internal_default_instance() {
    return reinterpret_cast<const CMsgOpenNewTab*>(
               &_CMsgOpenNewTab_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(CMsgOpenNewTab* other);

  // implements Message ----------------------------------------------

  inline CMsgOpenNewTab* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgOpenNewTab* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgOpenNewTab& from);
  void MergeFrom(const CMsgOpenNewTab& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgOpenNewTab* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional bool bForeground = 3;
  bool has_bforeground() const;
  void clear_bforeground();
  static const int kBForegroundFieldNumber = 3;
  bool bforeground() const;
  void set_bforeground(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgOpenNewTab)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_url();
  void clear_has_url();
  void set_has_bforeground();
  void clear_has_bforeground();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 browser_handle_;
  bool bforeground_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPopupHTMLWindow : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgPopupHTMLWindow) */ {
 public:
  CMsgPopupHTMLWindow();
  virtual ~CMsgPopupHTMLWindow();

  CMsgPopupHTMLWindow(const CMsgPopupHTMLWindow& from);

  inline CMsgPopupHTMLWindow& operator=(const CMsgPopupHTMLWindow& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPopupHTMLWindow& default_instance();

  static inline const CMsgPopupHTMLWindow* internal_default_instance() {
    return reinterpret_cast<const CMsgPopupHTMLWindow*>(
               &_CMsgPopupHTMLWindow_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(CMsgPopupHTMLWindow* other);

  // implements Message ----------------------------------------------

  inline CMsgPopupHTMLWindow* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPopupHTMLWindow* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPopupHTMLWindow& from);
  void MergeFrom(const CMsgPopupHTMLWindow& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPopupHTMLWindow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 x = 3;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 3;
  ::google::protobuf::uint32 x() const;
  void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 4;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 4;
  ::google::protobuf::uint32 y() const;
  void set_y(::google::protobuf::uint32 value);

  // optional uint32 wide = 5;
  bool has_wide() const;
  void clear_wide();
  static const int kWideFieldNumber = 5;
  ::google::protobuf::uint32 wide() const;
  void set_wide(::google::protobuf::uint32 value);

  // optional uint32 tall = 6;
  bool has_tall() const;
  void clear_tall();
  static const int kTallFieldNumber = 6;
  ::google::protobuf::uint32 tall() const;
  void set_tall(::google::protobuf::uint32 value);

  // optional uint32 popup_index = 7;
  bool has_popup_index() const;
  void clear_popup_index();
  static const int kPopupIndexFieldNumber = 7;
  ::google::protobuf::uint32 popup_index() const;
  void set_popup_index(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgPopupHTMLWindow)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_url();
  void clear_has_url();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_wide();
  void clear_has_wide();
  void set_has_tall();
  void clear_has_tall();
  void set_has_popup_index();
  void clear_has_popup_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 wide_;
  ::google::protobuf::uint32 tall_;
  ::google::protobuf::uint32 popup_index_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPopupHTMLWindowResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgPopupHTMLWindowResponse) */ {
 public:
  CMsgPopupHTMLWindowResponse();
  virtual ~CMsgPopupHTMLWindowResponse();

  CMsgPopupHTMLWindowResponse(const CMsgPopupHTMLWindowResponse& from);

  inline CMsgPopupHTMLWindowResponse& operator=(const CMsgPopupHTMLWindowResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPopupHTMLWindowResponse& default_instance();

  static inline const CMsgPopupHTMLWindowResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgPopupHTMLWindowResponse*>(
               &_CMsgPopupHTMLWindowResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(CMsgPopupHTMLWindowResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgPopupHTMLWindowResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPopupHTMLWindowResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPopupHTMLWindowResponse& from);
  void MergeFrom(const CMsgPopupHTMLWindowResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPopupHTMLWindowResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional bool bAllow = 2;
  bool has_ballow() const;
  void clear_ballow();
  static const int kBAllowFieldNumber = 2;
  bool ballow() const;
  void set_ballow(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgPopupHTMLWindowResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_ballow();
  void clear_has_ballow();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  bool ballow_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetHTMLTitle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSetHTMLTitle) */ {
 public:
  CMsgSetHTMLTitle();
  virtual ~CMsgSetHTMLTitle();

  CMsgSetHTMLTitle(const CMsgSetHTMLTitle& from);

  inline CMsgSetHTMLTitle& operator=(const CMsgSetHTMLTitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetHTMLTitle& default_instance();

  static inline const CMsgSetHTMLTitle* internal_default_instance() {
    return reinterpret_cast<const CMsgSetHTMLTitle*>(
               &_CMsgSetHTMLTitle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(CMsgSetHTMLTitle* other);

  // implements Message ----------------------------------------------

  inline CMsgSetHTMLTitle* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetHTMLTitle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetHTMLTitle& from);
  void MergeFrom(const CMsgSetHTMLTitle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetHTMLTitle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSetHTMLTitle)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_title();
  void clear_has_title();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgLoadingResource : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgLoadingResource) */ {
 public:
  CMsgLoadingResource();
  virtual ~CMsgLoadingResource();

  CMsgLoadingResource(const CMsgLoadingResource& from);

  inline CMsgLoadingResource& operator=(const CMsgLoadingResource& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLoadingResource& default_instance();

  static inline const CMsgLoadingResource* internal_default_instance() {
    return reinterpret_cast<const CMsgLoadingResource*>(
               &_CMsgLoadingResource_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(CMsgLoadingResource* other);

  // implements Message ----------------------------------------------

  inline CMsgLoadingResource* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgLoadingResource* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgLoadingResource& from);
  void MergeFrom(const CMsgLoadingResource& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgLoadingResource* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgLoadingResource)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgStatusText : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgStatusText) */ {
 public:
  CMsgStatusText();
  virtual ~CMsgStatusText();

  CMsgStatusText(const CMsgStatusText& from);

  inline CMsgStatusText& operator=(const CMsgStatusText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgStatusText& default_instance();

  static inline const CMsgStatusText* internal_default_instance() {
    return reinterpret_cast<const CMsgStatusText*>(
               &_CMsgStatusText_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(CMsgStatusText* other);

  // implements Message ----------------------------------------------

  inline CMsgStatusText* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgStatusText* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgStatusText& from);
  void MergeFrom(const CMsgStatusText& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgStatusText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgStatusText)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_text();
  void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetCursor : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSetCursor) */ {
 public:
  CMsgSetCursor();
  virtual ~CMsgSetCursor();

  CMsgSetCursor(const CMsgSetCursor& from);

  inline CMsgSetCursor& operator=(const CMsgSetCursor& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetCursor& default_instance();

  static inline const CMsgSetCursor* internal_default_instance() {
    return reinterpret_cast<const CMsgSetCursor*>(
               &_CMsgSetCursor_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(CMsgSetCursor* other);

  // implements Message ----------------------------------------------

  inline CMsgSetCursor* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetCursor* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetCursor& from);
  void MergeFrom(const CMsgSetCursor& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetCursor* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes custom_data = 3;
  bool has_custom_data() const;
  void clear_custom_data();
  static const int kCustomDataFieldNumber = 3;
  const ::std::string& custom_data() const;
  void set_custom_data(const ::std::string& value);
  #if LANG_CXX11
  void set_custom_data(::std::string&& value);
  #endif
  void set_custom_data(const char* value);
  void set_custom_data(const void* value, size_t size);
  ::std::string* mutable_custom_data();
  ::std::string* release_custom_data();
  void set_allocated_custom_data(::std::string* custom_data);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 cursor = 2;
  bool has_cursor() const;
  void clear_cursor();
  static const int kCursorFieldNumber = 2;
  ::google::protobuf::uint32 cursor() const;
  void set_cursor(::google::protobuf::uint32 value);

  // optional uint32 wide = 4;
  bool has_wide() const;
  void clear_wide();
  static const int kWideFieldNumber = 4;
  ::google::protobuf::uint32 wide() const;
  void set_wide(::google::protobuf::uint32 value);

  // optional uint32 tall = 5;
  bool has_tall() const;
  void clear_tall();
  static const int kTallFieldNumber = 5;
  ::google::protobuf::uint32 tall() const;
  void set_tall(::google::protobuf::uint32 value);

  // optional uint32 xhotspot = 6;
  bool has_xhotspot() const;
  void clear_xhotspot();
  static const int kXhotspotFieldNumber = 6;
  ::google::protobuf::uint32 xhotspot() const;
  void set_xhotspot(::google::protobuf::uint32 value);

  // optional uint32 yhotspot = 7;
  bool has_yhotspot() const;
  void clear_yhotspot();
  static const int kYhotspotFieldNumber = 7;
  ::google::protobuf::uint32 yhotspot() const;
  void set_yhotspot(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSetCursor)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_cursor();
  void clear_has_cursor();
  void set_has_custom_data();
  void clear_has_custom_data();
  void set_has_wide();
  void clear_has_wide();
  void set_has_tall();
  void clear_has_tall();
  void set_has_xhotspot();
  void clear_has_xhotspot();
  void set_has_yhotspot();
  void clear_has_yhotspot();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr custom_data_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 cursor_;
  ::google::protobuf::uint32 wide_;
  ::google::protobuf::uint32 tall_;
  ::google::protobuf::uint32 xhotspot_;
  ::google::protobuf::uint32 yhotspot_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgFileLoadDialog : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgFileLoadDialog) */ {
 public:
  CMsgFileLoadDialog();
  virtual ~CMsgFileLoadDialog();

  CMsgFileLoadDialog(const CMsgFileLoadDialog& from);

  inline CMsgFileLoadDialog& operator=(const CMsgFileLoadDialog& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFileLoadDialog& default_instance();

  static inline const CMsgFileLoadDialog* internal_default_instance() {
    return reinterpret_cast<const CMsgFileLoadDialog*>(
               &_CMsgFileLoadDialog_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(CMsgFileLoadDialog* other);

  // implements Message ----------------------------------------------

  inline CMsgFileLoadDialog* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgFileLoadDialog* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgFileLoadDialog& from);
  void MergeFrom(const CMsgFileLoadDialog& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgFileLoadDialog* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string title = 2;
  bool has_title() const;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // optional string initialFile = 3;
  bool has_initialfile() const;
  void clear_initialfile();
  static const int kInitialFileFieldNumber = 3;
  const ::std::string& initialfile() const;
  void set_initialfile(const ::std::string& value);
  #if LANG_CXX11
  void set_initialfile(::std::string&& value);
  #endif
  void set_initialfile(const char* value);
  void set_initialfile(const char* value, size_t size);
  ::std::string* mutable_initialfile();
  ::std::string* release_initialfile();
  void set_allocated_initialfile(::std::string* initialfile);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgFileLoadDialog)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_title();
  void clear_has_title();
  void set_has_initialfile();
  void clear_has_initialfile();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr initialfile_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgFileLoadDialogResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgFileLoadDialogResponse) */ {
 public:
  CMsgFileLoadDialogResponse();
  virtual ~CMsgFileLoadDialogResponse();

  CMsgFileLoadDialogResponse(const CMsgFileLoadDialogResponse& from);

  inline CMsgFileLoadDialogResponse& operator=(const CMsgFileLoadDialogResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFileLoadDialogResponse& default_instance();

  static inline const CMsgFileLoadDialogResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgFileLoadDialogResponse*>(
               &_CMsgFileLoadDialogResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(CMsgFileLoadDialogResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgFileLoadDialogResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgFileLoadDialogResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgFileLoadDialogResponse& from);
  void MergeFrom(const CMsgFileLoadDialogResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgFileLoadDialogResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string files = 2;
  int files_size() const;
  void clear_files();
  static const int kFilesFieldNumber = 2;
  const ::std::string& files(int index) const;
  ::std::string* mutable_files(int index);
  void set_files(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_files(int index, ::std::string&& value);
  #endif
  void set_files(int index, const char* value);
  void set_files(int index, const char* value, size_t size);
  ::std::string* add_files();
  void add_files(const ::std::string& value);
  #if LANG_CXX11
  void add_files(::std::string&& value);
  #endif
  void add_files(const char* value);
  void add_files(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& files() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_files();

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgFileLoadDialogResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> files_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgShowToolTip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgShowToolTip) */ {
 public:
  CMsgShowToolTip();
  virtual ~CMsgShowToolTip();

  CMsgShowToolTip(const CMsgShowToolTip& from);

  inline CMsgShowToolTip& operator=(const CMsgShowToolTip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgShowToolTip& default_instance();

  static inline const CMsgShowToolTip* internal_default_instance() {
    return reinterpret_cast<const CMsgShowToolTip*>(
               &_CMsgShowToolTip_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(CMsgShowToolTip* other);

  // implements Message ----------------------------------------------

  inline CMsgShowToolTip* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgShowToolTip* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgShowToolTip& from);
  void MergeFrom(const CMsgShowToolTip& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgShowToolTip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgShowToolTip)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_text();
  void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgUpdateToolTip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgUpdateToolTip) */ {
 public:
  CMsgUpdateToolTip();
  virtual ~CMsgUpdateToolTip();

  CMsgUpdateToolTip(const CMsgUpdateToolTip& from);

  inline CMsgUpdateToolTip& operator=(const CMsgUpdateToolTip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUpdateToolTip& default_instance();

  static inline const CMsgUpdateToolTip* internal_default_instance() {
    return reinterpret_cast<const CMsgUpdateToolTip*>(
               &_CMsgUpdateToolTip_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(CMsgUpdateToolTip* other);

  // implements Message ----------------------------------------------

  inline CMsgUpdateToolTip* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgUpdateToolTip* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgUpdateToolTip& from);
  void MergeFrom(const CMsgUpdateToolTip& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgUpdateToolTip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string text = 2;
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 2;
  const ::std::string& text() const;
  void set_text(const ::std::string& value);
  #if LANG_CXX11
  void set_text(::std::string&& value);
  #endif
  void set_text(const char* value);
  void set_text(const char* value, size_t size);
  ::std::string* mutable_text();
  ::std::string* release_text();
  void set_allocated_text(::std::string* text);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgUpdateToolTip)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_text();
  void clear_has_text();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr text_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgHideToolTip : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgHideToolTip) */ {
 public:
  CMsgHideToolTip();
  virtual ~CMsgHideToolTip();

  CMsgHideToolTip(const CMsgHideToolTip& from);

  inline CMsgHideToolTip& operator=(const CMsgHideToolTip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgHideToolTip& default_instance();

  static inline const CMsgHideToolTip* internal_default_instance() {
    return reinterpret_cast<const CMsgHideToolTip*>(
               &_CMsgHideToolTip_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(CMsgHideToolTip* other);

  // implements Message ----------------------------------------------

  inline CMsgHideToolTip* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgHideToolTip* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgHideToolTip& from);
  void MergeFrom(const CMsgHideToolTip& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgHideToolTip* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgHideToolTip)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSearchResults : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSearchResults) */ {
 public:
  CMsgSearchResults();
  virtual ~CMsgSearchResults();

  CMsgSearchResults(const CMsgSearchResults& from);

  inline CMsgSearchResults& operator=(const CMsgSearchResults& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSearchResults& default_instance();

  static inline const CMsgSearchResults* internal_default_instance() {
    return reinterpret_cast<const CMsgSearchResults*>(
               &_CMsgSearchResults_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(CMsgSearchResults* other);

  // implements Message ----------------------------------------------

  inline CMsgSearchResults* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSearchResults* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSearchResults& from);
  void MergeFrom(const CMsgSearchResults& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSearchResults* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional int32 activeMatch = 2;
  bool has_activematch() const;
  void clear_activematch();
  static const int kActiveMatchFieldNumber = 2;
  ::google::protobuf::int32 activematch() const;
  void set_activematch(::google::protobuf::int32 value);

  // optional int32 results = 3;
  bool has_results() const;
  void clear_results();
  static const int kResultsFieldNumber = 3;
  ::google::protobuf::int32 results() const;
  void set_results(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSearchResults)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_activematch();
  void clear_has_activematch();
  void set_has_results();
  void clear_has_results();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::int32 activematch_;
  ::google::protobuf::int32 results_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClose : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClose) */ {
 public:
  CMsgClose();
  virtual ~CMsgClose();

  CMsgClose(const CMsgClose& from);

  inline CMsgClose& operator=(const CMsgClose& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClose& default_instance();

  static inline const CMsgClose* internal_default_instance() {
    return reinterpret_cast<const CMsgClose*>(
               &_CMsgClose_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(CMsgClose* other);

  // implements Message ----------------------------------------------

  inline CMsgClose* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClose* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClose& from);
  void MergeFrom(const CMsgClose& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClose* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClose)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetSharedPaintBuffers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSetSharedPaintBuffers) */ {
 public:
  CMsgSetSharedPaintBuffers();
  virtual ~CMsgSetSharedPaintBuffers();

  CMsgSetSharedPaintBuffers(const CMsgSetSharedPaintBuffers& from);

  inline CMsgSetSharedPaintBuffers& operator=(const CMsgSetSharedPaintBuffers& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetSharedPaintBuffers& default_instance();

  static inline const CMsgSetSharedPaintBuffers* internal_default_instance() {
    return reinterpret_cast<const CMsgSetSharedPaintBuffers*>(
               &_CMsgSetSharedPaintBuffers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(CMsgSetSharedPaintBuffers* other);

  // implements Message ----------------------------------------------

  inline CMsgSetSharedPaintBuffers* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetSharedPaintBuffers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetSharedPaintBuffers& from);
  void MergeFrom(const CMsgSetSharedPaintBuffers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetSharedPaintBuffers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 wide = 2;
  bool has_wide() const;
  void clear_wide();
  static const int kWideFieldNumber = 2;
  ::google::protobuf::uint32 wide() const;
  void set_wide(::google::protobuf::uint32 value);

  // optional uint64 source_pid = 4;
  bool has_source_pid() const;
  void clear_source_pid();
  static const int kSourcePidFieldNumber = 4;
  ::google::protobuf::uint64 source_pid() const;
  void set_source_pid(::google::protobuf::uint64 value);

  // optional uint64 source_handle = 5;
  bool has_source_handle() const;
  void clear_source_handle();
  static const int kSourceHandleFieldNumber = 5;
  ::google::protobuf::uint64 source_handle() const;
  void set_source_handle(::google::protobuf::uint64 value);

  // optional uint64 handle = 6;
  bool has_handle() const;
  void clear_handle();
  static const int kHandleFieldNumber = 6;
  ::google::protobuf::uint64 handle() const;
  void set_handle(::google::protobuf::uint64 value);

  // optional uint32 tall = 3;
  bool has_tall() const;
  void clear_tall();
  static const int kTallFieldNumber = 3;
  ::google::protobuf::uint32 tall() const;
  void set_tall(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSetSharedPaintBuffers)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_wide();
  void clear_has_wide();
  void set_has_tall();
  void clear_has_tall();
  void set_has_source_pid();
  void clear_has_source_pid();
  void set_has_source_handle();
  void clear_has_source_handle();
  void set_has_handle();
  void clear_has_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 wide_;
  ::google::protobuf::uint64 source_pid_;
  ::google::protobuf::uint64 source_handle_;
  ::google::protobuf::uint64 handle_;
  ::google::protobuf::uint32 tall_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgNeedsPaint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgNeedsPaint) */ {
 public:
  CMsgNeedsPaint();
  virtual ~CMsgNeedsPaint();

  CMsgNeedsPaint(const CMsgNeedsPaint& from);

  inline CMsgNeedsPaint& operator=(const CMsgNeedsPaint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgNeedsPaint& default_instance();

  static inline const CMsgNeedsPaint* internal_default_instance() {
    return reinterpret_cast<const CMsgNeedsPaint*>(
               &_CMsgNeedsPaint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(CMsgNeedsPaint* other);

  // implements Message ----------------------------------------------

  inline CMsgNeedsPaint* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgNeedsPaint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgNeedsPaint& from);
  void MergeFrom(const CMsgNeedsPaint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgNeedsPaint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 scrollx = 10;
  bool has_scrollx() const;
  void clear_scrollx();
  static const int kScrollxFieldNumber = 10;
  ::google::protobuf::uint32 scrollx() const;
  void set_scrollx(::google::protobuf::uint32 value);

  // optional uint32 pageserial = 15;
  bool has_pageserial() const;
  void clear_pageserial();
  static const int kPageserialFieldNumber = 15;
  ::google::protobuf::uint32 pageserial() const;
  void set_pageserial(::google::protobuf::uint32 value);

  // optional uint32 scrolly = 11;
  bool has_scrolly() const;
  void clear_scrolly();
  static const int kScrollyFieldNumber = 11;
  ::google::protobuf::uint32 scrolly() const;
  void set_scrolly(::google::protobuf::uint32 value);

  // optional float pagescale = 12;
  bool has_pagescale() const;
  void clear_pagescale();
  static const int kPagescaleFieldNumber = 12;
  float pagescale() const;
  void set_pagescale(float value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgNeedsPaint)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_scrollx();
  void clear_has_scrollx();
  void set_has_scrolly();
  void clear_has_scrolly();
  void set_has_pagescale();
  void clear_has_pagescale();
  void set_has_pageserial();
  void clear_has_pageserial();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 scrollx_;
  ::google::protobuf::uint32 pageserial_;
  ::google::protobuf::uint32 scrolly_;
  float pagescale_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgComboNeedsPaint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgComboNeedsPaint) */ {
 public:
  CMsgComboNeedsPaint();
  virtual ~CMsgComboNeedsPaint();

  CMsgComboNeedsPaint(const CMsgComboNeedsPaint& from);

  inline CMsgComboNeedsPaint& operator=(const CMsgComboNeedsPaint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgComboNeedsPaint& default_instance();

  static inline const CMsgComboNeedsPaint* internal_default_instance() {
    return reinterpret_cast<const CMsgComboNeedsPaint*>(
               &_CMsgComboNeedsPaint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(CMsgComboNeedsPaint* other);

  // implements Message ----------------------------------------------

  inline CMsgComboNeedsPaint* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgComboNeedsPaint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgComboNeedsPaint& from);
  void MergeFrom(const CMsgComboNeedsPaint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgComboNeedsPaint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 rgba = 2;
  bool has_rgba() const;
  void clear_rgba();
  static const int kRgbaFieldNumber = 2;
  ::google::protobuf::uint64 rgba() const;
  void set_rgba(::google::protobuf::uint64 value);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 combobox_wide = 3 [default = 0];
  bool has_combobox_wide() const;
  void clear_combobox_wide();
  static const int kComboboxWideFieldNumber = 3;
  ::google::protobuf::uint32 combobox_wide() const;
  void set_combobox_wide(::google::protobuf::uint32 value);

  // optional uint64 shared_memory_handle = 5 [default = 0];
  bool has_shared_memory_handle() const;
  void clear_shared_memory_handle();
  static const int kSharedMemoryHandleFieldNumber = 5;
  ::google::protobuf::uint64 shared_memory_handle() const;
  void set_shared_memory_handle(::google::protobuf::uint64 value);

  // optional uint64 shared_memory_size = 7 [default = 0];
  bool has_shared_memory_size() const;
  void clear_shared_memory_size();
  static const int kSharedMemorySizeFieldNumber = 7;
  ::google::protobuf::uint64 shared_memory_size() const;
  void set_shared_memory_size(::google::protobuf::uint64 value);

  // optional uint32 combobox_tall = 4 [default = 0];
  bool has_combobox_tall() const;
  void clear_combobox_tall();
  static const int kComboboxTallFieldNumber = 4;
  ::google::protobuf::uint32 combobox_tall() const;
  void set_combobox_tall(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgComboNeedsPaint)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_rgba();
  void clear_has_rgba();
  void set_has_combobox_wide();
  void clear_has_combobox_wide();
  void set_has_combobox_tall();
  void clear_has_combobox_tall();
  void set_has_shared_memory_handle();
  void clear_has_shared_memory_handle();
  void set_has_shared_memory_size();
  void clear_has_shared_memory_size();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 rgba_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 combobox_wide_;
  ::google::protobuf::uint64 shared_memory_handle_;
  ::google::protobuf::uint64 shared_memory_size_;
  ::google::protobuf::uint32 combobox_tall_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGetZoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgGetZoom) */ {
 public:
  CMsgGetZoom();
  virtual ~CMsgGetZoom();

  CMsgGetZoom(const CMsgGetZoom& from);

  inline CMsgGetZoom& operator=(const CMsgGetZoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGetZoom& default_instance();

  static inline const CMsgGetZoom* internal_default_instance() {
    return reinterpret_cast<const CMsgGetZoom*>(
               &_CMsgGetZoom_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(CMsgGetZoom* other);

  // implements Message ----------------------------------------------

  inline CMsgGetZoom* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGetZoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGetZoom& from);
  void MergeFrom(const CMsgGetZoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGetZoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgGetZoom)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGetZoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgGetZoomResponse) */ {
 public:
  CMsgGetZoomResponse();
  virtual ~CMsgGetZoomResponse();

  CMsgGetZoomResponse(const CMsgGetZoomResponse& from);

  inline CMsgGetZoomResponse& operator=(const CMsgGetZoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGetZoomResponse& default_instance();

  static inline const CMsgGetZoomResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGetZoomResponse*>(
               &_CMsgGetZoomResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(CMsgGetZoomResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGetZoomResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGetZoomResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGetZoomResponse& from);
  void MergeFrom(const CMsgGetZoomResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGetZoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional float zoom = 2;
  bool has_zoom() const;
  void clear_zoom();
  static const int kZoomFieldNumber = 2;
  float zoom() const;
  void set_zoom(float value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgGetZoomResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_zoom();
  void clear_has_zoom();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  float zoom_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgLinkAtPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgLinkAtPosition) */ {
 public:
  CMsgLinkAtPosition();
  virtual ~CMsgLinkAtPosition();

  CMsgLinkAtPosition(const CMsgLinkAtPosition& from);

  inline CMsgLinkAtPosition& operator=(const CMsgLinkAtPosition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLinkAtPosition& default_instance();

  static inline const CMsgLinkAtPosition* internal_default_instance() {
    return reinterpret_cast<const CMsgLinkAtPosition*>(
               &_CMsgLinkAtPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(CMsgLinkAtPosition* other);

  // implements Message ----------------------------------------------

  inline CMsgLinkAtPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgLinkAtPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgLinkAtPosition& from);
  void MergeFrom(const CMsgLinkAtPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgLinkAtPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::uint32 x() const;
  void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::uint32 y() const;
  void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgLinkAtPosition)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgLinkAtPositionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgLinkAtPositionResponse) */ {
 public:
  CMsgLinkAtPositionResponse();
  virtual ~CMsgLinkAtPositionResponse();

  CMsgLinkAtPositionResponse(const CMsgLinkAtPositionResponse& from);

  inline CMsgLinkAtPositionResponse& operator=(const CMsgLinkAtPositionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLinkAtPositionResponse& default_instance();

  static inline const CMsgLinkAtPositionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgLinkAtPositionResponse*>(
               &_CMsgLinkAtPositionResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(CMsgLinkAtPositionResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgLinkAtPositionResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgLinkAtPositionResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgLinkAtPositionResponse& from);
  void MergeFrom(const CMsgLinkAtPositionResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgLinkAtPositionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 4;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 4;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::uint32 x() const;
  void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::uint32 y() const;
  void set_y(::google::protobuf::uint32 value);

  // optional bool blivelink = 5;
  bool has_blivelink() const;
  void clear_blivelink();
  static const int kBlivelinkFieldNumber = 5;
  bool blivelink() const;
  void set_blivelink(bool value);

  // optional bool binput = 6;
  bool has_binput() const;
  void clear_binput();
  static const int kBinputFieldNumber = 6;
  bool binput() const;
  void set_binput(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgLinkAtPositionResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_url();
  void clear_has_url();
  void set_has_blivelink();
  void clear_has_blivelink();
  void set_has_binput();
  void clear_has_binput();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  bool blivelink_;
  bool binput_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgZoomToElementAtPosition : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgZoomToElementAtPosition) */ {
 public:
  CMsgZoomToElementAtPosition();
  virtual ~CMsgZoomToElementAtPosition();

  CMsgZoomToElementAtPosition(const CMsgZoomToElementAtPosition& from);

  inline CMsgZoomToElementAtPosition& operator=(const CMsgZoomToElementAtPosition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgZoomToElementAtPosition& default_instance();

  static inline const CMsgZoomToElementAtPosition* internal_default_instance() {
    return reinterpret_cast<const CMsgZoomToElementAtPosition*>(
               &_CMsgZoomToElementAtPosition_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(CMsgZoomToElementAtPosition* other);

  // implements Message ----------------------------------------------

  inline CMsgZoomToElementAtPosition* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgZoomToElementAtPosition* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgZoomToElementAtPosition& from);
  void MergeFrom(const CMsgZoomToElementAtPosition& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgZoomToElementAtPosition* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::uint32 x() const;
  void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::uint32 y() const;
  void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgZoomToElementAtPosition)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgZoomToElementAtPositionResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgZoomToElementAtPositionResponse) */ {
 public:
  CMsgZoomToElementAtPositionResponse();
  virtual ~CMsgZoomToElementAtPositionResponse();

  CMsgZoomToElementAtPositionResponse(const CMsgZoomToElementAtPositionResponse& from);

  inline CMsgZoomToElementAtPositionResponse& operator=(const CMsgZoomToElementAtPositionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgZoomToElementAtPositionResponse& default_instance();

  static inline const CMsgZoomToElementAtPositionResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgZoomToElementAtPositionResponse*>(
               &_CMsgZoomToElementAtPositionResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(CMsgZoomToElementAtPositionResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgZoomToElementAtPositionResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgZoomToElementAtPositionResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgZoomToElementAtPositionResponse& from);
  void MergeFrom(const CMsgZoomToElementAtPositionResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgZoomToElementAtPositionResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional float scale = 2;
  bool has_scale() const;
  void clear_scale();
  static const int kScaleFieldNumber = 2;
  float scale() const;
  void set_scale(float value);

  // optional float duration = 3;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 3;
  float duration() const;
  void set_duration(float value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgZoomToElementAtPositionResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_scale();
  void clear_has_scale();
  void set_has_duration();
  void clear_has_duration();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  float scale_;
  float duration_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgScalePageToValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgScalePageToValue) */ {
 public:
  CMsgScalePageToValue();
  virtual ~CMsgScalePageToValue();

  CMsgScalePageToValue(const CMsgScalePageToValue& from);

  inline CMsgScalePageToValue& operator=(const CMsgScalePageToValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgScalePageToValue& default_instance();

  static inline const CMsgScalePageToValue* internal_default_instance() {
    return reinterpret_cast<const CMsgScalePageToValue*>(
               &_CMsgScalePageToValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(CMsgScalePageToValue* other);

  // implements Message ----------------------------------------------

  inline CMsgScalePageToValue* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgScalePageToValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgScalePageToValue& from);
  void MergeFrom(const CMsgScalePageToValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgScalePageToValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional float scale = 2;
  bool has_scale() const;
  void clear_scale();
  static const int kScaleFieldNumber = 2;
  float scale() const;
  void set_scale(float value);

  // optional float x = 3;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 3;
  float x() const;
  void set_x(float value);

  // optional float y = 4;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 4;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgScalePageToValue)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_scale();
  void clear_has_scale();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  float scale_;
  float x_;
  float y_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgScalePageToValueResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgScalePageToValueResponse) */ {
 public:
  CMsgScalePageToValueResponse();
  virtual ~CMsgScalePageToValueResponse();

  CMsgScalePageToValueResponse(const CMsgScalePageToValueResponse& from);

  inline CMsgScalePageToValueResponse& operator=(const CMsgScalePageToValueResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgScalePageToValueResponse& default_instance();

  static inline const CMsgScalePageToValueResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgScalePageToValueResponse*>(
               &_CMsgScalePageToValueResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(CMsgScalePageToValueResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgScalePageToValueResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgScalePageToValueResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgScalePageToValueResponse& from);
  void MergeFrom(const CMsgScalePageToValueResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgScalePageToValueResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional float zoom = 2;
  bool has_zoom() const;
  void clear_zoom();
  static const int kZoomFieldNumber = 2;
  float zoom() const;
  void set_zoom(float value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgScalePageToValueResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_zoom();
  void clear_has_zoom();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  float zoom_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSavePageToJPEG : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSavePageToJPEG) */ {
 public:
  CMsgSavePageToJPEG();
  virtual ~CMsgSavePageToJPEG();

  CMsgSavePageToJPEG(const CMsgSavePageToJPEG& from);

  inline CMsgSavePageToJPEG& operator=(const CMsgSavePageToJPEG& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSavePageToJPEG& default_instance();

  static inline const CMsgSavePageToJPEG* internal_default_instance() {
    return reinterpret_cast<const CMsgSavePageToJPEG*>(
               &_CMsgSavePageToJPEG_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(CMsgSavePageToJPEG* other);

  // implements Message ----------------------------------------------

  inline CMsgSavePageToJPEG* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSavePageToJPEG* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSavePageToJPEG& from);
  void MergeFrom(const CMsgSavePageToJPEG& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSavePageToJPEG* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string filename = 3;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 3;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 width = 4;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 4;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // optional uint32 height = 5;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 5;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSavePageToJPEG)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_url();
  void clear_has_url();
  void set_has_filename();
  void clear_has_filename();
  void set_has_width();
  void clear_has_width();
  void set_has_height();
  void clear_has_height();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSavePageToJPEGResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSavePageToJPEGResponse) */ {
 public:
  CMsgSavePageToJPEGResponse();
  virtual ~CMsgSavePageToJPEGResponse();

  CMsgSavePageToJPEGResponse(const CMsgSavePageToJPEGResponse& from);

  inline CMsgSavePageToJPEGResponse& operator=(const CMsgSavePageToJPEGResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSavePageToJPEGResponse& default_instance();

  static inline const CMsgSavePageToJPEGResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgSavePageToJPEGResponse*>(
               &_CMsgSavePageToJPEGResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(CMsgSavePageToJPEGResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgSavePageToJPEGResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSavePageToJPEGResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSavePageToJPEGResponse& from);
  void MergeFrom(const CMsgSavePageToJPEGResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSavePageToJPEGResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional string filename = 3;
  bool has_filename() const;
  void clear_filename();
  static const int kFilenameFieldNumber = 3;
  const ::std::string& filename() const;
  void set_filename(const ::std::string& value);
  #if LANG_CXX11
  void set_filename(::std::string&& value);
  #endif
  void set_filename(const char* value);
  void set_filename(const char* value, size_t size);
  ::std::string* mutable_filename();
  ::std::string* release_filename();
  void set_allocated_filename(::std::string* filename);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSavePageToJPEGResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_url();
  void clear_has_url();
  void set_has_filename();
  void clear_has_filename();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr filename_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgJSAlert : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgJSAlert) */ {
 public:
  CMsgJSAlert();
  virtual ~CMsgJSAlert();

  CMsgJSAlert(const CMsgJSAlert& from);

  inline CMsgJSAlert& operator=(const CMsgJSAlert& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJSAlert& default_instance();

  static inline const CMsgJSAlert* internal_default_instance() {
    return reinterpret_cast<const CMsgJSAlert*>(
               &_CMsgJSAlert_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(CMsgJSAlert* other);

  // implements Message ----------------------------------------------

  inline CMsgJSAlert* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgJSAlert* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgJSAlert& from);
  void MergeFrom(const CMsgJSAlert& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgJSAlert* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgJSAlert)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_message();
  void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgJSConfirm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgJSConfirm) */ {
 public:
  CMsgJSConfirm();
  virtual ~CMsgJSConfirm();

  CMsgJSConfirm(const CMsgJSConfirm& from);

  inline CMsgJSConfirm& operator=(const CMsgJSConfirm& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJSConfirm& default_instance();

  static inline const CMsgJSConfirm* internal_default_instance() {
    return reinterpret_cast<const CMsgJSConfirm*>(
               &_CMsgJSConfirm_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(CMsgJSConfirm* other);

  // implements Message ----------------------------------------------

  inline CMsgJSConfirm* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgJSConfirm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgJSConfirm& from);
  void MergeFrom(const CMsgJSConfirm& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgJSConfirm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string message = 2;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 2;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgJSConfirm)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_message();
  void clear_has_message();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgJSDialogResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgJSDialogResponse) */ {
 public:
  CMsgJSDialogResponse();
  virtual ~CMsgJSDialogResponse();

  CMsgJSDialogResponse(const CMsgJSDialogResponse& from);

  inline CMsgJSDialogResponse& operator=(const CMsgJSDialogResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJSDialogResponse& default_instance();

  static inline const CMsgJSDialogResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgJSDialogResponse*>(
               &_CMsgJSDialogResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(CMsgJSDialogResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgJSDialogResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgJSDialogResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgJSDialogResponse& from);
  void MergeFrom(const CMsgJSDialogResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgJSDialogResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional bool result = 2;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 2;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgJSDialogResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_result();
  void clear_has_result();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  bool result_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgCanGoBackAndForward : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgCanGoBackAndForward) */ {
 public:
  CMsgCanGoBackAndForward();
  virtual ~CMsgCanGoBackAndForward();

  CMsgCanGoBackAndForward(const CMsgCanGoBackAndForward& from);

  inline CMsgCanGoBackAndForward& operator=(const CMsgCanGoBackAndForward& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCanGoBackAndForward& default_instance();

  static inline const CMsgCanGoBackAndForward* internal_default_instance() {
    return reinterpret_cast<const CMsgCanGoBackAndForward*>(
               &_CMsgCanGoBackAndForward_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(CMsgCanGoBackAndForward* other);

  // implements Message ----------------------------------------------

  inline CMsgCanGoBackAndForward* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgCanGoBackAndForward* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgCanGoBackAndForward& from);
  void MergeFrom(const CMsgCanGoBackAndForward& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgCanGoBackAndForward* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional bool bgoback = 2;
  bool has_bgoback() const;
  void clear_bgoback();
  static const int kBgobackFieldNumber = 2;
  bool bgoback() const;
  void set_bgoback(bool value);

  // optional bool bgoforward = 3;
  bool has_bgoforward() const;
  void clear_bgoforward();
  static const int kBgoforwardFieldNumber = 3;
  bool bgoforward() const;
  void set_bgoforward(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgCanGoBackAndForward)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_bgoback();
  void clear_has_bgoback();
  void set_has_bgoforward();
  void clear_has_bgoforward();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  bool bgoback_;
  bool bgoforward_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgOpenSteamURL : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgOpenSteamURL) */ {
 public:
  CMsgOpenSteamURL();
  virtual ~CMsgOpenSteamURL();

  CMsgOpenSteamURL(const CMsgOpenSteamURL& from);

  inline CMsgOpenSteamURL& operator=(const CMsgOpenSteamURL& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgOpenSteamURL& default_instance();

  static inline const CMsgOpenSteamURL* internal_default_instance() {
    return reinterpret_cast<const CMsgOpenSteamURL*>(
               &_CMsgOpenSteamURL_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(CMsgOpenSteamURL* other);

  // implements Message ----------------------------------------------

  inline CMsgOpenSteamURL* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgOpenSteamURL* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgOpenSteamURL& from);
  void MergeFrom(const CMsgOpenSteamURL& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgOpenSteamURL* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgOpenSteamURL)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetCookie : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSetCookie) */ {
 public:
  CMsgSetCookie();
  virtual ~CMsgSetCookie();

  CMsgSetCookie(const CMsgSetCookie& from);

  inline CMsgSetCookie& operator=(const CMsgSetCookie& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetCookie& default_instance();

  static inline const CMsgSetCookie* internal_default_instance() {
    return reinterpret_cast<const CMsgSetCookie*>(
               &_CMsgSetCookie_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(CMsgSetCookie* other);

  // implements Message ----------------------------------------------

  inline CMsgSetCookie* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetCookie* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetCookie& from);
  void MergeFrom(const CMsgSetCookie& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetCookie* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string key = 1;
  bool has_key() const;
  void clear_key();
  static const int kKeyFieldNumber = 1;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional string path = 3;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 3;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // optional string host = 4;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 4;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // optional uint32 expires = 5;
  bool has_expires() const;
  void clear_expires();
  static const int kExpiresFieldNumber = 5;
  ::google::protobuf::uint32 expires() const;
  void set_expires(::google::protobuf::uint32 value);

  // optional bool secure = 6;
  bool has_secure() const;
  void clear_secure();
  static const int kSecureFieldNumber = 6;
  bool secure() const;
  void set_secure(bool value);

  // optional bool httponly = 7;
  bool has_httponly() const;
  void clear_httponly();
  static const int kHttponlyFieldNumber = 7;
  bool httponly() const;
  void set_httponly(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSetCookie)
 private:
  void set_has_key();
  void clear_has_key();
  void set_has_value();
  void clear_has_value();
  void set_has_path();
  void clear_has_path();
  void set_has_host();
  void clear_has_host();
  void set_has_expires();
  void clear_has_expires();
  void set_has_secure();
  void clear_has_secure();
  void set_has_httponly();
  void clear_has_httponly();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::google::protobuf::uint32 expires_;
  bool secure_;
  bool httponly_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetTargetFrameRate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSetTargetFrameRate) */ {
 public:
  CMsgSetTargetFrameRate();
  virtual ~CMsgSetTargetFrameRate();

  CMsgSetTargetFrameRate(const CMsgSetTargetFrameRate& from);

  inline CMsgSetTargetFrameRate& operator=(const CMsgSetTargetFrameRate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetTargetFrameRate& default_instance();

  static inline const CMsgSetTargetFrameRate* internal_default_instance() {
    return reinterpret_cast<const CMsgSetTargetFrameRate*>(
               &_CMsgSetTargetFrameRate_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(CMsgSetTargetFrameRate* other);

  // implements Message ----------------------------------------------

  inline CMsgSetTargetFrameRate* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetTargetFrameRate* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetTargetFrameRate& from);
  void MergeFrom(const CMsgSetTargetFrameRate& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetTargetFrameRate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 nTargetFrameRate = 2;
  bool has_ntargetframerate() const;
  void clear_ntargetframerate();
  static const int kNTargetFrameRateFieldNumber = 2;
  ::google::protobuf::uint32 ntargetframerate() const;
  void set_ntargetframerate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSetTargetFrameRate)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_ntargetframerate();
  void clear_has_ntargetframerate();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 ntargetframerate_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPauseRepaint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgPauseRepaint) */ {
 public:
  CMsgPauseRepaint();
  virtual ~CMsgPauseRepaint();

  CMsgPauseRepaint(const CMsgPauseRepaint& from);

  inline CMsgPauseRepaint& operator=(const CMsgPauseRepaint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPauseRepaint& default_instance();

  static inline const CMsgPauseRepaint* internal_default_instance() {
    return reinterpret_cast<const CMsgPauseRepaint*>(
               &_CMsgPauseRepaint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(CMsgPauseRepaint* other);

  // implements Message ----------------------------------------------

  inline CMsgPauseRepaint* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPauseRepaint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPauseRepaint& from);
  void MergeFrom(const CMsgPauseRepaint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPauseRepaint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgPauseRepaint)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgFullRepaint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgFullRepaint) */ {
 public:
  CMsgFullRepaint();
  virtual ~CMsgFullRepaint();

  CMsgFullRepaint(const CMsgFullRepaint& from);

  inline CMsgFullRepaint& operator=(const CMsgFullRepaint& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFullRepaint& default_instance();

  static inline const CMsgFullRepaint* internal_default_instance() {
    return reinterpret_cast<const CMsgFullRepaint*>(
               &_CMsgFullRepaint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(CMsgFullRepaint* other);

  // implements Message ----------------------------------------------

  inline CMsgFullRepaint* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgFullRepaint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgFullRepaint& from);
  void MergeFrom(const CMsgFullRepaint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgFullRepaint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgFullRepaint)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgRequestFullScreen : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgRequestFullScreen) */ {
 public:
  CMsgRequestFullScreen();
  virtual ~CMsgRequestFullScreen();

  CMsgRequestFullScreen(const CMsgRequestFullScreen& from);

  inline CMsgRequestFullScreen& operator=(const CMsgRequestFullScreen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestFullScreen& default_instance();

  static inline const CMsgRequestFullScreen* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestFullScreen*>(
               &_CMsgRequestFullScreen_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(CMsgRequestFullScreen* other);

  // implements Message ----------------------------------------------

  inline CMsgRequestFullScreen* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgRequestFullScreen* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgRequestFullScreen& from);
  void MergeFrom(const CMsgRequestFullScreen& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgRequestFullScreen* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgRequestFullScreen)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgRequestFullScreenResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgRequestFullScreenResponse) */ {
 public:
  CMsgRequestFullScreenResponse();
  virtual ~CMsgRequestFullScreenResponse();

  CMsgRequestFullScreenResponse(const CMsgRequestFullScreenResponse& from);

  inline CMsgRequestFullScreenResponse& operator=(const CMsgRequestFullScreenResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgRequestFullScreenResponse& default_instance();

  static inline const CMsgRequestFullScreenResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgRequestFullScreenResponse*>(
               &_CMsgRequestFullScreenResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(CMsgRequestFullScreenResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgRequestFullScreenResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgRequestFullScreenResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgRequestFullScreenResponse& from);
  void MergeFrom(const CMsgRequestFullScreenResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgRequestFullScreenResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional bool ballow = 2;
  bool has_ballow() const;
  void clear_ballow();
  static const int kBallowFieldNumber = 2;
  bool ballow() const;
  void set_ballow(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgRequestFullScreenResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_ballow();
  void clear_has_ballow();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  bool ballow_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgExitFullScreen : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgExitFullScreen) */ {
 public:
  CMsgExitFullScreen();
  virtual ~CMsgExitFullScreen();

  CMsgExitFullScreen(const CMsgExitFullScreen& from);

  inline CMsgExitFullScreen& operator=(const CMsgExitFullScreen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgExitFullScreen& default_instance();

  static inline const CMsgExitFullScreen* internal_default_instance() {
    return reinterpret_cast<const CMsgExitFullScreen*>(
               &_CMsgExitFullScreen_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(CMsgExitFullScreen* other);

  // implements Message ----------------------------------------------

  inline CMsgExitFullScreen* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgExitFullScreen* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgExitFullScreen& from);
  void MergeFrom(const CMsgExitFullScreen& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgExitFullScreen* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgExitFullScreen)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGetCookiesForURL : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgGetCookiesForURL) */ {
 public:
  CMsgGetCookiesForURL();
  virtual ~CMsgGetCookiesForURL();

  CMsgGetCookiesForURL(const CMsgGetCookiesForURL& from);

  inline CMsgGetCookiesForURL& operator=(const CMsgGetCookiesForURL& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGetCookiesForURL& default_instance();

  static inline const CMsgGetCookiesForURL* internal_default_instance() {
    return reinterpret_cast<const CMsgGetCookiesForURL*>(
               &_CMsgGetCookiesForURL_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(CMsgGetCookiesForURL* other);

  // implements Message ----------------------------------------------

  inline CMsgGetCookiesForURL* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGetCookiesForURL* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGetCookiesForURL& from);
  void MergeFrom(const CMsgGetCookiesForURL& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGetCookiesForURL* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgGetCookiesForURL)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CCookie : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CCookie) */ {
 public:
  CCookie();
  virtual ~CCookie();

  CCookie(const CCookie& from);

  inline CCookie& operator=(const CCookie& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CCookie& default_instance();

  static inline const CCookie* internal_default_instance() {
    return reinterpret_cast<const CCookie*>(
               &_CCookie_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(CCookie* other);

  // implements Message ----------------------------------------------

  inline CCookie* New() const PROTOBUF_FINAL { return New(NULL); }

  CCookie* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CCookie& from);
  void MergeFrom(const CCookie& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CCookie* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional string domain = 3;
  bool has_domain() const;
  void clear_domain();
  static const int kDomainFieldNumber = 3;
  const ::std::string& domain() const;
  void set_domain(const ::std::string& value);
  #if LANG_CXX11
  void set_domain(::std::string&& value);
  #endif
  void set_domain(const char* value);
  void set_domain(const char* value, size_t size);
  ::std::string* mutable_domain();
  ::std::string* release_domain();
  void set_allocated_domain(::std::string* domain);

  // optional string path = 4;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 4;
  const ::std::string& path() const;
  void set_path(const ::std::string& value);
  #if LANG_CXX11
  void set_path(::std::string&& value);
  #endif
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  ::std::string* mutable_path();
  ::std::string* release_path();
  void set_allocated_path(::std::string* path);

  // @@protoc_insertion_point(class_scope:proto.steam.CCookie)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_value();
  void clear_has_value();
  void set_has_domain();
  void clear_has_domain();
  void set_has_path();
  void clear_has_path();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::internal::ArenaStringPtr domain_;
  ::google::protobuf::internal::ArenaStringPtr path_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgGetCookiesForURLResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgGetCookiesForURLResponse) */ {
 public:
  CMsgGetCookiesForURLResponse();
  virtual ~CMsgGetCookiesForURLResponse();

  CMsgGetCookiesForURLResponse(const CMsgGetCookiesForURLResponse& from);

  inline CMsgGetCookiesForURLResponse& operator=(const CMsgGetCookiesForURLResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgGetCookiesForURLResponse& default_instance();

  static inline const CMsgGetCookiesForURLResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgGetCookiesForURLResponse*>(
               &_CMsgGetCookiesForURLResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(CMsgGetCookiesForURLResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgGetCookiesForURLResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgGetCookiesForURLResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgGetCookiesForURLResponse& from);
  void MergeFrom(const CMsgGetCookiesForURLResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgGetCookiesForURLResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CCookie cookies = 3;
  int cookies_size() const;
  void clear_cookies();
  static const int kCookiesFieldNumber = 3;
  const ::proto::steam::CCookie& cookies(int index) const;
  ::proto::steam::CCookie* mutable_cookies(int index);
  ::proto::steam::CCookie* add_cookies();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CCookie >*
      mutable_cookies();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CCookie >&
      cookies() const;

  // optional string url = 2;
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 2;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgGetCookiesForURLResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_url();
  void clear_has_url();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CCookie > cookies_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgNodeHasFocus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgNodeHasFocus) */ {
 public:
  CMsgNodeHasFocus();
  virtual ~CMsgNodeHasFocus();

  CMsgNodeHasFocus(const CMsgNodeHasFocus& from);

  inline CMsgNodeHasFocus& operator=(const CMsgNodeHasFocus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgNodeHasFocus& default_instance();

  static inline const CMsgNodeHasFocus* internal_default_instance() {
    return reinterpret_cast<const CMsgNodeHasFocus*>(
               &_CMsgNodeHasFocus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(CMsgNodeHasFocus* other);

  // implements Message ----------------------------------------------

  inline CMsgNodeHasFocus* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgNodeHasFocus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgNodeHasFocus& from);
  void MergeFrom(const CMsgNodeHasFocus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgNodeHasFocus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 3;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional string elementtagname = 4;
  bool has_elementtagname() const;
  void clear_elementtagname();
  static const int kElementtagnameFieldNumber = 4;
  const ::std::string& elementtagname() const;
  void set_elementtagname(const ::std::string& value);
  #if LANG_CXX11
  void set_elementtagname(::std::string&& value);
  #endif
  void set_elementtagname(const char* value);
  void set_elementtagname(const char* value, size_t size);
  ::std::string* mutable_elementtagname();
  ::std::string* release_elementtagname();
  void set_allocated_elementtagname(::std::string* elementtagname);

  // optional string searchbuttontext = 5;
  bool has_searchbuttontext() const;
  void clear_searchbuttontext();
  static const int kSearchbuttontextFieldNumber = 5;
  const ::std::string& searchbuttontext() const;
  void set_searchbuttontext(const ::std::string& value);
  #if LANG_CXX11
  void set_searchbuttontext(::std::string&& value);
  #endif
  void set_searchbuttontext(const char* value);
  void set_searchbuttontext(const char* value, size_t size);
  ::std::string* mutable_searchbuttontext();
  ::std::string* release_searchbuttontext();
  void set_allocated_searchbuttontext(::std::string* searchbuttontext);

  // optional string input_type = 7;
  bool has_input_type() const;
  void clear_input_type();
  static const int kInputTypeFieldNumber = 7;
  const ::std::string& input_type() const;
  void set_input_type(const ::std::string& value);
  #if LANG_CXX11
  void set_input_type(::std::string&& value);
  #endif
  void set_input_type(const char* value);
  void set_input_type(const char* value, size_t size);
  ::std::string* mutable_input_type();
  ::std::string* release_input_type();
  void set_allocated_input_type(::std::string* input_type);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional bool bInput = 2;
  bool has_binput() const;
  void clear_binput();
  static const int kBInputFieldNumber = 2;
  bool binput() const;
  void set_binput(bool value);

  // optional bool bHasMultipleInputs = 6;
  bool has_bhasmultipleinputs() const;
  void clear_bhasmultipleinputs();
  static const int kBHasMultipleInputsFieldNumber = 6;
  bool bhasmultipleinputs() const;
  void set_bhasmultipleinputs(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgNodeHasFocus)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_binput();
  void clear_has_binput();
  void set_has_name();
  void clear_has_name();
  void set_has_elementtagname();
  void clear_has_elementtagname();
  void set_has_searchbuttontext();
  void clear_has_searchbuttontext();
  void set_has_bhasmultipleinputs();
  void clear_has_bhasmultipleinputs();
  void set_has_input_type();
  void clear_has_input_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr elementtagname_;
  ::google::protobuf::internal::ArenaStringPtr searchbuttontext_;
  ::google::protobuf::internal::ArenaStringPtr input_type_;
  ::google::protobuf::uint32 browser_handle_;
  bool binput_;
  bool bhasmultipleinputs_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgZoomToFocusedElement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgZoomToFocusedElement) */ {
 public:
  CMsgZoomToFocusedElement();
  virtual ~CMsgZoomToFocusedElement();

  CMsgZoomToFocusedElement(const CMsgZoomToFocusedElement& from);

  inline CMsgZoomToFocusedElement& operator=(const CMsgZoomToFocusedElement& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgZoomToFocusedElement& default_instance();

  static inline const CMsgZoomToFocusedElement* internal_default_instance() {
    return reinterpret_cast<const CMsgZoomToFocusedElement*>(
               &_CMsgZoomToFocusedElement_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(CMsgZoomToFocusedElement* other);

  // implements Message ----------------------------------------------

  inline CMsgZoomToFocusedElement* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgZoomToFocusedElement* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgZoomToFocusedElement& from);
  void MergeFrom(const CMsgZoomToFocusedElement& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgZoomToFocusedElement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgZoomToFocusedElement)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgCloseFullScreenFlashIfOpen : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgCloseFullScreenFlashIfOpen) */ {
 public:
  CMsgCloseFullScreenFlashIfOpen();
  virtual ~CMsgCloseFullScreenFlashIfOpen();

  CMsgCloseFullScreenFlashIfOpen(const CMsgCloseFullScreenFlashIfOpen& from);

  inline CMsgCloseFullScreenFlashIfOpen& operator=(const CMsgCloseFullScreenFlashIfOpen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCloseFullScreenFlashIfOpen& default_instance();

  static inline const CMsgCloseFullScreenFlashIfOpen* internal_default_instance() {
    return reinterpret_cast<const CMsgCloseFullScreenFlashIfOpen*>(
               &_CMsgCloseFullScreenFlashIfOpen_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(CMsgCloseFullScreenFlashIfOpen* other);

  // implements Message ----------------------------------------------

  inline CMsgCloseFullScreenFlashIfOpen* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgCloseFullScreenFlashIfOpen* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgCloseFullScreenFlashIfOpen& from);
  void MergeFrom(const CMsgCloseFullScreenFlashIfOpen& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgCloseFullScreenFlashIfOpen* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgCloseFullScreenFlashIfOpen)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPauseFullScreenFlashMovieIfOpen : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgPauseFullScreenFlashMovieIfOpen) */ {
 public:
  CMsgPauseFullScreenFlashMovieIfOpen();
  virtual ~CMsgPauseFullScreenFlashMovieIfOpen();

  CMsgPauseFullScreenFlashMovieIfOpen(const CMsgPauseFullScreenFlashMovieIfOpen& from);

  inline CMsgPauseFullScreenFlashMovieIfOpen& operator=(const CMsgPauseFullScreenFlashMovieIfOpen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPauseFullScreenFlashMovieIfOpen& default_instance();

  static inline const CMsgPauseFullScreenFlashMovieIfOpen* internal_default_instance() {
    return reinterpret_cast<const CMsgPauseFullScreenFlashMovieIfOpen*>(
               &_CMsgPauseFullScreenFlashMovieIfOpen_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(CMsgPauseFullScreenFlashMovieIfOpen* other);

  // implements Message ----------------------------------------------

  inline CMsgPauseFullScreenFlashMovieIfOpen* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPauseFullScreenFlashMovieIfOpen* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPauseFullScreenFlashMovieIfOpen& from);
  void MergeFrom(const CMsgPauseFullScreenFlashMovieIfOpen& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPauseFullScreenFlashMovieIfOpen* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgPauseFullScreenFlashMovieIfOpen)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgFocusedNodeText : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgFocusedNodeText) */ {
 public:
  CMsgFocusedNodeText();
  virtual ~CMsgFocusedNodeText();

  CMsgFocusedNodeText(const CMsgFocusedNodeText& from);

  inline CMsgFocusedNodeText& operator=(const CMsgFocusedNodeText& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFocusedNodeText& default_instance();

  static inline const CMsgFocusedNodeText* internal_default_instance() {
    return reinterpret_cast<const CMsgFocusedNodeText*>(
               &_CMsgFocusedNodeText_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(CMsgFocusedNodeText* other);

  // implements Message ----------------------------------------------

  inline CMsgFocusedNodeText* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgFocusedNodeText* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgFocusedNodeText& from);
  void MergeFrom(const CMsgFocusedNodeText& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgFocusedNodeText* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgFocusedNodeText)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgFocusedNodeTextResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgFocusedNodeTextResponse) */ {
 public:
  CMsgFocusedNodeTextResponse();
  virtual ~CMsgFocusedNodeTextResponse();

  CMsgFocusedNodeTextResponse(const CMsgFocusedNodeTextResponse& from);

  inline CMsgFocusedNodeTextResponse& operator=(const CMsgFocusedNodeTextResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgFocusedNodeTextResponse& default_instance();

  static inline const CMsgFocusedNodeTextResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgFocusedNodeTextResponse*>(
               &_CMsgFocusedNodeTextResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(CMsgFocusedNodeTextResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgFocusedNodeTextResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgFocusedNodeTextResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgFocusedNodeTextResponse& from);
  void MergeFrom(const CMsgFocusedNodeTextResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgFocusedNodeTextResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const char* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgFocusedNodeTextResponse)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgBuildID : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgBuildID) */ {
 public:
  CMsgBuildID();
  virtual ~CMsgBuildID();

  CMsgBuildID(const CMsgBuildID& from);

  inline CMsgBuildID& operator=(const CMsgBuildID& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgBuildID& default_instance();

  static inline const CMsgBuildID* internal_default_instance() {
    return reinterpret_cast<const CMsgBuildID*>(
               &_CMsgBuildID_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(CMsgBuildID* other);

  // implements Message ----------------------------------------------

  inline CMsgBuildID* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgBuildID* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgBuildID& from);
  void MergeFrom(const CMsgBuildID& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgBuildID* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 build_id = 1;
  bool has_build_id() const;
  void clear_build_id();
  static const int kBuildIdFieldNumber = 1;
  ::google::protobuf::uint64 build_id() const;
  void set_build_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgBuildID)
 private:
  void set_has_build_id();
  void clear_has_build_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 build_id_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgOpenDevTools : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgOpenDevTools) */ {
 public:
  CMsgOpenDevTools();
  virtual ~CMsgOpenDevTools();

  CMsgOpenDevTools(const CMsgOpenDevTools& from);

  inline CMsgOpenDevTools& operator=(const CMsgOpenDevTools& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgOpenDevTools& default_instance();

  static inline const CMsgOpenDevTools* internal_default_instance() {
    return reinterpret_cast<const CMsgOpenDevTools*>(
               &_CMsgOpenDevTools_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(CMsgOpenDevTools* other);

  // implements Message ----------------------------------------------

  inline CMsgOpenDevTools* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgOpenDevTools* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgOpenDevTools& from);
  void MergeFrom(const CMsgOpenDevTools& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgOpenDevTools* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgOpenDevTools)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgCloseDevTools : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgCloseDevTools) */ {
 public:
  CMsgCloseDevTools();
  virtual ~CMsgCloseDevTools();

  CMsgCloseDevTools(const CMsgCloseDevTools& from);

  inline CMsgCloseDevTools& operator=(const CMsgCloseDevTools& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgCloseDevTools& default_instance();

  static inline const CMsgCloseDevTools* internal_default_instance() {
    return reinterpret_cast<const CMsgCloseDevTools*>(
               &_CMsgCloseDevTools_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(CMsgCloseDevTools* other);

  // implements Message ----------------------------------------------

  inline CMsgCloseDevTools* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgCloseDevTools* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgCloseDevTools& from);
  void MergeFrom(const CMsgCloseDevTools& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgCloseDevTools* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgCloseDevTools)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgUnlockH264 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgUnlockH264) */ {
 public:
  CMsgUnlockH264();
  virtual ~CMsgUnlockH264();

  CMsgUnlockH264(const CMsgUnlockH264& from);

  inline CMsgUnlockH264& operator=(const CMsgUnlockH264& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgUnlockH264& default_instance();

  static inline const CMsgUnlockH264* internal_default_instance() {
    return reinterpret_cast<const CMsgUnlockH264*>(
               &_CMsgUnlockH264_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(CMsgUnlockH264* other);

  // implements Message ----------------------------------------------

  inline CMsgUnlockH264* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgUnlockH264* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgUnlockH264& from);
  void MergeFrom(const CMsgUnlockH264& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgUnlockH264* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string unlock_code = 2;
  bool has_unlock_code() const;
  void clear_unlock_code();
  static const int kUnlockCodeFieldNumber = 2;
  const ::std::string& unlock_code() const;
  void set_unlock_code(const ::std::string& value);
  #if LANG_CXX11
  void set_unlock_code(::std::string&& value);
  #endif
  void set_unlock_code(const char* value);
  void set_unlock_code(const char* value, size_t size);
  ::std::string* mutable_unlock_code();
  ::std::string* release_unlock_code();
  void set_allocated_unlock_code(::std::string* unlock_code);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgUnlockH264)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_unlock_code();
  void clear_has_unlock_code();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr unlock_code_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgScreenInformationChanged : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgScreenInformationChanged) */ {
 public:
  CMsgScreenInformationChanged();
  virtual ~CMsgScreenInformationChanged();

  CMsgScreenInformationChanged(const CMsgScreenInformationChanged& from);

  inline CMsgScreenInformationChanged& operator=(const CMsgScreenInformationChanged& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgScreenInformationChanged& default_instance();

  static inline const CMsgScreenInformationChanged* internal_default_instance() {
    return reinterpret_cast<const CMsgScreenInformationChanged*>(
               &_CMsgScreenInformationChanged_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(CMsgScreenInformationChanged* other);

  // implements Message ----------------------------------------------

  inline CMsgScreenInformationChanged* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgScreenInformationChanged* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgScreenInformationChanged& from);
  void MergeFrom(const CMsgScreenInformationChanged& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgScreenInformationChanged* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional uint32 override_width = 2;
  bool has_override_width() const;
  void clear_override_width();
  static const int kOverrideWidthFieldNumber = 2;
  ::google::protobuf::uint32 override_width() const;
  void set_override_width(::google::protobuf::uint32 value);

  // optional uint32 override_height = 3;
  bool has_override_height() const;
  void clear_override_height();
  static const int kOverrideHeightFieldNumber = 3;
  ::google::protobuf::uint32 override_height() const;
  void set_override_height(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgScreenInformationChanged)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_override_width();
  void clear_has_override_width();
  void set_has_override_height();
  void clear_has_override_height();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  ::google::protobuf::uint32 override_width_;
  ::google::protobuf::uint32 override_height_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClearAllCookies : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClearAllCookies) */ {
 public:
  CMsgClearAllCookies();
  virtual ~CMsgClearAllCookies();

  CMsgClearAllCookies(const CMsgClearAllCookies& from);

  inline CMsgClearAllCookies& operator=(const CMsgClearAllCookies& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClearAllCookies& default_instance();

  static inline const CMsgClearAllCookies* internal_default_instance() {
    return reinterpret_cast<const CMsgClearAllCookies*>(
               &_CMsgClearAllCookies_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(CMsgClearAllCookies* other);

  // implements Message ----------------------------------------------

  inline CMsgClearAllCookies* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClearAllCookies* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClearAllCookies& from);
  void MergeFrom(const CMsgClearAllCookies& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClearAllCookies* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClearAllCookies)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgScreenDPI : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgScreenDPI) */ {
 public:
  CMsgScreenDPI();
  virtual ~CMsgScreenDPI();

  CMsgScreenDPI(const CMsgScreenDPI& from);

  inline CMsgScreenDPI& operator=(const CMsgScreenDPI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgScreenDPI& default_instance();

  static inline const CMsgScreenDPI* internal_default_instance() {
    return reinterpret_cast<const CMsgScreenDPI*>(
               &_CMsgScreenDPI_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(CMsgScreenDPI* other);

  // implements Message ----------------------------------------------

  inline CMsgScreenDPI* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgScreenDPI* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgScreenDPI& from);
  void MergeFrom(const CMsgScreenDPI& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgScreenDPI* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional float dpi_scaling = 2;
  bool has_dpi_scaling() const;
  void clear_dpi_scaling();
  static const int kDpiScalingFieldNumber = 2;
  float dpi_scaling() const;
  void set_dpi_scaling(float value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgScreenDPI)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_dpi_scaling();
  void clear_has_dpi_scaling();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  float dpi_scaling_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgAuthedSteamDomains : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgAuthedSteamDomains) */ {
 public:
  CMsgAuthedSteamDomains();
  virtual ~CMsgAuthedSteamDomains();

  CMsgAuthedSteamDomains(const CMsgAuthedSteamDomains& from);

  inline CMsgAuthedSteamDomains& operator=(const CMsgAuthedSteamDomains& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgAuthedSteamDomains& default_instance();

  static inline const CMsgAuthedSteamDomains* internal_default_instance() {
    return reinterpret_cast<const CMsgAuthedSteamDomains*>(
               &_CMsgAuthedSteamDomains_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(CMsgAuthedSteamDomains* other);

  // implements Message ----------------------------------------------

  inline CMsgAuthedSteamDomains* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgAuthedSteamDomains* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgAuthedSteamDomains& from);
  void MergeFrom(const CMsgAuthedSteamDomains& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgAuthedSteamDomains* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string domains = 1;
  int domains_size() const;
  void clear_domains();
  static const int kDomainsFieldNumber = 1;
  const ::std::string& domains(int index) const;
  ::std::string* mutable_domains(int index);
  void set_domains(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_domains(int index, ::std::string&& value);
  #endif
  void set_domains(int index, const char* value);
  void set_domains(int index, const char* value, size_t size);
  ::std::string* add_domains();
  void add_domains(const ::std::string& value);
  #if LANG_CXX11
  void add_domains(::std::string&& value);
  #endif
  void add_domains(const char* value);
  void add_domains(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& domains() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_domains();

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgAuthedSteamDomains)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> domains_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSteamAuthNeeded : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSteamAuthNeeded) */ {
 public:
  CMsgSteamAuthNeeded();
  virtual ~CMsgSteamAuthNeeded();

  CMsgSteamAuthNeeded(const CMsgSteamAuthNeeded& from);

  inline CMsgSteamAuthNeeded& operator=(const CMsgSteamAuthNeeded& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamAuthNeeded& default_instance();

  static inline const CMsgSteamAuthNeeded* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamAuthNeeded*>(
               &_CMsgSteamAuthNeeded_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(CMsgSteamAuthNeeded* other);

  // implements Message ----------------------------------------------

  inline CMsgSteamAuthNeeded* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamAuthNeeded* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamAuthNeeded& from);
  void MergeFrom(const CMsgSteamAuthNeeded& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamAuthNeeded* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool filler = 1;
  bool has_filler() const;
  void clear_filler();
  static const int kFillerFieldNumber = 1;
  bool filler() const;
  void set_filler(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSteamAuthNeeded)
 private:
  void set_has_filler();
  void clear_has_filler();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool filler_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSteamAuthCookiesSet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSteamAuthCookiesSet) */ {
 public:
  CMsgSteamAuthCookiesSet();
  virtual ~CMsgSteamAuthCookiesSet();

  CMsgSteamAuthCookiesSet(const CMsgSteamAuthCookiesSet& from);

  inline CMsgSteamAuthCookiesSet& operator=(const CMsgSteamAuthCookiesSet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSteamAuthCookiesSet& default_instance();

  static inline const CMsgSteamAuthCookiesSet* internal_default_instance() {
    return reinterpret_cast<const CMsgSteamAuthCookiesSet*>(
               &_CMsgSteamAuthCookiesSet_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(CMsgSteamAuthCookiesSet* other);

  // implements Message ----------------------------------------------

  inline CMsgSteamAuthCookiesSet* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSteamAuthCookiesSet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSteamAuthCookiesSet& from);
  void MergeFrom(const CMsgSteamAuthCookiesSet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSteamAuthCookiesSet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool success = 1;
  bool has_success() const;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSteamAuthCookiesSet)
 private:
  void set_has_success();
  void clear_has_success();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool success_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgJSRegisterMethod : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgJSRegisterMethod) */ {
 public:
  CMsgJSRegisterMethod();
  virtual ~CMsgJSRegisterMethod();

  CMsgJSRegisterMethod(const CMsgJSRegisterMethod& from);

  inline CMsgJSRegisterMethod& operator=(const CMsgJSRegisterMethod& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJSRegisterMethod& default_instance();

  static inline const CMsgJSRegisterMethod* internal_default_instance() {
    return reinterpret_cast<const CMsgJSRegisterMethod*>(
               &_CMsgJSRegisterMethod_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(CMsgJSRegisterMethod* other);

  // implements Message ----------------------------------------------

  inline CMsgJSRegisterMethod* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgJSRegisterMethod* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgJSRegisterMethod& from);
  void MergeFrom(const CMsgJSRegisterMethod& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgJSRegisterMethod* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // optional .proto.steam.EJSRegisterMethodType method_type = 3 [default = k_EJSRegisterMethodType_Invalid];
  bool has_method_type() const;
  void clear_method_type();
  static const int kMethodTypeFieldNumber = 3;
  ::proto::steam::EJSRegisterMethodType method_type() const;
  void set_method_type(::proto::steam::EJSRegisterMethodType value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgJSRegisterMethod)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_name();
  void clear_has_name();
  void set_has_method_type();
  void clear_has_method_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 browser_handle_;
  int method_type_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CJSMethodArgument : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CJSMethodArgument) */ {
 public:
  CJSMethodArgument();
  virtual ~CJSMethodArgument();

  CJSMethodArgument(const CJSMethodArgument& from);

  inline CJSMethodArgument& operator=(const CJSMethodArgument& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CJSMethodArgument& default_instance();

  static inline const CJSMethodArgument* internal_default_instance() {
    return reinterpret_cast<const CJSMethodArgument*>(
               &_CJSMethodArgument_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(CJSMethodArgument* other);

  // implements Message ----------------------------------------------

  inline CJSMethodArgument* New() const PROTOBUF_FINAL { return New(NULL); }

  CJSMethodArgument* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CJSMethodArgument& from);
  void MergeFrom(const CJSMethodArgument& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CJSMethodArgument* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string json_data = 1;
  bool has_json_data() const;
  void clear_json_data();
  static const int kJsonDataFieldNumber = 1;
  const ::std::string& json_data() const;
  void set_json_data(const ::std::string& value);
  #if LANG_CXX11
  void set_json_data(::std::string&& value);
  #endif
  void set_json_data(const char* value);
  void set_json_data(const char* value, size_t size);
  ::std::string* mutable_json_data();
  ::std::string* release_json_data();
  void set_allocated_json_data(::std::string* json_data);

  // optional uint64 function_handle = 2;
  bool has_function_handle() const;
  void clear_function_handle();
  static const int kFunctionHandleFieldNumber = 2;
  ::google::protobuf::uint64 function_handle() const;
  void set_function_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CJSMethodArgument)
 private:
  void set_has_json_data();
  void clear_has_json_data();
  void set_has_function_handle();
  void clear_has_function_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr json_data_;
  ::google::protobuf::uint64 function_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgJSValue_JSObjectProperty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgJSValue.JSObjectProperty) */ {
 public:
  CMsgJSValue_JSObjectProperty();
  virtual ~CMsgJSValue_JSObjectProperty();

  CMsgJSValue_JSObjectProperty(const CMsgJSValue_JSObjectProperty& from);

  inline CMsgJSValue_JSObjectProperty& operator=(const CMsgJSValue_JSObjectProperty& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJSValue_JSObjectProperty& default_instance();

  static inline const CMsgJSValue_JSObjectProperty* internal_default_instance() {
    return reinterpret_cast<const CMsgJSValue_JSObjectProperty*>(
               &_CMsgJSValue_JSObjectProperty_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(CMsgJSValue_JSObjectProperty* other);

  // implements Message ----------------------------------------------

  inline CMsgJSValue_JSObjectProperty* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgJSValue_JSObjectProperty* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgJSValue_JSObjectProperty& from);
  void MergeFrom(const CMsgJSValue_JSObjectProperty& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgJSValue_JSObjectProperty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .proto.steam.CMsgJSValue value = 2;
  bool has_value() const;
  void clear_value();
  static const int kValueFieldNumber = 2;
  const ::proto::steam::CMsgJSValue& value() const;
  ::proto::steam::CMsgJSValue* mutable_value();
  ::proto::steam::CMsgJSValue* release_value();
  void set_allocated_value(::proto::steam::CMsgJSValue* value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgJSValue.JSObjectProperty)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_value();
  void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::proto::steam::CMsgJSValue* value_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgJSValue : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgJSValue) */ {
 public:
  CMsgJSValue();
  virtual ~CMsgJSValue();

  CMsgJSValue(const CMsgJSValue& from);

  inline CMsgJSValue& operator=(const CMsgJSValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJSValue& default_instance();

  static inline const CMsgJSValue* internal_default_instance() {
    return reinterpret_cast<const CMsgJSValue*>(
               &_CMsgJSValue_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    110;

  void Swap(CMsgJSValue* other);

  // implements Message ----------------------------------------------

  inline CMsgJSValue* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgJSValue* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgJSValue& from);
  void MergeFrom(const CMsgJSValue& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgJSValue* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgJSValue_JSObjectProperty JSObjectProperty;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CMsgJSValue array_values = 9;
  int array_values_size() const;
  void clear_array_values();
  static const int kArrayValuesFieldNumber = 9;
  const ::proto::steam::CMsgJSValue& array_values(int index) const;
  ::proto::steam::CMsgJSValue* mutable_array_values(int index);
  ::proto::steam::CMsgJSValue* add_array_values();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue >*
      mutable_array_values();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue >&
      array_values() const;

  // repeated .proto.steam.CMsgJSValue.JSObjectProperty object_properties = 11;
  int object_properties_size() const;
  void clear_object_properties();
  static const int kObjectPropertiesFieldNumber = 11;
  const ::proto::steam::CMsgJSValue_JSObjectProperty& object_properties(int index) const;
  ::proto::steam::CMsgJSValue_JSObjectProperty* mutable_object_properties(int index);
  ::proto::steam::CMsgJSValue_JSObjectProperty* add_object_properties();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue_JSObjectProperty >*
      mutable_object_properties();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue_JSObjectProperty >&
      object_properties() const;

  // optional string string_value = 5;
  bool has_string_value() const;
  void clear_string_value();
  static const int kStringValueFieldNumber = 5;
  const ::std::string& string_value() const;
  void set_string_value(const ::std::string& value);
  #if LANG_CXX11
  void set_string_value(::std::string&& value);
  #endif
  void set_string_value(const char* value);
  void set_string_value(const char* value, size_t size);
  ::std::string* mutable_string_value();
  ::std::string* release_string_value();
  void set_allocated_string_value(::std::string* string_value);

  // optional int32 int_value = 2;
  bool has_int_value() const;
  void clear_int_value();
  static const int kIntValueFieldNumber = 2;
  ::google::protobuf::int32 int_value() const;
  void set_int_value(::google::protobuf::int32 value);

  // optional uint32 uint_value = 3;
  bool has_uint_value() const;
  void clear_uint_value();
  static const int kUintValueFieldNumber = 3;
  ::google::protobuf::uint32 uint_value() const;
  void set_uint_value(::google::protobuf::uint32 value);

  // optional float float_value = 4;
  bool has_float_value() const;
  void clear_float_value();
  static const int kFloatValueFieldNumber = 4;
  float float_value() const;
  void set_float_value(float value);

  // optional bool bool_value = 1;
  bool has_bool_value() const;
  void clear_bool_value();
  static const int kBoolValueFieldNumber = 1;
  bool bool_value() const;
  void set_bool_value(bool value);

  // optional bool is_array = 8;
  bool has_is_array() const;
  void clear_is_array();
  static const int kIsArrayFieldNumber = 8;
  bool is_array() const;
  void set_is_array(bool value);

  // optional bool is_object = 10;
  bool has_is_object() const;
  void clear_is_object();
  static const int kIsObjectFieldNumber = 10;
  bool is_object() const;
  void set_is_object(bool value);

  // optional uint64 function_handle = 6;
  bool has_function_handle() const;
  void clear_function_handle();
  static const int kFunctionHandleFieldNumber = 6;
  ::google::protobuf::uint64 function_handle() const;
  void set_function_handle(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgJSValue)
 private:
  void set_has_bool_value();
  void clear_has_bool_value();
  void set_has_int_value();
  void clear_has_int_value();
  void set_has_uint_value();
  void clear_has_uint_value();
  void set_has_float_value();
  void clear_has_float_value();
  void set_has_string_value();
  void clear_has_string_value();
  void set_has_function_handle();
  void clear_has_function_handle();
  void set_has_is_array();
  void clear_has_is_array();
  void set_has_is_object();
  void clear_has_is_object();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue > array_values_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue_JSObjectProperty > object_properties_;
  ::google::protobuf::internal::ArenaStringPtr string_value_;
  ::google::protobuf::int32 int_value_;
  ::google::protobuf::uint32 uint_value_;
  float float_value_;
  bool bool_value_;
  bool is_array_;
  bool is_object_;
  ::google::protobuf::uint64 function_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgJSMethodCall : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgJSMethodCall) */ {
 public:
  CMsgJSMethodCall();
  virtual ~CMsgJSMethodCall();

  CMsgJSMethodCall(const CMsgJSMethodCall& from);

  inline CMsgJSMethodCall& operator=(const CMsgJSMethodCall& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJSMethodCall& default_instance();

  static inline const CMsgJSMethodCall* internal_default_instance() {
    return reinterpret_cast<const CMsgJSMethodCall*>(
               &_CMsgJSMethodCall_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(CMsgJSMethodCall* other);

  // implements Message ----------------------------------------------

  inline CMsgJSMethodCall* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgJSMethodCall* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgJSMethodCall& from);
  void MergeFrom(const CMsgJSMethodCall& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgJSMethodCall* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CMsgJSValue arguments = 3;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 3;
  const ::proto::steam::CMsgJSValue& arguments(int index) const;
  ::proto::steam::CMsgJSValue* mutable_arguments(int index);
  ::proto::steam::CMsgJSValue* add_arguments();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue >*
      mutable_arguments();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue >&
      arguments() const;

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgJSMethodCall)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_name();
  void clear_has_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue > arguments_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgJSExecuteCallback : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgJSExecuteCallback) */ {
 public:
  CMsgJSExecuteCallback();
  virtual ~CMsgJSExecuteCallback();

  CMsgJSExecuteCallback(const CMsgJSExecuteCallback& from);

  inline CMsgJSExecuteCallback& operator=(const CMsgJSExecuteCallback& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJSExecuteCallback& default_instance();

  static inline const CMsgJSExecuteCallback* internal_default_instance() {
    return reinterpret_cast<const CMsgJSExecuteCallback*>(
               &_CMsgJSExecuteCallback_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(CMsgJSExecuteCallback* other);

  // implements Message ----------------------------------------------

  inline CMsgJSExecuteCallback* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgJSExecuteCallback* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgJSExecuteCallback& from);
  void MergeFrom(const CMsgJSExecuteCallback& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgJSExecuteCallback* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CMsgJSValue arguments = 3;
  int arguments_size() const;
  void clear_arguments();
  static const int kArgumentsFieldNumber = 3;
  const ::proto::steam::CMsgJSValue& arguments(int index) const;
  ::proto::steam::CMsgJSValue* mutable_arguments(int index);
  ::proto::steam::CMsgJSValue* add_arguments();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue >*
      mutable_arguments();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue >&
      arguments() const;

  // optional uint64 function_handle = 2;
  bool has_function_handle() const;
  void clear_function_handle();
  static const int kFunctionHandleFieldNumber = 2;
  ::google::protobuf::uint64 function_handle() const;
  void set_function_handle(::google::protobuf::uint64 value);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgJSExecuteCallback)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_function_handle();
  void clear_has_function_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue > arguments_;
  ::google::protobuf::uint64 function_handle_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgJSReleaseCallback : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgJSReleaseCallback) */ {
 public:
  CMsgJSReleaseCallback();
  virtual ~CMsgJSReleaseCallback();

  CMsgJSReleaseCallback(const CMsgJSReleaseCallback& from);

  inline CMsgJSReleaseCallback& operator=(const CMsgJSReleaseCallback& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJSReleaseCallback& default_instance();

  static inline const CMsgJSReleaseCallback* internal_default_instance() {
    return reinterpret_cast<const CMsgJSReleaseCallback*>(
               &_CMsgJSReleaseCallback_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(CMsgJSReleaseCallback* other);

  // implements Message ----------------------------------------------

  inline CMsgJSReleaseCallback* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgJSReleaseCallback* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgJSReleaseCallback& from);
  void MergeFrom(const CMsgJSReleaseCallback& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgJSReleaseCallback* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 function_handle = 2;
  bool has_function_handle() const;
  void clear_function_handle();
  static const int kFunctionHandleFieldNumber = 2;
  ::google::protobuf::uint64 function_handle() const;
  void set_function_handle(::google::protobuf::uint64 value);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgJSReleaseCallback)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_function_handle();
  void clear_has_function_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 function_handle_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgJSRaiseException : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgJSRaiseException) */ {
 public:
  CMsgJSRaiseException();
  virtual ~CMsgJSRaiseException();

  CMsgJSRaiseException(const CMsgJSRaiseException& from);

  inline CMsgJSRaiseException& operator=(const CMsgJSRaiseException& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJSRaiseException& default_instance();

  static inline const CMsgJSRaiseException* internal_default_instance() {
    return reinterpret_cast<const CMsgJSRaiseException*>(
               &_CMsgJSRaiseException_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(CMsgJSRaiseException* other);

  // implements Message ----------------------------------------------

  inline CMsgJSRaiseException* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgJSRaiseException* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgJSRaiseException& from);
  void MergeFrom(const CMsgJSRaiseException& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgJSRaiseException* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string exception = 2;
  bool has_exception() const;
  void clear_exception();
  static const int kExceptionFieldNumber = 2;
  const ::std::string& exception() const;
  void set_exception(const ::std::string& value);
  #if LANG_CXX11
  void set_exception(::std::string&& value);
  #endif
  void set_exception(const char* value);
  void set_exception(const char* value, size_t size);
  ::std::string* mutable_exception();
  ::std::string* release_exception();
  void set_allocated_exception(::std::string* exception);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgJSRaiseException)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_exception();
  void clear_has_exception();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr exception_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgLoadLocalization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgLoadLocalization) */ {
 public:
  CMsgLoadLocalization();
  virtual ~CMsgLoadLocalization();

  CMsgLoadLocalization(const CMsgLoadLocalization& from);

  inline CMsgLoadLocalization& operator=(const CMsgLoadLocalization& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgLoadLocalization& default_instance();

  static inline const CMsgLoadLocalization* internal_default_instance() {
    return reinterpret_cast<const CMsgLoadLocalization*>(
               &_CMsgLoadLocalization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    115;

  void Swap(CMsgLoadLocalization* other);

  // implements Message ----------------------------------------------

  inline CMsgLoadLocalization* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgLoadLocalization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgLoadLocalization& from);
  void MergeFrom(const CMsgLoadLocalization& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgLoadLocalization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string localization_path = 2;
  bool has_localization_path() const;
  void clear_localization_path();
  static const int kLocalizationPathFieldNumber = 2;
  const ::std::string& localization_path() const;
  void set_localization_path(const ::std::string& value);
  #if LANG_CXX11
  void set_localization_path(::std::string&& value);
  #endif
  void set_localization_path(const char* value);
  void set_localization_path(const char* value, size_t size);
  ::std::string* mutable_localization_path();
  ::std::string* release_localization_path();
  void set_allocated_localization_path(::std::string* localization_path);

  // optional string language = 3;
  bool has_language() const;
  void clear_language();
  static const int kLanguageFieldNumber = 3;
  const ::std::string& language() const;
  void set_language(const ::std::string& value);
  #if LANG_CXX11
  void set_language(::std::string&& value);
  #endif
  void set_language(const char* value);
  void set_language(const char* value, size_t size);
  ::std::string* mutable_language();
  ::std::string* release_language();
  void set_allocated_language(::std::string* language);

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgLoadLocalization)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();
  void set_has_localization_path();
  void clear_has_localization_path();
  void set_has_language();
  void clear_has_language();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr localization_path_;
  ::google::protobuf::internal::ArenaStringPtr language_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgEnableSteamClientAPI : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgEnableSteamClientAPI) */ {
 public:
  CMsgEnableSteamClientAPI();
  virtual ~CMsgEnableSteamClientAPI();

  CMsgEnableSteamClientAPI(const CMsgEnableSteamClientAPI& from);

  inline CMsgEnableSteamClientAPI& operator=(const CMsgEnableSteamClientAPI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgEnableSteamClientAPI& default_instance();

  static inline const CMsgEnableSteamClientAPI* internal_default_instance() {
    return reinterpret_cast<const CMsgEnableSteamClientAPI*>(
               &_CMsgEnableSteamClientAPI_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(CMsgEnableSteamClientAPI* other);

  // implements Message ----------------------------------------------

  inline CMsgEnableSteamClientAPI* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgEnableSteamClientAPI* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgEnableSteamClientAPI& from);
  void MergeFrom(const CMsgEnableSteamClientAPI& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgEnableSteamClientAPI* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 browser_handle = 1;
  bool has_browser_handle() const;
  void clear_browser_handle();
  static const int kBrowserHandleFieldNumber = 1;
  ::google::protobuf::uint32 browser_handle() const;
  void set_browser_handle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgEnableSteamClientAPI)
 private:
  void set_has_browser_handle();
  void clear_has_browser_handle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 browser_handle_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgJumpListLink : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgJumpListLink) */ {
 public:
  CMsgJumpListLink();
  virtual ~CMsgJumpListLink();

  CMsgJumpListLink(const CMsgJumpListLink& from);

  inline CMsgJumpListLink& operator=(const CMsgJumpListLink& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgJumpListLink& default_instance();

  static inline const CMsgJumpListLink* internal_default_instance() {
    return reinterpret_cast<const CMsgJumpListLink*>(
               &_CMsgJumpListLink_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    117;

  void Swap(CMsgJumpListLink* other);

  // implements Message ----------------------------------------------

  inline CMsgJumpListLink* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgJumpListLink* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgJumpListLink& from);
  void MergeFrom(const CMsgJumpListLink& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgJumpListLink* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string display_name = 1;
  bool has_display_name() const;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 1;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);

  // optional string url_link = 2;
  bool has_url_link() const;
  void clear_url_link();
  static const int kUrlLinkFieldNumber = 2;
  const ::std::string& url_link() const;
  void set_url_link(const ::std::string& value);
  #if LANG_CXX11
  void set_url_link(::std::string&& value);
  #endif
  void set_url_link(const char* value);
  void set_url_link(const char* value, size_t size);
  ::std::string* mutable_url_link();
  ::std::string* release_url_link();
  void set_allocated_url_link(::std::string* url_link);

  // optional string icon_path = 3;
  bool has_icon_path() const;
  void clear_icon_path();
  static const int kIconPathFieldNumber = 3;
  const ::std::string& icon_path() const;
  void set_icon_path(const ::std::string& value);
  #if LANG_CXX11
  void set_icon_path(::std::string&& value);
  #endif
  void set_icon_path(const char* value);
  void set_icon_path(const char* value, size_t size);
  ::std::string* mutable_icon_path();
  ::std::string* release_icon_path();
  void set_allocated_icon_path(::std::string* icon_path);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgJumpListLink)
 private:
  void set_has_display_name();
  void clear_has_display_name();
  void set_has_url_link();
  void clear_has_url_link();
  void set_has_icon_path();
  void clear_has_icon_path();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::internal::ArenaStringPtr url_link_;
  ::google::protobuf::internal::ArenaStringPtr icon_path_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMSgJumpListMRUApp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMSgJumpListMRUApp) */ {
 public:
  CMSgJumpListMRUApp();
  virtual ~CMSgJumpListMRUApp();

  CMSgJumpListMRUApp(const CMSgJumpListMRUApp& from);

  inline CMSgJumpListMRUApp& operator=(const CMSgJumpListMRUApp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMSgJumpListMRUApp& default_instance();

  static inline const CMSgJumpListMRUApp* internal_default_instance() {
    return reinterpret_cast<const CMSgJumpListMRUApp*>(
               &_CMSgJumpListMRUApp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(CMSgJumpListMRUApp* other);

  // implements Message ----------------------------------------------

  inline CMSgJumpListMRUApp* New() const PROTOBUF_FINAL { return New(NULL); }

  CMSgJumpListMRUApp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMSgJumpListMRUApp& from);
  void MergeFrom(const CMSgJumpListMRUApp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMSgJumpListMRUApp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string display_name = 2;
  bool has_display_name() const;
  void clear_display_name();
  static const int kDisplayNameFieldNumber = 2;
  const ::std::string& display_name() const;
  void set_display_name(const ::std::string& value);
  #if LANG_CXX11
  void set_display_name(::std::string&& value);
  #endif
  void set_display_name(const char* value);
  void set_display_name(const char* value, size_t size);
  ::std::string* mutable_display_name();
  ::std::string* release_display_name();
  void set_allocated_display_name(::std::string* display_name);

  // optional string url_link = 3;
  bool has_url_link() const;
  void clear_url_link();
  static const int kUrlLinkFieldNumber = 3;
  const ::std::string& url_link() const;
  void set_url_link(const ::std::string& value);
  #if LANG_CXX11
  void set_url_link(::std::string&& value);
  #endif
  void set_url_link(const char* value);
  void set_url_link(const char* value, size_t size);
  ::std::string* mutable_url_link();
  ::std::string* release_url_link();
  void set_allocated_url_link(::std::string* url_link);

  // optional string icon_path = 4;
  bool has_icon_path() const;
  void clear_icon_path();
  static const int kIconPathFieldNumber = 4;
  const ::std::string& icon_path() const;
  void set_icon_path(const ::std::string& value);
  #if LANG_CXX11
  void set_icon_path(::std::string&& value);
  #endif
  void set_icon_path(const char* value);
  void set_icon_path(const char* value, size_t size);
  ::std::string* mutable_icon_path();
  ::std::string* release_icon_path();
  void set_allocated_icon_path(::std::string* icon_path);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMSgJumpListMRUApp)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_display_name();
  void clear_has_display_name();
  void set_has_url_link();
  void clear_has_url_link();
  void set_has_icon_path();
  void clear_has_icon_path();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr display_name_;
  ::google::protobuf::internal::ArenaStringPtr url_link_;
  ::google::protobuf::internal::ArenaStringPtr icon_path_;
  ::google::protobuf::uint32 appid_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgSetJumpList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgSetJumpList) */ {
 public:
  CMsgSetJumpList();
  virtual ~CMsgSetJumpList();

  CMsgSetJumpList(const CMsgSetJumpList& from);

  inline CMsgSetJumpList& operator=(const CMsgSetJumpList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgSetJumpList& default_instance();

  static inline const CMsgSetJumpList* internal_default_instance() {
    return reinterpret_cast<const CMsgSetJumpList*>(
               &_CMsgSetJumpList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    119;

  void Swap(CMsgSetJumpList* other);

  // implements Message ----------------------------------------------

  inline CMsgSetJumpList* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgSetJumpList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgSetJumpList& from);
  void MergeFrom(const CMsgSetJumpList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgSetJumpList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CMSgJumpListMRUApp apps = 3;
  int apps_size() const;
  void clear_apps();
  static const int kAppsFieldNumber = 3;
  const ::proto::steam::CMSgJumpListMRUApp& apps(int index) const;
  ::proto::steam::CMSgJumpListMRUApp* mutable_apps(int index);
  ::proto::steam::CMSgJumpListMRUApp* add_apps();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMSgJumpListMRUApp >*
      mutable_apps();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMSgJumpListMRUApp >&
      apps() const;

  // repeated .proto.steam.CMsgJumpListLink links = 4;
  int links_size() const;
  void clear_links();
  static const int kLinksFieldNumber = 4;
  const ::proto::steam::CMsgJumpListLink& links(int index) const;
  ::proto::steam::CMsgJumpListLink* mutable_links(int index);
  ::proto::steam::CMsgJumpListLink* add_links();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJumpListLink >*
      mutable_links();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJumpListLink >&
      links() const;

  // optional string steam_path = 1;
  bool has_steam_path() const;
  void clear_steam_path();
  static const int kSteamPathFieldNumber = 1;
  const ::std::string& steam_path() const;
  void set_steam_path(const ::std::string& value);
  #if LANG_CXX11
  void set_steam_path(::std::string&& value);
  #endif
  void set_steam_path(const char* value);
  void set_steam_path(const char* value, size_t size);
  ::std::string* mutable_steam_path();
  ::std::string* release_steam_path();
  void set_allocated_steam_path(::std::string* steam_path);

  // optional string mru_title = 2;
  bool has_mru_title() const;
  void clear_mru_title();
  static const int kMruTitleFieldNumber = 2;
  const ::std::string& mru_title() const;
  void set_mru_title(const ::std::string& value);
  #if LANG_CXX11
  void set_mru_title(::std::string&& value);
  #endif
  void set_mru_title(const char* value);
  void set_mru_title(const char* value, size_t size);
  ::std::string* mutable_mru_title();
  ::std::string* release_mru_title();
  void set_allocated_mru_title(::std::string* mru_title);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgSetJumpList)
 private:
  void set_has_steam_path();
  void clear_has_steam_path();
  void set_has_mru_title();
  void clear_has_mru_title();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMSgJumpListMRUApp > apps_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJumpListLink > links_;
  ::google::protobuf::internal::ArenaStringPtr steam_path_;
  ::google::protobuf::internal::ArenaStringPtr mru_title_;
  friend struct protobuf_htmlmessages_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgKeyUp

// optional uint32 browser_handle = 1;
inline bool CMsgKeyUp::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgKeyUp::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgKeyUp::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgKeyUp::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgKeyUp::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgKeyUp.browser_handle)
  return browser_handle_;
}
inline void CMsgKeyUp::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgKeyUp.browser_handle)
}

// optional uint32 keyCode = 2;
inline bool CMsgKeyUp::has_keycode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgKeyUp::set_has_keycode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgKeyUp::clear_has_keycode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgKeyUp::clear_keycode() {
  keycode_ = 0u;
  clear_has_keycode();
}
inline ::google::protobuf::uint32 CMsgKeyUp::keycode() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgKeyUp.keyCode)
  return keycode_;
}
inline void CMsgKeyUp::set_keycode(::google::protobuf::uint32 value) {
  set_has_keycode();
  keycode_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgKeyUp.keyCode)
}

// optional uint32 modifiers = 3;
inline bool CMsgKeyUp::has_modifiers() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgKeyUp::set_has_modifiers() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgKeyUp::clear_has_modifiers() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgKeyUp::clear_modifiers() {
  modifiers_ = 0u;
  clear_has_modifiers();
}
inline ::google::protobuf::uint32 CMsgKeyUp::modifiers() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgKeyUp.modifiers)
  return modifiers_;
}
inline void CMsgKeyUp::set_modifiers(::google::protobuf::uint32 value) {
  set_has_modifiers();
  modifiers_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgKeyUp.modifiers)
}

// -------------------------------------------------------------------

// CMsgKeyDown

// optional uint32 browser_handle = 1;
inline bool CMsgKeyDown::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgKeyDown::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgKeyDown::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgKeyDown::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgKeyDown::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgKeyDown.browser_handle)
  return browser_handle_;
}
inline void CMsgKeyDown::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgKeyDown.browser_handle)
}

// optional uint32 keyCode = 2;
inline bool CMsgKeyDown::has_keycode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgKeyDown::set_has_keycode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgKeyDown::clear_has_keycode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgKeyDown::clear_keycode() {
  keycode_ = 0u;
  clear_has_keycode();
}
inline ::google::protobuf::uint32 CMsgKeyDown::keycode() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgKeyDown.keyCode)
  return keycode_;
}
inline void CMsgKeyDown::set_keycode(::google::protobuf::uint32 value) {
  set_has_keycode();
  keycode_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgKeyDown.keyCode)
}

// optional uint32 modifiers = 3;
inline bool CMsgKeyDown::has_modifiers() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgKeyDown::set_has_modifiers() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgKeyDown::clear_has_modifiers() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgKeyDown::clear_modifiers() {
  modifiers_ = 0u;
  clear_has_modifiers();
}
inline ::google::protobuf::uint32 CMsgKeyDown::modifiers() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgKeyDown.modifiers)
  return modifiers_;
}
inline void CMsgKeyDown::set_modifiers(::google::protobuf::uint32 value) {
  set_has_modifiers();
  modifiers_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgKeyDown.modifiers)
}

// -------------------------------------------------------------------

// CMsgKeyChar

// optional uint32 browser_handle = 1;
inline bool CMsgKeyChar::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgKeyChar::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgKeyChar::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgKeyChar::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgKeyChar::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgKeyChar.browser_handle)
  return browser_handle_;
}
inline void CMsgKeyChar::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgKeyChar.browser_handle)
}

// optional uint32 unichar = 2;
inline bool CMsgKeyChar::has_unichar() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgKeyChar::set_has_unichar() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgKeyChar::clear_has_unichar() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgKeyChar::clear_unichar() {
  unichar_ = 0u;
  clear_has_unichar();
}
inline ::google::protobuf::uint32 CMsgKeyChar::unichar() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgKeyChar.unichar)
  return unichar_;
}
inline void CMsgKeyChar::set_unichar(::google::protobuf::uint32 value) {
  set_has_unichar();
  unichar_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgKeyChar.unichar)
}

// optional uint32 modifiers = 3;
inline bool CMsgKeyChar::has_modifiers() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgKeyChar::set_has_modifiers() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgKeyChar::clear_has_modifiers() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgKeyChar::clear_modifiers() {
  modifiers_ = 0u;
  clear_has_modifiers();
}
inline ::google::protobuf::uint32 CMsgKeyChar::modifiers() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgKeyChar.modifiers)
  return modifiers_;
}
inline void CMsgKeyChar::set_modifiers(::google::protobuf::uint32 value) {
  set_has_modifiers();
  modifiers_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgKeyChar.modifiers)
}

// -------------------------------------------------------------------

// CMsgMouseDown

// optional uint32 browser_handle = 1;
inline bool CMsgMouseDown::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMouseDown::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMouseDown::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMouseDown::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgMouseDown::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseDown.browser_handle)
  return browser_handle_;
}
inline void CMsgMouseDown::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseDown.browser_handle)
}

// optional uint32 mouse_button = 2;
inline bool CMsgMouseDown::has_mouse_button() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMouseDown::set_has_mouse_button() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMouseDown::clear_has_mouse_button() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMouseDown::clear_mouse_button() {
  mouse_button_ = 0u;
  clear_has_mouse_button();
}
inline ::google::protobuf::uint32 CMsgMouseDown::mouse_button() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseDown.mouse_button)
  return mouse_button_;
}
inline void CMsgMouseDown::set_mouse_button(::google::protobuf::uint32 value) {
  set_has_mouse_button();
  mouse_button_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseDown.mouse_button)
}

// optional uint32 modifiers = 3;
inline bool CMsgMouseDown::has_modifiers() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMouseDown::set_has_modifiers() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMouseDown::clear_has_modifiers() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMouseDown::clear_modifiers() {
  modifiers_ = 0u;
  clear_has_modifiers();
}
inline ::google::protobuf::uint32 CMsgMouseDown::modifiers() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseDown.modifiers)
  return modifiers_;
}
inline void CMsgMouseDown::set_modifiers(::google::protobuf::uint32 value) {
  set_has_modifiers();
  modifiers_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseDown.modifiers)
}

// -------------------------------------------------------------------

// CMsgMouseUp

// optional uint32 browser_handle = 1;
inline bool CMsgMouseUp::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMouseUp::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMouseUp::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMouseUp::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgMouseUp::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseUp.browser_handle)
  return browser_handle_;
}
inline void CMsgMouseUp::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseUp.browser_handle)
}

// optional uint32 mouse_button = 2;
inline bool CMsgMouseUp::has_mouse_button() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMouseUp::set_has_mouse_button() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMouseUp::clear_has_mouse_button() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMouseUp::clear_mouse_button() {
  mouse_button_ = 0u;
  clear_has_mouse_button();
}
inline ::google::protobuf::uint32 CMsgMouseUp::mouse_button() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseUp.mouse_button)
  return mouse_button_;
}
inline void CMsgMouseUp::set_mouse_button(::google::protobuf::uint32 value) {
  set_has_mouse_button();
  mouse_button_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseUp.mouse_button)
}

// optional uint32 modifiers = 3;
inline bool CMsgMouseUp::has_modifiers() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMouseUp::set_has_modifiers() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMouseUp::clear_has_modifiers() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMouseUp::clear_modifiers() {
  modifiers_ = 0u;
  clear_has_modifiers();
}
inline ::google::protobuf::uint32 CMsgMouseUp::modifiers() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseUp.modifiers)
  return modifiers_;
}
inline void CMsgMouseUp::set_modifiers(::google::protobuf::uint32 value) {
  set_has_modifiers();
  modifiers_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseUp.modifiers)
}

// -------------------------------------------------------------------

// CMsgMouseDblClick

// optional uint32 browser_handle = 1;
inline bool CMsgMouseDblClick::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMouseDblClick::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMouseDblClick::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMouseDblClick::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgMouseDblClick::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseDblClick.browser_handle)
  return browser_handle_;
}
inline void CMsgMouseDblClick::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseDblClick.browser_handle)
}

// optional uint32 mouse_button = 2;
inline bool CMsgMouseDblClick::has_mouse_button() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMouseDblClick::set_has_mouse_button() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMouseDblClick::clear_has_mouse_button() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMouseDblClick::clear_mouse_button() {
  mouse_button_ = 0u;
  clear_has_mouse_button();
}
inline ::google::protobuf::uint32 CMsgMouseDblClick::mouse_button() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseDblClick.mouse_button)
  return mouse_button_;
}
inline void CMsgMouseDblClick::set_mouse_button(::google::protobuf::uint32 value) {
  set_has_mouse_button();
  mouse_button_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseDblClick.mouse_button)
}

// optional uint32 modifiers = 3;
inline bool CMsgMouseDblClick::has_modifiers() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMouseDblClick::set_has_modifiers() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMouseDblClick::clear_has_modifiers() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMouseDblClick::clear_modifiers() {
  modifiers_ = 0u;
  clear_has_modifiers();
}
inline ::google::protobuf::uint32 CMsgMouseDblClick::modifiers() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseDblClick.modifiers)
  return modifiers_;
}
inline void CMsgMouseDblClick::set_modifiers(::google::protobuf::uint32 value) {
  set_has_modifiers();
  modifiers_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseDblClick.modifiers)
}

// -------------------------------------------------------------------

// CMsgMouseWheel

// optional uint32 browser_handle = 1;
inline bool CMsgMouseWheel::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMouseWheel::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMouseWheel::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMouseWheel::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgMouseWheel::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseWheel.browser_handle)
  return browser_handle_;
}
inline void CMsgMouseWheel::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseWheel.browser_handle)
}

// optional int32 delta = 2;
inline bool CMsgMouseWheel::has_delta() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMouseWheel::set_has_delta() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMouseWheel::clear_has_delta() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMouseWheel::clear_delta() {
  delta_ = 0;
  clear_has_delta();
}
inline ::google::protobuf::int32 CMsgMouseWheel::delta() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseWheel.delta)
  return delta_;
}
inline void CMsgMouseWheel::set_delta(::google::protobuf::int32 value) {
  set_has_delta();
  delta_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseWheel.delta)
}

// optional uint32 modifiers = 3;
inline bool CMsgMouseWheel::has_modifiers() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMouseWheel::set_has_modifiers() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMouseWheel::clear_has_modifiers() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMouseWheel::clear_modifiers() {
  modifiers_ = 0u;
  clear_has_modifiers();
}
inline ::google::protobuf::uint32 CMsgMouseWheel::modifiers() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseWheel.modifiers)
  return modifiers_;
}
inline void CMsgMouseWheel::set_modifiers(::google::protobuf::uint32 value) {
  set_has_modifiers();
  modifiers_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseWheel.modifiers)
}

// -------------------------------------------------------------------

// CMsgMouseMove

// optional uint32 browser_handle = 1;
inline bool CMsgMouseMove::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMouseMove::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMouseMove::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMouseMove::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgMouseMove::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseMove.browser_handle)
  return browser_handle_;
}
inline void CMsgMouseMove::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseMove.browser_handle)
}

// optional int32 x = 2;
inline bool CMsgMouseMove::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgMouseMove::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgMouseMove::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgMouseMove::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline ::google::protobuf::int32 CMsgMouseMove::x() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseMove.x)
  return x_;
}
inline void CMsgMouseMove::set_x(::google::protobuf::int32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseMove.x)
}

// optional int32 y = 3;
inline bool CMsgMouseMove::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgMouseMove::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgMouseMove::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgMouseMove::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline ::google::protobuf::int32 CMsgMouseMove::y() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseMove.y)
  return y_;
}
inline void CMsgMouseMove::set_y(::google::protobuf::int32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseMove.y)
}

// optional uint32 modifiers = 4;
inline bool CMsgMouseMove::has_modifiers() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgMouseMove::set_has_modifiers() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgMouseMove::clear_has_modifiers() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgMouseMove::clear_modifiers() {
  modifiers_ = 0u;
  clear_has_modifiers();
}
inline ::google::protobuf::uint32 CMsgMouseMove::modifiers() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseMove.modifiers)
  return modifiers_;
}
inline void CMsgMouseMove::set_modifiers(::google::protobuf::uint32 value) {
  set_has_modifiers();
  modifiers_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseMove.modifiers)
}

// -------------------------------------------------------------------

// CMsgMouseLeave

// optional uint32 browser_handle = 1;
inline bool CMsgMouseLeave::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgMouseLeave::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgMouseLeave::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgMouseLeave::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgMouseLeave::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgMouseLeave.browser_handle)
  return browser_handle_;
}
inline void CMsgMouseLeave::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgMouseLeave.browser_handle)
}

// -------------------------------------------------------------------

// CMsgBrowserCreate

// optional uint32 request_id = 1;
inline bool CMsgBrowserCreate::has_request_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgBrowserCreate::set_has_request_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgBrowserCreate::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgBrowserCreate::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 CMsgBrowserCreate::request_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserCreate.request_id)
  return request_id_;
}
inline void CMsgBrowserCreate::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserCreate.request_id)
}

// optional string useragent = 3;
inline bool CMsgBrowserCreate::has_useragent() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBrowserCreate::set_has_useragent() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBrowserCreate::clear_has_useragent() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBrowserCreate::clear_useragent() {
  useragent_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_useragent();
}
inline const ::std::string& CMsgBrowserCreate::useragent() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserCreate.useragent)
  return useragent_.GetNoArena();
}
inline void CMsgBrowserCreate::set_useragent(const ::std::string& value) {
  set_has_useragent();
  useragent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserCreate.useragent)
}
#if LANG_CXX11
inline void CMsgBrowserCreate::set_useragent(::std::string&& value) {
  set_has_useragent();
  useragent_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgBrowserCreate.useragent)
}
#endif
inline void CMsgBrowserCreate::set_useragent(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_useragent();
  useragent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgBrowserCreate.useragent)
}
inline void CMsgBrowserCreate::set_useragent(const char* value, size_t size) {
  set_has_useragent();
  useragent_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgBrowserCreate.useragent)
}
inline ::std::string* CMsgBrowserCreate::mutable_useragent() {
  set_has_useragent();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgBrowserCreate.useragent)
  return useragent_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgBrowserCreate::release_useragent() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgBrowserCreate.useragent)
  clear_has_useragent();
  return useragent_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgBrowserCreate::set_allocated_useragent(::std::string* useragent) {
  if (useragent != NULL) {
    set_has_useragent();
  } else {
    clear_has_useragent();
  }
  useragent_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), useragent);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgBrowserCreate.useragent)
}

// optional string user_css = 5;
inline bool CMsgBrowserCreate::has_user_css() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgBrowserCreate::set_has_user_css() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgBrowserCreate::clear_has_user_css() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgBrowserCreate::clear_user_css() {
  user_css_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_user_css();
}
inline const ::std::string& CMsgBrowserCreate::user_css() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserCreate.user_css)
  return user_css_.GetNoArena();
}
inline void CMsgBrowserCreate::set_user_css(const ::std::string& value) {
  set_has_user_css();
  user_css_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserCreate.user_css)
}
#if LANG_CXX11
inline void CMsgBrowserCreate::set_user_css(::std::string&& value) {
  set_has_user_css();
  user_css_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgBrowserCreate.user_css)
}
#endif
inline void CMsgBrowserCreate::set_user_css(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_user_css();
  user_css_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgBrowserCreate.user_css)
}
inline void CMsgBrowserCreate::set_user_css(const char* value, size_t size) {
  set_has_user_css();
  user_css_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgBrowserCreate.user_css)
}
inline ::std::string* CMsgBrowserCreate::mutable_user_css() {
  set_has_user_css();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgBrowserCreate.user_css)
  return user_css_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgBrowserCreate::release_user_css() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgBrowserCreate.user_css)
  clear_has_user_css();
  return user_css_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgBrowserCreate::set_allocated_user_css(::std::string* user_css) {
  if (user_css != NULL) {
    set_has_user_css();
  } else {
    clear_has_user_css();
  }
  user_css_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_css);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgBrowserCreate.user_css)
}

// optional bool native_dropdowns = 6;
inline bool CMsgBrowserCreate::has_native_dropdowns() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgBrowserCreate::set_has_native_dropdowns() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgBrowserCreate::clear_has_native_dropdowns() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgBrowserCreate::clear_native_dropdowns() {
  native_dropdowns_ = false;
  clear_has_native_dropdowns();
}
inline bool CMsgBrowserCreate::native_dropdowns() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserCreate.native_dropdowns)
  return native_dropdowns_;
}
inline void CMsgBrowserCreate::set_native_dropdowns(bool value) {
  set_has_native_dropdowns();
  native_dropdowns_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserCreate.native_dropdowns)
}

// optional float dpi_scaling = 7;
inline bool CMsgBrowserCreate::has_dpi_scaling() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgBrowserCreate::set_has_dpi_scaling() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgBrowserCreate::clear_has_dpi_scaling() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgBrowserCreate::clear_dpi_scaling() {
  dpi_scaling_ = 0;
  clear_has_dpi_scaling();
}
inline float CMsgBrowserCreate::dpi_scaling() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserCreate.dpi_scaling)
  return dpi_scaling_;
}
inline void CMsgBrowserCreate::set_dpi_scaling(float value) {
  set_has_dpi_scaling();
  dpi_scaling_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserCreate.dpi_scaling)
}

// optional bool offscreen = 8 [default = true];
inline bool CMsgBrowserCreate::has_offscreen() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgBrowserCreate::set_has_offscreen() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgBrowserCreate::clear_has_offscreen() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgBrowserCreate::clear_offscreen() {
  offscreen_ = true;
  clear_has_offscreen();
}
inline bool CMsgBrowserCreate::offscreen() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserCreate.offscreen)
  return offscreen_;
}
inline void CMsgBrowserCreate::set_offscreen(bool value) {
  set_has_offscreen();
  offscreen_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserCreate.offscreen)
}

// optional uint32 initial_width = 9 [default = 0];
inline bool CMsgBrowserCreate::has_initial_width() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgBrowserCreate::set_has_initial_width() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgBrowserCreate::clear_has_initial_width() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgBrowserCreate::clear_initial_width() {
  initial_width_ = 0u;
  clear_has_initial_width();
}
inline ::google::protobuf::uint32 CMsgBrowserCreate::initial_width() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserCreate.initial_width)
  return initial_width_;
}
inline void CMsgBrowserCreate::set_initial_width(::google::protobuf::uint32 value) {
  set_has_initial_width();
  initial_width_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserCreate.initial_width)
}

// optional uint32 initial_height = 10 [default = 0];
inline bool CMsgBrowserCreate::has_initial_height() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgBrowserCreate::set_has_initial_height() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgBrowserCreate::clear_has_initial_height() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgBrowserCreate::clear_initial_height() {
  initial_height_ = 0u;
  clear_has_initial_height();
}
inline ::google::protobuf::uint32 CMsgBrowserCreate::initial_height() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserCreate.initial_height)
  return initial_height_;
}
inline void CMsgBrowserCreate::set_initial_height(::google::protobuf::uint32 value) {
  set_has_initial_height();
  initial_height_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserCreate.initial_height)
}

// optional string window_icon = 11;
inline bool CMsgBrowserCreate::has_window_icon() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgBrowserCreate::set_has_window_icon() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgBrowserCreate::clear_has_window_icon() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgBrowserCreate::clear_window_icon() {
  window_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_window_icon();
}
inline const ::std::string& CMsgBrowserCreate::window_icon() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserCreate.window_icon)
  return window_icon_.GetNoArena();
}
inline void CMsgBrowserCreate::set_window_icon(const ::std::string& value) {
  set_has_window_icon();
  window_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserCreate.window_icon)
}
#if LANG_CXX11
inline void CMsgBrowserCreate::set_window_icon(::std::string&& value) {
  set_has_window_icon();
  window_icon_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgBrowserCreate.window_icon)
}
#endif
inline void CMsgBrowserCreate::set_window_icon(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_window_icon();
  window_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgBrowserCreate.window_icon)
}
inline void CMsgBrowserCreate::set_window_icon(const char* value, size_t size) {
  set_has_window_icon();
  window_icon_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgBrowserCreate.window_icon)
}
inline ::std::string* CMsgBrowserCreate::mutable_window_icon() {
  set_has_window_icon();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgBrowserCreate.window_icon)
  return window_icon_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgBrowserCreate::release_window_icon() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgBrowserCreate.window_icon)
  clear_has_window_icon();
  return window_icon_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgBrowserCreate::set_allocated_window_icon(::std::string* window_icon) {
  if (window_icon != NULL) {
    set_has_window_icon();
  } else {
    clear_has_window_icon();
  }
  window_icon_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), window_icon);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgBrowserCreate.window_icon)
}

// optional bool borderless = 12 [default = false];
inline bool CMsgBrowserCreate::has_borderless() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgBrowserCreate::set_has_borderless() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgBrowserCreate::clear_has_borderless() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgBrowserCreate::clear_borderless() {
  borderless_ = false;
  clear_has_borderless();
}
inline bool CMsgBrowserCreate::borderless() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserCreate.borderless)
  return borderless_;
}
inline void CMsgBrowserCreate::set_borderless(bool value) {
  set_has_borderless();
  borderless_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserCreate.borderless)
}

// optional string vroverlay_key = 13;
inline bool CMsgBrowserCreate::has_vroverlay_key() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgBrowserCreate::set_has_vroverlay_key() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgBrowserCreate::clear_has_vroverlay_key() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgBrowserCreate::clear_vroverlay_key() {
  vroverlay_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vroverlay_key();
}
inline const ::std::string& CMsgBrowserCreate::vroverlay_key() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserCreate.vroverlay_key)
  return vroverlay_key_.GetNoArena();
}
inline void CMsgBrowserCreate::set_vroverlay_key(const ::std::string& value) {
  set_has_vroverlay_key();
  vroverlay_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserCreate.vroverlay_key)
}
#if LANG_CXX11
inline void CMsgBrowserCreate::set_vroverlay_key(::std::string&& value) {
  set_has_vroverlay_key();
  vroverlay_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgBrowserCreate.vroverlay_key)
}
#endif
inline void CMsgBrowserCreate::set_vroverlay_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_vroverlay_key();
  vroverlay_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgBrowserCreate.vroverlay_key)
}
inline void CMsgBrowserCreate::set_vroverlay_key(const char* value, size_t size) {
  set_has_vroverlay_key();
  vroverlay_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgBrowserCreate.vroverlay_key)
}
inline ::std::string* CMsgBrowserCreate::mutable_vroverlay_key() {
  set_has_vroverlay_key();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgBrowserCreate.vroverlay_key)
  return vroverlay_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgBrowserCreate::release_vroverlay_key() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgBrowserCreate.vroverlay_key)
  clear_has_vroverlay_key();
  return vroverlay_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgBrowserCreate::set_allocated_vroverlay_key(::std::string* vroverlay_key) {
  if (vroverlay_key != NULL) {
    set_has_vroverlay_key();
  } else {
    clear_has_vroverlay_key();
  }
  vroverlay_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vroverlay_key);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgBrowserCreate.vroverlay_key)
}

// optional uint32 browser_type = 14 [default = 0];
inline bool CMsgBrowserCreate::has_browser_type() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgBrowserCreate::set_has_browser_type() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgBrowserCreate::clear_has_browser_type() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgBrowserCreate::clear_browser_type() {
  browser_type_ = 0u;
  clear_has_browser_type();
}
inline ::google::protobuf::uint32 CMsgBrowserCreate::browser_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserCreate.browser_type)
  return browser_type_;
}
inline void CMsgBrowserCreate::set_browser_type(::google::protobuf::uint32 value) {
  set_has_browser_type();
  browser_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserCreate.browser_type)
}

// -------------------------------------------------------------------

// CMsgBrowserCreateResponse

// optional uint32 browser_handle = 1;
inline bool CMsgBrowserCreateResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBrowserCreateResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBrowserCreateResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBrowserCreateResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgBrowserCreateResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserCreateResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgBrowserCreateResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserCreateResponse.browser_handle)
}

// optional uint32 request_id = 2;
inline bool CMsgBrowserCreateResponse::has_request_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgBrowserCreateResponse::set_has_request_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgBrowserCreateResponse::clear_has_request_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgBrowserCreateResponse::clear_request_id() {
  request_id_ = 0u;
  clear_has_request_id();
}
inline ::google::protobuf::uint32 CMsgBrowserCreateResponse::request_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserCreateResponse.request_id)
  return request_id_;
}
inline void CMsgBrowserCreateResponse::set_request_id(::google::protobuf::uint32 value) {
  set_has_request_id();
  request_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserCreateResponse.request_id)
}

// -------------------------------------------------------------------

// CMsgBrowserRemove

// optional uint32 browser_handle = 1;
inline bool CMsgBrowserRemove::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBrowserRemove::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBrowserRemove::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBrowserRemove::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgBrowserRemove::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserRemove.browser_handle)
  return browser_handle_;
}
inline void CMsgBrowserRemove::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserRemove.browser_handle)
}

// -------------------------------------------------------------------

// CMsgSetLocalFileRequestMapping_AdditionalRoute

// optional string relative_url = 1;
inline bool CMsgSetLocalFileRequestMapping_AdditionalRoute::has_relative_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_has_relative_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::clear_has_relative_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::clear_relative_url() {
  relative_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_relative_url();
}
inline const ::std::string& CMsgSetLocalFileRequestMapping_AdditionalRoute::relative_url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.relative_url)
  return relative_url_.GetNoArena();
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_relative_url(const ::std::string& value) {
  set_has_relative_url();
  relative_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.relative_url)
}
#if LANG_CXX11
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_relative_url(::std::string&& value) {
  set_has_relative_url();
  relative_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.relative_url)
}
#endif
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_relative_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_relative_url();
  relative_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.relative_url)
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_relative_url(const char* value, size_t size) {
  set_has_relative_url();
  relative_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.relative_url)
}
inline ::std::string* CMsgSetLocalFileRequestMapping_AdditionalRoute::mutable_relative_url() {
  set_has_relative_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.relative_url)
  return relative_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSetLocalFileRequestMapping_AdditionalRoute::release_relative_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.relative_url)
  clear_has_relative_url();
  return relative_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_allocated_relative_url(::std::string* relative_url) {
  if (relative_url != NULL) {
    set_has_relative_url();
  } else {
    clear_has_relative_url();
  }
  relative_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relative_url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.relative_url)
}

// optional string local_path = 2;
inline bool CMsgSetLocalFileRequestMapping_AdditionalRoute::has_local_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_has_local_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::clear_has_local_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::clear_local_path() {
  local_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_local_path();
}
inline const ::std::string& CMsgSetLocalFileRequestMapping_AdditionalRoute::local_path() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.local_path)
  return local_path_.GetNoArena();
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_local_path(const ::std::string& value) {
  set_has_local_path();
  local_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.local_path)
}
#if LANG_CXX11
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_local_path(::std::string&& value) {
  set_has_local_path();
  local_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.local_path)
}
#endif
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_local_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_local_path();
  local_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.local_path)
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_local_path(const char* value, size_t size) {
  set_has_local_path();
  local_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.local_path)
}
inline ::std::string* CMsgSetLocalFileRequestMapping_AdditionalRoute::mutable_local_path() {
  set_has_local_path();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.local_path)
  return local_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSetLocalFileRequestMapping_AdditionalRoute::release_local_path() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.local_path)
  clear_has_local_path();
  return local_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_allocated_local_path(::std::string* local_path) {
  if (local_path != NULL) {
    set_has_local_path();
  } else {
    clear_has_local_path();
  }
  local_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), local_path);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.local_path)
}

// optional string allowed_extensions = 3;
inline bool CMsgSetLocalFileRequestMapping_AdditionalRoute::has_allowed_extensions() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_has_allowed_extensions() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::clear_has_allowed_extensions() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::clear_allowed_extensions() {
  allowed_extensions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_allowed_extensions();
}
inline const ::std::string& CMsgSetLocalFileRequestMapping_AdditionalRoute::allowed_extensions() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.allowed_extensions)
  return allowed_extensions_.GetNoArena();
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_allowed_extensions(const ::std::string& value) {
  set_has_allowed_extensions();
  allowed_extensions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.allowed_extensions)
}
#if LANG_CXX11
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_allowed_extensions(::std::string&& value) {
  set_has_allowed_extensions();
  allowed_extensions_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.allowed_extensions)
}
#endif
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_allowed_extensions(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_allowed_extensions();
  allowed_extensions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.allowed_extensions)
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_allowed_extensions(const char* value, size_t size) {
  set_has_allowed_extensions();
  allowed_extensions_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.allowed_extensions)
}
inline ::std::string* CMsgSetLocalFileRequestMapping_AdditionalRoute::mutable_allowed_extensions() {
  set_has_allowed_extensions();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.allowed_extensions)
  return allowed_extensions_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSetLocalFileRequestMapping_AdditionalRoute::release_allowed_extensions() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.allowed_extensions)
  clear_has_allowed_extensions();
  return allowed_extensions_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSetLocalFileRequestMapping_AdditionalRoute::set_allocated_allowed_extensions(::std::string* allowed_extensions) {
  if (allowed_extensions != NULL) {
    set_has_allowed_extensions();
  } else {
    clear_has_allowed_extensions();
  }
  allowed_extensions_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), allowed_extensions);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute.allowed_extensions)
}

// -------------------------------------------------------------------

// CMsgSetLocalFileRequestMapping

// optional uint32 browser_handle = 1;
inline bool CMsgSetLocalFileRequestMapping::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSetLocalFileRequestMapping::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSetLocalFileRequestMapping::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSetLocalFileRequestMapping::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgSetLocalFileRequestMapping::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetLocalFileRequestMapping.browser_handle)
  return browser_handle_;
}
inline void CMsgSetLocalFileRequestMapping::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetLocalFileRequestMapping.browser_handle)
}

// optional string request_url = 2;
inline bool CMsgSetLocalFileRequestMapping::has_request_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetLocalFileRequestMapping::set_has_request_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetLocalFileRequestMapping::clear_has_request_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetLocalFileRequestMapping::clear_request_url() {
  request_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_request_url();
}
inline const ::std::string& CMsgSetLocalFileRequestMapping::request_url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetLocalFileRequestMapping.request_url)
  return request_url_.GetNoArena();
}
inline void CMsgSetLocalFileRequestMapping::set_request_url(const ::std::string& value) {
  set_has_request_url();
  request_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetLocalFileRequestMapping.request_url)
}
#if LANG_CXX11
inline void CMsgSetLocalFileRequestMapping::set_request_url(::std::string&& value) {
  set_has_request_url();
  request_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSetLocalFileRequestMapping.request_url)
}
#endif
inline void CMsgSetLocalFileRequestMapping::set_request_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_request_url();
  request_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSetLocalFileRequestMapping.request_url)
}
inline void CMsgSetLocalFileRequestMapping::set_request_url(const char* value, size_t size) {
  set_has_request_url();
  request_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSetLocalFileRequestMapping.request_url)
}
inline ::std::string* CMsgSetLocalFileRequestMapping::mutable_request_url() {
  set_has_request_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetLocalFileRequestMapping.request_url)
  return request_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSetLocalFileRequestMapping::release_request_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSetLocalFileRequestMapping.request_url)
  clear_has_request_url();
  return request_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSetLocalFileRequestMapping::set_allocated_request_url(::std::string* request_url) {
  if (request_url != NULL) {
    set_has_request_url();
  } else {
    clear_has_request_url();
  }
  request_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), request_url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSetLocalFileRequestMapping.request_url)
}

// optional string default_local_path = 3;
inline bool CMsgSetLocalFileRequestMapping::has_default_local_path() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetLocalFileRequestMapping::set_has_default_local_path() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetLocalFileRequestMapping::clear_has_default_local_path() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetLocalFileRequestMapping::clear_default_local_path() {
  default_local_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_default_local_path();
}
inline const ::std::string& CMsgSetLocalFileRequestMapping::default_local_path() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetLocalFileRequestMapping.default_local_path)
  return default_local_path_.GetNoArena();
}
inline void CMsgSetLocalFileRequestMapping::set_default_local_path(const ::std::string& value) {
  set_has_default_local_path();
  default_local_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetLocalFileRequestMapping.default_local_path)
}
#if LANG_CXX11
inline void CMsgSetLocalFileRequestMapping::set_default_local_path(::std::string&& value) {
  set_has_default_local_path();
  default_local_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSetLocalFileRequestMapping.default_local_path)
}
#endif
inline void CMsgSetLocalFileRequestMapping::set_default_local_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_default_local_path();
  default_local_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSetLocalFileRequestMapping.default_local_path)
}
inline void CMsgSetLocalFileRequestMapping::set_default_local_path(const char* value, size_t size) {
  set_has_default_local_path();
  default_local_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSetLocalFileRequestMapping.default_local_path)
}
inline ::std::string* CMsgSetLocalFileRequestMapping::mutable_default_local_path() {
  set_has_default_local_path();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetLocalFileRequestMapping.default_local_path)
  return default_local_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSetLocalFileRequestMapping::release_default_local_path() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSetLocalFileRequestMapping.default_local_path)
  clear_has_default_local_path();
  return default_local_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSetLocalFileRequestMapping::set_allocated_default_local_path(::std::string* default_local_path) {
  if (default_local_path != NULL) {
    set_has_default_local_path();
  } else {
    clear_has_default_local_path();
  }
  default_local_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), default_local_path);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSetLocalFileRequestMapping.default_local_path)
}

// repeated .proto.steam.CMsgSetLocalFileRequestMapping.AdditionalRoute routes = 4;
inline int CMsgSetLocalFileRequestMapping::routes_size() const {
  return routes_.size();
}
inline void CMsgSetLocalFileRequestMapping::clear_routes() {
  routes_.Clear();
}
inline const ::proto::steam::CMsgSetLocalFileRequestMapping_AdditionalRoute& CMsgSetLocalFileRequestMapping::routes(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetLocalFileRequestMapping.routes)
  return routes_.Get(index);
}
inline ::proto::steam::CMsgSetLocalFileRequestMapping_AdditionalRoute* CMsgSetLocalFileRequestMapping::mutable_routes(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetLocalFileRequestMapping.routes)
  return routes_.Mutable(index);
}
inline ::proto::steam::CMsgSetLocalFileRequestMapping_AdditionalRoute* CMsgSetLocalFileRequestMapping::add_routes() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgSetLocalFileRequestMapping.routes)
  return routes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgSetLocalFileRequestMapping_AdditionalRoute >*
CMsgSetLocalFileRequestMapping::mutable_routes() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgSetLocalFileRequestMapping.routes)
  return &routes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgSetLocalFileRequestMapping_AdditionalRoute >&
CMsgSetLocalFileRequestMapping::routes() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgSetLocalFileRequestMapping.routes)
  return routes_;
}

// -------------------------------------------------------------------

// CMsgBrowserErrorStrings

// optional uint32 browser_handle = 1;
inline bool CMsgBrowserErrorStrings::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgBrowserErrorStrings::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgBrowserErrorStrings::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgBrowserErrorStrings::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgBrowserErrorStrings::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserErrorStrings.browser_handle)
  return browser_handle_;
}
inline void CMsgBrowserErrorStrings::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserErrorStrings.browser_handle)
}

// optional string title = 2;
inline bool CMsgBrowserErrorStrings::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBrowserErrorStrings::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBrowserErrorStrings::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBrowserErrorStrings::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& CMsgBrowserErrorStrings::title() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserErrorStrings.title)
  return title_.GetNoArena();
}
inline void CMsgBrowserErrorStrings::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserErrorStrings.title)
}
#if LANG_CXX11
inline void CMsgBrowserErrorStrings::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgBrowserErrorStrings.title)
}
#endif
inline void CMsgBrowserErrorStrings::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgBrowserErrorStrings.title)
}
inline void CMsgBrowserErrorStrings::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgBrowserErrorStrings.title)
}
inline ::std::string* CMsgBrowserErrorStrings::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgBrowserErrorStrings.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgBrowserErrorStrings::release_title() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgBrowserErrorStrings.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgBrowserErrorStrings::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgBrowserErrorStrings.title)
}

// optional string header = 3;
inline bool CMsgBrowserErrorStrings::has_header() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgBrowserErrorStrings::set_has_header() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgBrowserErrorStrings::clear_has_header() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgBrowserErrorStrings::clear_header() {
  header_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_header();
}
inline const ::std::string& CMsgBrowserErrorStrings::header() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserErrorStrings.header)
  return header_.GetNoArena();
}
inline void CMsgBrowserErrorStrings::set_header(const ::std::string& value) {
  set_has_header();
  header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserErrorStrings.header)
}
#if LANG_CXX11
inline void CMsgBrowserErrorStrings::set_header(::std::string&& value) {
  set_has_header();
  header_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgBrowserErrorStrings.header)
}
#endif
inline void CMsgBrowserErrorStrings::set_header(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_header();
  header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgBrowserErrorStrings.header)
}
inline void CMsgBrowserErrorStrings::set_header(const char* value, size_t size) {
  set_has_header();
  header_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgBrowserErrorStrings.header)
}
inline ::std::string* CMsgBrowserErrorStrings::mutable_header() {
  set_has_header();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgBrowserErrorStrings.header)
  return header_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgBrowserErrorStrings::release_header() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgBrowserErrorStrings.header)
  clear_has_header();
  return header_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgBrowserErrorStrings::set_allocated_header(::std::string* header) {
  if (header != NULL) {
    set_has_header();
  } else {
    clear_has_header();
  }
  header_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgBrowserErrorStrings.header)
}

// optional string cache_miss = 4;
inline bool CMsgBrowserErrorStrings::has_cache_miss() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgBrowserErrorStrings::set_has_cache_miss() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgBrowserErrorStrings::clear_has_cache_miss() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgBrowserErrorStrings::clear_cache_miss() {
  cache_miss_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cache_miss();
}
inline const ::std::string& CMsgBrowserErrorStrings::cache_miss() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserErrorStrings.cache_miss)
  return cache_miss_.GetNoArena();
}
inline void CMsgBrowserErrorStrings::set_cache_miss(const ::std::string& value) {
  set_has_cache_miss();
  cache_miss_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserErrorStrings.cache_miss)
}
#if LANG_CXX11
inline void CMsgBrowserErrorStrings::set_cache_miss(::std::string&& value) {
  set_has_cache_miss();
  cache_miss_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgBrowserErrorStrings.cache_miss)
}
#endif
inline void CMsgBrowserErrorStrings::set_cache_miss(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_cache_miss();
  cache_miss_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgBrowserErrorStrings.cache_miss)
}
inline void CMsgBrowserErrorStrings::set_cache_miss(const char* value, size_t size) {
  set_has_cache_miss();
  cache_miss_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgBrowserErrorStrings.cache_miss)
}
inline ::std::string* CMsgBrowserErrorStrings::mutable_cache_miss() {
  set_has_cache_miss();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgBrowserErrorStrings.cache_miss)
  return cache_miss_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgBrowserErrorStrings::release_cache_miss() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgBrowserErrorStrings.cache_miss)
  clear_has_cache_miss();
  return cache_miss_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgBrowserErrorStrings::set_allocated_cache_miss(::std::string* cache_miss) {
  if (cache_miss != NULL) {
    set_has_cache_miss();
  } else {
    clear_has_cache_miss();
  }
  cache_miss_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cache_miss);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgBrowserErrorStrings.cache_miss)
}

// optional string bad_url = 5;
inline bool CMsgBrowserErrorStrings::has_bad_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgBrowserErrorStrings::set_has_bad_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgBrowserErrorStrings::clear_has_bad_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgBrowserErrorStrings::clear_bad_url() {
  bad_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bad_url();
}
inline const ::std::string& CMsgBrowserErrorStrings::bad_url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserErrorStrings.bad_url)
  return bad_url_.GetNoArena();
}
inline void CMsgBrowserErrorStrings::set_bad_url(const ::std::string& value) {
  set_has_bad_url();
  bad_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserErrorStrings.bad_url)
}
#if LANG_CXX11
inline void CMsgBrowserErrorStrings::set_bad_url(::std::string&& value) {
  set_has_bad_url();
  bad_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgBrowserErrorStrings.bad_url)
}
#endif
inline void CMsgBrowserErrorStrings::set_bad_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bad_url();
  bad_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgBrowserErrorStrings.bad_url)
}
inline void CMsgBrowserErrorStrings::set_bad_url(const char* value, size_t size) {
  set_has_bad_url();
  bad_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgBrowserErrorStrings.bad_url)
}
inline ::std::string* CMsgBrowserErrorStrings::mutable_bad_url() {
  set_has_bad_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgBrowserErrorStrings.bad_url)
  return bad_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgBrowserErrorStrings::release_bad_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgBrowserErrorStrings.bad_url)
  clear_has_bad_url();
  return bad_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgBrowserErrorStrings::set_allocated_bad_url(::std::string* bad_url) {
  if (bad_url != NULL) {
    set_has_bad_url();
  } else {
    clear_has_bad_url();
  }
  bad_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bad_url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgBrowserErrorStrings.bad_url)
}

// optional string connection_problem = 6;
inline bool CMsgBrowserErrorStrings::has_connection_problem() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgBrowserErrorStrings::set_has_connection_problem() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgBrowserErrorStrings::clear_has_connection_problem() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgBrowserErrorStrings::clear_connection_problem() {
  connection_problem_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_connection_problem();
}
inline const ::std::string& CMsgBrowserErrorStrings::connection_problem() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserErrorStrings.connection_problem)
  return connection_problem_.GetNoArena();
}
inline void CMsgBrowserErrorStrings::set_connection_problem(const ::std::string& value) {
  set_has_connection_problem();
  connection_problem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserErrorStrings.connection_problem)
}
#if LANG_CXX11
inline void CMsgBrowserErrorStrings::set_connection_problem(::std::string&& value) {
  set_has_connection_problem();
  connection_problem_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgBrowserErrorStrings.connection_problem)
}
#endif
inline void CMsgBrowserErrorStrings::set_connection_problem(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_connection_problem();
  connection_problem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgBrowserErrorStrings.connection_problem)
}
inline void CMsgBrowserErrorStrings::set_connection_problem(const char* value, size_t size) {
  set_has_connection_problem();
  connection_problem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgBrowserErrorStrings.connection_problem)
}
inline ::std::string* CMsgBrowserErrorStrings::mutable_connection_problem() {
  set_has_connection_problem();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgBrowserErrorStrings.connection_problem)
  return connection_problem_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgBrowserErrorStrings::release_connection_problem() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgBrowserErrorStrings.connection_problem)
  clear_has_connection_problem();
  return connection_problem_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgBrowserErrorStrings::set_allocated_connection_problem(::std::string* connection_problem) {
  if (connection_problem != NULL) {
    set_has_connection_problem();
  } else {
    clear_has_connection_problem();
  }
  connection_problem_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), connection_problem);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgBrowserErrorStrings.connection_problem)
}

// optional string proxy_problem = 7;
inline bool CMsgBrowserErrorStrings::has_proxy_problem() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgBrowserErrorStrings::set_has_proxy_problem() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgBrowserErrorStrings::clear_has_proxy_problem() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgBrowserErrorStrings::clear_proxy_problem() {
  proxy_problem_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_proxy_problem();
}
inline const ::std::string& CMsgBrowserErrorStrings::proxy_problem() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserErrorStrings.proxy_problem)
  return proxy_problem_.GetNoArena();
}
inline void CMsgBrowserErrorStrings::set_proxy_problem(const ::std::string& value) {
  set_has_proxy_problem();
  proxy_problem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserErrorStrings.proxy_problem)
}
#if LANG_CXX11
inline void CMsgBrowserErrorStrings::set_proxy_problem(::std::string&& value) {
  set_has_proxy_problem();
  proxy_problem_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgBrowserErrorStrings.proxy_problem)
}
#endif
inline void CMsgBrowserErrorStrings::set_proxy_problem(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_proxy_problem();
  proxy_problem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgBrowserErrorStrings.proxy_problem)
}
inline void CMsgBrowserErrorStrings::set_proxy_problem(const char* value, size_t size) {
  set_has_proxy_problem();
  proxy_problem_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgBrowserErrorStrings.proxy_problem)
}
inline ::std::string* CMsgBrowserErrorStrings::mutable_proxy_problem() {
  set_has_proxy_problem();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgBrowserErrorStrings.proxy_problem)
  return proxy_problem_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgBrowserErrorStrings::release_proxy_problem() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgBrowserErrorStrings.proxy_problem)
  clear_has_proxy_problem();
  return proxy_problem_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgBrowserErrorStrings::set_allocated_proxy_problem(::std::string* proxy_problem) {
  if (proxy_problem != NULL) {
    set_has_proxy_problem();
  } else {
    clear_has_proxy_problem();
  }
  proxy_problem_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy_problem);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgBrowserErrorStrings.proxy_problem)
}

// optional string unknown = 8;
inline bool CMsgBrowserErrorStrings::has_unknown() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgBrowserErrorStrings::set_has_unknown() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgBrowserErrorStrings::clear_has_unknown() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgBrowserErrorStrings::clear_unknown() {
  unknown_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unknown();
}
inline const ::std::string& CMsgBrowserErrorStrings::unknown() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserErrorStrings.unknown)
  return unknown_.GetNoArena();
}
inline void CMsgBrowserErrorStrings::set_unknown(const ::std::string& value) {
  set_has_unknown();
  unknown_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserErrorStrings.unknown)
}
#if LANG_CXX11
inline void CMsgBrowserErrorStrings::set_unknown(::std::string&& value) {
  set_has_unknown();
  unknown_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgBrowserErrorStrings.unknown)
}
#endif
inline void CMsgBrowserErrorStrings::set_unknown(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_unknown();
  unknown_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgBrowserErrorStrings.unknown)
}
inline void CMsgBrowserErrorStrings::set_unknown(const char* value, size_t size) {
  set_has_unknown();
  unknown_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgBrowserErrorStrings.unknown)
}
inline ::std::string* CMsgBrowserErrorStrings::mutable_unknown() {
  set_has_unknown();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgBrowserErrorStrings.unknown)
  return unknown_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgBrowserErrorStrings::release_unknown() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgBrowserErrorStrings.unknown)
  clear_has_unknown();
  return unknown_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgBrowserErrorStrings::set_allocated_unknown(::std::string* unknown) {
  if (unknown != NULL) {
    set_has_unknown();
  } else {
    clear_has_unknown();
  }
  unknown_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unknown);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgBrowserErrorStrings.unknown)
}

// -------------------------------------------------------------------

// CMsgBrowserSize

// optional uint32 browser_handle = 1;
inline bool CMsgBrowserSize::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBrowserSize::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBrowserSize::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBrowserSize::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgBrowserSize::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserSize.browser_handle)
  return browser_handle_;
}
inline void CMsgBrowserSize::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserSize.browser_handle)
}

// optional uint32 width = 2;
inline bool CMsgBrowserSize::has_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgBrowserSize::set_has_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgBrowserSize::clear_has_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgBrowserSize::clear_width() {
  width_ = 0u;
  clear_has_width();
}
inline ::google::protobuf::uint32 CMsgBrowserSize::width() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserSize.width)
  return width_;
}
inline void CMsgBrowserSize::set_width(::google::protobuf::uint32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserSize.width)
}

// optional uint32 height = 3;
inline bool CMsgBrowserSize::has_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgBrowserSize::set_has_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgBrowserSize::clear_has_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgBrowserSize::clear_height() {
  height_ = 0u;
  clear_has_height();
}
inline ::google::protobuf::uint32 CMsgBrowserSize::height() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserSize.height)
  return height_;
}
inline void CMsgBrowserSize::set_height(::google::protobuf::uint32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserSize.height)
}

// -------------------------------------------------------------------

// CMsgPostURL

// optional uint32 browser_handle = 1;
inline bool CMsgPostURL::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPostURL::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPostURL::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPostURL::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgPostURL::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPostURL.browser_handle)
  return browser_handle_;
}
inline void CMsgPostURL::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPostURL.browser_handle)
}

// optional string url = 2;
inline bool CMsgPostURL::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPostURL::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPostURL::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPostURL::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgPostURL::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPostURL.url)
  return url_.GetNoArena();
}
inline void CMsgPostURL::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPostURL.url)
}
#if LANG_CXX11
inline void CMsgPostURL::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgPostURL.url)
}
#endif
inline void CMsgPostURL::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgPostURL.url)
}
inline void CMsgPostURL::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgPostURL.url)
}
inline ::std::string* CMsgPostURL::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgPostURL.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgPostURL::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgPostURL.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgPostURL::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgPostURL.url)
}

// optional string post = 3;
inline bool CMsgPostURL::has_post() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPostURL::set_has_post() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPostURL::clear_has_post() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPostURL::clear_post() {
  post_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_post();
}
inline const ::std::string& CMsgPostURL::post() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPostURL.post)
  return post_.GetNoArena();
}
inline void CMsgPostURL::set_post(const ::std::string& value) {
  set_has_post();
  post_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPostURL.post)
}
#if LANG_CXX11
inline void CMsgPostURL::set_post(::std::string&& value) {
  set_has_post();
  post_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgPostURL.post)
}
#endif
inline void CMsgPostURL::set_post(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_post();
  post_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgPostURL.post)
}
inline void CMsgPostURL::set_post(const char* value, size_t size) {
  set_has_post();
  post_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgPostURL.post)
}
inline ::std::string* CMsgPostURL::mutable_post() {
  set_has_post();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgPostURL.post)
  return post_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgPostURL::release_post() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgPostURL.post)
  clear_has_post();
  return post_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgPostURL::set_allocated_post(::std::string* post) {
  if (post != NULL) {
    set_has_post();
  } else {
    clear_has_post();
  }
  post_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), post);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgPostURL.post)
}

// optional uint32 pageserial = 4;
inline bool CMsgPostURL::has_pageserial() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPostURL::set_has_pageserial() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPostURL::clear_has_pageserial() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPostURL::clear_pageserial() {
  pageserial_ = 0u;
  clear_has_pageserial();
}
inline ::google::protobuf::uint32 CMsgPostURL::pageserial() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPostURL.pageserial)
  return pageserial_;
}
inline void CMsgPostURL::set_pageserial(::google::protobuf::uint32 value) {
  set_has_pageserial();
  pageserial_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPostURL.pageserial)
}

// -------------------------------------------------------------------

// CMsgAddHeader

// optional uint32 browser_handle = 1;
inline bool CMsgAddHeader::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgAddHeader::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgAddHeader::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgAddHeader::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgAddHeader::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAddHeader.browser_handle)
  return browser_handle_;
}
inline void CMsgAddHeader::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAddHeader.browser_handle)
}

// optional string key = 2;
inline bool CMsgAddHeader::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgAddHeader::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgAddHeader::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgAddHeader::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& CMsgAddHeader::key() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAddHeader.key)
  return key_.GetNoArena();
}
inline void CMsgAddHeader::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAddHeader.key)
}
#if LANG_CXX11
inline void CMsgAddHeader::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgAddHeader.key)
}
#endif
inline void CMsgAddHeader::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgAddHeader.key)
}
inline void CMsgAddHeader::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgAddHeader.key)
}
inline ::std::string* CMsgAddHeader::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgAddHeader.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgAddHeader::release_key() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgAddHeader.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgAddHeader::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgAddHeader.key)
}

// optional string value = 3;
inline bool CMsgAddHeader::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgAddHeader::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgAddHeader::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgAddHeader::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& CMsgAddHeader::value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAddHeader.value)
  return value_.GetNoArena();
}
inline void CMsgAddHeader::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAddHeader.value)
}
#if LANG_CXX11
inline void CMsgAddHeader::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgAddHeader.value)
}
#endif
inline void CMsgAddHeader::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgAddHeader.value)
}
inline void CMsgAddHeader::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgAddHeader.value)
}
inline ::std::string* CMsgAddHeader::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgAddHeader.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgAddHeader::release_value() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgAddHeader.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgAddHeader::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgAddHeader.value)
}

// -------------------------------------------------------------------

// CMsgStopLoad

// optional uint32 browser_handle = 1;
inline bool CMsgStopLoad::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgStopLoad::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgStopLoad::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgStopLoad::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgStopLoad::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgStopLoad.browser_handle)
  return browser_handle_;
}
inline void CMsgStopLoad::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgStopLoad.browser_handle)
}

// -------------------------------------------------------------------

// CMsgReload

// optional uint32 browser_handle = 1;
inline bool CMsgReload::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgReload::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgReload::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgReload::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgReload::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgReload.browser_handle)
  return browser_handle_;
}
inline void CMsgReload::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgReload.browser_handle)
}

// -------------------------------------------------------------------

// CMsgGoForward

// optional uint32 browser_handle = 1;
inline bool CMsgGoForward::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGoForward::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGoForward::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGoForward::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgGoForward::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGoForward.browser_handle)
  return browser_handle_;
}
inline void CMsgGoForward::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGoForward.browser_handle)
}

// -------------------------------------------------------------------

// CMsgGoBack

// optional uint32 browser_handle = 1;
inline bool CMsgGoBack::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGoBack::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGoBack::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGoBack::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgGoBack::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGoBack.browser_handle)
  return browser_handle_;
}
inline void CMsgGoBack::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGoBack.browser_handle)
}

// -------------------------------------------------------------------

// CMsgClearHistory

// optional uint32 browser_handle = 1;
inline bool CMsgClearHistory::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClearHistory::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClearHistory::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClearHistory::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgClearHistory::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClearHistory.browser_handle)
  return browser_handle_;
}
inline void CMsgClearHistory::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClearHistory.browser_handle)
}

// -------------------------------------------------------------------

// CMsgCopy

// optional uint32 browser_handle = 1;
inline bool CMsgCopy::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCopy::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCopy::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCopy::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgCopy::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCopy.browser_handle)
  return browser_handle_;
}
inline void CMsgCopy::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCopy.browser_handle)
}

// -------------------------------------------------------------------

// CMsgPaste

// optional uint32 browser_handle = 1;
inline bool CMsgPaste::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPaste::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPaste::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPaste::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgPaste::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPaste.browser_handle)
  return browser_handle_;
}
inline void CMsgPaste::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPaste.browser_handle)
}

// -------------------------------------------------------------------

// CMsgExecuteJavaScript

// optional uint32 browser_handle = 1;
inline bool CMsgExecuteJavaScript::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgExecuteJavaScript::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgExecuteJavaScript::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgExecuteJavaScript::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgExecuteJavaScript::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgExecuteJavaScript.browser_handle)
  return browser_handle_;
}
inline void CMsgExecuteJavaScript::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgExecuteJavaScript.browser_handle)
}

// optional string script = 2;
inline bool CMsgExecuteJavaScript::has_script() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgExecuteJavaScript::set_has_script() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgExecuteJavaScript::clear_has_script() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgExecuteJavaScript::clear_script() {
  script_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_script();
}
inline const ::std::string& CMsgExecuteJavaScript::script() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgExecuteJavaScript.script)
  return script_.GetNoArena();
}
inline void CMsgExecuteJavaScript::set_script(const ::std::string& value) {
  set_has_script();
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgExecuteJavaScript.script)
}
#if LANG_CXX11
inline void CMsgExecuteJavaScript::set_script(::std::string&& value) {
  set_has_script();
  script_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgExecuteJavaScript.script)
}
#endif
inline void CMsgExecuteJavaScript::set_script(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_script();
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgExecuteJavaScript.script)
}
inline void CMsgExecuteJavaScript::set_script(const char* value, size_t size) {
  set_has_script();
  script_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgExecuteJavaScript.script)
}
inline ::std::string* CMsgExecuteJavaScript::mutable_script() {
  set_has_script();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgExecuteJavaScript.script)
  return script_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgExecuteJavaScript::release_script() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgExecuteJavaScript.script)
  clear_has_script();
  return script_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgExecuteJavaScript::set_allocated_script(::std::string* script) {
  if (script != NULL) {
    set_has_script();
  } else {
    clear_has_script();
  }
  script_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), script);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgExecuteJavaScript.script)
}

// -------------------------------------------------------------------

// CMsgSetFocus

// optional uint32 browser_handle = 1;
inline bool CMsgSetFocus::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetFocus::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetFocus::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetFocus::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgSetFocus::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetFocus.browser_handle)
  return browser_handle_;
}
inline void CMsgSetFocus::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetFocus.browser_handle)
}

// optional bool focus = 2;
inline bool CMsgSetFocus::has_focus() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetFocus::set_has_focus() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetFocus::clear_has_focus() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetFocus::clear_focus() {
  focus_ = false;
  clear_has_focus();
}
inline bool CMsgSetFocus::focus() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetFocus.focus)
  return focus_;
}
inline void CMsgSetFocus::set_focus(bool value) {
  set_has_focus();
  focus_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetFocus.focus)
}

// -------------------------------------------------------------------

// CMsgHorizontalScrollBarSize

// optional uint32 browser_handle = 1;
inline bool CMsgHorizontalScrollBarSize::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHorizontalScrollBarSize::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHorizontalScrollBarSize::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHorizontalScrollBarSize::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgHorizontalScrollBarSize::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgHorizontalScrollBarSize.browser_handle)
  return browser_handle_;
}
inline void CMsgHorizontalScrollBarSize::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgHorizontalScrollBarSize.browser_handle)
}

// -------------------------------------------------------------------

// CMsgHorizontalScrollBarSizeResponse

// optional uint32 browser_handle = 1;
inline bool CMsgHorizontalScrollBarSizeResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHorizontalScrollBarSizeResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHorizontalScrollBarSizeResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHorizontalScrollBarSizeResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgHorizontalScrollBarSizeResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgHorizontalScrollBarSizeResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgHorizontalScrollBarSizeResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgHorizontalScrollBarSizeResponse.browser_handle)
}

// optional uint32 scroll_max = 6;
inline bool CMsgHorizontalScrollBarSizeResponse::has_scroll_max() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgHorizontalScrollBarSizeResponse::set_has_scroll_max() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgHorizontalScrollBarSizeResponse::clear_has_scroll_max() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgHorizontalScrollBarSizeResponse::clear_scroll_max() {
  scroll_max_ = 0u;
  clear_has_scroll_max();
}
inline ::google::protobuf::uint32 CMsgHorizontalScrollBarSizeResponse::scroll_max() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgHorizontalScrollBarSizeResponse.scroll_max)
  return scroll_max_;
}
inline void CMsgHorizontalScrollBarSizeResponse::set_scroll_max(::google::protobuf::uint32 value) {
  set_has_scroll_max();
  scroll_max_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgHorizontalScrollBarSizeResponse.scroll_max)
}

// optional uint32 scroll = 7;
inline bool CMsgHorizontalScrollBarSizeResponse::has_scroll() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgHorizontalScrollBarSizeResponse::set_has_scroll() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgHorizontalScrollBarSizeResponse::clear_has_scroll() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgHorizontalScrollBarSizeResponse::clear_scroll() {
  scroll_ = 0u;
  clear_has_scroll();
}
inline ::google::protobuf::uint32 CMsgHorizontalScrollBarSizeResponse::scroll() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgHorizontalScrollBarSizeResponse.scroll)
  return scroll_;
}
inline void CMsgHorizontalScrollBarSizeResponse::set_scroll(::google::protobuf::uint32 value) {
  set_has_scroll();
  scroll_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgHorizontalScrollBarSizeResponse.scroll)
}

// optional float zoom = 8;
inline bool CMsgHorizontalScrollBarSizeResponse::has_zoom() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgHorizontalScrollBarSizeResponse::set_has_zoom() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgHorizontalScrollBarSizeResponse::clear_has_zoom() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgHorizontalScrollBarSizeResponse::clear_zoom() {
  zoom_ = 0;
  clear_has_zoom();
}
inline float CMsgHorizontalScrollBarSizeResponse::zoom() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgHorizontalScrollBarSizeResponse.zoom)
  return zoom_;
}
inline void CMsgHorizontalScrollBarSizeResponse::set_zoom(float value) {
  set_has_zoom();
  zoom_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgHorizontalScrollBarSizeResponse.zoom)
}

// optional bool visible = 9;
inline bool CMsgHorizontalScrollBarSizeResponse::has_visible() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgHorizontalScrollBarSizeResponse::set_has_visible() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgHorizontalScrollBarSizeResponse::clear_has_visible() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgHorizontalScrollBarSizeResponse::clear_visible() {
  visible_ = false;
  clear_has_visible();
}
inline bool CMsgHorizontalScrollBarSizeResponse::visible() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgHorizontalScrollBarSizeResponse.visible)
  return visible_;
}
inline void CMsgHorizontalScrollBarSizeResponse::set_visible(bool value) {
  set_has_visible();
  visible_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgHorizontalScrollBarSizeResponse.visible)
}

// optional uint32 page_size = 10;
inline bool CMsgHorizontalScrollBarSizeResponse::has_page_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgHorizontalScrollBarSizeResponse::set_has_page_size() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgHorizontalScrollBarSizeResponse::clear_has_page_size() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgHorizontalScrollBarSizeResponse::clear_page_size() {
  page_size_ = 0u;
  clear_has_page_size();
}
inline ::google::protobuf::uint32 CMsgHorizontalScrollBarSizeResponse::page_size() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgHorizontalScrollBarSizeResponse.page_size)
  return page_size_;
}
inline void CMsgHorizontalScrollBarSizeResponse::set_page_size(::google::protobuf::uint32 value) {
  set_has_page_size();
  page_size_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgHorizontalScrollBarSizeResponse.page_size)
}

// -------------------------------------------------------------------

// CMsgVerticalScrollBarSize

// optional uint32 browser_handle = 1;
inline bool CMsgVerticalScrollBarSize::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgVerticalScrollBarSize::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgVerticalScrollBarSize::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgVerticalScrollBarSize::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgVerticalScrollBarSize::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgVerticalScrollBarSize.browser_handle)
  return browser_handle_;
}
inline void CMsgVerticalScrollBarSize::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgVerticalScrollBarSize.browser_handle)
}

// -------------------------------------------------------------------

// CMsgVerticalScrollBarSizeResponse

// optional uint32 browser_handle = 1;
inline bool CMsgVerticalScrollBarSizeResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgVerticalScrollBarSizeResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgVerticalScrollBarSizeResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgVerticalScrollBarSizeResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgVerticalScrollBarSizeResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgVerticalScrollBarSizeResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgVerticalScrollBarSizeResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgVerticalScrollBarSizeResponse.browser_handle)
}

// optional uint32 scroll_max = 6;
inline bool CMsgVerticalScrollBarSizeResponse::has_scroll_max() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgVerticalScrollBarSizeResponse::set_has_scroll_max() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgVerticalScrollBarSizeResponse::clear_has_scroll_max() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgVerticalScrollBarSizeResponse::clear_scroll_max() {
  scroll_max_ = 0u;
  clear_has_scroll_max();
}
inline ::google::protobuf::uint32 CMsgVerticalScrollBarSizeResponse::scroll_max() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgVerticalScrollBarSizeResponse.scroll_max)
  return scroll_max_;
}
inline void CMsgVerticalScrollBarSizeResponse::set_scroll_max(::google::protobuf::uint32 value) {
  set_has_scroll_max();
  scroll_max_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgVerticalScrollBarSizeResponse.scroll_max)
}

// optional uint32 scroll = 7;
inline bool CMsgVerticalScrollBarSizeResponse::has_scroll() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgVerticalScrollBarSizeResponse::set_has_scroll() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgVerticalScrollBarSizeResponse::clear_has_scroll() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgVerticalScrollBarSizeResponse::clear_scroll() {
  scroll_ = 0u;
  clear_has_scroll();
}
inline ::google::protobuf::uint32 CMsgVerticalScrollBarSizeResponse::scroll() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgVerticalScrollBarSizeResponse.scroll)
  return scroll_;
}
inline void CMsgVerticalScrollBarSizeResponse::set_scroll(::google::protobuf::uint32 value) {
  set_has_scroll();
  scroll_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgVerticalScrollBarSizeResponse.scroll)
}

// optional float zoom = 8;
inline bool CMsgVerticalScrollBarSizeResponse::has_zoom() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgVerticalScrollBarSizeResponse::set_has_zoom() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgVerticalScrollBarSizeResponse::clear_has_zoom() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgVerticalScrollBarSizeResponse::clear_zoom() {
  zoom_ = 0;
  clear_has_zoom();
}
inline float CMsgVerticalScrollBarSizeResponse::zoom() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgVerticalScrollBarSizeResponse.zoom)
  return zoom_;
}
inline void CMsgVerticalScrollBarSizeResponse::set_zoom(float value) {
  set_has_zoom();
  zoom_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgVerticalScrollBarSizeResponse.zoom)
}

// optional bool visible = 9;
inline bool CMsgVerticalScrollBarSizeResponse::has_visible() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgVerticalScrollBarSizeResponse::set_has_visible() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgVerticalScrollBarSizeResponse::clear_has_visible() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgVerticalScrollBarSizeResponse::clear_visible() {
  visible_ = false;
  clear_has_visible();
}
inline bool CMsgVerticalScrollBarSizeResponse::visible() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgVerticalScrollBarSizeResponse.visible)
  return visible_;
}
inline void CMsgVerticalScrollBarSizeResponse::set_visible(bool value) {
  set_has_visible();
  visible_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgVerticalScrollBarSizeResponse.visible)
}

// optional uint32 page_size = 10;
inline bool CMsgVerticalScrollBarSizeResponse::has_page_size() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgVerticalScrollBarSizeResponse::set_has_page_size() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgVerticalScrollBarSizeResponse::clear_has_page_size() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgVerticalScrollBarSizeResponse::clear_page_size() {
  page_size_ = 0u;
  clear_has_page_size();
}
inline ::google::protobuf::uint32 CMsgVerticalScrollBarSizeResponse::page_size() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgVerticalScrollBarSizeResponse.page_size)
  return page_size_;
}
inline void CMsgVerticalScrollBarSizeResponse::set_page_size(::google::protobuf::uint32 value) {
  set_has_page_size();
  page_size_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgVerticalScrollBarSizeResponse.page_size)
}

// -------------------------------------------------------------------

// CMsgFind

// optional uint32 browser_handle = 1;
inline bool CMsgFind::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgFind::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgFind::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgFind::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgFind::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFind.browser_handle)
  return browser_handle_;
}
inline void CMsgFind::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFind.browser_handle)
}

// optional string find = 2;
inline bool CMsgFind::has_find() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFind::set_has_find() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFind::clear_has_find() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFind::clear_find() {
  find_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_find();
}
inline const ::std::string& CMsgFind::find() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFind.find)
  return find_.GetNoArena();
}
inline void CMsgFind::set_find(const ::std::string& value) {
  set_has_find();
  find_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFind.find)
}
#if LANG_CXX11
inline void CMsgFind::set_find(::std::string&& value) {
  set_has_find();
  find_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgFind.find)
}
#endif
inline void CMsgFind::set_find(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_find();
  find_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgFind.find)
}
inline void CMsgFind::set_find(const char* value, size_t size) {
  set_has_find();
  find_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgFind.find)
}
inline ::std::string* CMsgFind::mutable_find() {
  set_has_find();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgFind.find)
  return find_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgFind::release_find() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgFind.find)
  clear_has_find();
  return find_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgFind::set_allocated_find(::std::string* find) {
  if (find != NULL) {
    set_has_find();
  } else {
    clear_has_find();
  }
  find_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), find);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgFind.find)
}

// optional bool infind = 3;
inline bool CMsgFind::has_infind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgFind::set_has_infind() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgFind::clear_has_infind() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgFind::clear_infind() {
  infind_ = false;
  clear_has_infind();
}
inline bool CMsgFind::infind() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFind.infind)
  return infind_;
}
inline void CMsgFind::set_infind(bool value) {
  set_has_infind();
  infind_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFind.infind)
}

// optional bool reverse = 4 [default = false];
inline bool CMsgFind::has_reverse() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgFind::set_has_reverse() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgFind::clear_has_reverse() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgFind::clear_reverse() {
  reverse_ = false;
  clear_has_reverse();
}
inline bool CMsgFind::reverse() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFind.reverse)
  return reverse_;
}
inline void CMsgFind::set_reverse(bool value) {
  set_has_reverse();
  reverse_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFind.reverse)
}

// -------------------------------------------------------------------

// CMsgStopFind

// optional uint32 browser_handle = 1;
inline bool CMsgStopFind::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgStopFind::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgStopFind::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgStopFind::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgStopFind::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgStopFind.browser_handle)
  return browser_handle_;
}
inline void CMsgStopFind::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgStopFind.browser_handle)
}

// -------------------------------------------------------------------

// CMsgSetHorizontalScroll

// optional uint32 browser_handle = 1;
inline bool CMsgSetHorizontalScroll::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetHorizontalScroll::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetHorizontalScroll::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetHorizontalScroll::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgSetHorizontalScroll::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetHorizontalScroll.browser_handle)
  return browser_handle_;
}
inline void CMsgSetHorizontalScroll::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetHorizontalScroll.browser_handle)
}

// optional uint32 scroll = 2;
inline bool CMsgSetHorizontalScroll::has_scroll() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetHorizontalScroll::set_has_scroll() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetHorizontalScroll::clear_has_scroll() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetHorizontalScroll::clear_scroll() {
  scroll_ = 0u;
  clear_has_scroll();
}
inline ::google::protobuf::uint32 CMsgSetHorizontalScroll::scroll() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetHorizontalScroll.scroll)
  return scroll_;
}
inline void CMsgSetHorizontalScroll::set_scroll(::google::protobuf::uint32 value) {
  set_has_scroll();
  scroll_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetHorizontalScroll.scroll)
}

// -------------------------------------------------------------------

// CMsgSetVerticalScroll

// optional uint32 browser_handle = 1;
inline bool CMsgSetVerticalScroll::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetVerticalScroll::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetVerticalScroll::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetVerticalScroll::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgSetVerticalScroll::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetVerticalScroll.browser_handle)
  return browser_handle_;
}
inline void CMsgSetVerticalScroll::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetVerticalScroll.browser_handle)
}

// optional uint32 scroll = 2;
inline bool CMsgSetVerticalScroll::has_scroll() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetVerticalScroll::set_has_scroll() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetVerticalScroll::clear_has_scroll() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetVerticalScroll::clear_scroll() {
  scroll_ = 0u;
  clear_has_scroll();
}
inline ::google::protobuf::uint32 CMsgSetVerticalScroll::scroll() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetVerticalScroll.scroll)
  return scroll_;
}
inline void CMsgSetVerticalScroll::set_scroll(::google::protobuf::uint32 value) {
  set_has_scroll();
  scroll_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetVerticalScroll.scroll)
}

// -------------------------------------------------------------------

// CMsgSetZoomLevel

// optional uint32 browser_handle = 1;
inline bool CMsgSetZoomLevel::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetZoomLevel::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetZoomLevel::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetZoomLevel::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgSetZoomLevel::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetZoomLevel.browser_handle)
  return browser_handle_;
}
inline void CMsgSetZoomLevel::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetZoomLevel.browser_handle)
}

// optional uint32 zoom = 2;
inline bool CMsgSetZoomLevel::has_zoom() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetZoomLevel::set_has_zoom() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetZoomLevel::clear_has_zoom() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetZoomLevel::clear_zoom() {
  zoom_ = 0u;
  clear_has_zoom();
}
inline ::google::protobuf::uint32 CMsgSetZoomLevel::zoom() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetZoomLevel.zoom)
  return zoom_;
}
inline void CMsgSetZoomLevel::set_zoom(::google::protobuf::uint32 value) {
  set_has_zoom();
  zoom_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetZoomLevel.zoom)
}

// -------------------------------------------------------------------

// CMsgViewSource

// optional uint32 browser_handle = 1;
inline bool CMsgViewSource::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgViewSource::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgViewSource::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgViewSource::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgViewSource::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgViewSource.browser_handle)
  return browser_handle_;
}
inline void CMsgViewSource::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgViewSource.browser_handle)
}

// -------------------------------------------------------------------

// CMsgBrowserReady

// optional uint32 browser_handle = 1;
inline bool CMsgBrowserReady::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgBrowserReady::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgBrowserReady::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgBrowserReady::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgBrowserReady::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserReady.browser_handle)
  return browser_handle_;
}
inline void CMsgBrowserReady::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserReady.browser_handle)
}

// optional string vr_overlay_key = 2;
inline bool CMsgBrowserReady::has_vr_overlay_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBrowserReady::set_has_vr_overlay_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBrowserReady::clear_has_vr_overlay_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBrowserReady::clear_vr_overlay_key() {
  vr_overlay_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vr_overlay_key();
}
inline const ::std::string& CMsgBrowserReady::vr_overlay_key() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBrowserReady.vr_overlay_key)
  return vr_overlay_key_.GetNoArena();
}
inline void CMsgBrowserReady::set_vr_overlay_key(const ::std::string& value) {
  set_has_vr_overlay_key();
  vr_overlay_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBrowserReady.vr_overlay_key)
}
#if LANG_CXX11
inline void CMsgBrowserReady::set_vr_overlay_key(::std::string&& value) {
  set_has_vr_overlay_key();
  vr_overlay_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgBrowserReady.vr_overlay_key)
}
#endif
inline void CMsgBrowserReady::set_vr_overlay_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_vr_overlay_key();
  vr_overlay_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgBrowserReady.vr_overlay_key)
}
inline void CMsgBrowserReady::set_vr_overlay_key(const char* value, size_t size) {
  set_has_vr_overlay_key();
  vr_overlay_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgBrowserReady.vr_overlay_key)
}
inline ::std::string* CMsgBrowserReady::mutable_vr_overlay_key() {
  set_has_vr_overlay_key();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgBrowserReady.vr_overlay_key)
  return vr_overlay_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgBrowserReady::release_vr_overlay_key() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgBrowserReady.vr_overlay_key)
  clear_has_vr_overlay_key();
  return vr_overlay_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgBrowserReady::set_allocated_vr_overlay_key(::std::string* vr_overlay_key) {
  if (vr_overlay_key != NULL) {
    set_has_vr_overlay_key();
  } else {
    clear_has_vr_overlay_key();
  }
  vr_overlay_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vr_overlay_key);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgBrowserReady.vr_overlay_key)
}

// -------------------------------------------------------------------

// CMsgURLChanged

// optional uint32 browser_handle = 1;
inline bool CMsgURLChanged::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgURLChanged::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgURLChanged::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgURLChanged::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgURLChanged::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgURLChanged.browser_handle)
  return browser_handle_;
}
inline void CMsgURLChanged::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgURLChanged.browser_handle)
}

// optional string url = 2;
inline bool CMsgURLChanged::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgURLChanged::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgURLChanged::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgURLChanged::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgURLChanged::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgURLChanged.url)
  return url_.GetNoArena();
}
inline void CMsgURLChanged::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgURLChanged.url)
}
#if LANG_CXX11
inline void CMsgURLChanged::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgURLChanged.url)
}
#endif
inline void CMsgURLChanged::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgURLChanged.url)
}
inline void CMsgURLChanged::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgURLChanged.url)
}
inline ::std::string* CMsgURLChanged::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgURLChanged.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgURLChanged::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgURLChanged.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgURLChanged::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgURLChanged.url)
}

// optional string postData = 3;
inline bool CMsgURLChanged::has_postdata() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgURLChanged::set_has_postdata() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgURLChanged::clear_has_postdata() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgURLChanged::clear_postdata() {
  postdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_postdata();
}
inline const ::std::string& CMsgURLChanged::postdata() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgURLChanged.postData)
  return postdata_.GetNoArena();
}
inline void CMsgURLChanged::set_postdata(const ::std::string& value) {
  set_has_postdata();
  postdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgURLChanged.postData)
}
#if LANG_CXX11
inline void CMsgURLChanged::set_postdata(::std::string&& value) {
  set_has_postdata();
  postdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgURLChanged.postData)
}
#endif
inline void CMsgURLChanged::set_postdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_postdata();
  postdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgURLChanged.postData)
}
inline void CMsgURLChanged::set_postdata(const char* value, size_t size) {
  set_has_postdata();
  postdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgURLChanged.postData)
}
inline ::std::string* CMsgURLChanged::mutable_postdata() {
  set_has_postdata();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgURLChanged.postData)
  return postdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgURLChanged::release_postdata() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgURLChanged.postData)
  clear_has_postdata();
  return postdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgURLChanged::set_allocated_postdata(::std::string* postdata) {
  if (postdata != NULL) {
    set_has_postdata();
  } else {
    clear_has_postdata();
  }
  postdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), postdata);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgURLChanged.postData)
}

// optional bool bIsRedirect = 4;
inline bool CMsgURLChanged::has_bisredirect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgURLChanged::set_has_bisredirect() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgURLChanged::clear_has_bisredirect() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgURLChanged::clear_bisredirect() {
  bisredirect_ = false;
  clear_has_bisredirect();
}
inline bool CMsgURLChanged::bisredirect() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgURLChanged.bIsRedirect)
  return bisredirect_;
}
inline void CMsgURLChanged::set_bisredirect(bool value) {
  set_has_bisredirect();
  bisredirect_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgURLChanged.bIsRedirect)
}

// optional string pagetitle = 5;
inline bool CMsgURLChanged::has_pagetitle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgURLChanged::set_has_pagetitle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgURLChanged::clear_has_pagetitle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgURLChanged::clear_pagetitle() {
  pagetitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pagetitle();
}
inline const ::std::string& CMsgURLChanged::pagetitle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgURLChanged.pagetitle)
  return pagetitle_.GetNoArena();
}
inline void CMsgURLChanged::set_pagetitle(const ::std::string& value) {
  set_has_pagetitle();
  pagetitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgURLChanged.pagetitle)
}
#if LANG_CXX11
inline void CMsgURLChanged::set_pagetitle(::std::string&& value) {
  set_has_pagetitle();
  pagetitle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgURLChanged.pagetitle)
}
#endif
inline void CMsgURLChanged::set_pagetitle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pagetitle();
  pagetitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgURLChanged.pagetitle)
}
inline void CMsgURLChanged::set_pagetitle(const char* value, size_t size) {
  set_has_pagetitle();
  pagetitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgURLChanged.pagetitle)
}
inline ::std::string* CMsgURLChanged::mutable_pagetitle() {
  set_has_pagetitle();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgURLChanged.pagetitle)
  return pagetitle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgURLChanged::release_pagetitle() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgURLChanged.pagetitle)
  clear_has_pagetitle();
  return pagetitle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgURLChanged::set_allocated_pagetitle(::std::string* pagetitle) {
  if (pagetitle != NULL) {
    set_has_pagetitle();
  } else {
    clear_has_pagetitle();
  }
  pagetitle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pagetitle);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgURLChanged.pagetitle)
}

// optional bool bNewNavigation = 6;
inline bool CMsgURLChanged::has_bnewnavigation() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgURLChanged::set_has_bnewnavigation() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgURLChanged::clear_has_bnewnavigation() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgURLChanged::clear_bnewnavigation() {
  bnewnavigation_ = false;
  clear_has_bnewnavigation();
}
inline bool CMsgURLChanged::bnewnavigation() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgURLChanged.bNewNavigation)
  return bnewnavigation_;
}
inline void CMsgURLChanged::set_bnewnavigation(bool value) {
  set_has_bnewnavigation();
  bnewnavigation_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgURLChanged.bNewNavigation)
}

// -------------------------------------------------------------------

// CHTMLHeader

// optional string key = 1;
inline bool CHTMLHeader::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CHTMLHeader::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CHTMLHeader::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CHTMLHeader::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& CHTMLHeader::key() const {
  // @@protoc_insertion_point(field_get:proto.steam.CHTMLHeader.key)
  return key_.GetNoArena();
}
inline void CHTMLHeader::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CHTMLHeader.key)
}
#if LANG_CXX11
inline void CHTMLHeader::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CHTMLHeader.key)
}
#endif
inline void CHTMLHeader::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CHTMLHeader.key)
}
inline void CHTMLHeader::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CHTMLHeader.key)
}
inline ::std::string* CHTMLHeader::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:proto.steam.CHTMLHeader.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CHTMLHeader::release_key() {
  // @@protoc_insertion_point(field_release:proto.steam.CHTMLHeader.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CHTMLHeader::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CHTMLHeader.key)
}

// optional string value = 2;
inline bool CHTMLHeader::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CHTMLHeader::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CHTMLHeader::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CHTMLHeader::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& CHTMLHeader::value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CHTMLHeader.value)
  return value_.GetNoArena();
}
inline void CHTMLHeader::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CHTMLHeader.value)
}
#if LANG_CXX11
inline void CHTMLHeader::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CHTMLHeader.value)
}
#endif
inline void CHTMLHeader::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CHTMLHeader.value)
}
inline void CHTMLHeader::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CHTMLHeader.value)
}
inline ::std::string* CHTMLHeader::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:proto.steam.CHTMLHeader.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CHTMLHeader::release_value() {
  // @@protoc_insertion_point(field_release:proto.steam.CHTMLHeader.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CHTMLHeader::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CHTMLHeader.value)
}

// -------------------------------------------------------------------

// CHTMLPageSecurityInfo

// optional bool bIsSecure = 1 [default = false];
inline bool CHTMLPageSecurityInfo::has_bissecure() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CHTMLPageSecurityInfo::set_has_bissecure() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CHTMLPageSecurityInfo::clear_has_bissecure() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CHTMLPageSecurityInfo::clear_bissecure() {
  bissecure_ = false;
  clear_has_bissecure();
}
inline bool CHTMLPageSecurityInfo::bissecure() const {
  // @@protoc_insertion_point(field_get:proto.steam.CHTMLPageSecurityInfo.bIsSecure)
  return bissecure_;
}
inline void CHTMLPageSecurityInfo::set_bissecure(bool value) {
  set_has_bissecure();
  bissecure_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CHTMLPageSecurityInfo.bIsSecure)
}

// optional bool bHasCertError = 2 [default = false];
inline bool CHTMLPageSecurityInfo::has_bhascerterror() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CHTMLPageSecurityInfo::set_has_bhascerterror() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CHTMLPageSecurityInfo::clear_has_bhascerterror() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CHTMLPageSecurityInfo::clear_bhascerterror() {
  bhascerterror_ = false;
  clear_has_bhascerterror();
}
inline bool CHTMLPageSecurityInfo::bhascerterror() const {
  // @@protoc_insertion_point(field_get:proto.steam.CHTMLPageSecurityInfo.bHasCertError)
  return bhascerterror_;
}
inline void CHTMLPageSecurityInfo::set_bhascerterror(bool value) {
  set_has_bhascerterror();
  bhascerterror_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CHTMLPageSecurityInfo.bHasCertError)
}

// optional string issuerName = 3;
inline bool CHTMLPageSecurityInfo::has_issuername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CHTMLPageSecurityInfo::set_has_issuername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CHTMLPageSecurityInfo::clear_has_issuername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CHTMLPageSecurityInfo::clear_issuername() {
  issuername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_issuername();
}
inline const ::std::string& CHTMLPageSecurityInfo::issuername() const {
  // @@protoc_insertion_point(field_get:proto.steam.CHTMLPageSecurityInfo.issuerName)
  return issuername_.GetNoArena();
}
inline void CHTMLPageSecurityInfo::set_issuername(const ::std::string& value) {
  set_has_issuername();
  issuername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CHTMLPageSecurityInfo.issuerName)
}
#if LANG_CXX11
inline void CHTMLPageSecurityInfo::set_issuername(::std::string&& value) {
  set_has_issuername();
  issuername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CHTMLPageSecurityInfo.issuerName)
}
#endif
inline void CHTMLPageSecurityInfo::set_issuername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_issuername();
  issuername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CHTMLPageSecurityInfo.issuerName)
}
inline void CHTMLPageSecurityInfo::set_issuername(const char* value, size_t size) {
  set_has_issuername();
  issuername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CHTMLPageSecurityInfo.issuerName)
}
inline ::std::string* CHTMLPageSecurityInfo::mutable_issuername() {
  set_has_issuername();
  // @@protoc_insertion_point(field_mutable:proto.steam.CHTMLPageSecurityInfo.issuerName)
  return issuername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CHTMLPageSecurityInfo::release_issuername() {
  // @@protoc_insertion_point(field_release:proto.steam.CHTMLPageSecurityInfo.issuerName)
  clear_has_issuername();
  return issuername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CHTMLPageSecurityInfo::set_allocated_issuername(::std::string* issuername) {
  if (issuername != NULL) {
    set_has_issuername();
  } else {
    clear_has_issuername();
  }
  issuername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), issuername);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CHTMLPageSecurityInfo.issuerName)
}

// optional string certName = 4;
inline bool CHTMLPageSecurityInfo::has_certname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CHTMLPageSecurityInfo::set_has_certname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CHTMLPageSecurityInfo::clear_has_certname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CHTMLPageSecurityInfo::clear_certname() {
  certname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_certname();
}
inline const ::std::string& CHTMLPageSecurityInfo::certname() const {
  // @@protoc_insertion_point(field_get:proto.steam.CHTMLPageSecurityInfo.certName)
  return certname_.GetNoArena();
}
inline void CHTMLPageSecurityInfo::set_certname(const ::std::string& value) {
  set_has_certname();
  certname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CHTMLPageSecurityInfo.certName)
}
#if LANG_CXX11
inline void CHTMLPageSecurityInfo::set_certname(::std::string&& value) {
  set_has_certname();
  certname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CHTMLPageSecurityInfo.certName)
}
#endif
inline void CHTMLPageSecurityInfo::set_certname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_certname();
  certname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CHTMLPageSecurityInfo.certName)
}
inline void CHTMLPageSecurityInfo::set_certname(const char* value, size_t size) {
  set_has_certname();
  certname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CHTMLPageSecurityInfo.certName)
}
inline ::std::string* CHTMLPageSecurityInfo::mutable_certname() {
  set_has_certname();
  // @@protoc_insertion_point(field_mutable:proto.steam.CHTMLPageSecurityInfo.certName)
  return certname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CHTMLPageSecurityInfo::release_certname() {
  // @@protoc_insertion_point(field_release:proto.steam.CHTMLPageSecurityInfo.certName)
  clear_has_certname();
  return certname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CHTMLPageSecurityInfo::set_allocated_certname(::std::string* certname) {
  if (certname != NULL) {
    set_has_certname();
  } else {
    clear_has_certname();
  }
  certname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), certname);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CHTMLPageSecurityInfo.certName)
}

// optional int32 certExpiry = 5 [default = 0];
inline bool CHTMLPageSecurityInfo::has_certexpiry() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CHTMLPageSecurityInfo::set_has_certexpiry() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CHTMLPageSecurityInfo::clear_has_certexpiry() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CHTMLPageSecurityInfo::clear_certexpiry() {
  certexpiry_ = 0;
  clear_has_certexpiry();
}
inline ::google::protobuf::int32 CHTMLPageSecurityInfo::certexpiry() const {
  // @@protoc_insertion_point(field_get:proto.steam.CHTMLPageSecurityInfo.certExpiry)
  return certexpiry_;
}
inline void CHTMLPageSecurityInfo::set_certexpiry(::google::protobuf::int32 value) {
  set_has_certexpiry();
  certexpiry_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CHTMLPageSecurityInfo.certExpiry)
}

// optional int32 nCertBits = 6 [default = 0];
inline bool CHTMLPageSecurityInfo::has_ncertbits() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CHTMLPageSecurityInfo::set_has_ncertbits() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CHTMLPageSecurityInfo::clear_has_ncertbits() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CHTMLPageSecurityInfo::clear_ncertbits() {
  ncertbits_ = 0;
  clear_has_ncertbits();
}
inline ::google::protobuf::int32 CHTMLPageSecurityInfo::ncertbits() const {
  // @@protoc_insertion_point(field_get:proto.steam.CHTMLPageSecurityInfo.nCertBits)
  return ncertbits_;
}
inline void CHTMLPageSecurityInfo::set_ncertbits(::google::protobuf::int32 value) {
  set_has_ncertbits();
  ncertbits_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CHTMLPageSecurityInfo.nCertBits)
}

// optional bool bIsEVCert = 7 [default = false];
inline bool CHTMLPageSecurityInfo::has_bisevcert() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CHTMLPageSecurityInfo::set_has_bisevcert() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CHTMLPageSecurityInfo::clear_has_bisevcert() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CHTMLPageSecurityInfo::clear_bisevcert() {
  bisevcert_ = false;
  clear_has_bisevcert();
}
inline bool CHTMLPageSecurityInfo::bisevcert() const {
  // @@protoc_insertion_point(field_get:proto.steam.CHTMLPageSecurityInfo.bIsEVCert)
  return bisevcert_;
}
inline void CHTMLPageSecurityInfo::set_bisevcert(bool value) {
  set_has_bisevcert();
  bisevcert_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CHTMLPageSecurityInfo.bIsEVCert)
}

// -------------------------------------------------------------------

// CMsgFinishedRequest

// optional uint32 browser_handle = 1;
inline bool CMsgFinishedRequest::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgFinishedRequest::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgFinishedRequest::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgFinishedRequest::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgFinishedRequest::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFinishedRequest.browser_handle)
  return browser_handle_;
}
inline void CMsgFinishedRequest::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFinishedRequest.browser_handle)
}

// optional string url = 2;
inline bool CMsgFinishedRequest::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFinishedRequest::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFinishedRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFinishedRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgFinishedRequest::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFinishedRequest.url)
  return url_.GetNoArena();
}
inline void CMsgFinishedRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFinishedRequest.url)
}
#if LANG_CXX11
inline void CMsgFinishedRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgFinishedRequest.url)
}
#endif
inline void CMsgFinishedRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgFinishedRequest.url)
}
inline void CMsgFinishedRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgFinishedRequest.url)
}
inline ::std::string* CMsgFinishedRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgFinishedRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgFinishedRequest::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgFinishedRequest.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgFinishedRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgFinishedRequest.url)
}

// optional string pageTitle = 3;
inline bool CMsgFinishedRequest::has_pagetitle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgFinishedRequest::set_has_pagetitle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgFinishedRequest::clear_has_pagetitle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgFinishedRequest::clear_pagetitle() {
  pagetitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pagetitle();
}
inline const ::std::string& CMsgFinishedRequest::pagetitle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFinishedRequest.pageTitle)
  return pagetitle_.GetNoArena();
}
inline void CMsgFinishedRequest::set_pagetitle(const ::std::string& value) {
  set_has_pagetitle();
  pagetitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFinishedRequest.pageTitle)
}
#if LANG_CXX11
inline void CMsgFinishedRequest::set_pagetitle(::std::string&& value) {
  set_has_pagetitle();
  pagetitle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgFinishedRequest.pageTitle)
}
#endif
inline void CMsgFinishedRequest::set_pagetitle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pagetitle();
  pagetitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgFinishedRequest.pageTitle)
}
inline void CMsgFinishedRequest::set_pagetitle(const char* value, size_t size) {
  set_has_pagetitle();
  pagetitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgFinishedRequest.pageTitle)
}
inline ::std::string* CMsgFinishedRequest::mutable_pagetitle() {
  set_has_pagetitle();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgFinishedRequest.pageTitle)
  return pagetitle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgFinishedRequest::release_pagetitle() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgFinishedRequest.pageTitle)
  clear_has_pagetitle();
  return pagetitle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgFinishedRequest::set_allocated_pagetitle(::std::string* pagetitle) {
  if (pagetitle != NULL) {
    set_has_pagetitle();
  } else {
    clear_has_pagetitle();
  }
  pagetitle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pagetitle);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgFinishedRequest.pageTitle)
}

// -------------------------------------------------------------------

// CMsgLoadedRequest

// optional uint32 browser_handle = 1;
inline bool CMsgLoadedRequest::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLoadedRequest::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgLoadedRequest::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgLoadedRequest::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgLoadedRequest::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLoadedRequest.browser_handle)
  return browser_handle_;
}
inline void CMsgLoadedRequest::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLoadedRequest.browser_handle)
}

// optional string url = 2;
inline bool CMsgLoadedRequest::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLoadedRequest::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLoadedRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLoadedRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgLoadedRequest::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLoadedRequest.url)
  return url_.GetNoArena();
}
inline void CMsgLoadedRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLoadedRequest.url)
}
#if LANG_CXX11
inline void CMsgLoadedRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgLoadedRequest.url)
}
#endif
inline void CMsgLoadedRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgLoadedRequest.url)
}
inline void CMsgLoadedRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgLoadedRequest.url)
}
inline ::std::string* CMsgLoadedRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgLoadedRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgLoadedRequest::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgLoadedRequest.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgLoadedRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgLoadedRequest.url)
}

// optional string pageTitle = 3;
inline bool CMsgLoadedRequest::has_pagetitle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLoadedRequest::set_has_pagetitle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLoadedRequest::clear_has_pagetitle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLoadedRequest::clear_pagetitle() {
  pagetitle_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pagetitle();
}
inline const ::std::string& CMsgLoadedRequest::pagetitle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLoadedRequest.pageTitle)
  return pagetitle_.GetNoArena();
}
inline void CMsgLoadedRequest::set_pagetitle(const ::std::string& value) {
  set_has_pagetitle();
  pagetitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLoadedRequest.pageTitle)
}
#if LANG_CXX11
inline void CMsgLoadedRequest::set_pagetitle(::std::string&& value) {
  set_has_pagetitle();
  pagetitle_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgLoadedRequest.pageTitle)
}
#endif
inline void CMsgLoadedRequest::set_pagetitle(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pagetitle();
  pagetitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgLoadedRequest.pageTitle)
}
inline void CMsgLoadedRequest::set_pagetitle(const char* value, size_t size) {
  set_has_pagetitle();
  pagetitle_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgLoadedRequest.pageTitle)
}
inline ::std::string* CMsgLoadedRequest::mutable_pagetitle() {
  set_has_pagetitle();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgLoadedRequest.pageTitle)
  return pagetitle_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgLoadedRequest::release_pagetitle() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgLoadedRequest.pageTitle)
  clear_has_pagetitle();
  return pagetitle_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgLoadedRequest::set_allocated_pagetitle(::std::string* pagetitle) {
  if (pagetitle != NULL) {
    set_has_pagetitle();
  } else {
    clear_has_pagetitle();
  }
  pagetitle_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pagetitle);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgLoadedRequest.pageTitle)
}

// repeated .proto.steam.CHTMLHeader headers = 5;
inline int CMsgLoadedRequest::headers_size() const {
  return headers_.size();
}
inline void CMsgLoadedRequest::clear_headers() {
  headers_.Clear();
}
inline const ::proto::steam::CHTMLHeader& CMsgLoadedRequest::headers(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLoadedRequest.headers)
  return headers_.Get(index);
}
inline ::proto::steam::CHTMLHeader* CMsgLoadedRequest::mutable_headers(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgLoadedRequest.headers)
  return headers_.Mutable(index);
}
inline ::proto::steam::CHTMLHeader* CMsgLoadedRequest::add_headers() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgLoadedRequest.headers)
  return headers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CHTMLHeader >*
CMsgLoadedRequest::mutable_headers() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgLoadedRequest.headers)
  return &headers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CHTMLHeader >&
CMsgLoadedRequest::headers() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgLoadedRequest.headers)
  return headers_;
}

// -------------------------------------------------------------------

// CMsgPageSecurity

// optional uint32 browser_handle = 1;
inline bool CMsgPageSecurity::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPageSecurity::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPageSecurity::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPageSecurity::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgPageSecurity::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPageSecurity.browser_handle)
  return browser_handle_;
}
inline void CMsgPageSecurity::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPageSecurity.browser_handle)
}

// optional string url = 2;
inline bool CMsgPageSecurity::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPageSecurity::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPageSecurity::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPageSecurity::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgPageSecurity::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPageSecurity.url)
  return url_.GetNoArena();
}
inline void CMsgPageSecurity::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPageSecurity.url)
}
#if LANG_CXX11
inline void CMsgPageSecurity::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgPageSecurity.url)
}
#endif
inline void CMsgPageSecurity::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgPageSecurity.url)
}
inline void CMsgPageSecurity::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgPageSecurity.url)
}
inline ::std::string* CMsgPageSecurity::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgPageSecurity.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgPageSecurity::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgPageSecurity.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgPageSecurity::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgPageSecurity.url)
}

// optional .proto.steam.CHTMLPageSecurityInfo security_info = 3;
inline bool CMsgPageSecurity::has_security_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPageSecurity::set_has_security_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPageSecurity::clear_has_security_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPageSecurity::clear_security_info() {
  if (security_info_ != NULL) security_info_->::proto::steam::CHTMLPageSecurityInfo::Clear();
  clear_has_security_info();
}
inline const ::proto::steam::CHTMLPageSecurityInfo& CMsgPageSecurity::security_info() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPageSecurity.security_info)
  return security_info_ != NULL ? *security_info_
                         : *::proto::steam::CHTMLPageSecurityInfo::internal_default_instance();
}
inline ::proto::steam::CHTMLPageSecurityInfo* CMsgPageSecurity::mutable_security_info() {
  set_has_security_info();
  if (security_info_ == NULL) {
    security_info_ = new ::proto::steam::CHTMLPageSecurityInfo;
  }
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgPageSecurity.security_info)
  return security_info_;
}
inline ::proto::steam::CHTMLPageSecurityInfo* CMsgPageSecurity::release_security_info() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgPageSecurity.security_info)
  clear_has_security_info();
  ::proto::steam::CHTMLPageSecurityInfo* temp = security_info_;
  security_info_ = NULL;
  return temp;
}
inline void CMsgPageSecurity::set_allocated_security_info(::proto::steam::CHTMLPageSecurityInfo* security_info) {
  delete security_info_;
  security_info_ = security_info;
  if (security_info) {
    set_has_security_info();
  } else {
    clear_has_security_info();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgPageSecurity.security_info)
}

// -------------------------------------------------------------------

// CMsgStartRequest

// optional uint32 browser_handle = 1;
inline bool CMsgStartRequest::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgStartRequest::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgStartRequest::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgStartRequest::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgStartRequest::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgStartRequest.browser_handle)
  return browser_handle_;
}
inline void CMsgStartRequest::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgStartRequest.browser_handle)
}

// optional string url = 2;
inline bool CMsgStartRequest::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgStartRequest::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgStartRequest::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgStartRequest::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgStartRequest::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgStartRequest.url)
  return url_.GetNoArena();
}
inline void CMsgStartRequest::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgStartRequest.url)
}
#if LANG_CXX11
inline void CMsgStartRequest::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgStartRequest.url)
}
#endif
inline void CMsgStartRequest::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgStartRequest.url)
}
inline void CMsgStartRequest::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgStartRequest.url)
}
inline ::std::string* CMsgStartRequest::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgStartRequest.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgStartRequest::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgStartRequest.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgStartRequest::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgStartRequest.url)
}

// optional string target = 3;
inline bool CMsgStartRequest::has_target() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgStartRequest::set_has_target() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgStartRequest::clear_has_target() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgStartRequest::clear_target() {
  target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_target();
}
inline const ::std::string& CMsgStartRequest::target() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgStartRequest.target)
  return target_.GetNoArena();
}
inline void CMsgStartRequest::set_target(const ::std::string& value) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgStartRequest.target)
}
#if LANG_CXX11
inline void CMsgStartRequest::set_target(::std::string&& value) {
  set_has_target();
  target_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgStartRequest.target)
}
#endif
inline void CMsgStartRequest::set_target(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgStartRequest.target)
}
inline void CMsgStartRequest::set_target(const char* value, size_t size) {
  set_has_target();
  target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgStartRequest.target)
}
inline ::std::string* CMsgStartRequest::mutable_target() {
  set_has_target();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgStartRequest.target)
  return target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgStartRequest::release_target() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgStartRequest.target)
  clear_has_target();
  return target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgStartRequest::set_allocated_target(::std::string* target) {
  if (target != NULL) {
    set_has_target();
  } else {
    clear_has_target();
  }
  target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), target);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgStartRequest.target)
}

// optional string postData = 4;
inline bool CMsgStartRequest::has_postdata() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgStartRequest::set_has_postdata() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgStartRequest::clear_has_postdata() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgStartRequest::clear_postdata() {
  postdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_postdata();
}
inline const ::std::string& CMsgStartRequest::postdata() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgStartRequest.postData)
  return postdata_.GetNoArena();
}
inline void CMsgStartRequest::set_postdata(const ::std::string& value) {
  set_has_postdata();
  postdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgStartRequest.postData)
}
#if LANG_CXX11
inline void CMsgStartRequest::set_postdata(::std::string&& value) {
  set_has_postdata();
  postdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgStartRequest.postData)
}
#endif
inline void CMsgStartRequest::set_postdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_postdata();
  postdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgStartRequest.postData)
}
inline void CMsgStartRequest::set_postdata(const char* value, size_t size) {
  set_has_postdata();
  postdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgStartRequest.postData)
}
inline ::std::string* CMsgStartRequest::mutable_postdata() {
  set_has_postdata();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgStartRequest.postData)
  return postdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgStartRequest::release_postdata() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgStartRequest.postData)
  clear_has_postdata();
  return postdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgStartRequest::set_allocated_postdata(::std::string* postdata) {
  if (postdata != NULL) {
    set_has_postdata();
  } else {
    clear_has_postdata();
  }
  postdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), postdata);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgStartRequest.postData)
}

// optional bool bIsRedirect = 5;
inline bool CMsgStartRequest::has_bisredirect() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgStartRequest::set_has_bisredirect() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgStartRequest::clear_has_bisredirect() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgStartRequest::clear_bisredirect() {
  bisredirect_ = false;
  clear_has_bisredirect();
}
inline bool CMsgStartRequest::bisredirect() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgStartRequest.bIsRedirect)
  return bisredirect_;
}
inline void CMsgStartRequest::set_bisredirect(bool value) {
  set_has_bisredirect();
  bisredirect_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgStartRequest.bIsRedirect)
}

// -------------------------------------------------------------------

// CMsgStartRequestResponse

// optional uint32 browser_handle = 1;
inline bool CMsgStartRequestResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgStartRequestResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgStartRequestResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgStartRequestResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgStartRequestResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgStartRequestResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgStartRequestResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgStartRequestResponse.browser_handle)
}

// optional bool bAllow = 2;
inline bool CMsgStartRequestResponse::has_ballow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgStartRequestResponse::set_has_ballow() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgStartRequestResponse::clear_has_ballow() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgStartRequestResponse::clear_ballow() {
  ballow_ = false;
  clear_has_ballow();
}
inline bool CMsgStartRequestResponse::ballow() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgStartRequestResponse.bAllow)
  return ballow_;
}
inline void CMsgStartRequestResponse::set_ballow(bool value) {
  set_has_ballow();
  ballow_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgStartRequestResponse.bAllow)
}

// -------------------------------------------------------------------

// CMsgShowPopup

// optional uint32 browser_handle = 1;
inline bool CMsgShowPopup::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgShowPopup::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgShowPopup::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgShowPopup::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgShowPopup::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgShowPopup.browser_handle)
  return browser_handle_;
}
inline void CMsgShowPopup::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgShowPopup.browser_handle)
}

// -------------------------------------------------------------------

// CMsgHidePopup

// optional uint32 browser_handle = 1;
inline bool CMsgHidePopup::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHidePopup::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHidePopup::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHidePopup::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgHidePopup::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgHidePopup.browser_handle)
  return browser_handle_;
}
inline void CMsgHidePopup::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgHidePopup.browser_handle)
}

// -------------------------------------------------------------------

// CMsgSizePopup

// optional uint32 browser_handle = 1;
inline bool CMsgSizePopup::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSizePopup::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSizePopup::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSizePopup::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgSizePopup::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSizePopup.browser_handle)
  return browser_handle_;
}
inline void CMsgSizePopup::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSizePopup.browser_handle)
}

// optional uint32 x = 2;
inline bool CMsgSizePopup::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSizePopup::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSizePopup::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSizePopup::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 CMsgSizePopup::x() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSizePopup.x)
  return x_;
}
inline void CMsgSizePopup::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSizePopup.x)
}

// optional uint32 y = 3;
inline bool CMsgSizePopup::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSizePopup::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSizePopup::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSizePopup::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 CMsgSizePopup::y() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSizePopup.y)
  return y_;
}
inline void CMsgSizePopup::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSizePopup.y)
}

// optional uint32 wide = 4;
inline bool CMsgSizePopup::has_wide() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSizePopup::set_has_wide() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSizePopup::clear_has_wide() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSizePopup::clear_wide() {
  wide_ = 0u;
  clear_has_wide();
}
inline ::google::protobuf::uint32 CMsgSizePopup::wide() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSizePopup.wide)
  return wide_;
}
inline void CMsgSizePopup::set_wide(::google::protobuf::uint32 value) {
  set_has_wide();
  wide_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSizePopup.wide)
}

// optional uint32 tall = 5;
inline bool CMsgSizePopup::has_tall() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSizePopup::set_has_tall() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSizePopup::clear_has_tall() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSizePopup::clear_tall() {
  tall_ = 0u;
  clear_has_tall();
}
inline ::google::protobuf::uint32 CMsgSizePopup::tall() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSizePopup.tall)
  return tall_;
}
inline void CMsgSizePopup::set_tall(::google::protobuf::uint32 value) {
  set_has_tall();
  tall_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSizePopup.tall)
}

// -------------------------------------------------------------------

// CMsgOpenNewTab

// optional uint32 browser_handle = 1;
inline bool CMsgOpenNewTab::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgOpenNewTab::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgOpenNewTab::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgOpenNewTab::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgOpenNewTab::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgOpenNewTab.browser_handle)
  return browser_handle_;
}
inline void CMsgOpenNewTab::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgOpenNewTab.browser_handle)
}

// optional string url = 2;
inline bool CMsgOpenNewTab::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgOpenNewTab::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgOpenNewTab::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgOpenNewTab::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgOpenNewTab::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgOpenNewTab.url)
  return url_.GetNoArena();
}
inline void CMsgOpenNewTab::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgOpenNewTab.url)
}
#if LANG_CXX11
inline void CMsgOpenNewTab::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgOpenNewTab.url)
}
#endif
inline void CMsgOpenNewTab::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgOpenNewTab.url)
}
inline void CMsgOpenNewTab::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgOpenNewTab.url)
}
inline ::std::string* CMsgOpenNewTab::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgOpenNewTab.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgOpenNewTab::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgOpenNewTab.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgOpenNewTab::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgOpenNewTab.url)
}

// optional bool bForeground = 3;
inline bool CMsgOpenNewTab::has_bforeground() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgOpenNewTab::set_has_bforeground() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgOpenNewTab::clear_has_bforeground() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgOpenNewTab::clear_bforeground() {
  bforeground_ = false;
  clear_has_bforeground();
}
inline bool CMsgOpenNewTab::bforeground() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgOpenNewTab.bForeground)
  return bforeground_;
}
inline void CMsgOpenNewTab::set_bforeground(bool value) {
  set_has_bforeground();
  bforeground_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgOpenNewTab.bForeground)
}

// -------------------------------------------------------------------

// CMsgPopupHTMLWindow

// optional uint32 browser_handle = 1;
inline bool CMsgPopupHTMLWindow::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPopupHTMLWindow::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPopupHTMLWindow::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPopupHTMLWindow::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgPopupHTMLWindow::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPopupHTMLWindow.browser_handle)
  return browser_handle_;
}
inline void CMsgPopupHTMLWindow::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPopupHTMLWindow.browser_handle)
}

// optional string url = 2;
inline bool CMsgPopupHTMLWindow::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPopupHTMLWindow::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPopupHTMLWindow::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPopupHTMLWindow::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgPopupHTMLWindow::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPopupHTMLWindow.url)
  return url_.GetNoArena();
}
inline void CMsgPopupHTMLWindow::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPopupHTMLWindow.url)
}
#if LANG_CXX11
inline void CMsgPopupHTMLWindow::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgPopupHTMLWindow.url)
}
#endif
inline void CMsgPopupHTMLWindow::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgPopupHTMLWindow.url)
}
inline void CMsgPopupHTMLWindow::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgPopupHTMLWindow.url)
}
inline ::std::string* CMsgPopupHTMLWindow::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgPopupHTMLWindow.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgPopupHTMLWindow::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgPopupHTMLWindow.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgPopupHTMLWindow::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgPopupHTMLWindow.url)
}

// optional uint32 x = 3;
inline bool CMsgPopupHTMLWindow::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgPopupHTMLWindow::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgPopupHTMLWindow::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgPopupHTMLWindow::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 CMsgPopupHTMLWindow::x() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPopupHTMLWindow.x)
  return x_;
}
inline void CMsgPopupHTMLWindow::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPopupHTMLWindow.x)
}

// optional uint32 y = 4;
inline bool CMsgPopupHTMLWindow::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgPopupHTMLWindow::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgPopupHTMLWindow::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgPopupHTMLWindow::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 CMsgPopupHTMLWindow::y() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPopupHTMLWindow.y)
  return y_;
}
inline void CMsgPopupHTMLWindow::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPopupHTMLWindow.y)
}

// optional uint32 wide = 5;
inline bool CMsgPopupHTMLWindow::has_wide() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgPopupHTMLWindow::set_has_wide() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgPopupHTMLWindow::clear_has_wide() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgPopupHTMLWindow::clear_wide() {
  wide_ = 0u;
  clear_has_wide();
}
inline ::google::protobuf::uint32 CMsgPopupHTMLWindow::wide() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPopupHTMLWindow.wide)
  return wide_;
}
inline void CMsgPopupHTMLWindow::set_wide(::google::protobuf::uint32 value) {
  set_has_wide();
  wide_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPopupHTMLWindow.wide)
}

// optional uint32 tall = 6;
inline bool CMsgPopupHTMLWindow::has_tall() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgPopupHTMLWindow::set_has_tall() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgPopupHTMLWindow::clear_has_tall() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgPopupHTMLWindow::clear_tall() {
  tall_ = 0u;
  clear_has_tall();
}
inline ::google::protobuf::uint32 CMsgPopupHTMLWindow::tall() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPopupHTMLWindow.tall)
  return tall_;
}
inline void CMsgPopupHTMLWindow::set_tall(::google::protobuf::uint32 value) {
  set_has_tall();
  tall_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPopupHTMLWindow.tall)
}

// optional uint32 popup_index = 7;
inline bool CMsgPopupHTMLWindow::has_popup_index() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgPopupHTMLWindow::set_has_popup_index() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgPopupHTMLWindow::clear_has_popup_index() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgPopupHTMLWindow::clear_popup_index() {
  popup_index_ = 0u;
  clear_has_popup_index();
}
inline ::google::protobuf::uint32 CMsgPopupHTMLWindow::popup_index() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPopupHTMLWindow.popup_index)
  return popup_index_;
}
inline void CMsgPopupHTMLWindow::set_popup_index(::google::protobuf::uint32 value) {
  set_has_popup_index();
  popup_index_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPopupHTMLWindow.popup_index)
}

// -------------------------------------------------------------------

// CMsgPopupHTMLWindowResponse

// optional uint32 browser_handle = 1;
inline bool CMsgPopupHTMLWindowResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPopupHTMLWindowResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPopupHTMLWindowResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPopupHTMLWindowResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgPopupHTMLWindowResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPopupHTMLWindowResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgPopupHTMLWindowResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPopupHTMLWindowResponse.browser_handle)
}

// optional bool bAllow = 2;
inline bool CMsgPopupHTMLWindowResponse::has_ballow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPopupHTMLWindowResponse::set_has_ballow() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPopupHTMLWindowResponse::clear_has_ballow() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPopupHTMLWindowResponse::clear_ballow() {
  ballow_ = false;
  clear_has_ballow();
}
inline bool CMsgPopupHTMLWindowResponse::ballow() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPopupHTMLWindowResponse.bAllow)
  return ballow_;
}
inline void CMsgPopupHTMLWindowResponse::set_ballow(bool value) {
  set_has_ballow();
  ballow_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPopupHTMLWindowResponse.bAllow)
}

// -------------------------------------------------------------------

// CMsgSetHTMLTitle

// optional uint32 browser_handle = 1;
inline bool CMsgSetHTMLTitle::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetHTMLTitle::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetHTMLTitle::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetHTMLTitle::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgSetHTMLTitle::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetHTMLTitle.browser_handle)
  return browser_handle_;
}
inline void CMsgSetHTMLTitle::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetHTMLTitle.browser_handle)
}

// optional string title = 2;
inline bool CMsgSetHTMLTitle::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetHTMLTitle::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetHTMLTitle::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetHTMLTitle::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& CMsgSetHTMLTitle::title() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetHTMLTitle.title)
  return title_.GetNoArena();
}
inline void CMsgSetHTMLTitle::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetHTMLTitle.title)
}
#if LANG_CXX11
inline void CMsgSetHTMLTitle::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSetHTMLTitle.title)
}
#endif
inline void CMsgSetHTMLTitle::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSetHTMLTitle.title)
}
inline void CMsgSetHTMLTitle::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSetHTMLTitle.title)
}
inline ::std::string* CMsgSetHTMLTitle::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetHTMLTitle.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSetHTMLTitle::release_title() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSetHTMLTitle.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSetHTMLTitle::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSetHTMLTitle.title)
}

// -------------------------------------------------------------------

// CMsgLoadingResource

// optional uint32 browser_handle = 1;
inline bool CMsgLoadingResource::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLoadingResource::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLoadingResource::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLoadingResource::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgLoadingResource::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLoadingResource.browser_handle)
  return browser_handle_;
}
inline void CMsgLoadingResource::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLoadingResource.browser_handle)
}

// optional string url = 2;
inline bool CMsgLoadingResource::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLoadingResource::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLoadingResource::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLoadingResource::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgLoadingResource::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLoadingResource.url)
  return url_.GetNoArena();
}
inline void CMsgLoadingResource::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLoadingResource.url)
}
#if LANG_CXX11
inline void CMsgLoadingResource::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgLoadingResource.url)
}
#endif
inline void CMsgLoadingResource::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgLoadingResource.url)
}
inline void CMsgLoadingResource::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgLoadingResource.url)
}
inline ::std::string* CMsgLoadingResource::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgLoadingResource.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgLoadingResource::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgLoadingResource.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgLoadingResource::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgLoadingResource.url)
}

// -------------------------------------------------------------------

// CMsgStatusText

// optional uint32 browser_handle = 1;
inline bool CMsgStatusText::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgStatusText::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgStatusText::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgStatusText::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgStatusText::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgStatusText.browser_handle)
  return browser_handle_;
}
inline void CMsgStatusText::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgStatusText.browser_handle)
}

// optional string text = 2;
inline bool CMsgStatusText::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgStatusText::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgStatusText::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgStatusText::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CMsgStatusText::text() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgStatusText.text)
  return text_.GetNoArena();
}
inline void CMsgStatusText::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgStatusText.text)
}
#if LANG_CXX11
inline void CMsgStatusText::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgStatusText.text)
}
#endif
inline void CMsgStatusText::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgStatusText.text)
}
inline void CMsgStatusText::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgStatusText.text)
}
inline ::std::string* CMsgStatusText::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgStatusText.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgStatusText::release_text() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgStatusText.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgStatusText::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgStatusText.text)
}

// -------------------------------------------------------------------

// CMsgSetCursor

// optional uint32 browser_handle = 1;
inline bool CMsgSetCursor::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetCursor::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetCursor::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetCursor::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgSetCursor::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetCursor.browser_handle)
  return browser_handle_;
}
inline void CMsgSetCursor::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetCursor.browser_handle)
}

// optional uint32 cursor = 2;
inline bool CMsgSetCursor::has_cursor() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSetCursor::set_has_cursor() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSetCursor::clear_has_cursor() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSetCursor::clear_cursor() {
  cursor_ = 0u;
  clear_has_cursor();
}
inline ::google::protobuf::uint32 CMsgSetCursor::cursor() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetCursor.cursor)
  return cursor_;
}
inline void CMsgSetCursor::set_cursor(::google::protobuf::uint32 value) {
  set_has_cursor();
  cursor_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetCursor.cursor)
}

// optional bytes custom_data = 3;
inline bool CMsgSetCursor::has_custom_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetCursor::set_has_custom_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetCursor::clear_has_custom_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetCursor::clear_custom_data() {
  custom_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_custom_data();
}
inline const ::std::string& CMsgSetCursor::custom_data() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetCursor.custom_data)
  return custom_data_.GetNoArena();
}
inline void CMsgSetCursor::set_custom_data(const ::std::string& value) {
  set_has_custom_data();
  custom_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetCursor.custom_data)
}
#if LANG_CXX11
inline void CMsgSetCursor::set_custom_data(::std::string&& value) {
  set_has_custom_data();
  custom_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSetCursor.custom_data)
}
#endif
inline void CMsgSetCursor::set_custom_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_custom_data();
  custom_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSetCursor.custom_data)
}
inline void CMsgSetCursor::set_custom_data(const void* value, size_t size) {
  set_has_custom_data();
  custom_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSetCursor.custom_data)
}
inline ::std::string* CMsgSetCursor::mutable_custom_data() {
  set_has_custom_data();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetCursor.custom_data)
  return custom_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSetCursor::release_custom_data() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSetCursor.custom_data)
  clear_has_custom_data();
  return custom_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSetCursor::set_allocated_custom_data(::std::string* custom_data) {
  if (custom_data != NULL) {
    set_has_custom_data();
  } else {
    clear_has_custom_data();
  }
  custom_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), custom_data);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSetCursor.custom_data)
}

// optional uint32 wide = 4;
inline bool CMsgSetCursor::has_wide() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSetCursor::set_has_wide() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSetCursor::clear_has_wide() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSetCursor::clear_wide() {
  wide_ = 0u;
  clear_has_wide();
}
inline ::google::protobuf::uint32 CMsgSetCursor::wide() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetCursor.wide)
  return wide_;
}
inline void CMsgSetCursor::set_wide(::google::protobuf::uint32 value) {
  set_has_wide();
  wide_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetCursor.wide)
}

// optional uint32 tall = 5;
inline bool CMsgSetCursor::has_tall() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSetCursor::set_has_tall() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSetCursor::clear_has_tall() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSetCursor::clear_tall() {
  tall_ = 0u;
  clear_has_tall();
}
inline ::google::protobuf::uint32 CMsgSetCursor::tall() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetCursor.tall)
  return tall_;
}
inline void CMsgSetCursor::set_tall(::google::protobuf::uint32 value) {
  set_has_tall();
  tall_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetCursor.tall)
}

// optional uint32 xhotspot = 6;
inline bool CMsgSetCursor::has_xhotspot() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSetCursor::set_has_xhotspot() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSetCursor::clear_has_xhotspot() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSetCursor::clear_xhotspot() {
  xhotspot_ = 0u;
  clear_has_xhotspot();
}
inline ::google::protobuf::uint32 CMsgSetCursor::xhotspot() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetCursor.xhotspot)
  return xhotspot_;
}
inline void CMsgSetCursor::set_xhotspot(::google::protobuf::uint32 value) {
  set_has_xhotspot();
  xhotspot_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetCursor.xhotspot)
}

// optional uint32 yhotspot = 7;
inline bool CMsgSetCursor::has_yhotspot() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSetCursor::set_has_yhotspot() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSetCursor::clear_has_yhotspot() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSetCursor::clear_yhotspot() {
  yhotspot_ = 0u;
  clear_has_yhotspot();
}
inline ::google::protobuf::uint32 CMsgSetCursor::yhotspot() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetCursor.yhotspot)
  return yhotspot_;
}
inline void CMsgSetCursor::set_yhotspot(::google::protobuf::uint32 value) {
  set_has_yhotspot();
  yhotspot_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetCursor.yhotspot)
}

// -------------------------------------------------------------------

// CMsgFileLoadDialog

// optional uint32 browser_handle = 1;
inline bool CMsgFileLoadDialog::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgFileLoadDialog::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgFileLoadDialog::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgFileLoadDialog::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgFileLoadDialog::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFileLoadDialog.browser_handle)
  return browser_handle_;
}
inline void CMsgFileLoadDialog::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFileLoadDialog.browser_handle)
}

// optional string title = 2;
inline bool CMsgFileLoadDialog::has_title() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFileLoadDialog::set_has_title() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFileLoadDialog::clear_has_title() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFileLoadDialog::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_title();
}
inline const ::std::string& CMsgFileLoadDialog::title() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFileLoadDialog.title)
  return title_.GetNoArena();
}
inline void CMsgFileLoadDialog::set_title(const ::std::string& value) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFileLoadDialog.title)
}
#if LANG_CXX11
inline void CMsgFileLoadDialog::set_title(::std::string&& value) {
  set_has_title();
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgFileLoadDialog.title)
}
#endif
inline void CMsgFileLoadDialog::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgFileLoadDialog.title)
}
inline void CMsgFileLoadDialog::set_title(const char* value, size_t size) {
  set_has_title();
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgFileLoadDialog.title)
}
inline ::std::string* CMsgFileLoadDialog::mutable_title() {
  set_has_title();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgFileLoadDialog.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgFileLoadDialog::release_title() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgFileLoadDialog.title)
  clear_has_title();
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgFileLoadDialog::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    set_has_title();
  } else {
    clear_has_title();
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgFileLoadDialog.title)
}

// optional string initialFile = 3;
inline bool CMsgFileLoadDialog::has_initialfile() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgFileLoadDialog::set_has_initialfile() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgFileLoadDialog::clear_has_initialfile() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgFileLoadDialog::clear_initialfile() {
  initialfile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_initialfile();
}
inline const ::std::string& CMsgFileLoadDialog::initialfile() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFileLoadDialog.initialFile)
  return initialfile_.GetNoArena();
}
inline void CMsgFileLoadDialog::set_initialfile(const ::std::string& value) {
  set_has_initialfile();
  initialfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFileLoadDialog.initialFile)
}
#if LANG_CXX11
inline void CMsgFileLoadDialog::set_initialfile(::std::string&& value) {
  set_has_initialfile();
  initialfile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgFileLoadDialog.initialFile)
}
#endif
inline void CMsgFileLoadDialog::set_initialfile(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_initialfile();
  initialfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgFileLoadDialog.initialFile)
}
inline void CMsgFileLoadDialog::set_initialfile(const char* value, size_t size) {
  set_has_initialfile();
  initialfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgFileLoadDialog.initialFile)
}
inline ::std::string* CMsgFileLoadDialog::mutable_initialfile() {
  set_has_initialfile();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgFileLoadDialog.initialFile)
  return initialfile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgFileLoadDialog::release_initialfile() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgFileLoadDialog.initialFile)
  clear_has_initialfile();
  return initialfile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgFileLoadDialog::set_allocated_initialfile(::std::string* initialfile) {
  if (initialfile != NULL) {
    set_has_initialfile();
  } else {
    clear_has_initialfile();
  }
  initialfile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), initialfile);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgFileLoadDialog.initialFile)
}

// -------------------------------------------------------------------

// CMsgFileLoadDialogResponse

// optional uint32 browser_handle = 1;
inline bool CMsgFileLoadDialogResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFileLoadDialogResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFileLoadDialogResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFileLoadDialogResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgFileLoadDialogResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFileLoadDialogResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgFileLoadDialogResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFileLoadDialogResponse.browser_handle)
}

// repeated string files = 2;
inline int CMsgFileLoadDialogResponse::files_size() const {
  return files_.size();
}
inline void CMsgFileLoadDialogResponse::clear_files() {
  files_.Clear();
}
inline const ::std::string& CMsgFileLoadDialogResponse::files(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFileLoadDialogResponse.files)
  return files_.Get(index);
}
inline ::std::string* CMsgFileLoadDialogResponse::mutable_files(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgFileLoadDialogResponse.files)
  return files_.Mutable(index);
}
inline void CMsgFileLoadDialogResponse::set_files(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFileLoadDialogResponse.files)
  files_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgFileLoadDialogResponse::set_files(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFileLoadDialogResponse.files)
  files_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgFileLoadDialogResponse::set_files(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  files_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgFileLoadDialogResponse.files)
}
inline void CMsgFileLoadDialogResponse::set_files(int index, const char* value, size_t size) {
  files_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgFileLoadDialogResponse.files)
}
inline ::std::string* CMsgFileLoadDialogResponse::add_files() {
  // @@protoc_insertion_point(field_add_mutable:proto.steam.CMsgFileLoadDialogResponse.files)
  return files_.Add();
}
inline void CMsgFileLoadDialogResponse::add_files(const ::std::string& value) {
  files_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgFileLoadDialogResponse.files)
}
#if LANG_CXX11
inline void CMsgFileLoadDialogResponse::add_files(::std::string&& value) {
  files_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.steam.CMsgFileLoadDialogResponse.files)
}
#endif
inline void CMsgFileLoadDialogResponse::add_files(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  files_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.steam.CMsgFileLoadDialogResponse.files)
}
inline void CMsgFileLoadDialogResponse::add_files(const char* value, size_t size) {
  files_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.steam.CMsgFileLoadDialogResponse.files)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgFileLoadDialogResponse::files() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgFileLoadDialogResponse.files)
  return files_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgFileLoadDialogResponse::mutable_files() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgFileLoadDialogResponse.files)
  return &files_;
}

// -------------------------------------------------------------------

// CMsgShowToolTip

// optional uint32 browser_handle = 1;
inline bool CMsgShowToolTip::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgShowToolTip::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgShowToolTip::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgShowToolTip::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgShowToolTip::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgShowToolTip.browser_handle)
  return browser_handle_;
}
inline void CMsgShowToolTip::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgShowToolTip.browser_handle)
}

// optional string text = 2;
inline bool CMsgShowToolTip::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgShowToolTip::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgShowToolTip::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgShowToolTip::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CMsgShowToolTip::text() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgShowToolTip.text)
  return text_.GetNoArena();
}
inline void CMsgShowToolTip::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgShowToolTip.text)
}
#if LANG_CXX11
inline void CMsgShowToolTip::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgShowToolTip.text)
}
#endif
inline void CMsgShowToolTip::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgShowToolTip.text)
}
inline void CMsgShowToolTip::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgShowToolTip.text)
}
inline ::std::string* CMsgShowToolTip::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgShowToolTip.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgShowToolTip::release_text() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgShowToolTip.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgShowToolTip::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgShowToolTip.text)
}

// -------------------------------------------------------------------

// CMsgUpdateToolTip

// optional uint32 browser_handle = 1;
inline bool CMsgUpdateToolTip::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgUpdateToolTip::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgUpdateToolTip::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgUpdateToolTip::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgUpdateToolTip::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgUpdateToolTip.browser_handle)
  return browser_handle_;
}
inline void CMsgUpdateToolTip::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgUpdateToolTip.browser_handle)
}

// optional string text = 2;
inline bool CMsgUpdateToolTip::has_text() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgUpdateToolTip::set_has_text() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgUpdateToolTip::clear_has_text() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgUpdateToolTip::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_text();
}
inline const ::std::string& CMsgUpdateToolTip::text() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgUpdateToolTip.text)
  return text_.GetNoArena();
}
inline void CMsgUpdateToolTip::set_text(const ::std::string& value) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgUpdateToolTip.text)
}
#if LANG_CXX11
inline void CMsgUpdateToolTip::set_text(::std::string&& value) {
  set_has_text();
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgUpdateToolTip.text)
}
#endif
inline void CMsgUpdateToolTip::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgUpdateToolTip.text)
}
inline void CMsgUpdateToolTip::set_text(const char* value, size_t size) {
  set_has_text();
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgUpdateToolTip.text)
}
inline ::std::string* CMsgUpdateToolTip::mutable_text() {
  set_has_text();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgUpdateToolTip.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgUpdateToolTip::release_text() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgUpdateToolTip.text)
  clear_has_text();
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgUpdateToolTip::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    set_has_text();
  } else {
    clear_has_text();
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgUpdateToolTip.text)
}

// -------------------------------------------------------------------

// CMsgHideToolTip

// optional uint32 browser_handle = 1;
inline bool CMsgHideToolTip::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgHideToolTip::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgHideToolTip::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgHideToolTip::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgHideToolTip::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgHideToolTip.browser_handle)
  return browser_handle_;
}
inline void CMsgHideToolTip::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgHideToolTip.browser_handle)
}

// -------------------------------------------------------------------

// CMsgSearchResults

// optional uint32 browser_handle = 1;
inline bool CMsgSearchResults::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSearchResults::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSearchResults::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSearchResults::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgSearchResults::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSearchResults.browser_handle)
  return browser_handle_;
}
inline void CMsgSearchResults::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSearchResults.browser_handle)
}

// optional int32 activeMatch = 2;
inline bool CMsgSearchResults::has_activematch() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSearchResults::set_has_activematch() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSearchResults::clear_has_activematch() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSearchResults::clear_activematch() {
  activematch_ = 0;
  clear_has_activematch();
}
inline ::google::protobuf::int32 CMsgSearchResults::activematch() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSearchResults.activeMatch)
  return activematch_;
}
inline void CMsgSearchResults::set_activematch(::google::protobuf::int32 value) {
  set_has_activematch();
  activematch_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSearchResults.activeMatch)
}

// optional int32 results = 3;
inline bool CMsgSearchResults::has_results() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSearchResults::set_has_results() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSearchResults::clear_has_results() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSearchResults::clear_results() {
  results_ = 0;
  clear_has_results();
}
inline ::google::protobuf::int32 CMsgSearchResults::results() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSearchResults.results)
  return results_;
}
inline void CMsgSearchResults::set_results(::google::protobuf::int32 value) {
  set_has_results();
  results_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSearchResults.results)
}

// -------------------------------------------------------------------

// CMsgClose

// optional uint32 browser_handle = 1;
inline bool CMsgClose::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClose::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClose::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClose::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgClose::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClose.browser_handle)
  return browser_handle_;
}
inline void CMsgClose::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClose.browser_handle)
}

// -------------------------------------------------------------------

// CMsgSetSharedPaintBuffers

// optional uint32 browser_handle = 1;
inline bool CMsgSetSharedPaintBuffers::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetSharedPaintBuffers::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetSharedPaintBuffers::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetSharedPaintBuffers::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgSetSharedPaintBuffers::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetSharedPaintBuffers.browser_handle)
  return browser_handle_;
}
inline void CMsgSetSharedPaintBuffers::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetSharedPaintBuffers.browser_handle)
}

// optional uint32 wide = 2;
inline bool CMsgSetSharedPaintBuffers::has_wide() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetSharedPaintBuffers::set_has_wide() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetSharedPaintBuffers::clear_has_wide() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetSharedPaintBuffers::clear_wide() {
  wide_ = 0u;
  clear_has_wide();
}
inline ::google::protobuf::uint32 CMsgSetSharedPaintBuffers::wide() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetSharedPaintBuffers.wide)
  return wide_;
}
inline void CMsgSetSharedPaintBuffers::set_wide(::google::protobuf::uint32 value) {
  set_has_wide();
  wide_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetSharedPaintBuffers.wide)
}

// optional uint32 tall = 3;
inline bool CMsgSetSharedPaintBuffers::has_tall() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSetSharedPaintBuffers::set_has_tall() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSetSharedPaintBuffers::clear_has_tall() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSetSharedPaintBuffers::clear_tall() {
  tall_ = 0u;
  clear_has_tall();
}
inline ::google::protobuf::uint32 CMsgSetSharedPaintBuffers::tall() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetSharedPaintBuffers.tall)
  return tall_;
}
inline void CMsgSetSharedPaintBuffers::set_tall(::google::protobuf::uint32 value) {
  set_has_tall();
  tall_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetSharedPaintBuffers.tall)
}

// optional uint64 source_pid = 4;
inline bool CMsgSetSharedPaintBuffers::has_source_pid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSetSharedPaintBuffers::set_has_source_pid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSetSharedPaintBuffers::clear_has_source_pid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSetSharedPaintBuffers::clear_source_pid() {
  source_pid_ = GOOGLE_ULONGLONG(0);
  clear_has_source_pid();
}
inline ::google::protobuf::uint64 CMsgSetSharedPaintBuffers::source_pid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetSharedPaintBuffers.source_pid)
  return source_pid_;
}
inline void CMsgSetSharedPaintBuffers::set_source_pid(::google::protobuf::uint64 value) {
  set_has_source_pid();
  source_pid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetSharedPaintBuffers.source_pid)
}

// optional uint64 source_handle = 5;
inline bool CMsgSetSharedPaintBuffers::has_source_handle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSetSharedPaintBuffers::set_has_source_handle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSetSharedPaintBuffers::clear_has_source_handle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSetSharedPaintBuffers::clear_source_handle() {
  source_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_source_handle();
}
inline ::google::protobuf::uint64 CMsgSetSharedPaintBuffers::source_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetSharedPaintBuffers.source_handle)
  return source_handle_;
}
inline void CMsgSetSharedPaintBuffers::set_source_handle(::google::protobuf::uint64 value) {
  set_has_source_handle();
  source_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetSharedPaintBuffers.source_handle)
}

// optional uint64 handle = 6;
inline bool CMsgSetSharedPaintBuffers::has_handle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSetSharedPaintBuffers::set_has_handle() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSetSharedPaintBuffers::clear_has_handle() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSetSharedPaintBuffers::clear_handle() {
  handle_ = GOOGLE_ULONGLONG(0);
  clear_has_handle();
}
inline ::google::protobuf::uint64 CMsgSetSharedPaintBuffers::handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetSharedPaintBuffers.handle)
  return handle_;
}
inline void CMsgSetSharedPaintBuffers::set_handle(::google::protobuf::uint64 value) {
  set_has_handle();
  handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetSharedPaintBuffers.handle)
}

// -------------------------------------------------------------------

// CMsgNeedsPaint

// optional uint32 browser_handle = 1;
inline bool CMsgNeedsPaint::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgNeedsPaint::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgNeedsPaint::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgNeedsPaint::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgNeedsPaint::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgNeedsPaint.browser_handle)
  return browser_handle_;
}
inline void CMsgNeedsPaint::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgNeedsPaint.browser_handle)
}

// optional uint32 scrollx = 10;
inline bool CMsgNeedsPaint::has_scrollx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgNeedsPaint::set_has_scrollx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgNeedsPaint::clear_has_scrollx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgNeedsPaint::clear_scrollx() {
  scrollx_ = 0u;
  clear_has_scrollx();
}
inline ::google::protobuf::uint32 CMsgNeedsPaint::scrollx() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgNeedsPaint.scrollx)
  return scrollx_;
}
inline void CMsgNeedsPaint::set_scrollx(::google::protobuf::uint32 value) {
  set_has_scrollx();
  scrollx_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgNeedsPaint.scrollx)
}

// optional uint32 scrolly = 11;
inline bool CMsgNeedsPaint::has_scrolly() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgNeedsPaint::set_has_scrolly() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgNeedsPaint::clear_has_scrolly() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgNeedsPaint::clear_scrolly() {
  scrolly_ = 0u;
  clear_has_scrolly();
}
inline ::google::protobuf::uint32 CMsgNeedsPaint::scrolly() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgNeedsPaint.scrolly)
  return scrolly_;
}
inline void CMsgNeedsPaint::set_scrolly(::google::protobuf::uint32 value) {
  set_has_scrolly();
  scrolly_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgNeedsPaint.scrolly)
}

// optional float pagescale = 12;
inline bool CMsgNeedsPaint::has_pagescale() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgNeedsPaint::set_has_pagescale() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgNeedsPaint::clear_has_pagescale() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgNeedsPaint::clear_pagescale() {
  pagescale_ = 0;
  clear_has_pagescale();
}
inline float CMsgNeedsPaint::pagescale() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgNeedsPaint.pagescale)
  return pagescale_;
}
inline void CMsgNeedsPaint::set_pagescale(float value) {
  set_has_pagescale();
  pagescale_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgNeedsPaint.pagescale)
}

// optional uint32 pageserial = 15;
inline bool CMsgNeedsPaint::has_pageserial() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgNeedsPaint::set_has_pageserial() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgNeedsPaint::clear_has_pageserial() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgNeedsPaint::clear_pageserial() {
  pageserial_ = 0u;
  clear_has_pageserial();
}
inline ::google::protobuf::uint32 CMsgNeedsPaint::pageserial() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgNeedsPaint.pageserial)
  return pageserial_;
}
inline void CMsgNeedsPaint::set_pageserial(::google::protobuf::uint32 value) {
  set_has_pageserial();
  pageserial_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgNeedsPaint.pageserial)
}

// -------------------------------------------------------------------

// CMsgComboNeedsPaint

// optional uint32 browser_handle = 1;
inline bool CMsgComboNeedsPaint::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgComboNeedsPaint::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgComboNeedsPaint::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgComboNeedsPaint::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgComboNeedsPaint::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgComboNeedsPaint.browser_handle)
  return browser_handle_;
}
inline void CMsgComboNeedsPaint::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgComboNeedsPaint.browser_handle)
}

// optional uint64 rgba = 2;
inline bool CMsgComboNeedsPaint::has_rgba() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgComboNeedsPaint::set_has_rgba() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgComboNeedsPaint::clear_has_rgba() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgComboNeedsPaint::clear_rgba() {
  rgba_ = GOOGLE_ULONGLONG(0);
  clear_has_rgba();
}
inline ::google::protobuf::uint64 CMsgComboNeedsPaint::rgba() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgComboNeedsPaint.rgba)
  return rgba_;
}
inline void CMsgComboNeedsPaint::set_rgba(::google::protobuf::uint64 value) {
  set_has_rgba();
  rgba_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgComboNeedsPaint.rgba)
}

// optional uint32 combobox_wide = 3 [default = 0];
inline bool CMsgComboNeedsPaint::has_combobox_wide() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgComboNeedsPaint::set_has_combobox_wide() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgComboNeedsPaint::clear_has_combobox_wide() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgComboNeedsPaint::clear_combobox_wide() {
  combobox_wide_ = 0u;
  clear_has_combobox_wide();
}
inline ::google::protobuf::uint32 CMsgComboNeedsPaint::combobox_wide() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgComboNeedsPaint.combobox_wide)
  return combobox_wide_;
}
inline void CMsgComboNeedsPaint::set_combobox_wide(::google::protobuf::uint32 value) {
  set_has_combobox_wide();
  combobox_wide_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgComboNeedsPaint.combobox_wide)
}

// optional uint32 combobox_tall = 4 [default = 0];
inline bool CMsgComboNeedsPaint::has_combobox_tall() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgComboNeedsPaint::set_has_combobox_tall() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgComboNeedsPaint::clear_has_combobox_tall() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgComboNeedsPaint::clear_combobox_tall() {
  combobox_tall_ = 0u;
  clear_has_combobox_tall();
}
inline ::google::protobuf::uint32 CMsgComboNeedsPaint::combobox_tall() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgComboNeedsPaint.combobox_tall)
  return combobox_tall_;
}
inline void CMsgComboNeedsPaint::set_combobox_tall(::google::protobuf::uint32 value) {
  set_has_combobox_tall();
  combobox_tall_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgComboNeedsPaint.combobox_tall)
}

// optional uint64 shared_memory_handle = 5 [default = 0];
inline bool CMsgComboNeedsPaint::has_shared_memory_handle() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgComboNeedsPaint::set_has_shared_memory_handle() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgComboNeedsPaint::clear_has_shared_memory_handle() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgComboNeedsPaint::clear_shared_memory_handle() {
  shared_memory_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_shared_memory_handle();
}
inline ::google::protobuf::uint64 CMsgComboNeedsPaint::shared_memory_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgComboNeedsPaint.shared_memory_handle)
  return shared_memory_handle_;
}
inline void CMsgComboNeedsPaint::set_shared_memory_handle(::google::protobuf::uint64 value) {
  set_has_shared_memory_handle();
  shared_memory_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgComboNeedsPaint.shared_memory_handle)
}

// optional uint64 shared_memory_size = 7 [default = 0];
inline bool CMsgComboNeedsPaint::has_shared_memory_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgComboNeedsPaint::set_has_shared_memory_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgComboNeedsPaint::clear_has_shared_memory_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgComboNeedsPaint::clear_shared_memory_size() {
  shared_memory_size_ = GOOGLE_ULONGLONG(0);
  clear_has_shared_memory_size();
}
inline ::google::protobuf::uint64 CMsgComboNeedsPaint::shared_memory_size() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgComboNeedsPaint.shared_memory_size)
  return shared_memory_size_;
}
inline void CMsgComboNeedsPaint::set_shared_memory_size(::google::protobuf::uint64 value) {
  set_has_shared_memory_size();
  shared_memory_size_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgComboNeedsPaint.shared_memory_size)
}

// -------------------------------------------------------------------

// CMsgGetZoom

// optional uint32 browser_handle = 1;
inline bool CMsgGetZoom::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGetZoom::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGetZoom::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGetZoom::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgGetZoom::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGetZoom.browser_handle)
  return browser_handle_;
}
inline void CMsgGetZoom::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGetZoom.browser_handle)
}

// -------------------------------------------------------------------

// CMsgGetZoomResponse

// optional uint32 browser_handle = 1;
inline bool CMsgGetZoomResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGetZoomResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGetZoomResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGetZoomResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgGetZoomResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGetZoomResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgGetZoomResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGetZoomResponse.browser_handle)
}

// optional float zoom = 2;
inline bool CMsgGetZoomResponse::has_zoom() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGetZoomResponse::set_has_zoom() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGetZoomResponse::clear_has_zoom() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGetZoomResponse::clear_zoom() {
  zoom_ = 0;
  clear_has_zoom();
}
inline float CMsgGetZoomResponse::zoom() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGetZoomResponse.zoom)
  return zoom_;
}
inline void CMsgGetZoomResponse::set_zoom(float value) {
  set_has_zoom();
  zoom_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGetZoomResponse.zoom)
}

// -------------------------------------------------------------------

// CMsgLinkAtPosition

// optional uint32 browser_handle = 1;
inline bool CMsgLinkAtPosition::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLinkAtPosition::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLinkAtPosition::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLinkAtPosition::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgLinkAtPosition::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLinkAtPosition.browser_handle)
  return browser_handle_;
}
inline void CMsgLinkAtPosition::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLinkAtPosition.browser_handle)
}

// optional uint32 x = 2;
inline bool CMsgLinkAtPosition::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLinkAtPosition::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLinkAtPosition::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLinkAtPosition::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 CMsgLinkAtPosition::x() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLinkAtPosition.x)
  return x_;
}
inline void CMsgLinkAtPosition::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLinkAtPosition.x)
}

// optional uint32 y = 3;
inline bool CMsgLinkAtPosition::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLinkAtPosition::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgLinkAtPosition::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgLinkAtPosition::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 CMsgLinkAtPosition::y() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLinkAtPosition.y)
  return y_;
}
inline void CMsgLinkAtPosition::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLinkAtPosition.y)
}

// -------------------------------------------------------------------

// CMsgLinkAtPositionResponse

// optional uint32 browser_handle = 1;
inline bool CMsgLinkAtPositionResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLinkAtPositionResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLinkAtPositionResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLinkAtPositionResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgLinkAtPositionResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLinkAtPositionResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgLinkAtPositionResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLinkAtPositionResponse.browser_handle)
}

// optional uint32 x = 2;
inline bool CMsgLinkAtPositionResponse::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLinkAtPositionResponse::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgLinkAtPositionResponse::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgLinkAtPositionResponse::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 CMsgLinkAtPositionResponse::x() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLinkAtPositionResponse.x)
  return x_;
}
inline void CMsgLinkAtPositionResponse::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLinkAtPositionResponse.x)
}

// optional uint32 y = 3;
inline bool CMsgLinkAtPositionResponse::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgLinkAtPositionResponse::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgLinkAtPositionResponse::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgLinkAtPositionResponse::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 CMsgLinkAtPositionResponse::y() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLinkAtPositionResponse.y)
  return y_;
}
inline void CMsgLinkAtPositionResponse::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLinkAtPositionResponse.y)
}

// optional string url = 4;
inline bool CMsgLinkAtPositionResponse::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLinkAtPositionResponse::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLinkAtPositionResponse::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLinkAtPositionResponse::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgLinkAtPositionResponse::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLinkAtPositionResponse.url)
  return url_.GetNoArena();
}
inline void CMsgLinkAtPositionResponse::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLinkAtPositionResponse.url)
}
#if LANG_CXX11
inline void CMsgLinkAtPositionResponse::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgLinkAtPositionResponse.url)
}
#endif
inline void CMsgLinkAtPositionResponse::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgLinkAtPositionResponse.url)
}
inline void CMsgLinkAtPositionResponse::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgLinkAtPositionResponse.url)
}
inline ::std::string* CMsgLinkAtPositionResponse::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgLinkAtPositionResponse.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgLinkAtPositionResponse::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgLinkAtPositionResponse.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgLinkAtPositionResponse::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgLinkAtPositionResponse.url)
}

// optional bool blivelink = 5;
inline bool CMsgLinkAtPositionResponse::has_blivelink() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgLinkAtPositionResponse::set_has_blivelink() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgLinkAtPositionResponse::clear_has_blivelink() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgLinkAtPositionResponse::clear_blivelink() {
  blivelink_ = false;
  clear_has_blivelink();
}
inline bool CMsgLinkAtPositionResponse::blivelink() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLinkAtPositionResponse.blivelink)
  return blivelink_;
}
inline void CMsgLinkAtPositionResponse::set_blivelink(bool value) {
  set_has_blivelink();
  blivelink_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLinkAtPositionResponse.blivelink)
}

// optional bool binput = 6;
inline bool CMsgLinkAtPositionResponse::has_binput() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgLinkAtPositionResponse::set_has_binput() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgLinkAtPositionResponse::clear_has_binput() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgLinkAtPositionResponse::clear_binput() {
  binput_ = false;
  clear_has_binput();
}
inline bool CMsgLinkAtPositionResponse::binput() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLinkAtPositionResponse.binput)
  return binput_;
}
inline void CMsgLinkAtPositionResponse::set_binput(bool value) {
  set_has_binput();
  binput_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLinkAtPositionResponse.binput)
}

// -------------------------------------------------------------------

// CMsgZoomToElementAtPosition

// optional uint32 browser_handle = 1;
inline bool CMsgZoomToElementAtPosition::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgZoomToElementAtPosition::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgZoomToElementAtPosition::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgZoomToElementAtPosition::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgZoomToElementAtPosition::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgZoomToElementAtPosition.browser_handle)
  return browser_handle_;
}
inline void CMsgZoomToElementAtPosition::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgZoomToElementAtPosition.browser_handle)
}

// optional uint32 x = 2;
inline bool CMsgZoomToElementAtPosition::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgZoomToElementAtPosition::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgZoomToElementAtPosition::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgZoomToElementAtPosition::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 CMsgZoomToElementAtPosition::x() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgZoomToElementAtPosition.x)
  return x_;
}
inline void CMsgZoomToElementAtPosition::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgZoomToElementAtPosition.x)
}

// optional uint32 y = 3;
inline bool CMsgZoomToElementAtPosition::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgZoomToElementAtPosition::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgZoomToElementAtPosition::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgZoomToElementAtPosition::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 CMsgZoomToElementAtPosition::y() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgZoomToElementAtPosition.y)
  return y_;
}
inline void CMsgZoomToElementAtPosition::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgZoomToElementAtPosition.y)
}

// -------------------------------------------------------------------

// CMsgZoomToElementAtPositionResponse

// optional uint32 browser_handle = 1;
inline bool CMsgZoomToElementAtPositionResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgZoomToElementAtPositionResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgZoomToElementAtPositionResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgZoomToElementAtPositionResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgZoomToElementAtPositionResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgZoomToElementAtPositionResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgZoomToElementAtPositionResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgZoomToElementAtPositionResponse.browser_handle)
}

// optional float scale = 2;
inline bool CMsgZoomToElementAtPositionResponse::has_scale() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgZoomToElementAtPositionResponse::set_has_scale() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgZoomToElementAtPositionResponse::clear_has_scale() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgZoomToElementAtPositionResponse::clear_scale() {
  scale_ = 0;
  clear_has_scale();
}
inline float CMsgZoomToElementAtPositionResponse::scale() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgZoomToElementAtPositionResponse.scale)
  return scale_;
}
inline void CMsgZoomToElementAtPositionResponse::set_scale(float value) {
  set_has_scale();
  scale_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgZoomToElementAtPositionResponse.scale)
}

// optional float duration = 3;
inline bool CMsgZoomToElementAtPositionResponse::has_duration() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgZoomToElementAtPositionResponse::set_has_duration() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgZoomToElementAtPositionResponse::clear_has_duration() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgZoomToElementAtPositionResponse::clear_duration() {
  duration_ = 0;
  clear_has_duration();
}
inline float CMsgZoomToElementAtPositionResponse::duration() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgZoomToElementAtPositionResponse.duration)
  return duration_;
}
inline void CMsgZoomToElementAtPositionResponse::set_duration(float value) {
  set_has_duration();
  duration_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgZoomToElementAtPositionResponse.duration)
}

// -------------------------------------------------------------------

// CMsgScalePageToValue

// optional uint32 browser_handle = 1;
inline bool CMsgScalePageToValue::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgScalePageToValue::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgScalePageToValue::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgScalePageToValue::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgScalePageToValue::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgScalePageToValue.browser_handle)
  return browser_handle_;
}
inline void CMsgScalePageToValue::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgScalePageToValue.browser_handle)
}

// optional float scale = 2;
inline bool CMsgScalePageToValue::has_scale() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgScalePageToValue::set_has_scale() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgScalePageToValue::clear_has_scale() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgScalePageToValue::clear_scale() {
  scale_ = 0;
  clear_has_scale();
}
inline float CMsgScalePageToValue::scale() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgScalePageToValue.scale)
  return scale_;
}
inline void CMsgScalePageToValue::set_scale(float value) {
  set_has_scale();
  scale_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgScalePageToValue.scale)
}

// optional float x = 3;
inline bool CMsgScalePageToValue::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgScalePageToValue::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgScalePageToValue::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgScalePageToValue::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float CMsgScalePageToValue::x() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgScalePageToValue.x)
  return x_;
}
inline void CMsgScalePageToValue::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgScalePageToValue.x)
}

// optional float y = 4;
inline bool CMsgScalePageToValue::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgScalePageToValue::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgScalePageToValue::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgScalePageToValue::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float CMsgScalePageToValue::y() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgScalePageToValue.y)
  return y_;
}
inline void CMsgScalePageToValue::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgScalePageToValue.y)
}

// -------------------------------------------------------------------

// CMsgScalePageToValueResponse

// optional uint32 browser_handle = 1;
inline bool CMsgScalePageToValueResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgScalePageToValueResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgScalePageToValueResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgScalePageToValueResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgScalePageToValueResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgScalePageToValueResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgScalePageToValueResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgScalePageToValueResponse.browser_handle)
}

// optional float zoom = 2;
inline bool CMsgScalePageToValueResponse::has_zoom() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgScalePageToValueResponse::set_has_zoom() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgScalePageToValueResponse::clear_has_zoom() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgScalePageToValueResponse::clear_zoom() {
  zoom_ = 0;
  clear_has_zoom();
}
inline float CMsgScalePageToValueResponse::zoom() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgScalePageToValueResponse.zoom)
  return zoom_;
}
inline void CMsgScalePageToValueResponse::set_zoom(float value) {
  set_has_zoom();
  zoom_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgScalePageToValueResponse.zoom)
}

// -------------------------------------------------------------------

// CMsgSavePageToJPEG

// optional uint32 browser_handle = 1;
inline bool CMsgSavePageToJPEG::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSavePageToJPEG::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSavePageToJPEG::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSavePageToJPEG::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgSavePageToJPEG::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSavePageToJPEG.browser_handle)
  return browser_handle_;
}
inline void CMsgSavePageToJPEG::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSavePageToJPEG.browser_handle)
}

// optional string url = 2;
inline bool CMsgSavePageToJPEG::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSavePageToJPEG::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSavePageToJPEG::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSavePageToJPEG::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgSavePageToJPEG::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSavePageToJPEG.url)
  return url_.GetNoArena();
}
inline void CMsgSavePageToJPEG::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSavePageToJPEG.url)
}
#if LANG_CXX11
inline void CMsgSavePageToJPEG::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSavePageToJPEG.url)
}
#endif
inline void CMsgSavePageToJPEG::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSavePageToJPEG.url)
}
inline void CMsgSavePageToJPEG::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSavePageToJPEG.url)
}
inline ::std::string* CMsgSavePageToJPEG::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSavePageToJPEG.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSavePageToJPEG::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSavePageToJPEG.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSavePageToJPEG::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSavePageToJPEG.url)
}

// optional string filename = 3;
inline bool CMsgSavePageToJPEG::has_filename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSavePageToJPEG::set_has_filename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSavePageToJPEG::clear_has_filename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSavePageToJPEG::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
inline const ::std::string& CMsgSavePageToJPEG::filename() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSavePageToJPEG.filename)
  return filename_.GetNoArena();
}
inline void CMsgSavePageToJPEG::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSavePageToJPEG.filename)
}
#if LANG_CXX11
inline void CMsgSavePageToJPEG::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSavePageToJPEG.filename)
}
#endif
inline void CMsgSavePageToJPEG::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSavePageToJPEG.filename)
}
inline void CMsgSavePageToJPEG::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSavePageToJPEG.filename)
}
inline ::std::string* CMsgSavePageToJPEG::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSavePageToJPEG.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSavePageToJPEG::release_filename() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSavePageToJPEG.filename)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSavePageToJPEG::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSavePageToJPEG.filename)
}

// optional uint32 width = 4;
inline bool CMsgSavePageToJPEG::has_width() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSavePageToJPEG::set_has_width() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSavePageToJPEG::clear_has_width() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSavePageToJPEG::clear_width() {
  width_ = 0u;
  clear_has_width();
}
inline ::google::protobuf::uint32 CMsgSavePageToJPEG::width() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSavePageToJPEG.width)
  return width_;
}
inline void CMsgSavePageToJPEG::set_width(::google::protobuf::uint32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSavePageToJPEG.width)
}

// optional uint32 height = 5;
inline bool CMsgSavePageToJPEG::has_height() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSavePageToJPEG::set_has_height() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSavePageToJPEG::clear_has_height() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSavePageToJPEG::clear_height() {
  height_ = 0u;
  clear_has_height();
}
inline ::google::protobuf::uint32 CMsgSavePageToJPEG::height() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSavePageToJPEG.height)
  return height_;
}
inline void CMsgSavePageToJPEG::set_height(::google::protobuf::uint32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSavePageToJPEG.height)
}

// -------------------------------------------------------------------

// CMsgSavePageToJPEGResponse

// optional uint32 browser_handle = 1;
inline bool CMsgSavePageToJPEGResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSavePageToJPEGResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSavePageToJPEGResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSavePageToJPEGResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgSavePageToJPEGResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSavePageToJPEGResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgSavePageToJPEGResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSavePageToJPEGResponse.browser_handle)
}

// optional string url = 2;
inline bool CMsgSavePageToJPEGResponse::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSavePageToJPEGResponse::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSavePageToJPEGResponse::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSavePageToJPEGResponse::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgSavePageToJPEGResponse::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSavePageToJPEGResponse.url)
  return url_.GetNoArena();
}
inline void CMsgSavePageToJPEGResponse::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSavePageToJPEGResponse.url)
}
#if LANG_CXX11
inline void CMsgSavePageToJPEGResponse::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSavePageToJPEGResponse.url)
}
#endif
inline void CMsgSavePageToJPEGResponse::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSavePageToJPEGResponse.url)
}
inline void CMsgSavePageToJPEGResponse::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSavePageToJPEGResponse.url)
}
inline ::std::string* CMsgSavePageToJPEGResponse::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSavePageToJPEGResponse.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSavePageToJPEGResponse::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSavePageToJPEGResponse.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSavePageToJPEGResponse::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSavePageToJPEGResponse.url)
}

// optional string filename = 3;
inline bool CMsgSavePageToJPEGResponse::has_filename() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSavePageToJPEGResponse::set_has_filename() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSavePageToJPEGResponse::clear_has_filename() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSavePageToJPEGResponse::clear_filename() {
  filename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_filename();
}
inline const ::std::string& CMsgSavePageToJPEGResponse::filename() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSavePageToJPEGResponse.filename)
  return filename_.GetNoArena();
}
inline void CMsgSavePageToJPEGResponse::set_filename(const ::std::string& value) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSavePageToJPEGResponse.filename)
}
#if LANG_CXX11
inline void CMsgSavePageToJPEGResponse::set_filename(::std::string&& value) {
  set_has_filename();
  filename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSavePageToJPEGResponse.filename)
}
#endif
inline void CMsgSavePageToJPEGResponse::set_filename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSavePageToJPEGResponse.filename)
}
inline void CMsgSavePageToJPEGResponse::set_filename(const char* value, size_t size) {
  set_has_filename();
  filename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSavePageToJPEGResponse.filename)
}
inline ::std::string* CMsgSavePageToJPEGResponse::mutable_filename() {
  set_has_filename();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSavePageToJPEGResponse.filename)
  return filename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSavePageToJPEGResponse::release_filename() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSavePageToJPEGResponse.filename)
  clear_has_filename();
  return filename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSavePageToJPEGResponse::set_allocated_filename(::std::string* filename) {
  if (filename != NULL) {
    set_has_filename();
  } else {
    clear_has_filename();
  }
  filename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), filename);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSavePageToJPEGResponse.filename)
}

// -------------------------------------------------------------------

// CMsgJSAlert

// optional uint32 browser_handle = 1;
inline bool CMsgJSAlert::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJSAlert::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJSAlert::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJSAlert::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgJSAlert::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSAlert.browser_handle)
  return browser_handle_;
}
inline void CMsgJSAlert::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSAlert.browser_handle)
}

// optional string message = 2;
inline bool CMsgJSAlert::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJSAlert::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJSAlert::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJSAlert::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CMsgJSAlert::message() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSAlert.message)
  return message_.GetNoArena();
}
inline void CMsgJSAlert::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSAlert.message)
}
#if LANG_CXX11
inline void CMsgJSAlert::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgJSAlert.message)
}
#endif
inline void CMsgJSAlert::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgJSAlert.message)
}
inline void CMsgJSAlert::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgJSAlert.message)
}
inline ::std::string* CMsgJSAlert::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJSAlert.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgJSAlert::release_message() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgJSAlert.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgJSAlert::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgJSAlert.message)
}

// -------------------------------------------------------------------

// CMsgJSConfirm

// optional uint32 browser_handle = 1;
inline bool CMsgJSConfirm::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJSConfirm::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJSConfirm::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJSConfirm::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgJSConfirm::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSConfirm.browser_handle)
  return browser_handle_;
}
inline void CMsgJSConfirm::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSConfirm.browser_handle)
}

// optional string message = 2;
inline bool CMsgJSConfirm::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJSConfirm::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJSConfirm::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJSConfirm::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CMsgJSConfirm::message() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSConfirm.message)
  return message_.GetNoArena();
}
inline void CMsgJSConfirm::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSConfirm.message)
}
#if LANG_CXX11
inline void CMsgJSConfirm::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgJSConfirm.message)
}
#endif
inline void CMsgJSConfirm::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgJSConfirm.message)
}
inline void CMsgJSConfirm::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgJSConfirm.message)
}
inline ::std::string* CMsgJSConfirm::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJSConfirm.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgJSConfirm::release_message() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgJSConfirm.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgJSConfirm::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgJSConfirm.message)
}

// -------------------------------------------------------------------

// CMsgJSDialogResponse

// optional uint32 browser_handle = 1;
inline bool CMsgJSDialogResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJSDialogResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJSDialogResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJSDialogResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgJSDialogResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSDialogResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgJSDialogResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSDialogResponse.browser_handle)
}

// optional bool result = 2;
inline bool CMsgJSDialogResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJSDialogResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJSDialogResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJSDialogResponse::clear_result() {
  result_ = false;
  clear_has_result();
}
inline bool CMsgJSDialogResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSDialogResponse.result)
  return result_;
}
inline void CMsgJSDialogResponse::set_result(bool value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSDialogResponse.result)
}

// -------------------------------------------------------------------

// CMsgCanGoBackAndForward

// optional uint32 browser_handle = 1;
inline bool CMsgCanGoBackAndForward::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCanGoBackAndForward::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCanGoBackAndForward::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCanGoBackAndForward::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgCanGoBackAndForward::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCanGoBackAndForward.browser_handle)
  return browser_handle_;
}
inline void CMsgCanGoBackAndForward::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCanGoBackAndForward.browser_handle)
}

// optional bool bgoback = 2;
inline bool CMsgCanGoBackAndForward::has_bgoback() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgCanGoBackAndForward::set_has_bgoback() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgCanGoBackAndForward::clear_has_bgoback() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgCanGoBackAndForward::clear_bgoback() {
  bgoback_ = false;
  clear_has_bgoback();
}
inline bool CMsgCanGoBackAndForward::bgoback() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCanGoBackAndForward.bgoback)
  return bgoback_;
}
inline void CMsgCanGoBackAndForward::set_bgoback(bool value) {
  set_has_bgoback();
  bgoback_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCanGoBackAndForward.bgoback)
}

// optional bool bgoforward = 3;
inline bool CMsgCanGoBackAndForward::has_bgoforward() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgCanGoBackAndForward::set_has_bgoforward() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgCanGoBackAndForward::clear_has_bgoforward() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgCanGoBackAndForward::clear_bgoforward() {
  bgoforward_ = false;
  clear_has_bgoforward();
}
inline bool CMsgCanGoBackAndForward::bgoforward() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCanGoBackAndForward.bgoforward)
  return bgoforward_;
}
inline void CMsgCanGoBackAndForward::set_bgoforward(bool value) {
  set_has_bgoforward();
  bgoforward_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCanGoBackAndForward.bgoforward)
}

// -------------------------------------------------------------------

// CMsgOpenSteamURL

// optional uint32 browser_handle = 1;
inline bool CMsgOpenSteamURL::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgOpenSteamURL::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgOpenSteamURL::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgOpenSteamURL::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgOpenSteamURL::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgOpenSteamURL.browser_handle)
  return browser_handle_;
}
inline void CMsgOpenSteamURL::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgOpenSteamURL.browser_handle)
}

// optional string url = 2;
inline bool CMsgOpenSteamURL::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgOpenSteamURL::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgOpenSteamURL::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgOpenSteamURL::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgOpenSteamURL::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgOpenSteamURL.url)
  return url_.GetNoArena();
}
inline void CMsgOpenSteamURL::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgOpenSteamURL.url)
}
#if LANG_CXX11
inline void CMsgOpenSteamURL::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgOpenSteamURL.url)
}
#endif
inline void CMsgOpenSteamURL::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgOpenSteamURL.url)
}
inline void CMsgOpenSteamURL::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgOpenSteamURL.url)
}
inline ::std::string* CMsgOpenSteamURL::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgOpenSteamURL.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgOpenSteamURL::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgOpenSteamURL.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgOpenSteamURL::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgOpenSteamURL.url)
}

// -------------------------------------------------------------------

// CMsgSetCookie

// optional string key = 1;
inline bool CMsgSetCookie::has_key() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetCookie::set_has_key() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetCookie::clear_has_key() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetCookie::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_key();
}
inline const ::std::string& CMsgSetCookie::key() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetCookie.key)
  return key_.GetNoArena();
}
inline void CMsgSetCookie::set_key(const ::std::string& value) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetCookie.key)
}
#if LANG_CXX11
inline void CMsgSetCookie::set_key(::std::string&& value) {
  set_has_key();
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSetCookie.key)
}
#endif
inline void CMsgSetCookie::set_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSetCookie.key)
}
inline void CMsgSetCookie::set_key(const char* value, size_t size) {
  set_has_key();
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSetCookie.key)
}
inline ::std::string* CMsgSetCookie::mutable_key() {
  set_has_key();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetCookie.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSetCookie::release_key() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSetCookie.key)
  clear_has_key();
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSetCookie::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    set_has_key();
  } else {
    clear_has_key();
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSetCookie.key)
}

// optional string value = 2;
inline bool CMsgSetCookie::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetCookie::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetCookie::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetCookie::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& CMsgSetCookie::value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetCookie.value)
  return value_.GetNoArena();
}
inline void CMsgSetCookie::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetCookie.value)
}
#if LANG_CXX11
inline void CMsgSetCookie::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSetCookie.value)
}
#endif
inline void CMsgSetCookie::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSetCookie.value)
}
inline void CMsgSetCookie::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSetCookie.value)
}
inline ::std::string* CMsgSetCookie::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetCookie.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSetCookie::release_value() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSetCookie.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSetCookie::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSetCookie.value)
}

// optional string path = 3;
inline bool CMsgSetCookie::has_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgSetCookie::set_has_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgSetCookie::clear_has_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgSetCookie::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& CMsgSetCookie::path() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetCookie.path)
  return path_.GetNoArena();
}
inline void CMsgSetCookie::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetCookie.path)
}
#if LANG_CXX11
inline void CMsgSetCookie::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSetCookie.path)
}
#endif
inline void CMsgSetCookie::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSetCookie.path)
}
inline void CMsgSetCookie::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSetCookie.path)
}
inline ::std::string* CMsgSetCookie::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetCookie.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSetCookie::release_path() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSetCookie.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSetCookie::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSetCookie.path)
}

// optional string host = 4;
inline bool CMsgSetCookie::has_host() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgSetCookie::set_has_host() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgSetCookie::clear_has_host() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgSetCookie::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_host();
}
inline const ::std::string& CMsgSetCookie::host() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetCookie.host)
  return host_.GetNoArena();
}
inline void CMsgSetCookie::set_host(const ::std::string& value) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetCookie.host)
}
#if LANG_CXX11
inline void CMsgSetCookie::set_host(::std::string&& value) {
  set_has_host();
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSetCookie.host)
}
#endif
inline void CMsgSetCookie::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSetCookie.host)
}
inline void CMsgSetCookie::set_host(const char* value, size_t size) {
  set_has_host();
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSetCookie.host)
}
inline ::std::string* CMsgSetCookie::mutable_host() {
  set_has_host();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetCookie.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSetCookie::release_host() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSetCookie.host)
  clear_has_host();
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSetCookie::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    set_has_host();
  } else {
    clear_has_host();
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSetCookie.host)
}

// optional uint32 expires = 5;
inline bool CMsgSetCookie::has_expires() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgSetCookie::set_has_expires() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgSetCookie::clear_has_expires() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgSetCookie::clear_expires() {
  expires_ = 0u;
  clear_has_expires();
}
inline ::google::protobuf::uint32 CMsgSetCookie::expires() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetCookie.expires)
  return expires_;
}
inline void CMsgSetCookie::set_expires(::google::protobuf::uint32 value) {
  set_has_expires();
  expires_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetCookie.expires)
}

// optional bool secure = 6;
inline bool CMsgSetCookie::has_secure() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgSetCookie::set_has_secure() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgSetCookie::clear_has_secure() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgSetCookie::clear_secure() {
  secure_ = false;
  clear_has_secure();
}
inline bool CMsgSetCookie::secure() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetCookie.secure)
  return secure_;
}
inline void CMsgSetCookie::set_secure(bool value) {
  set_has_secure();
  secure_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetCookie.secure)
}

// optional bool httponly = 7;
inline bool CMsgSetCookie::has_httponly() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgSetCookie::set_has_httponly() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgSetCookie::clear_has_httponly() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgSetCookie::clear_httponly() {
  httponly_ = false;
  clear_has_httponly();
}
inline bool CMsgSetCookie::httponly() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetCookie.httponly)
  return httponly_;
}
inline void CMsgSetCookie::set_httponly(bool value) {
  set_has_httponly();
  httponly_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetCookie.httponly)
}

// -------------------------------------------------------------------

// CMsgSetTargetFrameRate

// optional uint32 browser_handle = 1;
inline bool CMsgSetTargetFrameRate::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetTargetFrameRate::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetTargetFrameRate::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetTargetFrameRate::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgSetTargetFrameRate::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetTargetFrameRate.browser_handle)
  return browser_handle_;
}
inline void CMsgSetTargetFrameRate::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetTargetFrameRate.browser_handle)
}

// optional uint32 nTargetFrameRate = 2;
inline bool CMsgSetTargetFrameRate::has_ntargetframerate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetTargetFrameRate::set_has_ntargetframerate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetTargetFrameRate::clear_has_ntargetframerate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetTargetFrameRate::clear_ntargetframerate() {
  ntargetframerate_ = 0u;
  clear_has_ntargetframerate();
}
inline ::google::protobuf::uint32 CMsgSetTargetFrameRate::ntargetframerate() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetTargetFrameRate.nTargetFrameRate)
  return ntargetframerate_;
}
inline void CMsgSetTargetFrameRate::set_ntargetframerate(::google::protobuf::uint32 value) {
  set_has_ntargetframerate();
  ntargetframerate_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetTargetFrameRate.nTargetFrameRate)
}

// -------------------------------------------------------------------

// CMsgPauseRepaint

// optional uint32 browser_handle = 1;
inline bool CMsgPauseRepaint::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPauseRepaint::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPauseRepaint::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPauseRepaint::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgPauseRepaint::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPauseRepaint.browser_handle)
  return browser_handle_;
}
inline void CMsgPauseRepaint::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPauseRepaint.browser_handle)
}

// -------------------------------------------------------------------

// CMsgFullRepaint

// optional uint32 browser_handle = 1;
inline bool CMsgFullRepaint::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFullRepaint::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFullRepaint::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFullRepaint::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgFullRepaint::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFullRepaint.browser_handle)
  return browser_handle_;
}
inline void CMsgFullRepaint::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFullRepaint.browser_handle)
}

// -------------------------------------------------------------------

// CMsgRequestFullScreen

// optional uint32 browser_handle = 1;
inline bool CMsgRequestFullScreen::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestFullScreen::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRequestFullScreen::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRequestFullScreen::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgRequestFullScreen::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgRequestFullScreen.browser_handle)
  return browser_handle_;
}
inline void CMsgRequestFullScreen::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgRequestFullScreen.browser_handle)
}

// -------------------------------------------------------------------

// CMsgRequestFullScreenResponse

// optional uint32 browser_handle = 1;
inline bool CMsgRequestFullScreenResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgRequestFullScreenResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgRequestFullScreenResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgRequestFullScreenResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgRequestFullScreenResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgRequestFullScreenResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgRequestFullScreenResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgRequestFullScreenResponse.browser_handle)
}

// optional bool ballow = 2;
inline bool CMsgRequestFullScreenResponse::has_ballow() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgRequestFullScreenResponse::set_has_ballow() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgRequestFullScreenResponse::clear_has_ballow() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgRequestFullScreenResponse::clear_ballow() {
  ballow_ = false;
  clear_has_ballow();
}
inline bool CMsgRequestFullScreenResponse::ballow() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgRequestFullScreenResponse.ballow)
  return ballow_;
}
inline void CMsgRequestFullScreenResponse::set_ballow(bool value) {
  set_has_ballow();
  ballow_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgRequestFullScreenResponse.ballow)
}

// -------------------------------------------------------------------

// CMsgExitFullScreen

// optional uint32 browser_handle = 1;
inline bool CMsgExitFullScreen::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgExitFullScreen::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgExitFullScreen::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgExitFullScreen::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgExitFullScreen::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgExitFullScreen.browser_handle)
  return browser_handle_;
}
inline void CMsgExitFullScreen::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgExitFullScreen.browser_handle)
}

// -------------------------------------------------------------------

// CMsgGetCookiesForURL

// optional uint32 browser_handle = 1;
inline bool CMsgGetCookiesForURL::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGetCookiesForURL::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGetCookiesForURL::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGetCookiesForURL::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgGetCookiesForURL::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGetCookiesForURL.browser_handle)
  return browser_handle_;
}
inline void CMsgGetCookiesForURL::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGetCookiesForURL.browser_handle)
}

// optional string url = 2;
inline bool CMsgGetCookiesForURL::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGetCookiesForURL::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGetCookiesForURL::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGetCookiesForURL::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgGetCookiesForURL::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGetCookiesForURL.url)
  return url_.GetNoArena();
}
inline void CMsgGetCookiesForURL::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGetCookiesForURL.url)
}
#if LANG_CXX11
inline void CMsgGetCookiesForURL::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGetCookiesForURL.url)
}
#endif
inline void CMsgGetCookiesForURL::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGetCookiesForURL.url)
}
inline void CMsgGetCookiesForURL::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGetCookiesForURL.url)
}
inline ::std::string* CMsgGetCookiesForURL::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGetCookiesForURL.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGetCookiesForURL::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGetCookiesForURL.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGetCookiesForURL::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGetCookiesForURL.url)
}

// -------------------------------------------------------------------

// CCookie

// optional string name = 1;
inline bool CCookie::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CCookie::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CCookie::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CCookie::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CCookie::name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCookie.name)
  return name_.GetNoArena();
}
inline void CCookie::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCookie.name)
}
#if LANG_CXX11
inline void CCookie::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCookie.name)
}
#endif
inline void CCookie::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCookie.name)
}
inline void CCookie::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCookie.name)
}
inline ::std::string* CCookie::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CCookie.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCookie::release_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CCookie.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCookie::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCookie.name)
}

// optional string value = 2;
inline bool CCookie::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CCookie::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CCookie::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CCookie::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& CCookie::value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCookie.value)
  return value_.GetNoArena();
}
inline void CCookie::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCookie.value)
}
#if LANG_CXX11
inline void CCookie::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCookie.value)
}
#endif
inline void CCookie::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCookie.value)
}
inline void CCookie::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCookie.value)
}
inline ::std::string* CCookie::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:proto.steam.CCookie.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCookie::release_value() {
  // @@protoc_insertion_point(field_release:proto.steam.CCookie.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCookie::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCookie.value)
}

// optional string domain = 3;
inline bool CCookie::has_domain() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CCookie::set_has_domain() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CCookie::clear_has_domain() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CCookie::clear_domain() {
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_domain();
}
inline const ::std::string& CCookie::domain() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCookie.domain)
  return domain_.GetNoArena();
}
inline void CCookie::set_domain(const ::std::string& value) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCookie.domain)
}
#if LANG_CXX11
inline void CCookie::set_domain(::std::string&& value) {
  set_has_domain();
  domain_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCookie.domain)
}
#endif
inline void CCookie::set_domain(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCookie.domain)
}
inline void CCookie::set_domain(const char* value, size_t size) {
  set_has_domain();
  domain_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCookie.domain)
}
inline ::std::string* CCookie::mutable_domain() {
  set_has_domain();
  // @@protoc_insertion_point(field_mutable:proto.steam.CCookie.domain)
  return domain_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCookie::release_domain() {
  // @@protoc_insertion_point(field_release:proto.steam.CCookie.domain)
  clear_has_domain();
  return domain_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCookie::set_allocated_domain(::std::string* domain) {
  if (domain != NULL) {
    set_has_domain();
  } else {
    clear_has_domain();
  }
  domain_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), domain);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCookie.domain)
}

// optional string path = 4;
inline bool CCookie::has_path() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CCookie::set_has_path() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CCookie::clear_has_path() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CCookie::clear_path() {
  path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_path();
}
inline const ::std::string& CCookie::path() const {
  // @@protoc_insertion_point(field_get:proto.steam.CCookie.path)
  return path_.GetNoArena();
}
inline void CCookie::set_path(const ::std::string& value) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CCookie.path)
}
#if LANG_CXX11
inline void CCookie::set_path(::std::string&& value) {
  set_has_path();
  path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CCookie.path)
}
#endif
inline void CCookie::set_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CCookie.path)
}
inline void CCookie::set_path(const char* value, size_t size) {
  set_has_path();
  path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CCookie.path)
}
inline ::std::string* CCookie::mutable_path() {
  set_has_path();
  // @@protoc_insertion_point(field_mutable:proto.steam.CCookie.path)
  return path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CCookie::release_path() {
  // @@protoc_insertion_point(field_release:proto.steam.CCookie.path)
  clear_has_path();
  return path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CCookie::set_allocated_path(::std::string* path) {
  if (path != NULL) {
    set_has_path();
  } else {
    clear_has_path();
  }
  path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), path);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CCookie.path)
}

// -------------------------------------------------------------------

// CMsgGetCookiesForURLResponse

// optional uint32 browser_handle = 1;
inline bool CMsgGetCookiesForURLResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgGetCookiesForURLResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgGetCookiesForURLResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgGetCookiesForURLResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgGetCookiesForURLResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGetCookiesForURLResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgGetCookiesForURLResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGetCookiesForURLResponse.browser_handle)
}

// optional string url = 2;
inline bool CMsgGetCookiesForURLResponse::has_url() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgGetCookiesForURLResponse::set_has_url() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgGetCookiesForURLResponse::clear_has_url() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgGetCookiesForURLResponse::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url();
}
inline const ::std::string& CMsgGetCookiesForURLResponse::url() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGetCookiesForURLResponse.url)
  return url_.GetNoArena();
}
inline void CMsgGetCookiesForURLResponse::set_url(const ::std::string& value) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgGetCookiesForURLResponse.url)
}
#if LANG_CXX11
inline void CMsgGetCookiesForURLResponse::set_url(::std::string&& value) {
  set_has_url();
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgGetCookiesForURLResponse.url)
}
#endif
inline void CMsgGetCookiesForURLResponse::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgGetCookiesForURLResponse.url)
}
inline void CMsgGetCookiesForURLResponse::set_url(const char* value, size_t size) {
  set_has_url();
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgGetCookiesForURLResponse.url)
}
inline ::std::string* CMsgGetCookiesForURLResponse::mutable_url() {
  set_has_url();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGetCookiesForURLResponse.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgGetCookiesForURLResponse::release_url() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgGetCookiesForURLResponse.url)
  clear_has_url();
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgGetCookiesForURLResponse::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    set_has_url();
  } else {
    clear_has_url();
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgGetCookiesForURLResponse.url)
}

// repeated .proto.steam.CCookie cookies = 3;
inline int CMsgGetCookiesForURLResponse::cookies_size() const {
  return cookies_.size();
}
inline void CMsgGetCookiesForURLResponse::clear_cookies() {
  cookies_.Clear();
}
inline const ::proto::steam::CCookie& CMsgGetCookiesForURLResponse::cookies(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgGetCookiesForURLResponse.cookies)
  return cookies_.Get(index);
}
inline ::proto::steam::CCookie* CMsgGetCookiesForURLResponse::mutable_cookies(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgGetCookiesForURLResponse.cookies)
  return cookies_.Mutable(index);
}
inline ::proto::steam::CCookie* CMsgGetCookiesForURLResponse::add_cookies() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgGetCookiesForURLResponse.cookies)
  return cookies_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CCookie >*
CMsgGetCookiesForURLResponse::mutable_cookies() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgGetCookiesForURLResponse.cookies)
  return &cookies_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CCookie >&
CMsgGetCookiesForURLResponse::cookies() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgGetCookiesForURLResponse.cookies)
  return cookies_;
}

// -------------------------------------------------------------------

// CMsgNodeHasFocus

// optional uint32 browser_handle = 1;
inline bool CMsgNodeHasFocus::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgNodeHasFocus::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgNodeHasFocus::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgNodeHasFocus::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgNodeHasFocus::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgNodeHasFocus.browser_handle)
  return browser_handle_;
}
inline void CMsgNodeHasFocus::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgNodeHasFocus.browser_handle)
}

// optional bool bInput = 2;
inline bool CMsgNodeHasFocus::has_binput() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgNodeHasFocus::set_has_binput() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgNodeHasFocus::clear_has_binput() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgNodeHasFocus::clear_binput() {
  binput_ = false;
  clear_has_binput();
}
inline bool CMsgNodeHasFocus::binput() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgNodeHasFocus.bInput)
  return binput_;
}
inline void CMsgNodeHasFocus::set_binput(bool value) {
  set_has_binput();
  binput_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgNodeHasFocus.bInput)
}

// optional string name = 3;
inline bool CMsgNodeHasFocus::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgNodeHasFocus::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgNodeHasFocus::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgNodeHasFocus::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgNodeHasFocus::name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgNodeHasFocus.name)
  return name_.GetNoArena();
}
inline void CMsgNodeHasFocus::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgNodeHasFocus.name)
}
#if LANG_CXX11
inline void CMsgNodeHasFocus::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgNodeHasFocus.name)
}
#endif
inline void CMsgNodeHasFocus::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgNodeHasFocus.name)
}
inline void CMsgNodeHasFocus::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgNodeHasFocus.name)
}
inline ::std::string* CMsgNodeHasFocus::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgNodeHasFocus.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgNodeHasFocus::release_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgNodeHasFocus.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgNodeHasFocus::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgNodeHasFocus.name)
}

// optional string elementtagname = 4;
inline bool CMsgNodeHasFocus::has_elementtagname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgNodeHasFocus::set_has_elementtagname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgNodeHasFocus::clear_has_elementtagname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgNodeHasFocus::clear_elementtagname() {
  elementtagname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_elementtagname();
}
inline const ::std::string& CMsgNodeHasFocus::elementtagname() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgNodeHasFocus.elementtagname)
  return elementtagname_.GetNoArena();
}
inline void CMsgNodeHasFocus::set_elementtagname(const ::std::string& value) {
  set_has_elementtagname();
  elementtagname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgNodeHasFocus.elementtagname)
}
#if LANG_CXX11
inline void CMsgNodeHasFocus::set_elementtagname(::std::string&& value) {
  set_has_elementtagname();
  elementtagname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgNodeHasFocus.elementtagname)
}
#endif
inline void CMsgNodeHasFocus::set_elementtagname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_elementtagname();
  elementtagname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgNodeHasFocus.elementtagname)
}
inline void CMsgNodeHasFocus::set_elementtagname(const char* value, size_t size) {
  set_has_elementtagname();
  elementtagname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgNodeHasFocus.elementtagname)
}
inline ::std::string* CMsgNodeHasFocus::mutable_elementtagname() {
  set_has_elementtagname();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgNodeHasFocus.elementtagname)
  return elementtagname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgNodeHasFocus::release_elementtagname() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgNodeHasFocus.elementtagname)
  clear_has_elementtagname();
  return elementtagname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgNodeHasFocus::set_allocated_elementtagname(::std::string* elementtagname) {
  if (elementtagname != NULL) {
    set_has_elementtagname();
  } else {
    clear_has_elementtagname();
  }
  elementtagname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), elementtagname);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgNodeHasFocus.elementtagname)
}

// optional string searchbuttontext = 5;
inline bool CMsgNodeHasFocus::has_searchbuttontext() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgNodeHasFocus::set_has_searchbuttontext() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgNodeHasFocus::clear_has_searchbuttontext() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgNodeHasFocus::clear_searchbuttontext() {
  searchbuttontext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_searchbuttontext();
}
inline const ::std::string& CMsgNodeHasFocus::searchbuttontext() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgNodeHasFocus.searchbuttontext)
  return searchbuttontext_.GetNoArena();
}
inline void CMsgNodeHasFocus::set_searchbuttontext(const ::std::string& value) {
  set_has_searchbuttontext();
  searchbuttontext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgNodeHasFocus.searchbuttontext)
}
#if LANG_CXX11
inline void CMsgNodeHasFocus::set_searchbuttontext(::std::string&& value) {
  set_has_searchbuttontext();
  searchbuttontext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgNodeHasFocus.searchbuttontext)
}
#endif
inline void CMsgNodeHasFocus::set_searchbuttontext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_searchbuttontext();
  searchbuttontext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgNodeHasFocus.searchbuttontext)
}
inline void CMsgNodeHasFocus::set_searchbuttontext(const char* value, size_t size) {
  set_has_searchbuttontext();
  searchbuttontext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgNodeHasFocus.searchbuttontext)
}
inline ::std::string* CMsgNodeHasFocus::mutable_searchbuttontext() {
  set_has_searchbuttontext();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgNodeHasFocus.searchbuttontext)
  return searchbuttontext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgNodeHasFocus::release_searchbuttontext() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgNodeHasFocus.searchbuttontext)
  clear_has_searchbuttontext();
  return searchbuttontext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgNodeHasFocus::set_allocated_searchbuttontext(::std::string* searchbuttontext) {
  if (searchbuttontext != NULL) {
    set_has_searchbuttontext();
  } else {
    clear_has_searchbuttontext();
  }
  searchbuttontext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), searchbuttontext);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgNodeHasFocus.searchbuttontext)
}

// optional bool bHasMultipleInputs = 6;
inline bool CMsgNodeHasFocus::has_bhasmultipleinputs() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgNodeHasFocus::set_has_bhasmultipleinputs() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgNodeHasFocus::clear_has_bhasmultipleinputs() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgNodeHasFocus::clear_bhasmultipleinputs() {
  bhasmultipleinputs_ = false;
  clear_has_bhasmultipleinputs();
}
inline bool CMsgNodeHasFocus::bhasmultipleinputs() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgNodeHasFocus.bHasMultipleInputs)
  return bhasmultipleinputs_;
}
inline void CMsgNodeHasFocus::set_bhasmultipleinputs(bool value) {
  set_has_bhasmultipleinputs();
  bhasmultipleinputs_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgNodeHasFocus.bHasMultipleInputs)
}

// optional string input_type = 7;
inline bool CMsgNodeHasFocus::has_input_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgNodeHasFocus::set_has_input_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgNodeHasFocus::clear_has_input_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgNodeHasFocus::clear_input_type() {
  input_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_input_type();
}
inline const ::std::string& CMsgNodeHasFocus::input_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgNodeHasFocus.input_type)
  return input_type_.GetNoArena();
}
inline void CMsgNodeHasFocus::set_input_type(const ::std::string& value) {
  set_has_input_type();
  input_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgNodeHasFocus.input_type)
}
#if LANG_CXX11
inline void CMsgNodeHasFocus::set_input_type(::std::string&& value) {
  set_has_input_type();
  input_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgNodeHasFocus.input_type)
}
#endif
inline void CMsgNodeHasFocus::set_input_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_input_type();
  input_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgNodeHasFocus.input_type)
}
inline void CMsgNodeHasFocus::set_input_type(const char* value, size_t size) {
  set_has_input_type();
  input_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgNodeHasFocus.input_type)
}
inline ::std::string* CMsgNodeHasFocus::mutable_input_type() {
  set_has_input_type();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgNodeHasFocus.input_type)
  return input_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgNodeHasFocus::release_input_type() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgNodeHasFocus.input_type)
  clear_has_input_type();
  return input_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgNodeHasFocus::set_allocated_input_type(::std::string* input_type) {
  if (input_type != NULL) {
    set_has_input_type();
  } else {
    clear_has_input_type();
  }
  input_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), input_type);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgNodeHasFocus.input_type)
}

// -------------------------------------------------------------------

// CMsgZoomToFocusedElement

// optional uint32 browser_handle = 1;
inline bool CMsgZoomToFocusedElement::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgZoomToFocusedElement::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgZoomToFocusedElement::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgZoomToFocusedElement::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgZoomToFocusedElement::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgZoomToFocusedElement.browser_handle)
  return browser_handle_;
}
inline void CMsgZoomToFocusedElement::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgZoomToFocusedElement.browser_handle)
}

// -------------------------------------------------------------------

// CMsgCloseFullScreenFlashIfOpen

// optional uint32 browser_handle = 1;
inline bool CMsgCloseFullScreenFlashIfOpen::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCloseFullScreenFlashIfOpen::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCloseFullScreenFlashIfOpen::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCloseFullScreenFlashIfOpen::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgCloseFullScreenFlashIfOpen::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCloseFullScreenFlashIfOpen.browser_handle)
  return browser_handle_;
}
inline void CMsgCloseFullScreenFlashIfOpen::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCloseFullScreenFlashIfOpen.browser_handle)
}

// -------------------------------------------------------------------

// CMsgPauseFullScreenFlashMovieIfOpen

// optional uint32 browser_handle = 1;
inline bool CMsgPauseFullScreenFlashMovieIfOpen::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPauseFullScreenFlashMovieIfOpen::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPauseFullScreenFlashMovieIfOpen::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPauseFullScreenFlashMovieIfOpen::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgPauseFullScreenFlashMovieIfOpen::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPauseFullScreenFlashMovieIfOpen.browser_handle)
  return browser_handle_;
}
inline void CMsgPauseFullScreenFlashMovieIfOpen::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPauseFullScreenFlashMovieIfOpen.browser_handle)
}

// -------------------------------------------------------------------

// CMsgFocusedNodeText

// optional uint32 browser_handle = 1;
inline bool CMsgFocusedNodeText::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFocusedNodeText::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFocusedNodeText::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFocusedNodeText::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgFocusedNodeText::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFocusedNodeText.browser_handle)
  return browser_handle_;
}
inline void CMsgFocusedNodeText::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFocusedNodeText.browser_handle)
}

// -------------------------------------------------------------------

// CMsgFocusedNodeTextResponse

// optional uint32 browser_handle = 1;
inline bool CMsgFocusedNodeTextResponse::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgFocusedNodeTextResponse::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgFocusedNodeTextResponse::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgFocusedNodeTextResponse::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgFocusedNodeTextResponse::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFocusedNodeTextResponse.browser_handle)
  return browser_handle_;
}
inline void CMsgFocusedNodeTextResponse::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFocusedNodeTextResponse.browser_handle)
}

// optional string value = 2;
inline bool CMsgFocusedNodeTextResponse::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgFocusedNodeTextResponse::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgFocusedNodeTextResponse::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgFocusedNodeTextResponse::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}
inline const ::std::string& CMsgFocusedNodeTextResponse::value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgFocusedNodeTextResponse.value)
  return value_.GetNoArena();
}
inline void CMsgFocusedNodeTextResponse::set_value(const ::std::string& value) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgFocusedNodeTextResponse.value)
}
#if LANG_CXX11
inline void CMsgFocusedNodeTextResponse::set_value(::std::string&& value) {
  set_has_value();
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgFocusedNodeTextResponse.value)
}
#endif
inline void CMsgFocusedNodeTextResponse::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgFocusedNodeTextResponse.value)
}
inline void CMsgFocusedNodeTextResponse::set_value(const char* value, size_t size) {
  set_has_value();
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgFocusedNodeTextResponse.value)
}
inline ::std::string* CMsgFocusedNodeTextResponse::mutable_value() {
  set_has_value();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgFocusedNodeTextResponse.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgFocusedNodeTextResponse::release_value() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgFocusedNodeTextResponse.value)
  clear_has_value();
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgFocusedNodeTextResponse::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    set_has_value();
  } else {
    clear_has_value();
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgFocusedNodeTextResponse.value)
}

// -------------------------------------------------------------------

// CMsgBuildID

// optional uint64 build_id = 1;
inline bool CMsgBuildID::has_build_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgBuildID::set_has_build_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgBuildID::clear_has_build_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgBuildID::clear_build_id() {
  build_id_ = GOOGLE_ULONGLONG(0);
  clear_has_build_id();
}
inline ::google::protobuf::uint64 CMsgBuildID::build_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgBuildID.build_id)
  return build_id_;
}
inline void CMsgBuildID::set_build_id(::google::protobuf::uint64 value) {
  set_has_build_id();
  build_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgBuildID.build_id)
}

// -------------------------------------------------------------------

// CMsgOpenDevTools

// optional uint32 browser_handle = 1;
inline bool CMsgOpenDevTools::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgOpenDevTools::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgOpenDevTools::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgOpenDevTools::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgOpenDevTools::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgOpenDevTools.browser_handle)
  return browser_handle_;
}
inline void CMsgOpenDevTools::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgOpenDevTools.browser_handle)
}

// -------------------------------------------------------------------

// CMsgCloseDevTools

// optional uint32 browser_handle = 1;
inline bool CMsgCloseDevTools::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgCloseDevTools::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgCloseDevTools::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgCloseDevTools::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgCloseDevTools::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgCloseDevTools.browser_handle)
  return browser_handle_;
}
inline void CMsgCloseDevTools::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgCloseDevTools.browser_handle)
}

// -------------------------------------------------------------------

// CMsgUnlockH264

// optional uint32 browser_handle = 1;
inline bool CMsgUnlockH264::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgUnlockH264::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgUnlockH264::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgUnlockH264::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgUnlockH264::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgUnlockH264.browser_handle)
  return browser_handle_;
}
inline void CMsgUnlockH264::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgUnlockH264.browser_handle)
}

// optional string unlock_code = 2;
inline bool CMsgUnlockH264::has_unlock_code() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgUnlockH264::set_has_unlock_code() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgUnlockH264::clear_has_unlock_code() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgUnlockH264::clear_unlock_code() {
  unlock_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_unlock_code();
}
inline const ::std::string& CMsgUnlockH264::unlock_code() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgUnlockH264.unlock_code)
  return unlock_code_.GetNoArena();
}
inline void CMsgUnlockH264::set_unlock_code(const ::std::string& value) {
  set_has_unlock_code();
  unlock_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgUnlockH264.unlock_code)
}
#if LANG_CXX11
inline void CMsgUnlockH264::set_unlock_code(::std::string&& value) {
  set_has_unlock_code();
  unlock_code_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgUnlockH264.unlock_code)
}
#endif
inline void CMsgUnlockH264::set_unlock_code(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_unlock_code();
  unlock_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgUnlockH264.unlock_code)
}
inline void CMsgUnlockH264::set_unlock_code(const char* value, size_t size) {
  set_has_unlock_code();
  unlock_code_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgUnlockH264.unlock_code)
}
inline ::std::string* CMsgUnlockH264::mutable_unlock_code() {
  set_has_unlock_code();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgUnlockH264.unlock_code)
  return unlock_code_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgUnlockH264::release_unlock_code() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgUnlockH264.unlock_code)
  clear_has_unlock_code();
  return unlock_code_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgUnlockH264::set_allocated_unlock_code(::std::string* unlock_code) {
  if (unlock_code != NULL) {
    set_has_unlock_code();
  } else {
    clear_has_unlock_code();
  }
  unlock_code_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), unlock_code);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgUnlockH264.unlock_code)
}

// -------------------------------------------------------------------

// CMsgScreenInformationChanged

// optional uint32 browser_handle = 1;
inline bool CMsgScreenInformationChanged::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgScreenInformationChanged::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgScreenInformationChanged::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgScreenInformationChanged::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgScreenInformationChanged::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgScreenInformationChanged.browser_handle)
  return browser_handle_;
}
inline void CMsgScreenInformationChanged::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgScreenInformationChanged.browser_handle)
}

// optional uint32 override_width = 2;
inline bool CMsgScreenInformationChanged::has_override_width() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgScreenInformationChanged::set_has_override_width() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgScreenInformationChanged::clear_has_override_width() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgScreenInformationChanged::clear_override_width() {
  override_width_ = 0u;
  clear_has_override_width();
}
inline ::google::protobuf::uint32 CMsgScreenInformationChanged::override_width() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgScreenInformationChanged.override_width)
  return override_width_;
}
inline void CMsgScreenInformationChanged::set_override_width(::google::protobuf::uint32 value) {
  set_has_override_width();
  override_width_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgScreenInformationChanged.override_width)
}

// optional uint32 override_height = 3;
inline bool CMsgScreenInformationChanged::has_override_height() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgScreenInformationChanged::set_has_override_height() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgScreenInformationChanged::clear_has_override_height() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgScreenInformationChanged::clear_override_height() {
  override_height_ = 0u;
  clear_has_override_height();
}
inline ::google::protobuf::uint32 CMsgScreenInformationChanged::override_height() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgScreenInformationChanged.override_height)
  return override_height_;
}
inline void CMsgScreenInformationChanged::set_override_height(::google::protobuf::uint32 value) {
  set_has_override_height();
  override_height_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgScreenInformationChanged.override_height)
}

// -------------------------------------------------------------------

// CMsgClearAllCookies

// optional uint32 browser_handle = 1;
inline bool CMsgClearAllCookies::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClearAllCookies::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClearAllCookies::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClearAllCookies::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgClearAllCookies::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClearAllCookies.browser_handle)
  return browser_handle_;
}
inline void CMsgClearAllCookies::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClearAllCookies.browser_handle)
}

// -------------------------------------------------------------------

// CMsgScreenDPI

// optional uint32 browser_handle = 1;
inline bool CMsgScreenDPI::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgScreenDPI::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgScreenDPI::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgScreenDPI::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgScreenDPI::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgScreenDPI.browser_handle)
  return browser_handle_;
}
inline void CMsgScreenDPI::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgScreenDPI.browser_handle)
}

// optional float dpi_scaling = 2;
inline bool CMsgScreenDPI::has_dpi_scaling() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgScreenDPI::set_has_dpi_scaling() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgScreenDPI::clear_has_dpi_scaling() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgScreenDPI::clear_dpi_scaling() {
  dpi_scaling_ = 0;
  clear_has_dpi_scaling();
}
inline float CMsgScreenDPI::dpi_scaling() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgScreenDPI.dpi_scaling)
  return dpi_scaling_;
}
inline void CMsgScreenDPI::set_dpi_scaling(float value) {
  set_has_dpi_scaling();
  dpi_scaling_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgScreenDPI.dpi_scaling)
}

// -------------------------------------------------------------------

// CMsgAuthedSteamDomains

// repeated string domains = 1;
inline int CMsgAuthedSteamDomains::domains_size() const {
  return domains_.size();
}
inline void CMsgAuthedSteamDomains::clear_domains() {
  domains_.Clear();
}
inline const ::std::string& CMsgAuthedSteamDomains::domains(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgAuthedSteamDomains.domains)
  return domains_.Get(index);
}
inline ::std::string* CMsgAuthedSteamDomains::mutable_domains(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgAuthedSteamDomains.domains)
  return domains_.Mutable(index);
}
inline void CMsgAuthedSteamDomains::set_domains(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthedSteamDomains.domains)
  domains_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CMsgAuthedSteamDomains::set_domains(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CMsgAuthedSteamDomains.domains)
  domains_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CMsgAuthedSteamDomains::set_domains(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  domains_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgAuthedSteamDomains.domains)
}
inline void CMsgAuthedSteamDomains::set_domains(int index, const char* value, size_t size) {
  domains_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgAuthedSteamDomains.domains)
}
inline ::std::string* CMsgAuthedSteamDomains::add_domains() {
  // @@protoc_insertion_point(field_add_mutable:proto.steam.CMsgAuthedSteamDomains.domains)
  return domains_.Add();
}
inline void CMsgAuthedSteamDomains::add_domains(const ::std::string& value) {
  domains_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgAuthedSteamDomains.domains)
}
#if LANG_CXX11
inline void CMsgAuthedSteamDomains::add_domains(::std::string&& value) {
  domains_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.steam.CMsgAuthedSteamDomains.domains)
}
#endif
inline void CMsgAuthedSteamDomains::add_domains(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  domains_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.steam.CMsgAuthedSteamDomains.domains)
}
inline void CMsgAuthedSteamDomains::add_domains(const char* value, size_t size) {
  domains_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.steam.CMsgAuthedSteamDomains.domains)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CMsgAuthedSteamDomains::domains() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgAuthedSteamDomains.domains)
  return domains_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CMsgAuthedSteamDomains::mutable_domains() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgAuthedSteamDomains.domains)
  return &domains_;
}

// -------------------------------------------------------------------

// CMsgSteamAuthNeeded

// optional bool filler = 1;
inline bool CMsgSteamAuthNeeded::has_filler() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamAuthNeeded::set_has_filler() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamAuthNeeded::clear_has_filler() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamAuthNeeded::clear_filler() {
  filler_ = false;
  clear_has_filler();
}
inline bool CMsgSteamAuthNeeded::filler() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSteamAuthNeeded.filler)
  return filler_;
}
inline void CMsgSteamAuthNeeded::set_filler(bool value) {
  set_has_filler();
  filler_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSteamAuthNeeded.filler)
}

// -------------------------------------------------------------------

// CMsgSteamAuthCookiesSet

// optional bool success = 1;
inline bool CMsgSteamAuthCookiesSet::has_success() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSteamAuthCookiesSet::set_has_success() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSteamAuthCookiesSet::clear_has_success() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSteamAuthCookiesSet::clear_success() {
  success_ = false;
  clear_has_success();
}
inline bool CMsgSteamAuthCookiesSet::success() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSteamAuthCookiesSet.success)
  return success_;
}
inline void CMsgSteamAuthCookiesSet::set_success(bool value) {
  set_has_success();
  success_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSteamAuthCookiesSet.success)
}

// -------------------------------------------------------------------

// CMsgJSRegisterMethod

// optional uint32 browser_handle = 1;
inline bool CMsgJSRegisterMethod::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJSRegisterMethod::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJSRegisterMethod::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJSRegisterMethod::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgJSRegisterMethod::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSRegisterMethod.browser_handle)
  return browser_handle_;
}
inline void CMsgJSRegisterMethod::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSRegisterMethod.browser_handle)
}

// optional string name = 2;
inline bool CMsgJSRegisterMethod::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJSRegisterMethod::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJSRegisterMethod::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJSRegisterMethod::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgJSRegisterMethod::name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSRegisterMethod.name)
  return name_.GetNoArena();
}
inline void CMsgJSRegisterMethod::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSRegisterMethod.name)
}
#if LANG_CXX11
inline void CMsgJSRegisterMethod::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgJSRegisterMethod.name)
}
#endif
inline void CMsgJSRegisterMethod::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgJSRegisterMethod.name)
}
inline void CMsgJSRegisterMethod::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgJSRegisterMethod.name)
}
inline ::std::string* CMsgJSRegisterMethod::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJSRegisterMethod.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgJSRegisterMethod::release_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgJSRegisterMethod.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgJSRegisterMethod::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgJSRegisterMethod.name)
}

// optional .proto.steam.EJSRegisterMethodType method_type = 3 [default = k_EJSRegisterMethodType_Invalid];
inline bool CMsgJSRegisterMethod::has_method_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgJSRegisterMethod::set_has_method_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgJSRegisterMethod::clear_has_method_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgJSRegisterMethod::clear_method_type() {
  method_type_ = 0;
  clear_has_method_type();
}
inline ::proto::steam::EJSRegisterMethodType CMsgJSRegisterMethod::method_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSRegisterMethod.method_type)
  return static_cast< ::proto::steam::EJSRegisterMethodType >(method_type_);
}
inline void CMsgJSRegisterMethod::set_method_type(::proto::steam::EJSRegisterMethodType value) {
  assert(::proto::steam::EJSRegisterMethodType_IsValid(value));
  set_has_method_type();
  method_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSRegisterMethod.method_type)
}

// -------------------------------------------------------------------

// CJSMethodArgument

// optional string json_data = 1;
inline bool CJSMethodArgument::has_json_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CJSMethodArgument::set_has_json_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CJSMethodArgument::clear_has_json_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CJSMethodArgument::clear_json_data() {
  json_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_json_data();
}
inline const ::std::string& CJSMethodArgument::json_data() const {
  // @@protoc_insertion_point(field_get:proto.steam.CJSMethodArgument.json_data)
  return json_data_.GetNoArena();
}
inline void CJSMethodArgument::set_json_data(const ::std::string& value) {
  set_has_json_data();
  json_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CJSMethodArgument.json_data)
}
#if LANG_CXX11
inline void CJSMethodArgument::set_json_data(::std::string&& value) {
  set_has_json_data();
  json_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CJSMethodArgument.json_data)
}
#endif
inline void CJSMethodArgument::set_json_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_json_data();
  json_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CJSMethodArgument.json_data)
}
inline void CJSMethodArgument::set_json_data(const char* value, size_t size) {
  set_has_json_data();
  json_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CJSMethodArgument.json_data)
}
inline ::std::string* CJSMethodArgument::mutable_json_data() {
  set_has_json_data();
  // @@protoc_insertion_point(field_mutable:proto.steam.CJSMethodArgument.json_data)
  return json_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CJSMethodArgument::release_json_data() {
  // @@protoc_insertion_point(field_release:proto.steam.CJSMethodArgument.json_data)
  clear_has_json_data();
  return json_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CJSMethodArgument::set_allocated_json_data(::std::string* json_data) {
  if (json_data != NULL) {
    set_has_json_data();
  } else {
    clear_has_json_data();
  }
  json_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json_data);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CJSMethodArgument.json_data)
}

// optional uint64 function_handle = 2;
inline bool CJSMethodArgument::has_function_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CJSMethodArgument::set_has_function_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CJSMethodArgument::clear_has_function_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CJSMethodArgument::clear_function_handle() {
  function_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_function_handle();
}
inline ::google::protobuf::uint64 CJSMethodArgument::function_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CJSMethodArgument.function_handle)
  return function_handle_;
}
inline void CJSMethodArgument::set_function_handle(::google::protobuf::uint64 value) {
  set_has_function_handle();
  function_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CJSMethodArgument.function_handle)
}

// -------------------------------------------------------------------

// CMsgJSValue_JSObjectProperty

// optional string name = 1;
inline bool CMsgJSValue_JSObjectProperty::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJSValue_JSObjectProperty::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJSValue_JSObjectProperty::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJSValue_JSObjectProperty::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgJSValue_JSObjectProperty::name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSValue.JSObjectProperty.name)
  return name_.GetNoArena();
}
inline void CMsgJSValue_JSObjectProperty::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSValue.JSObjectProperty.name)
}
#if LANG_CXX11
inline void CMsgJSValue_JSObjectProperty::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgJSValue.JSObjectProperty.name)
}
#endif
inline void CMsgJSValue_JSObjectProperty::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgJSValue.JSObjectProperty.name)
}
inline void CMsgJSValue_JSObjectProperty::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgJSValue.JSObjectProperty.name)
}
inline ::std::string* CMsgJSValue_JSObjectProperty::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJSValue.JSObjectProperty.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgJSValue_JSObjectProperty::release_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgJSValue.JSObjectProperty.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgJSValue_JSObjectProperty::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgJSValue.JSObjectProperty.name)
}

// optional .proto.steam.CMsgJSValue value = 2;
inline bool CMsgJSValue_JSObjectProperty::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJSValue_JSObjectProperty::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJSValue_JSObjectProperty::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJSValue_JSObjectProperty::clear_value() {
  if (value_ != NULL) value_->::proto::steam::CMsgJSValue::Clear();
  clear_has_value();
}
inline const ::proto::steam::CMsgJSValue& CMsgJSValue_JSObjectProperty::value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSValue.JSObjectProperty.value)
  return value_ != NULL ? *value_
                         : *::proto::steam::CMsgJSValue::internal_default_instance();
}
inline ::proto::steam::CMsgJSValue* CMsgJSValue_JSObjectProperty::mutable_value() {
  set_has_value();
  if (value_ == NULL) {
    value_ = new ::proto::steam::CMsgJSValue;
  }
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJSValue.JSObjectProperty.value)
  return value_;
}
inline ::proto::steam::CMsgJSValue* CMsgJSValue_JSObjectProperty::release_value() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgJSValue.JSObjectProperty.value)
  clear_has_value();
  ::proto::steam::CMsgJSValue* temp = value_;
  value_ = NULL;
  return temp;
}
inline void CMsgJSValue_JSObjectProperty::set_allocated_value(::proto::steam::CMsgJSValue* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgJSValue.JSObjectProperty.value)
}

// -------------------------------------------------------------------

// CMsgJSValue

// optional bool bool_value = 1;
inline bool CMsgJSValue::has_bool_value() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgJSValue::set_has_bool_value() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgJSValue::clear_has_bool_value() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgJSValue::clear_bool_value() {
  bool_value_ = false;
  clear_has_bool_value();
}
inline bool CMsgJSValue::bool_value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSValue.bool_value)
  return bool_value_;
}
inline void CMsgJSValue::set_bool_value(bool value) {
  set_has_bool_value();
  bool_value_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSValue.bool_value)
}

// optional int32 int_value = 2;
inline bool CMsgJSValue::has_int_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJSValue::set_has_int_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJSValue::clear_has_int_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJSValue::clear_int_value() {
  int_value_ = 0;
  clear_has_int_value();
}
inline ::google::protobuf::int32 CMsgJSValue::int_value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSValue.int_value)
  return int_value_;
}
inline void CMsgJSValue::set_int_value(::google::protobuf::int32 value) {
  set_has_int_value();
  int_value_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSValue.int_value)
}

// optional uint32 uint_value = 3;
inline bool CMsgJSValue::has_uint_value() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgJSValue::set_has_uint_value() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgJSValue::clear_has_uint_value() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgJSValue::clear_uint_value() {
  uint_value_ = 0u;
  clear_has_uint_value();
}
inline ::google::protobuf::uint32 CMsgJSValue::uint_value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSValue.uint_value)
  return uint_value_;
}
inline void CMsgJSValue::set_uint_value(::google::protobuf::uint32 value) {
  set_has_uint_value();
  uint_value_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSValue.uint_value)
}

// optional float float_value = 4;
inline bool CMsgJSValue::has_float_value() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgJSValue::set_has_float_value() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgJSValue::clear_has_float_value() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgJSValue::clear_float_value() {
  float_value_ = 0;
  clear_has_float_value();
}
inline float CMsgJSValue::float_value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSValue.float_value)
  return float_value_;
}
inline void CMsgJSValue::set_float_value(float value) {
  set_has_float_value();
  float_value_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSValue.float_value)
}

// optional string string_value = 5;
inline bool CMsgJSValue::has_string_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJSValue::set_has_string_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJSValue::clear_has_string_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJSValue::clear_string_value() {
  string_value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_string_value();
}
inline const ::std::string& CMsgJSValue::string_value() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSValue.string_value)
  return string_value_.GetNoArena();
}
inline void CMsgJSValue::set_string_value(const ::std::string& value) {
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSValue.string_value)
}
#if LANG_CXX11
inline void CMsgJSValue::set_string_value(::std::string&& value) {
  set_has_string_value();
  string_value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgJSValue.string_value)
}
#endif
inline void CMsgJSValue::set_string_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgJSValue.string_value)
}
inline void CMsgJSValue::set_string_value(const char* value, size_t size) {
  set_has_string_value();
  string_value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgJSValue.string_value)
}
inline ::std::string* CMsgJSValue::mutable_string_value() {
  set_has_string_value();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJSValue.string_value)
  return string_value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgJSValue::release_string_value() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgJSValue.string_value)
  clear_has_string_value();
  return string_value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgJSValue::set_allocated_string_value(::std::string* string_value) {
  if (string_value != NULL) {
    set_has_string_value();
  } else {
    clear_has_string_value();
  }
  string_value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string_value);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgJSValue.string_value)
}

// optional uint64 function_handle = 6;
inline bool CMsgJSValue::has_function_handle() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgJSValue::set_has_function_handle() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgJSValue::clear_has_function_handle() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgJSValue::clear_function_handle() {
  function_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_function_handle();
}
inline ::google::protobuf::uint64 CMsgJSValue::function_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSValue.function_handle)
  return function_handle_;
}
inline void CMsgJSValue::set_function_handle(::google::protobuf::uint64 value) {
  set_has_function_handle();
  function_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSValue.function_handle)
}

// optional bool is_array = 8;
inline bool CMsgJSValue::has_is_array() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgJSValue::set_has_is_array() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgJSValue::clear_has_is_array() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgJSValue::clear_is_array() {
  is_array_ = false;
  clear_has_is_array();
}
inline bool CMsgJSValue::is_array() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSValue.is_array)
  return is_array_;
}
inline void CMsgJSValue::set_is_array(bool value) {
  set_has_is_array();
  is_array_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSValue.is_array)
}

// repeated .proto.steam.CMsgJSValue array_values = 9;
inline int CMsgJSValue::array_values_size() const {
  return array_values_.size();
}
inline void CMsgJSValue::clear_array_values() {
  array_values_.Clear();
}
inline const ::proto::steam::CMsgJSValue& CMsgJSValue::array_values(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSValue.array_values)
  return array_values_.Get(index);
}
inline ::proto::steam::CMsgJSValue* CMsgJSValue::mutable_array_values(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJSValue.array_values)
  return array_values_.Mutable(index);
}
inline ::proto::steam::CMsgJSValue* CMsgJSValue::add_array_values() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgJSValue.array_values)
  return array_values_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue >*
CMsgJSValue::mutable_array_values() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgJSValue.array_values)
  return &array_values_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue >&
CMsgJSValue::array_values() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgJSValue.array_values)
  return array_values_;
}

// optional bool is_object = 10;
inline bool CMsgJSValue::has_is_object() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgJSValue::set_has_is_object() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgJSValue::clear_has_is_object() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgJSValue::clear_is_object() {
  is_object_ = false;
  clear_has_is_object();
}
inline bool CMsgJSValue::is_object() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSValue.is_object)
  return is_object_;
}
inline void CMsgJSValue::set_is_object(bool value) {
  set_has_is_object();
  is_object_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSValue.is_object)
}

// repeated .proto.steam.CMsgJSValue.JSObjectProperty object_properties = 11;
inline int CMsgJSValue::object_properties_size() const {
  return object_properties_.size();
}
inline void CMsgJSValue::clear_object_properties() {
  object_properties_.Clear();
}
inline const ::proto::steam::CMsgJSValue_JSObjectProperty& CMsgJSValue::object_properties(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSValue.object_properties)
  return object_properties_.Get(index);
}
inline ::proto::steam::CMsgJSValue_JSObjectProperty* CMsgJSValue::mutable_object_properties(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJSValue.object_properties)
  return object_properties_.Mutable(index);
}
inline ::proto::steam::CMsgJSValue_JSObjectProperty* CMsgJSValue::add_object_properties() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgJSValue.object_properties)
  return object_properties_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue_JSObjectProperty >*
CMsgJSValue::mutable_object_properties() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgJSValue.object_properties)
  return &object_properties_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue_JSObjectProperty >&
CMsgJSValue::object_properties() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgJSValue.object_properties)
  return object_properties_;
}

// -------------------------------------------------------------------

// CMsgJSMethodCall

// optional uint32 browser_handle = 1;
inline bool CMsgJSMethodCall::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJSMethodCall::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJSMethodCall::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJSMethodCall::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgJSMethodCall::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSMethodCall.browser_handle)
  return browser_handle_;
}
inline void CMsgJSMethodCall::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSMethodCall.browser_handle)
}

// optional string name = 2;
inline bool CMsgJSMethodCall::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJSMethodCall::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJSMethodCall::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJSMethodCall::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgJSMethodCall::name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSMethodCall.name)
  return name_.GetNoArena();
}
inline void CMsgJSMethodCall::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSMethodCall.name)
}
#if LANG_CXX11
inline void CMsgJSMethodCall::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgJSMethodCall.name)
}
#endif
inline void CMsgJSMethodCall::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgJSMethodCall.name)
}
inline void CMsgJSMethodCall::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgJSMethodCall.name)
}
inline ::std::string* CMsgJSMethodCall::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJSMethodCall.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgJSMethodCall::release_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgJSMethodCall.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgJSMethodCall::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgJSMethodCall.name)
}

// repeated .proto.steam.CMsgJSValue arguments = 3;
inline int CMsgJSMethodCall::arguments_size() const {
  return arguments_.size();
}
inline void CMsgJSMethodCall::clear_arguments() {
  arguments_.Clear();
}
inline const ::proto::steam::CMsgJSValue& CMsgJSMethodCall::arguments(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSMethodCall.arguments)
  return arguments_.Get(index);
}
inline ::proto::steam::CMsgJSValue* CMsgJSMethodCall::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJSMethodCall.arguments)
  return arguments_.Mutable(index);
}
inline ::proto::steam::CMsgJSValue* CMsgJSMethodCall::add_arguments() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgJSMethodCall.arguments)
  return arguments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue >*
CMsgJSMethodCall::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgJSMethodCall.arguments)
  return &arguments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue >&
CMsgJSMethodCall::arguments() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgJSMethodCall.arguments)
  return arguments_;
}

// -------------------------------------------------------------------

// CMsgJSExecuteCallback

// optional uint32 browser_handle = 1;
inline bool CMsgJSExecuteCallback::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJSExecuteCallback::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJSExecuteCallback::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJSExecuteCallback::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgJSExecuteCallback::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSExecuteCallback.browser_handle)
  return browser_handle_;
}
inline void CMsgJSExecuteCallback::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSExecuteCallback.browser_handle)
}

// optional uint64 function_handle = 2;
inline bool CMsgJSExecuteCallback::has_function_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJSExecuteCallback::set_has_function_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJSExecuteCallback::clear_has_function_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJSExecuteCallback::clear_function_handle() {
  function_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_function_handle();
}
inline ::google::protobuf::uint64 CMsgJSExecuteCallback::function_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSExecuteCallback.function_handle)
  return function_handle_;
}
inline void CMsgJSExecuteCallback::set_function_handle(::google::protobuf::uint64 value) {
  set_has_function_handle();
  function_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSExecuteCallback.function_handle)
}

// repeated .proto.steam.CMsgJSValue arguments = 3;
inline int CMsgJSExecuteCallback::arguments_size() const {
  return arguments_.size();
}
inline void CMsgJSExecuteCallback::clear_arguments() {
  arguments_.Clear();
}
inline const ::proto::steam::CMsgJSValue& CMsgJSExecuteCallback::arguments(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSExecuteCallback.arguments)
  return arguments_.Get(index);
}
inline ::proto::steam::CMsgJSValue* CMsgJSExecuteCallback::mutable_arguments(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJSExecuteCallback.arguments)
  return arguments_.Mutable(index);
}
inline ::proto::steam::CMsgJSValue* CMsgJSExecuteCallback::add_arguments() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgJSExecuteCallback.arguments)
  return arguments_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue >*
CMsgJSExecuteCallback::mutable_arguments() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgJSExecuteCallback.arguments)
  return &arguments_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJSValue >&
CMsgJSExecuteCallback::arguments() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgJSExecuteCallback.arguments)
  return arguments_;
}

// -------------------------------------------------------------------

// CMsgJSReleaseCallback

// optional uint32 browser_handle = 1;
inline bool CMsgJSReleaseCallback::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJSReleaseCallback::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJSReleaseCallback::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJSReleaseCallback::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgJSReleaseCallback::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSReleaseCallback.browser_handle)
  return browser_handle_;
}
inline void CMsgJSReleaseCallback::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSReleaseCallback.browser_handle)
}

// optional uint64 function_handle = 2;
inline bool CMsgJSReleaseCallback::has_function_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJSReleaseCallback::set_has_function_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJSReleaseCallback::clear_has_function_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJSReleaseCallback::clear_function_handle() {
  function_handle_ = GOOGLE_ULONGLONG(0);
  clear_has_function_handle();
}
inline ::google::protobuf::uint64 CMsgJSReleaseCallback::function_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSReleaseCallback.function_handle)
  return function_handle_;
}
inline void CMsgJSReleaseCallback::set_function_handle(::google::protobuf::uint64 value) {
  set_has_function_handle();
  function_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSReleaseCallback.function_handle)
}

// -------------------------------------------------------------------

// CMsgJSRaiseException

// optional uint32 browser_handle = 1;
inline bool CMsgJSRaiseException::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJSRaiseException::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJSRaiseException::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJSRaiseException::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgJSRaiseException::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSRaiseException.browser_handle)
  return browser_handle_;
}
inline void CMsgJSRaiseException::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSRaiseException.browser_handle)
}

// optional string exception = 2;
inline bool CMsgJSRaiseException::has_exception() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJSRaiseException::set_has_exception() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJSRaiseException::clear_has_exception() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJSRaiseException::clear_exception() {
  exception_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_exception();
}
inline const ::std::string& CMsgJSRaiseException::exception() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJSRaiseException.exception)
  return exception_.GetNoArena();
}
inline void CMsgJSRaiseException::set_exception(const ::std::string& value) {
  set_has_exception();
  exception_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJSRaiseException.exception)
}
#if LANG_CXX11
inline void CMsgJSRaiseException::set_exception(::std::string&& value) {
  set_has_exception();
  exception_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgJSRaiseException.exception)
}
#endif
inline void CMsgJSRaiseException::set_exception(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_exception();
  exception_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgJSRaiseException.exception)
}
inline void CMsgJSRaiseException::set_exception(const char* value, size_t size) {
  set_has_exception();
  exception_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgJSRaiseException.exception)
}
inline ::std::string* CMsgJSRaiseException::mutable_exception() {
  set_has_exception();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJSRaiseException.exception)
  return exception_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgJSRaiseException::release_exception() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgJSRaiseException.exception)
  clear_has_exception();
  return exception_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgJSRaiseException::set_allocated_exception(::std::string* exception) {
  if (exception != NULL) {
    set_has_exception();
  } else {
    clear_has_exception();
  }
  exception_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), exception);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgJSRaiseException.exception)
}

// -------------------------------------------------------------------

// CMsgLoadLocalization

// optional uint32 browser_handle = 1;
inline bool CMsgLoadLocalization::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgLoadLocalization::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgLoadLocalization::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgLoadLocalization::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgLoadLocalization::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLoadLocalization.browser_handle)
  return browser_handle_;
}
inline void CMsgLoadLocalization::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLoadLocalization.browser_handle)
}

// optional string localization_path = 2;
inline bool CMsgLoadLocalization::has_localization_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgLoadLocalization::set_has_localization_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgLoadLocalization::clear_has_localization_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgLoadLocalization::clear_localization_path() {
  localization_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_localization_path();
}
inline const ::std::string& CMsgLoadLocalization::localization_path() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLoadLocalization.localization_path)
  return localization_path_.GetNoArena();
}
inline void CMsgLoadLocalization::set_localization_path(const ::std::string& value) {
  set_has_localization_path();
  localization_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLoadLocalization.localization_path)
}
#if LANG_CXX11
inline void CMsgLoadLocalization::set_localization_path(::std::string&& value) {
  set_has_localization_path();
  localization_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgLoadLocalization.localization_path)
}
#endif
inline void CMsgLoadLocalization::set_localization_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_localization_path();
  localization_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgLoadLocalization.localization_path)
}
inline void CMsgLoadLocalization::set_localization_path(const char* value, size_t size) {
  set_has_localization_path();
  localization_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgLoadLocalization.localization_path)
}
inline ::std::string* CMsgLoadLocalization::mutable_localization_path() {
  set_has_localization_path();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgLoadLocalization.localization_path)
  return localization_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgLoadLocalization::release_localization_path() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgLoadLocalization.localization_path)
  clear_has_localization_path();
  return localization_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgLoadLocalization::set_allocated_localization_path(::std::string* localization_path) {
  if (localization_path != NULL) {
    set_has_localization_path();
  } else {
    clear_has_localization_path();
  }
  localization_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), localization_path);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgLoadLocalization.localization_path)
}

// optional string language = 3;
inline bool CMsgLoadLocalization::has_language() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgLoadLocalization::set_has_language() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgLoadLocalization::clear_has_language() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgLoadLocalization::clear_language() {
  language_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_language();
}
inline const ::std::string& CMsgLoadLocalization::language() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgLoadLocalization.language)
  return language_.GetNoArena();
}
inline void CMsgLoadLocalization::set_language(const ::std::string& value) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgLoadLocalization.language)
}
#if LANG_CXX11
inline void CMsgLoadLocalization::set_language(::std::string&& value) {
  set_has_language();
  language_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgLoadLocalization.language)
}
#endif
inline void CMsgLoadLocalization::set_language(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgLoadLocalization.language)
}
inline void CMsgLoadLocalization::set_language(const char* value, size_t size) {
  set_has_language();
  language_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgLoadLocalization.language)
}
inline ::std::string* CMsgLoadLocalization::mutable_language() {
  set_has_language();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgLoadLocalization.language)
  return language_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgLoadLocalization::release_language() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgLoadLocalization.language)
  clear_has_language();
  return language_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgLoadLocalization::set_allocated_language(::std::string* language) {
  if (language != NULL) {
    set_has_language();
  } else {
    clear_has_language();
  }
  language_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), language);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgLoadLocalization.language)
}

// -------------------------------------------------------------------

// CMsgEnableSteamClientAPI

// optional uint32 browser_handle = 1;
inline bool CMsgEnableSteamClientAPI::has_browser_handle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgEnableSteamClientAPI::set_has_browser_handle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgEnableSteamClientAPI::clear_has_browser_handle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgEnableSteamClientAPI::clear_browser_handle() {
  browser_handle_ = 0u;
  clear_has_browser_handle();
}
inline ::google::protobuf::uint32 CMsgEnableSteamClientAPI::browser_handle() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgEnableSteamClientAPI.browser_handle)
  return browser_handle_;
}
inline void CMsgEnableSteamClientAPI::set_browser_handle(::google::protobuf::uint32 value) {
  set_has_browser_handle();
  browser_handle_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgEnableSteamClientAPI.browser_handle)
}

// -------------------------------------------------------------------

// CMsgJumpListLink

// optional string display_name = 1;
inline bool CMsgJumpListLink::has_display_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgJumpListLink::set_has_display_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgJumpListLink::clear_has_display_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgJumpListLink::clear_display_name() {
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_display_name();
}
inline const ::std::string& CMsgJumpListLink::display_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJumpListLink.display_name)
  return display_name_.GetNoArena();
}
inline void CMsgJumpListLink::set_display_name(const ::std::string& value) {
  set_has_display_name();
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJumpListLink.display_name)
}
#if LANG_CXX11
inline void CMsgJumpListLink::set_display_name(::std::string&& value) {
  set_has_display_name();
  display_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgJumpListLink.display_name)
}
#endif
inline void CMsgJumpListLink::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_display_name();
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgJumpListLink.display_name)
}
inline void CMsgJumpListLink::set_display_name(const char* value, size_t size) {
  set_has_display_name();
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgJumpListLink.display_name)
}
inline ::std::string* CMsgJumpListLink::mutable_display_name() {
  set_has_display_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJumpListLink.display_name)
  return display_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgJumpListLink::release_display_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgJumpListLink.display_name)
  clear_has_display_name();
  return display_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgJumpListLink::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    set_has_display_name();
  } else {
    clear_has_display_name();
  }
  display_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgJumpListLink.display_name)
}

// optional string url_link = 2;
inline bool CMsgJumpListLink::has_url_link() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgJumpListLink::set_has_url_link() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgJumpListLink::clear_has_url_link() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgJumpListLink::clear_url_link() {
  url_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url_link();
}
inline const ::std::string& CMsgJumpListLink::url_link() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJumpListLink.url_link)
  return url_link_.GetNoArena();
}
inline void CMsgJumpListLink::set_url_link(const ::std::string& value) {
  set_has_url_link();
  url_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJumpListLink.url_link)
}
#if LANG_CXX11
inline void CMsgJumpListLink::set_url_link(::std::string&& value) {
  set_has_url_link();
  url_link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgJumpListLink.url_link)
}
#endif
inline void CMsgJumpListLink::set_url_link(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url_link();
  url_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgJumpListLink.url_link)
}
inline void CMsgJumpListLink::set_url_link(const char* value, size_t size) {
  set_has_url_link();
  url_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgJumpListLink.url_link)
}
inline ::std::string* CMsgJumpListLink::mutable_url_link() {
  set_has_url_link();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJumpListLink.url_link)
  return url_link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgJumpListLink::release_url_link() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgJumpListLink.url_link)
  clear_has_url_link();
  return url_link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgJumpListLink::set_allocated_url_link(::std::string* url_link) {
  if (url_link != NULL) {
    set_has_url_link();
  } else {
    clear_has_url_link();
  }
  url_link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url_link);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgJumpListLink.url_link)
}

// optional string icon_path = 3;
inline bool CMsgJumpListLink::has_icon_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgJumpListLink::set_has_icon_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgJumpListLink::clear_has_icon_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgJumpListLink::clear_icon_path() {
  icon_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon_path();
}
inline const ::std::string& CMsgJumpListLink::icon_path() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgJumpListLink.icon_path)
  return icon_path_.GetNoArena();
}
inline void CMsgJumpListLink::set_icon_path(const ::std::string& value) {
  set_has_icon_path();
  icon_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgJumpListLink.icon_path)
}
#if LANG_CXX11
inline void CMsgJumpListLink::set_icon_path(::std::string&& value) {
  set_has_icon_path();
  icon_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgJumpListLink.icon_path)
}
#endif
inline void CMsgJumpListLink::set_icon_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_icon_path();
  icon_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgJumpListLink.icon_path)
}
inline void CMsgJumpListLink::set_icon_path(const char* value, size_t size) {
  set_has_icon_path();
  icon_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgJumpListLink.icon_path)
}
inline ::std::string* CMsgJumpListLink::mutable_icon_path() {
  set_has_icon_path();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgJumpListLink.icon_path)
  return icon_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgJumpListLink::release_icon_path() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgJumpListLink.icon_path)
  clear_has_icon_path();
  return icon_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgJumpListLink::set_allocated_icon_path(::std::string* icon_path) {
  if (icon_path != NULL) {
    set_has_icon_path();
  } else {
    clear_has_icon_path();
  }
  icon_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_path);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgJumpListLink.icon_path)
}

// -------------------------------------------------------------------

// CMSgJumpListMRUApp

// optional uint32 appid = 1;
inline bool CMSgJumpListMRUApp::has_appid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMSgJumpListMRUApp::set_has_appid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMSgJumpListMRUApp::clear_has_appid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMSgJumpListMRUApp::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CMSgJumpListMRUApp::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMSgJumpListMRUApp.appid)
  return appid_;
}
inline void CMSgJumpListMRUApp::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMSgJumpListMRUApp.appid)
}

// optional string display_name = 2;
inline bool CMSgJumpListMRUApp::has_display_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMSgJumpListMRUApp::set_has_display_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMSgJumpListMRUApp::clear_has_display_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMSgJumpListMRUApp::clear_display_name() {
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_display_name();
}
inline const ::std::string& CMSgJumpListMRUApp::display_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMSgJumpListMRUApp.display_name)
  return display_name_.GetNoArena();
}
inline void CMSgJumpListMRUApp::set_display_name(const ::std::string& value) {
  set_has_display_name();
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMSgJumpListMRUApp.display_name)
}
#if LANG_CXX11
inline void CMSgJumpListMRUApp::set_display_name(::std::string&& value) {
  set_has_display_name();
  display_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMSgJumpListMRUApp.display_name)
}
#endif
inline void CMSgJumpListMRUApp::set_display_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_display_name();
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMSgJumpListMRUApp.display_name)
}
inline void CMSgJumpListMRUApp::set_display_name(const char* value, size_t size) {
  set_has_display_name();
  display_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMSgJumpListMRUApp.display_name)
}
inline ::std::string* CMSgJumpListMRUApp::mutable_display_name() {
  set_has_display_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMSgJumpListMRUApp.display_name)
  return display_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMSgJumpListMRUApp::release_display_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMSgJumpListMRUApp.display_name)
  clear_has_display_name();
  return display_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMSgJumpListMRUApp::set_allocated_display_name(::std::string* display_name) {
  if (display_name != NULL) {
    set_has_display_name();
  } else {
    clear_has_display_name();
  }
  display_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), display_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMSgJumpListMRUApp.display_name)
}

// optional string url_link = 3;
inline bool CMSgJumpListMRUApp::has_url_link() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMSgJumpListMRUApp::set_has_url_link() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMSgJumpListMRUApp::clear_has_url_link() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMSgJumpListMRUApp::clear_url_link() {
  url_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_url_link();
}
inline const ::std::string& CMSgJumpListMRUApp::url_link() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMSgJumpListMRUApp.url_link)
  return url_link_.GetNoArena();
}
inline void CMSgJumpListMRUApp::set_url_link(const ::std::string& value) {
  set_has_url_link();
  url_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMSgJumpListMRUApp.url_link)
}
#if LANG_CXX11
inline void CMSgJumpListMRUApp::set_url_link(::std::string&& value) {
  set_has_url_link();
  url_link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMSgJumpListMRUApp.url_link)
}
#endif
inline void CMSgJumpListMRUApp::set_url_link(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_url_link();
  url_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMSgJumpListMRUApp.url_link)
}
inline void CMSgJumpListMRUApp::set_url_link(const char* value, size_t size) {
  set_has_url_link();
  url_link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMSgJumpListMRUApp.url_link)
}
inline ::std::string* CMSgJumpListMRUApp::mutable_url_link() {
  set_has_url_link();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMSgJumpListMRUApp.url_link)
  return url_link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMSgJumpListMRUApp::release_url_link() {
  // @@protoc_insertion_point(field_release:proto.steam.CMSgJumpListMRUApp.url_link)
  clear_has_url_link();
  return url_link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMSgJumpListMRUApp::set_allocated_url_link(::std::string* url_link) {
  if (url_link != NULL) {
    set_has_url_link();
  } else {
    clear_has_url_link();
  }
  url_link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url_link);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMSgJumpListMRUApp.url_link)
}

// optional string icon_path = 4;
inline bool CMSgJumpListMRUApp::has_icon_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMSgJumpListMRUApp::set_has_icon_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMSgJumpListMRUApp::clear_has_icon_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMSgJumpListMRUApp::clear_icon_path() {
  icon_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_icon_path();
}
inline const ::std::string& CMSgJumpListMRUApp::icon_path() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMSgJumpListMRUApp.icon_path)
  return icon_path_.GetNoArena();
}
inline void CMSgJumpListMRUApp::set_icon_path(const ::std::string& value) {
  set_has_icon_path();
  icon_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMSgJumpListMRUApp.icon_path)
}
#if LANG_CXX11
inline void CMSgJumpListMRUApp::set_icon_path(::std::string&& value) {
  set_has_icon_path();
  icon_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMSgJumpListMRUApp.icon_path)
}
#endif
inline void CMSgJumpListMRUApp::set_icon_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_icon_path();
  icon_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMSgJumpListMRUApp.icon_path)
}
inline void CMSgJumpListMRUApp::set_icon_path(const char* value, size_t size) {
  set_has_icon_path();
  icon_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMSgJumpListMRUApp.icon_path)
}
inline ::std::string* CMSgJumpListMRUApp::mutable_icon_path() {
  set_has_icon_path();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMSgJumpListMRUApp.icon_path)
  return icon_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMSgJumpListMRUApp::release_icon_path() {
  // @@protoc_insertion_point(field_release:proto.steam.CMSgJumpListMRUApp.icon_path)
  clear_has_icon_path();
  return icon_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMSgJumpListMRUApp::set_allocated_icon_path(::std::string* icon_path) {
  if (icon_path != NULL) {
    set_has_icon_path();
  } else {
    clear_has_icon_path();
  }
  icon_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), icon_path);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMSgJumpListMRUApp.icon_path)
}

// -------------------------------------------------------------------

// CMsgSetJumpList

// optional string steam_path = 1;
inline bool CMsgSetJumpList::has_steam_path() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgSetJumpList::set_has_steam_path() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgSetJumpList::clear_has_steam_path() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgSetJumpList::clear_steam_path() {
  steam_path_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_steam_path();
}
inline const ::std::string& CMsgSetJumpList::steam_path() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetJumpList.steam_path)
  return steam_path_.GetNoArena();
}
inline void CMsgSetJumpList::set_steam_path(const ::std::string& value) {
  set_has_steam_path();
  steam_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetJumpList.steam_path)
}
#if LANG_CXX11
inline void CMsgSetJumpList::set_steam_path(::std::string&& value) {
  set_has_steam_path();
  steam_path_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSetJumpList.steam_path)
}
#endif
inline void CMsgSetJumpList::set_steam_path(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_steam_path();
  steam_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSetJumpList.steam_path)
}
inline void CMsgSetJumpList::set_steam_path(const char* value, size_t size) {
  set_has_steam_path();
  steam_path_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSetJumpList.steam_path)
}
inline ::std::string* CMsgSetJumpList::mutable_steam_path() {
  set_has_steam_path();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetJumpList.steam_path)
  return steam_path_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSetJumpList::release_steam_path() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSetJumpList.steam_path)
  clear_has_steam_path();
  return steam_path_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSetJumpList::set_allocated_steam_path(::std::string* steam_path) {
  if (steam_path != NULL) {
    set_has_steam_path();
  } else {
    clear_has_steam_path();
  }
  steam_path_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), steam_path);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSetJumpList.steam_path)
}

// optional string mru_title = 2;
inline bool CMsgSetJumpList::has_mru_title() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgSetJumpList::set_has_mru_title() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgSetJumpList::clear_has_mru_title() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgSetJumpList::clear_mru_title() {
  mru_title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_mru_title();
}
inline const ::std::string& CMsgSetJumpList::mru_title() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetJumpList.mru_title)
  return mru_title_.GetNoArena();
}
inline void CMsgSetJumpList::set_mru_title(const ::std::string& value) {
  set_has_mru_title();
  mru_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgSetJumpList.mru_title)
}
#if LANG_CXX11
inline void CMsgSetJumpList::set_mru_title(::std::string&& value) {
  set_has_mru_title();
  mru_title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgSetJumpList.mru_title)
}
#endif
inline void CMsgSetJumpList::set_mru_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_mru_title();
  mru_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgSetJumpList.mru_title)
}
inline void CMsgSetJumpList::set_mru_title(const char* value, size_t size) {
  set_has_mru_title();
  mru_title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgSetJumpList.mru_title)
}
inline ::std::string* CMsgSetJumpList::mutable_mru_title() {
  set_has_mru_title();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetJumpList.mru_title)
  return mru_title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgSetJumpList::release_mru_title() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgSetJumpList.mru_title)
  clear_has_mru_title();
  return mru_title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgSetJumpList::set_allocated_mru_title(::std::string* mru_title) {
  if (mru_title != NULL) {
    set_has_mru_title();
  } else {
    clear_has_mru_title();
  }
  mru_title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mru_title);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgSetJumpList.mru_title)
}

// repeated .proto.steam.CMSgJumpListMRUApp apps = 3;
inline int CMsgSetJumpList::apps_size() const {
  return apps_.size();
}
inline void CMsgSetJumpList::clear_apps() {
  apps_.Clear();
}
inline const ::proto::steam::CMSgJumpListMRUApp& CMsgSetJumpList::apps(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetJumpList.apps)
  return apps_.Get(index);
}
inline ::proto::steam::CMSgJumpListMRUApp* CMsgSetJumpList::mutable_apps(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetJumpList.apps)
  return apps_.Mutable(index);
}
inline ::proto::steam::CMSgJumpListMRUApp* CMsgSetJumpList::add_apps() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgSetJumpList.apps)
  return apps_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CMSgJumpListMRUApp >*
CMsgSetJumpList::mutable_apps() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgSetJumpList.apps)
  return &apps_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMSgJumpListMRUApp >&
CMsgSetJumpList::apps() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgSetJumpList.apps)
  return apps_;
}

// repeated .proto.steam.CMsgJumpListLink links = 4;
inline int CMsgSetJumpList::links_size() const {
  return links_.size();
}
inline void CMsgSetJumpList::clear_links() {
  links_.Clear();
}
inline const ::proto::steam::CMsgJumpListLink& CMsgSetJumpList::links(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgSetJumpList.links)
  return links_.Get(index);
}
inline ::proto::steam::CMsgJumpListLink* CMsgSetJumpList::mutable_links(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgSetJumpList.links)
  return links_.Mutable(index);
}
inline ::proto::steam::CMsgJumpListLink* CMsgSetJumpList::add_links() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgSetJumpList.links)
  return links_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJumpListLink >*
CMsgSetJumpList::mutable_links() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgSetJumpList.links)
  return &links_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgJumpListLink >&
CMsgSetJumpList::links() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgSetJumpList.links)
  return links_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace steam
}  // namespace proto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::proto::steam::EJSRegisterMethodType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::proto::steam::EJSRegisterMethodType>() {
  return ::proto::steam::EJSRegisterMethodType_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_htmlmessages_2eproto__INCLUDED
