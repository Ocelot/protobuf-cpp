// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_inventory.steamclient.proto

#ifndef PROTOBUF_steammessages_5finventory_2esteamclient_2eproto__INCLUDED
#define PROTOBUF_steammessages_5finventory_2esteamclient_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/service.h>
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_unified_base.steamclient.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
namespace steam {
class CInventory_AddItem_Request;
class CInventory_AddItem_RequestDefaultTypeInternal;
extern CInventory_AddItem_RequestDefaultTypeInternal _CInventory_AddItem_Request_default_instance_;
class CInventory_CombineItemStacks_Request;
class CInventory_CombineItemStacks_RequestDefaultTypeInternal;
extern CInventory_CombineItemStacks_RequestDefaultTypeInternal _CInventory_CombineItemStacks_Request_default_instance_;
class CInventory_ConsumeItem_Request;
class CInventory_ConsumeItem_RequestDefaultTypeInternal;
extern CInventory_ConsumeItem_RequestDefaultTypeInternal _CInventory_ConsumeItem_Request_default_instance_;
class CInventory_ConsumePlaytime_Request;
class CInventory_ConsumePlaytime_RequestDefaultTypeInternal;
extern CInventory_ConsumePlaytime_RequestDefaultTypeInternal _CInventory_ConsumePlaytime_Request_default_instance_;
class CInventory_DevSetNextDrop_Request;
class CInventory_DevSetNextDrop_RequestDefaultTypeInternal;
extern CInventory_DevSetNextDrop_RequestDefaultTypeInternal _CInventory_DevSetNextDrop_Request_default_instance_;
class CInventory_ExchangeItem_Request;
class CInventory_ExchangeItem_RequestDefaultTypeInternal;
extern CInventory_ExchangeItem_RequestDefaultTypeInternal _CInventory_ExchangeItem_Request_default_instance_;
class CInventory_GetEligiblePromoItemDefIDs_Request;
class CInventory_GetEligiblePromoItemDefIDs_RequestDefaultTypeInternal;
extern CInventory_GetEligiblePromoItemDefIDs_RequestDefaultTypeInternal _CInventory_GetEligiblePromoItemDefIDs_Request_default_instance_;
class CInventory_GetEligiblePromoItemDefIDs_Response;
class CInventory_GetEligiblePromoItemDefIDs_ResponseDefaultTypeInternal;
extern CInventory_GetEligiblePromoItemDefIDs_ResponseDefaultTypeInternal _CInventory_GetEligiblePromoItemDefIDs_Response_default_instance_;
class CInventory_GetInventory_Request;
class CInventory_GetInventory_RequestDefaultTypeInternal;
extern CInventory_GetInventory_RequestDefaultTypeInternal _CInventory_GetInventory_Request_default_instance_;
class CInventory_GetItemDefMeta_Request;
class CInventory_GetItemDefMeta_RequestDefaultTypeInternal;
extern CInventory_GetItemDefMeta_RequestDefaultTypeInternal _CInventory_GetItemDefMeta_Request_default_instance_;
class CInventory_GetItemDefMeta_Response;
class CInventory_GetItemDefMeta_ResponseDefaultTypeInternal;
extern CInventory_GetItemDefMeta_ResponseDefaultTypeInternal _CInventory_GetItemDefMeta_Response_default_instance_;
class CInventory_Response;
class CInventory_ResponseDefaultTypeInternal;
extern CInventory_ResponseDefaultTypeInternal _CInventory_Response_default_instance_;
class CInventory_SafeModifyItem_Request;
class CInventory_SafeModifyItem_RequestDefaultTypeInternal;
extern CInventory_SafeModifyItem_RequestDefaultTypeInternal _CInventory_SafeModifyItem_Request_default_instance_;
class CInventory_SplitItemStack_Request;
class CInventory_SplitItemStack_RequestDefaultTypeInternal;
extern CInventory_SplitItemStack_RequestDefaultTypeInternal _CInventory_SplitItemStack_Request_default_instance_;
class NoResponse;
class NoResponseDefaultTypeInternal;
extern NoResponseDefaultTypeInternal _NoResponse_default_instance_;
}  // namespace steam
}  // namespace proto

namespace proto {
namespace steam {

namespace protobuf_steammessages_5finventory_2esteamclient_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_steammessages_5finventory_2esteamclient_2eproto

// ===================================================================

class CInventory_GetInventory_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_GetInventory_Request) */ {
 public:
  CInventory_GetInventory_Request();
  virtual ~CInventory_GetInventory_Request();

  CInventory_GetInventory_Request(const CInventory_GetInventory_Request& from);

  inline CInventory_GetInventory_Request& operator=(const CInventory_GetInventory_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CInventory_GetInventory_Request& default_instance();

  static inline const CInventory_GetInventory_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_GetInventory_Request*>(
               &_CInventory_GetInventory_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CInventory_GetInventory_Request* other);

  // implements Message ----------------------------------------------

  inline CInventory_GetInventory_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CInventory_GetInventory_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CInventory_GetInventory_Request& from);
  void MergeFrom(const CInventory_GetInventory_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CInventory_GetInventory_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_GetInventory_Request)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_steamid();
  void clear_has_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;
  friend struct protobuf_steammessages_5finventory_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CInventory_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_Response) */ {
 public:
  CInventory_Response();
  virtual ~CInventory_Response();

  CInventory_Response(const CInventory_Response& from);

  inline CInventory_Response& operator=(const CInventory_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CInventory_Response& default_instance();

  static inline const CInventory_Response* internal_default_instance() {
    return reinterpret_cast<const CInventory_Response*>(
               &_CInventory_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CInventory_Response* other);

  // implements Message ----------------------------------------------

  inline CInventory_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CInventory_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CInventory_Response& from);
  void MergeFrom(const CInventory_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CInventory_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 removeditemids = 2;
  int removeditemids_size() const;
  void clear_removeditemids();
  static const int kRemoveditemidsFieldNumber = 2;
  ::google::protobuf::uint64 removeditemids(int index) const;
  void set_removeditemids(int index, ::google::protobuf::uint64 value);
  void add_removeditemids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      removeditemids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_removeditemids();

  // optional string etag = 1;
  bool has_etag() const;
  void clear_etag();
  static const int kEtagFieldNumber = 1;
  const ::std::string& etag() const;
  void set_etag(const ::std::string& value);
  #if LANG_CXX11
  void set_etag(::std::string&& value);
  #endif
  void set_etag(const char* value);
  void set_etag(const char* value, size_t size);
  ::std::string* mutable_etag();
  ::std::string* release_etag();
  void set_allocated_etag(::std::string* etag);

  // optional string item_json = 3;
  bool has_item_json() const;
  void clear_item_json();
  static const int kItemJsonFieldNumber = 3;
  const ::std::string& item_json() const;
  void set_item_json(const ::std::string& value);
  #if LANG_CXX11
  void set_item_json(::std::string&& value);
  #endif
  void set_item_json(const char* value);
  void set_item_json(const char* value, size_t size);
  ::std::string* mutable_item_json();
  ::std::string* release_item_json();
  void set_allocated_item_json(::std::string* item_json);

  // optional string itemdef_json = 4;
  bool has_itemdef_json() const;
  void clear_itemdef_json();
  static const int kItemdefJsonFieldNumber = 4;
  const ::std::string& itemdef_json() const;
  void set_itemdef_json(const ::std::string& value);
  #if LANG_CXX11
  void set_itemdef_json(::std::string&& value);
  #endif
  void set_itemdef_json(const char* value);
  void set_itemdef_json(const char* value, size_t size);
  ::std::string* mutable_itemdef_json();
  ::std::string* release_itemdef_json();
  void set_allocated_itemdef_json(::std::string* itemdef_json);

  // optional bytes ticket = 5;
  bool has_ticket() const;
  void clear_ticket();
  static const int kTicketFieldNumber = 5;
  const ::std::string& ticket() const;
  void set_ticket(const ::std::string& value);
  #if LANG_CXX11
  void set_ticket(::std::string&& value);
  #endif
  void set_ticket(const char* value);
  void set_ticket(const void* value, size_t size);
  ::std::string* mutable_ticket();
  ::std::string* release_ticket();
  void set_allocated_ticket(::std::string* ticket);

  // optional bool replayed = 6 [(.proto.steam.description) = "If true, the requestid given was processed earlier."];
  bool has_replayed() const;
  void clear_replayed();
  static const int kReplayedFieldNumber = 6;
  bool replayed() const;
  void set_replayed(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_Response)
 private:
  void set_has_etag();
  void clear_has_etag();
  void set_has_item_json();
  void clear_has_item_json();
  void set_has_itemdef_json();
  void clear_has_itemdef_json();
  void set_has_ticket();
  void clear_has_ticket();
  void set_has_replayed();
  void clear_has_replayed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > removeditemids_;
  ::google::protobuf::internal::ArenaStringPtr etag_;
  ::google::protobuf::internal::ArenaStringPtr item_json_;
  ::google::protobuf::internal::ArenaStringPtr itemdef_json_;
  ::google::protobuf::internal::ArenaStringPtr ticket_;
  bool replayed_;
  friend struct protobuf_steammessages_5finventory_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CInventory_ExchangeItem_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_ExchangeItem_Request) */ {
 public:
  CInventory_ExchangeItem_Request();
  virtual ~CInventory_ExchangeItem_Request();

  CInventory_ExchangeItem_Request(const CInventory_ExchangeItem_Request& from);

  inline CInventory_ExchangeItem_Request& operator=(const CInventory_ExchangeItem_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CInventory_ExchangeItem_Request& default_instance();

  static inline const CInventory_ExchangeItem_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_ExchangeItem_Request*>(
               &_CInventory_ExchangeItem_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CInventory_ExchangeItem_Request* other);

  // implements Message ----------------------------------------------

  inline CInventory_ExchangeItem_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CInventory_ExchangeItem_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CInventory_ExchangeItem_Request& from);
  void MergeFrom(const CInventory_ExchangeItem_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CInventory_ExchangeItem_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 materialsitemid = 3;
  int materialsitemid_size() const;
  void clear_materialsitemid();
  static const int kMaterialsitemidFieldNumber = 3;
  ::google::protobuf::uint64 materialsitemid(int index) const;
  void set_materialsitemid(int index, ::google::protobuf::uint64 value);
  void add_materialsitemid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      materialsitemid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_materialsitemid();

  // repeated uint32 materialsquantity = 4;
  int materialsquantity_size() const;
  void clear_materialsquantity();
  static const int kMaterialsquantityFieldNumber = 4;
  ::google::protobuf::uint32 materialsquantity(int index) const;
  void set_materialsquantity(int index, ::google::protobuf::uint32 value);
  void add_materialsquantity(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      materialsquantity() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_materialsquantity();

  // optional uint64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint64 outputitemdefid = 5;
  bool has_outputitemdefid() const;
  void clear_outputitemdefid();
  static const int kOutputitemdefidFieldNumber = 5;
  ::google::protobuf::uint64 outputitemdefid() const;
  void set_outputitemdefid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_ExchangeItem_Request)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_outputitemdefid();
  void clear_has_outputitemdefid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > materialsitemid_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > materialsquantity_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 outputitemdefid_;
  ::google::protobuf::uint32 appid_;
  friend struct protobuf_steammessages_5finventory_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CInventory_GetEligiblePromoItemDefIDs_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Request) */ {
 public:
  CInventory_GetEligiblePromoItemDefIDs_Request();
  virtual ~CInventory_GetEligiblePromoItemDefIDs_Request();

  CInventory_GetEligiblePromoItemDefIDs_Request(const CInventory_GetEligiblePromoItemDefIDs_Request& from);

  inline CInventory_GetEligiblePromoItemDefIDs_Request& operator=(const CInventory_GetEligiblePromoItemDefIDs_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CInventory_GetEligiblePromoItemDefIDs_Request& default_instance();

  static inline const CInventory_GetEligiblePromoItemDefIDs_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_GetEligiblePromoItemDefIDs_Request*>(
               &_CInventory_GetEligiblePromoItemDefIDs_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CInventory_GetEligiblePromoItemDefIDs_Request* other);

  // implements Message ----------------------------------------------

  inline CInventory_GetEligiblePromoItemDefIDs_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CInventory_GetEligiblePromoItemDefIDs_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CInventory_GetEligiblePromoItemDefIDs_Request& from);
  void MergeFrom(const CInventory_GetEligiblePromoItemDefIDs_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CInventory_GetEligiblePromoItemDefIDs_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 steamid = 2;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 2;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Request)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_steamid();
  void clear_has_steamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint32 appid_;
  friend struct protobuf_steammessages_5finventory_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CInventory_GetEligiblePromoItemDefIDs_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Response) */ {
 public:
  CInventory_GetEligiblePromoItemDefIDs_Response();
  virtual ~CInventory_GetEligiblePromoItemDefIDs_Response();

  CInventory_GetEligiblePromoItemDefIDs_Response(const CInventory_GetEligiblePromoItemDefIDs_Response& from);

  inline CInventory_GetEligiblePromoItemDefIDs_Response& operator=(const CInventory_GetEligiblePromoItemDefIDs_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CInventory_GetEligiblePromoItemDefIDs_Response& default_instance();

  static inline const CInventory_GetEligiblePromoItemDefIDs_Response* internal_default_instance() {
    return reinterpret_cast<const CInventory_GetEligiblePromoItemDefIDs_Response*>(
               &_CInventory_GetEligiblePromoItemDefIDs_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CInventory_GetEligiblePromoItemDefIDs_Response* other);

  // implements Message ----------------------------------------------

  inline CInventory_GetEligiblePromoItemDefIDs_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CInventory_GetEligiblePromoItemDefIDs_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CInventory_GetEligiblePromoItemDefIDs_Response& from);
  void MergeFrom(const CInventory_GetEligiblePromoItemDefIDs_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CInventory_GetEligiblePromoItemDefIDs_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 itemdefids = 1;
  int itemdefids_size() const;
  void clear_itemdefids();
  static const int kItemdefidsFieldNumber = 1;
  ::google::protobuf::uint64 itemdefids(int index) const;
  void set_itemdefids(int index, ::google::protobuf::uint64 value);
  void add_itemdefids(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      itemdefids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_itemdefids();

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > itemdefids_;
  friend struct protobuf_steammessages_5finventory_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CInventory_AddItem_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_AddItem_Request) */ {
 public:
  CInventory_AddItem_Request();
  virtual ~CInventory_AddItem_Request();

  CInventory_AddItem_Request(const CInventory_AddItem_Request& from);

  inline CInventory_AddItem_Request& operator=(const CInventory_AddItem_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CInventory_AddItem_Request& default_instance();

  static inline const CInventory_AddItem_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_AddItem_Request*>(
               &_CInventory_AddItem_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CInventory_AddItem_Request* other);

  // implements Message ----------------------------------------------

  inline CInventory_AddItem_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CInventory_AddItem_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CInventory_AddItem_Request& from);
  void MergeFrom(const CInventory_AddItem_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CInventory_AddItem_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 itemdefid = 2;
  int itemdefid_size() const;
  void clear_itemdefid();
  static const int kItemdefidFieldNumber = 2;
  ::google::protobuf::uint64 itemdefid(int index) const;
  void set_itemdefid(int index, ::google::protobuf::uint64 value);
  void add_itemdefid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      itemdefid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_itemdefid();

  // repeated string itempropsjson = 3;
  int itempropsjson_size() const;
  void clear_itempropsjson();
  static const int kItempropsjsonFieldNumber = 3;
  const ::std::string& itempropsjson(int index) const;
  ::std::string* mutable_itempropsjson(int index);
  void set_itempropsjson(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_itempropsjson(int index, ::std::string&& value);
  #endif
  void set_itempropsjson(int index, const char* value);
  void set_itempropsjson(int index, const char* value, size_t size);
  ::std::string* add_itempropsjson();
  void add_itempropsjson(const ::std::string& value);
  #if LANG_CXX11
  void add_itempropsjson(::std::string&& value);
  #endif
  void add_itempropsjson(const char* value);
  void add_itempropsjson(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& itempropsjson() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_itempropsjson();

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional bool notify = 5 [(.proto.steam.description) = "Should notify the user that the item was added to their Steam Inventory."];
  bool has_notify() const;
  void clear_notify();
  static const int kNotifyFieldNumber = 5;
  bool notify() const;
  void set_notify(bool value);

  // optional uint64 steamid = 4;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 4;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint64 requestid = 6;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestidFieldNumber = 6;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_AddItem_Request)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_notify();
  void clear_has_notify();
  void set_has_requestid();
  void clear_has_requestid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > itemdefid_;
  ::google::protobuf::RepeatedPtrField< ::std::string> itempropsjson_;
  ::google::protobuf::uint32 appid_;
  bool notify_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 requestid_;
  friend struct protobuf_steammessages_5finventory_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CInventory_SafeModifyItem_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_SafeModifyItem_Request) */ {
 public:
  CInventory_SafeModifyItem_Request();
  virtual ~CInventory_SafeModifyItem_Request();

  CInventory_SafeModifyItem_Request(const CInventory_SafeModifyItem_Request& from);

  inline CInventory_SafeModifyItem_Request& operator=(const CInventory_SafeModifyItem_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CInventory_SafeModifyItem_Request& default_instance();

  static inline const CInventory_SafeModifyItem_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_SafeModifyItem_Request*>(
               &_CInventory_SafeModifyItem_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CInventory_SafeModifyItem_Request* other);

  // implements Message ----------------------------------------------

  inline CInventory_SafeModifyItem_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CInventory_SafeModifyItem_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CInventory_SafeModifyItem_Request& from);
  void MergeFrom(const CInventory_SafeModifyItem_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CInventory_SafeModifyItem_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string itempropsjson = 4;
  bool has_itempropsjson() const;
  void clear_itempropsjson();
  static const int kItempropsjsonFieldNumber = 4;
  const ::std::string& itempropsjson() const;
  void set_itempropsjson(const ::std::string& value);
  #if LANG_CXX11
  void set_itempropsjson(::std::string&& value);
  #endif
  void set_itempropsjson(const char* value);
  void set_itempropsjson(const char* value, size_t size);
  ::std::string* mutable_itempropsjson();
  ::std::string* release_itempropsjson();
  void set_allocated_itempropsjson(::std::string* itempropsjson);

  // optional uint64 acctid = 2;
  bool has_acctid() const;
  void clear_acctid();
  static const int kAcctidFieldNumber = 2;
  ::google::protobuf::uint64 acctid() const;
  void set_acctid(::google::protobuf::uint64 value);

  // optional uint64 itemid = 3;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 3;
  ::google::protobuf::uint64 itemid() const;
  void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_SafeModifyItem_Request)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_acctid();
  void clear_has_acctid();
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_itempropsjson();
  void clear_has_itempropsjson();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr itempropsjson_;
  ::google::protobuf::uint64 acctid_;
  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 appid_;
  friend struct protobuf_steammessages_5finventory_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CInventory_ConsumePlaytime_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_ConsumePlaytime_Request) */ {
 public:
  CInventory_ConsumePlaytime_Request();
  virtual ~CInventory_ConsumePlaytime_Request();

  CInventory_ConsumePlaytime_Request(const CInventory_ConsumePlaytime_Request& from);

  inline CInventory_ConsumePlaytime_Request& operator=(const CInventory_ConsumePlaytime_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CInventory_ConsumePlaytime_Request& default_instance();

  static inline const CInventory_ConsumePlaytime_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_ConsumePlaytime_Request*>(
               &_CInventory_ConsumePlaytime_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CInventory_ConsumePlaytime_Request* other);

  // implements Message ----------------------------------------------

  inline CInventory_ConsumePlaytime_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CInventory_ConsumePlaytime_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CInventory_ConsumePlaytime_Request& from);
  void MergeFrom(const CInventory_ConsumePlaytime_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CInventory_ConsumePlaytime_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 itemdefid = 2;
  bool has_itemdefid() const;
  void clear_itemdefid();
  static const int kItemdefidFieldNumber = 2;
  ::google::protobuf::uint64 itemdefid() const;
  void set_itemdefid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_ConsumePlaytime_Request)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_itemdefid();
  void clear_has_itemdefid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 itemdefid_;
  ::google::protobuf::uint32 appid_;
  friend struct protobuf_steammessages_5finventory_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CInventory_ConsumeItem_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_ConsumeItem_Request) */ {
 public:
  CInventory_ConsumeItem_Request();
  virtual ~CInventory_ConsumeItem_Request();

  CInventory_ConsumeItem_Request(const CInventory_ConsumeItem_Request& from);

  inline CInventory_ConsumeItem_Request& operator=(const CInventory_ConsumeItem_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CInventory_ConsumeItem_Request& default_instance();

  static inline const CInventory_ConsumeItem_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_ConsumeItem_Request*>(
               &_CInventory_ConsumeItem_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CInventory_ConsumeItem_Request* other);

  // implements Message ----------------------------------------------

  inline CInventory_ConsumeItem_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CInventory_ConsumeItem_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CInventory_ConsumeItem_Request& from);
  void MergeFrom(const CInventory_ConsumeItem_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CInventory_ConsumeItem_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  const ::std::string& timestamp() const;
  void set_timestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_timestamp(::std::string&& value);
  #endif
  void set_timestamp(const char* value);
  void set_timestamp(const char* value, size_t size);
  ::std::string* mutable_timestamp();
  ::std::string* release_timestamp();
  void set_allocated_timestamp(::std::string* timestamp);

  // optional uint64 itemid = 2;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 2;
  ::google::protobuf::uint64 itemid() const;
  void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional uint32 quantity = 3;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 3;
  ::google::protobuf::uint32 quantity() const;
  void set_quantity(::google::protobuf::uint32 value);

  // optional uint64 steamid = 5;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 5;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional uint64 requestid = 6;
  bool has_requestid() const;
  void clear_requestid();
  static const int kRequestidFieldNumber = 6;
  ::google::protobuf::uint64 requestid() const;
  void set_requestid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_ConsumeItem_Request)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_quantity();
  void clear_has_quantity();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_requestid();
  void clear_has_requestid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr timestamp_;
  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 quantity_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::uint64 requestid_;
  friend struct protobuf_steammessages_5finventory_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CInventory_DevSetNextDrop_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_DevSetNextDrop_Request) */ {
 public:
  CInventory_DevSetNextDrop_Request();
  virtual ~CInventory_DevSetNextDrop_Request();

  CInventory_DevSetNextDrop_Request(const CInventory_DevSetNextDrop_Request& from);

  inline CInventory_DevSetNextDrop_Request& operator=(const CInventory_DevSetNextDrop_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CInventory_DevSetNextDrop_Request& default_instance();

  static inline const CInventory_DevSetNextDrop_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_DevSetNextDrop_Request*>(
               &_CInventory_DevSetNextDrop_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CInventory_DevSetNextDrop_Request* other);

  // implements Message ----------------------------------------------

  inline CInventory_DevSetNextDrop_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CInventory_DevSetNextDrop_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CInventory_DevSetNextDrop_Request& from);
  void MergeFrom(const CInventory_DevSetNextDrop_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CInventory_DevSetNextDrop_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string droptime = 3;
  bool has_droptime() const;
  void clear_droptime();
  static const int kDroptimeFieldNumber = 3;
  const ::std::string& droptime() const;
  void set_droptime(const ::std::string& value);
  #if LANG_CXX11
  void set_droptime(::std::string&& value);
  #endif
  void set_droptime(const char* value);
  void set_droptime(const char* value, size_t size);
  ::std::string* mutable_droptime();
  ::std::string* release_droptime();
  void set_allocated_droptime(::std::string* droptime);

  // optional uint64 itemdefid = 2;
  bool has_itemdefid() const;
  void clear_itemdefid();
  static const int kItemdefidFieldNumber = 2;
  ::google::protobuf::uint64 itemdefid() const;
  void set_itemdefid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_DevSetNextDrop_Request)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_itemdefid();
  void clear_has_itemdefid();
  void set_has_droptime();
  void clear_has_droptime();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr droptime_;
  ::google::protobuf::uint64 itemdefid_;
  ::google::protobuf::uint32 appid_;
  friend struct protobuf_steammessages_5finventory_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CInventory_SplitItemStack_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_SplitItemStack_Request) */ {
 public:
  CInventory_SplitItemStack_Request();
  virtual ~CInventory_SplitItemStack_Request();

  CInventory_SplitItemStack_Request(const CInventory_SplitItemStack_Request& from);

  inline CInventory_SplitItemStack_Request& operator=(const CInventory_SplitItemStack_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CInventory_SplitItemStack_Request& default_instance();

  static inline const CInventory_SplitItemStack_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_SplitItemStack_Request*>(
               &_CInventory_SplitItemStack_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CInventory_SplitItemStack_Request* other);

  // implements Message ----------------------------------------------

  inline CInventory_SplitItemStack_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CInventory_SplitItemStack_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CInventory_SplitItemStack_Request& from);
  void MergeFrom(const CInventory_SplitItemStack_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CInventory_SplitItemStack_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string timestamp = 4;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 4;
  const ::std::string& timestamp() const;
  void set_timestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_timestamp(::std::string&& value);
  #endif
  void set_timestamp(const char* value);
  void set_timestamp(const char* value, size_t size);
  ::std::string* mutable_timestamp();
  ::std::string* release_timestamp();
  void set_allocated_timestamp(::std::string* timestamp);

  // optional uint64 itemid = 2;
  bool has_itemid() const;
  void clear_itemid();
  static const int kItemidFieldNumber = 2;
  ::google::protobuf::uint64 itemid() const;
  void set_itemid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional uint32 quantity = 3;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 3;
  ::google::protobuf::uint32 quantity() const;
  void set_quantity(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_SplitItemStack_Request)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_itemid();
  void clear_has_itemid();
  void set_has_quantity();
  void clear_has_quantity();
  void set_has_timestamp();
  void clear_has_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr timestamp_;
  ::google::protobuf::uint64 itemid_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 quantity_;
  friend struct protobuf_steammessages_5finventory_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CInventory_CombineItemStacks_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_CombineItemStacks_Request) */ {
 public:
  CInventory_CombineItemStacks_Request();
  virtual ~CInventory_CombineItemStacks_Request();

  CInventory_CombineItemStacks_Request(const CInventory_CombineItemStacks_Request& from);

  inline CInventory_CombineItemStacks_Request& operator=(const CInventory_CombineItemStacks_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CInventory_CombineItemStacks_Request& default_instance();

  static inline const CInventory_CombineItemStacks_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_CombineItemStacks_Request*>(
               &_CInventory_CombineItemStacks_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CInventory_CombineItemStacks_Request* other);

  // implements Message ----------------------------------------------

  inline CInventory_CombineItemStacks_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CInventory_CombineItemStacks_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CInventory_CombineItemStacks_Request& from);
  void MergeFrom(const CInventory_CombineItemStacks_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CInventory_CombineItemStacks_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string fromtimestamp = 5;
  bool has_fromtimestamp() const;
  void clear_fromtimestamp();
  static const int kFromtimestampFieldNumber = 5;
  const ::std::string& fromtimestamp() const;
  void set_fromtimestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_fromtimestamp(::std::string&& value);
  #endif
  void set_fromtimestamp(const char* value);
  void set_fromtimestamp(const char* value, size_t size);
  ::std::string* mutable_fromtimestamp();
  ::std::string* release_fromtimestamp();
  void set_allocated_fromtimestamp(::std::string* fromtimestamp);

  // optional string desttimestamp = 6;
  bool has_desttimestamp() const;
  void clear_desttimestamp();
  static const int kDesttimestampFieldNumber = 6;
  const ::std::string& desttimestamp() const;
  void set_desttimestamp(const ::std::string& value);
  #if LANG_CXX11
  void set_desttimestamp(::std::string&& value);
  #endif
  void set_desttimestamp(const char* value);
  void set_desttimestamp(const char* value, size_t size);
  ::std::string* mutable_desttimestamp();
  ::std::string* release_desttimestamp();
  void set_allocated_desttimestamp(::std::string* desttimestamp);

  // optional uint64 fromitemid = 2;
  bool has_fromitemid() const;
  void clear_fromitemid();
  static const int kFromitemidFieldNumber = 2;
  ::google::protobuf::uint64 fromitemid() const;
  void set_fromitemid(::google::protobuf::uint64 value);

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // optional uint32 quantity = 4;
  bool has_quantity() const;
  void clear_quantity();
  static const int kQuantityFieldNumber = 4;
  ::google::protobuf::uint32 quantity() const;
  void set_quantity(::google::protobuf::uint32 value);

  // optional uint64 destitemid = 3;
  bool has_destitemid() const;
  void clear_destitemid();
  static const int kDestitemidFieldNumber = 3;
  ::google::protobuf::uint64 destitemid() const;
  void set_destitemid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_CombineItemStacks_Request)
 private:
  void set_has_appid();
  void clear_has_appid();
  void set_has_fromitemid();
  void clear_has_fromitemid();
  void set_has_destitemid();
  void clear_has_destitemid();
  void set_has_quantity();
  void clear_has_quantity();
  void set_has_fromtimestamp();
  void clear_has_fromtimestamp();
  void set_has_desttimestamp();
  void clear_has_desttimestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr fromtimestamp_;
  ::google::protobuf::internal::ArenaStringPtr desttimestamp_;
  ::google::protobuf::uint64 fromitemid_;
  ::google::protobuf::uint32 appid_;
  ::google::protobuf::uint32 quantity_;
  ::google::protobuf::uint64 destitemid_;
  friend struct protobuf_steammessages_5finventory_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CInventory_GetItemDefMeta_Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_GetItemDefMeta_Request) */ {
 public:
  CInventory_GetItemDefMeta_Request();
  virtual ~CInventory_GetItemDefMeta_Request();

  CInventory_GetItemDefMeta_Request(const CInventory_GetItemDefMeta_Request& from);

  inline CInventory_GetItemDefMeta_Request& operator=(const CInventory_GetItemDefMeta_Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CInventory_GetItemDefMeta_Request& default_instance();

  static inline const CInventory_GetItemDefMeta_Request* internal_default_instance() {
    return reinterpret_cast<const CInventory_GetItemDefMeta_Request*>(
               &_CInventory_GetItemDefMeta_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CInventory_GetItemDefMeta_Request* other);

  // implements Message ----------------------------------------------

  inline CInventory_GetItemDefMeta_Request* New() const PROTOBUF_FINAL { return New(NULL); }

  CInventory_GetItemDefMeta_Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CInventory_GetItemDefMeta_Request& from);
  void MergeFrom(const CInventory_GetItemDefMeta_Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CInventory_GetItemDefMeta_Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 appid = 1;
  bool has_appid() const;
  void clear_appid();
  static const int kAppidFieldNumber = 1;
  ::google::protobuf::uint32 appid() const;
  void set_appid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_GetItemDefMeta_Request)
 private:
  void set_has_appid();
  void clear_has_appid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 appid_;
  friend struct protobuf_steammessages_5finventory_2esteamclient_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CInventory_GetItemDefMeta_Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CInventory_GetItemDefMeta_Response) */ {
 public:
  CInventory_GetItemDefMeta_Response();
  virtual ~CInventory_GetItemDefMeta_Response();

  CInventory_GetItemDefMeta_Response(const CInventory_GetItemDefMeta_Response& from);

  inline CInventory_GetItemDefMeta_Response& operator=(const CInventory_GetItemDefMeta_Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CInventory_GetItemDefMeta_Response& default_instance();

  static inline const CInventory_GetItemDefMeta_Response* internal_default_instance() {
    return reinterpret_cast<const CInventory_GetItemDefMeta_Response*>(
               &_CInventory_GetItemDefMeta_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CInventory_GetItemDefMeta_Response* other);

  // implements Message ----------------------------------------------

  inline CInventory_GetItemDefMeta_Response* New() const PROTOBUF_FINAL { return New(NULL); }

  CInventory_GetItemDefMeta_Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CInventory_GetItemDefMeta_Response& from);
  void MergeFrom(const CInventory_GetItemDefMeta_Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CInventory_GetItemDefMeta_Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string digest = 2;
  bool has_digest() const;
  void clear_digest();
  static const int kDigestFieldNumber = 2;
  const ::std::string& digest() const;
  void set_digest(const ::std::string& value);
  #if LANG_CXX11
  void set_digest(::std::string&& value);
  #endif
  void set_digest(const char* value);
  void set_digest(const char* value, size_t size);
  ::std::string* mutable_digest();
  ::std::string* release_digest();
  void set_allocated_digest(::std::string* digest);

  // optional uint32 modified = 1;
  bool has_modified() const;
  void clear_modified();
  static const int kModifiedFieldNumber = 1;
  ::google::protobuf::uint32 modified() const;
  void set_modified(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CInventory_GetItemDefMeta_Response)
 private:
  void set_has_modified();
  void clear_has_modified();
  void set_has_digest();
  void clear_has_digest();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr digest_;
  ::google::protobuf::uint32 modified_;
  friend struct protobuf_steammessages_5finventory_2esteamclient_2eproto::TableStruct;
};
// ===================================================================

class Inventory_Stub;

class Inventory : public ::google::protobuf::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline Inventory() {};
 public:
  virtual ~Inventory();

  typedef Inventory_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void GetInventory(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_GetInventory_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ExchangeItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_ExchangeItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetEligiblePromoItemDefIDs(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_GetEligiblePromoItemDefIDs_Request* request,
                       ::proto::steam::CInventory_GetEligiblePromoItemDefIDs_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void AddPromoItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_AddItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SafeModifyItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_SafeModifyItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ConsumePlaytime(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_ConsumePlaytime_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void ConsumeItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_ConsumeItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DevGenerateItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_AddItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void DevSetNextDrop(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_DevSetNextDrop_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void SplitItemStack(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_SplitItemStack_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void CombineItemStacks(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_CombineItemStacks_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  virtual void GetItemDefMeta(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_GetItemDefMeta_Request* request,
                       ::proto::steam::CInventory_GetItemDefMeta_Response* response,
                       ::google::protobuf::Closure* done);

  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  ::google::protobuf::RpcController* controller,
                  const ::google::protobuf::Message* request,
                  ::google::protobuf::Message* response,
                  ::google::protobuf::Closure* done);
  const ::google::protobuf::Message& GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const;

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Inventory);
};

class Inventory_Stub : public Inventory {
 public:
  Inventory_Stub(::google::protobuf::RpcChannel* channel);
  Inventory_Stub(::google::protobuf::RpcChannel* channel,
                   ::google::protobuf::Service::ChannelOwnership ownership);
  ~Inventory_Stub();

  inline ::google::protobuf::RpcChannel* channel() { return channel_; }

  // implements Inventory ------------------------------------------

  void GetInventory(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_GetInventory_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void ExchangeItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_ExchangeItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void GetEligiblePromoItemDefIDs(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_GetEligiblePromoItemDefIDs_Request* request,
                       ::proto::steam::CInventory_GetEligiblePromoItemDefIDs_Response* response,
                       ::google::protobuf::Closure* done);
  void AddPromoItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_AddItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void SafeModifyItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_SafeModifyItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void ConsumePlaytime(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_ConsumePlaytime_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void ConsumeItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_ConsumeItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void DevGenerateItem(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_AddItem_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void DevSetNextDrop(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_DevSetNextDrop_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void SplitItemStack(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_SplitItemStack_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void CombineItemStacks(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_CombineItemStacks_Request* request,
                       ::proto::steam::CInventory_Response* response,
                       ::google::protobuf::Closure* done);
  void GetItemDefMeta(::google::protobuf::RpcController* controller,
                       const ::proto::steam::CInventory_GetItemDefMeta_Request* request,
                       ::proto::steam::CInventory_GetItemDefMeta_Response* response,
                       ::google::protobuf::Closure* done);
 private:
  ::google::protobuf::RpcChannel* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(Inventory_Stub);
};


// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CInventory_GetInventory_Request

// optional uint32 appid = 1;
inline bool CInventory_GetInventory_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_GetInventory_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CInventory_GetInventory_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CInventory_GetInventory_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CInventory_GetInventory_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetInventory_Request.appid)
  return appid_;
}
inline void CInventory_GetInventory_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetInventory_Request.appid)
}

// optional uint64 steamid = 2;
inline bool CInventory_GetInventory_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_GetInventory_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CInventory_GetInventory_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CInventory_GetInventory_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CInventory_GetInventory_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetInventory_Request.steamid)
  return steamid_;
}
inline void CInventory_GetInventory_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetInventory_Request.steamid)
}

// -------------------------------------------------------------------

// CInventory_Response

// optional string etag = 1;
inline bool CInventory_Response::has_etag() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_Response::set_has_etag() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CInventory_Response::clear_has_etag() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CInventory_Response::clear_etag() {
  etag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_etag();
}
inline const ::std::string& CInventory_Response::etag() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_Response.etag)
  return etag_.GetNoArena();
}
inline void CInventory_Response::set_etag(const ::std::string& value) {
  set_has_etag();
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_Response.etag)
}
#if LANG_CXX11
inline void CInventory_Response::set_etag(::std::string&& value) {
  set_has_etag();
  etag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_Response.etag)
}
#endif
inline void CInventory_Response::set_etag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_etag();
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_Response.etag)
}
inline void CInventory_Response::set_etag(const char* value, size_t size) {
  set_has_etag();
  etag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_Response.etag)
}
inline ::std::string* CInventory_Response::mutable_etag() {
  set_has_etag();
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_Response.etag)
  return etag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_Response::release_etag() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_Response.etag)
  clear_has_etag();
  return etag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_Response::set_allocated_etag(::std::string* etag) {
  if (etag != NULL) {
    set_has_etag();
  } else {
    clear_has_etag();
  }
  etag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), etag);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_Response.etag)
}

// repeated uint64 removeditemids = 2;
inline int CInventory_Response::removeditemids_size() const {
  return removeditemids_.size();
}
inline void CInventory_Response::clear_removeditemids() {
  removeditemids_.Clear();
}
inline ::google::protobuf::uint64 CInventory_Response::removeditemids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_Response.removeditemids)
  return removeditemids_.Get(index);
}
inline void CInventory_Response::set_removeditemids(int index, ::google::protobuf::uint64 value) {
  removeditemids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_Response.removeditemids)
}
inline void CInventory_Response::add_removeditemids(::google::protobuf::uint64 value) {
  removeditemids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_Response.removeditemids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CInventory_Response::removeditemids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CInventory_Response.removeditemids)
  return removeditemids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CInventory_Response::mutable_removeditemids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CInventory_Response.removeditemids)
  return &removeditemids_;
}

// optional string item_json = 3;
inline bool CInventory_Response::has_item_json() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_Response::set_has_item_json() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CInventory_Response::clear_has_item_json() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CInventory_Response::clear_item_json() {
  item_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_item_json();
}
inline const ::std::string& CInventory_Response::item_json() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_Response.item_json)
  return item_json_.GetNoArena();
}
inline void CInventory_Response::set_item_json(const ::std::string& value) {
  set_has_item_json();
  item_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_Response.item_json)
}
#if LANG_CXX11
inline void CInventory_Response::set_item_json(::std::string&& value) {
  set_has_item_json();
  item_json_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_Response.item_json)
}
#endif
inline void CInventory_Response::set_item_json(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_item_json();
  item_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_Response.item_json)
}
inline void CInventory_Response::set_item_json(const char* value, size_t size) {
  set_has_item_json();
  item_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_Response.item_json)
}
inline ::std::string* CInventory_Response::mutable_item_json() {
  set_has_item_json();
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_Response.item_json)
  return item_json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_Response::release_item_json() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_Response.item_json)
  clear_has_item_json();
  return item_json_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_Response::set_allocated_item_json(::std::string* item_json) {
  if (item_json != NULL) {
    set_has_item_json();
  } else {
    clear_has_item_json();
  }
  item_json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), item_json);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_Response.item_json)
}

// optional string itemdef_json = 4;
inline bool CInventory_Response::has_itemdef_json() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_Response::set_has_itemdef_json() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CInventory_Response::clear_has_itemdef_json() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CInventory_Response::clear_itemdef_json() {
  itemdef_json_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_itemdef_json();
}
inline const ::std::string& CInventory_Response::itemdef_json() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_Response.itemdef_json)
  return itemdef_json_.GetNoArena();
}
inline void CInventory_Response::set_itemdef_json(const ::std::string& value) {
  set_has_itemdef_json();
  itemdef_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_Response.itemdef_json)
}
#if LANG_CXX11
inline void CInventory_Response::set_itemdef_json(::std::string&& value) {
  set_has_itemdef_json();
  itemdef_json_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_Response.itemdef_json)
}
#endif
inline void CInventory_Response::set_itemdef_json(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_itemdef_json();
  itemdef_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_Response.itemdef_json)
}
inline void CInventory_Response::set_itemdef_json(const char* value, size_t size) {
  set_has_itemdef_json();
  itemdef_json_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_Response.itemdef_json)
}
inline ::std::string* CInventory_Response::mutable_itemdef_json() {
  set_has_itemdef_json();
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_Response.itemdef_json)
  return itemdef_json_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_Response::release_itemdef_json() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_Response.itemdef_json)
  clear_has_itemdef_json();
  return itemdef_json_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_Response::set_allocated_itemdef_json(::std::string* itemdef_json) {
  if (itemdef_json != NULL) {
    set_has_itemdef_json();
  } else {
    clear_has_itemdef_json();
  }
  itemdef_json_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), itemdef_json);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_Response.itemdef_json)
}

// optional bytes ticket = 5;
inline bool CInventory_Response::has_ticket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CInventory_Response::set_has_ticket() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CInventory_Response::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CInventory_Response::clear_ticket() {
  ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ticket();
}
inline const ::std::string& CInventory_Response::ticket() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_Response.ticket)
  return ticket_.GetNoArena();
}
inline void CInventory_Response::set_ticket(const ::std::string& value) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_Response.ticket)
}
#if LANG_CXX11
inline void CInventory_Response::set_ticket(::std::string&& value) {
  set_has_ticket();
  ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_Response.ticket)
}
#endif
inline void CInventory_Response::set_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_Response.ticket)
}
inline void CInventory_Response::set_ticket(const void* value, size_t size) {
  set_has_ticket();
  ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_Response.ticket)
}
inline ::std::string* CInventory_Response::mutable_ticket() {
  set_has_ticket();
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_Response.ticket)
  return ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_Response::release_ticket() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_Response.ticket)
  clear_has_ticket();
  return ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_Response::set_allocated_ticket(::std::string* ticket) {
  if (ticket != NULL) {
    set_has_ticket();
  } else {
    clear_has_ticket();
  }
  ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_Response.ticket)
}

// optional bool replayed = 6 [(.proto.steam.description) = "If true, the requestid given was processed earlier."];
inline bool CInventory_Response::has_replayed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CInventory_Response::set_has_replayed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CInventory_Response::clear_has_replayed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CInventory_Response::clear_replayed() {
  replayed_ = false;
  clear_has_replayed();
}
inline bool CInventory_Response::replayed() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_Response.replayed)
  return replayed_;
}
inline void CInventory_Response::set_replayed(bool value) {
  set_has_replayed();
  replayed_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_Response.replayed)
}

// -------------------------------------------------------------------

// CInventory_ExchangeItem_Request

// optional uint32 appid = 1;
inline bool CInventory_ExchangeItem_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_ExchangeItem_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CInventory_ExchangeItem_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CInventory_ExchangeItem_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CInventory_ExchangeItem_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ExchangeItem_Request.appid)
  return appid_;
}
inline void CInventory_ExchangeItem_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ExchangeItem_Request.appid)
}

// optional uint64 steamid = 2;
inline bool CInventory_ExchangeItem_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_ExchangeItem_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CInventory_ExchangeItem_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CInventory_ExchangeItem_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CInventory_ExchangeItem_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ExchangeItem_Request.steamid)
  return steamid_;
}
inline void CInventory_ExchangeItem_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ExchangeItem_Request.steamid)
}

// repeated uint64 materialsitemid = 3;
inline int CInventory_ExchangeItem_Request::materialsitemid_size() const {
  return materialsitemid_.size();
}
inline void CInventory_ExchangeItem_Request::clear_materialsitemid() {
  materialsitemid_.Clear();
}
inline ::google::protobuf::uint64 CInventory_ExchangeItem_Request::materialsitemid(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ExchangeItem_Request.materialsitemid)
  return materialsitemid_.Get(index);
}
inline void CInventory_ExchangeItem_Request::set_materialsitemid(int index, ::google::protobuf::uint64 value) {
  materialsitemid_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ExchangeItem_Request.materialsitemid)
}
inline void CInventory_ExchangeItem_Request::add_materialsitemid(::google::protobuf::uint64 value) {
  materialsitemid_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_ExchangeItem_Request.materialsitemid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CInventory_ExchangeItem_Request::materialsitemid() const {
  // @@protoc_insertion_point(field_list:proto.steam.CInventory_ExchangeItem_Request.materialsitemid)
  return materialsitemid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CInventory_ExchangeItem_Request::mutable_materialsitemid() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CInventory_ExchangeItem_Request.materialsitemid)
  return &materialsitemid_;
}

// repeated uint32 materialsquantity = 4;
inline int CInventory_ExchangeItem_Request::materialsquantity_size() const {
  return materialsquantity_.size();
}
inline void CInventory_ExchangeItem_Request::clear_materialsquantity() {
  materialsquantity_.Clear();
}
inline ::google::protobuf::uint32 CInventory_ExchangeItem_Request::materialsquantity(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ExchangeItem_Request.materialsquantity)
  return materialsquantity_.Get(index);
}
inline void CInventory_ExchangeItem_Request::set_materialsquantity(int index, ::google::protobuf::uint32 value) {
  materialsquantity_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ExchangeItem_Request.materialsquantity)
}
inline void CInventory_ExchangeItem_Request::add_materialsquantity(::google::protobuf::uint32 value) {
  materialsquantity_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_ExchangeItem_Request.materialsquantity)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
CInventory_ExchangeItem_Request::materialsquantity() const {
  // @@protoc_insertion_point(field_list:proto.steam.CInventory_ExchangeItem_Request.materialsquantity)
  return materialsquantity_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
CInventory_ExchangeItem_Request::mutable_materialsquantity() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CInventory_ExchangeItem_Request.materialsquantity)
  return &materialsquantity_;
}

// optional uint64 outputitemdefid = 5;
inline bool CInventory_ExchangeItem_Request::has_outputitemdefid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_ExchangeItem_Request::set_has_outputitemdefid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CInventory_ExchangeItem_Request::clear_has_outputitemdefid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CInventory_ExchangeItem_Request::clear_outputitemdefid() {
  outputitemdefid_ = GOOGLE_ULONGLONG(0);
  clear_has_outputitemdefid();
}
inline ::google::protobuf::uint64 CInventory_ExchangeItem_Request::outputitemdefid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ExchangeItem_Request.outputitemdefid)
  return outputitemdefid_;
}
inline void CInventory_ExchangeItem_Request::set_outputitemdefid(::google::protobuf::uint64 value) {
  set_has_outputitemdefid();
  outputitemdefid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ExchangeItem_Request.outputitemdefid)
}

// -------------------------------------------------------------------

// CInventory_GetEligiblePromoItemDefIDs_Request

// optional uint32 appid = 1;
inline bool CInventory_GetEligiblePromoItemDefIDs_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_GetEligiblePromoItemDefIDs_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CInventory_GetEligiblePromoItemDefIDs_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CInventory_GetEligiblePromoItemDefIDs_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CInventory_GetEligiblePromoItemDefIDs_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Request.appid)
  return appid_;
}
inline void CInventory_GetEligiblePromoItemDefIDs_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Request.appid)
}

// optional uint64 steamid = 2;
inline bool CInventory_GetEligiblePromoItemDefIDs_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_GetEligiblePromoItemDefIDs_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CInventory_GetEligiblePromoItemDefIDs_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CInventory_GetEligiblePromoItemDefIDs_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CInventory_GetEligiblePromoItemDefIDs_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Request.steamid)
  return steamid_;
}
inline void CInventory_GetEligiblePromoItemDefIDs_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Request.steamid)
}

// -------------------------------------------------------------------

// CInventory_GetEligiblePromoItemDefIDs_Response

// repeated uint64 itemdefids = 1;
inline int CInventory_GetEligiblePromoItemDefIDs_Response::itemdefids_size() const {
  return itemdefids_.size();
}
inline void CInventory_GetEligiblePromoItemDefIDs_Response::clear_itemdefids() {
  itemdefids_.Clear();
}
inline ::google::protobuf::uint64 CInventory_GetEligiblePromoItemDefIDs_Response::itemdefids(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Response.itemdefids)
  return itemdefids_.Get(index);
}
inline void CInventory_GetEligiblePromoItemDefIDs_Response::set_itemdefids(int index, ::google::protobuf::uint64 value) {
  itemdefids_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Response.itemdefids)
}
inline void CInventory_GetEligiblePromoItemDefIDs_Response::add_itemdefids(::google::protobuf::uint64 value) {
  itemdefids_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Response.itemdefids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CInventory_GetEligiblePromoItemDefIDs_Response::itemdefids() const {
  // @@protoc_insertion_point(field_list:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Response.itemdefids)
  return itemdefids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CInventory_GetEligiblePromoItemDefIDs_Response::mutable_itemdefids() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CInventory_GetEligiblePromoItemDefIDs_Response.itemdefids)
  return &itemdefids_;
}

// -------------------------------------------------------------------

// CInventory_AddItem_Request

// optional uint32 appid = 1;
inline bool CInventory_AddItem_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_AddItem_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CInventory_AddItem_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CInventory_AddItem_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CInventory_AddItem_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_AddItem_Request.appid)
  return appid_;
}
inline void CInventory_AddItem_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.appid)
}

// repeated uint64 itemdefid = 2;
inline int CInventory_AddItem_Request::itemdefid_size() const {
  return itemdefid_.size();
}
inline void CInventory_AddItem_Request::clear_itemdefid() {
  itemdefid_.Clear();
}
inline ::google::protobuf::uint64 CInventory_AddItem_Request::itemdefid(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_AddItem_Request.itemdefid)
  return itemdefid_.Get(index);
}
inline void CInventory_AddItem_Request::set_itemdefid(int index, ::google::protobuf::uint64 value) {
  itemdefid_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.itemdefid)
}
inline void CInventory_AddItem_Request::add_itemdefid(::google::protobuf::uint64 value) {
  itemdefid_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_AddItem_Request.itemdefid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CInventory_AddItem_Request::itemdefid() const {
  // @@protoc_insertion_point(field_list:proto.steam.CInventory_AddItem_Request.itemdefid)
  return itemdefid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CInventory_AddItem_Request::mutable_itemdefid() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CInventory_AddItem_Request.itemdefid)
  return &itemdefid_;
}

// repeated string itempropsjson = 3;
inline int CInventory_AddItem_Request::itempropsjson_size() const {
  return itempropsjson_.size();
}
inline void CInventory_AddItem_Request::clear_itempropsjson() {
  itempropsjson_.Clear();
}
inline const ::std::string& CInventory_AddItem_Request::itempropsjson(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_AddItem_Request.itempropsjson)
  return itempropsjson_.Get(index);
}
inline ::std::string* CInventory_AddItem_Request::mutable_itempropsjson(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_AddItem_Request.itempropsjson)
  return itempropsjson_.Mutable(index);
}
inline void CInventory_AddItem_Request::set_itempropsjson(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.itempropsjson)
  itempropsjson_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void CInventory_AddItem_Request::set_itempropsjson(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.itempropsjson)
  itempropsjson_.Mutable(index)->assign(std::move(value));
}
#endif
inline void CInventory_AddItem_Request::set_itempropsjson(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  itempropsjson_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_AddItem_Request.itempropsjson)
}
inline void CInventory_AddItem_Request::set_itempropsjson(int index, const char* value, size_t size) {
  itempropsjson_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_AddItem_Request.itempropsjson)
}
inline ::std::string* CInventory_AddItem_Request::add_itempropsjson() {
  // @@protoc_insertion_point(field_add_mutable:proto.steam.CInventory_AddItem_Request.itempropsjson)
  return itempropsjson_.Add();
}
inline void CInventory_AddItem_Request::add_itempropsjson(const ::std::string& value) {
  itempropsjson_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_AddItem_Request.itempropsjson)
}
#if LANG_CXX11
inline void CInventory_AddItem_Request::add_itempropsjson(::std::string&& value) {
  itempropsjson_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proto.steam.CInventory_AddItem_Request.itempropsjson)
}
#endif
inline void CInventory_AddItem_Request::add_itempropsjson(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  itempropsjson_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proto.steam.CInventory_AddItem_Request.itempropsjson)
}
inline void CInventory_AddItem_Request::add_itempropsjson(const char* value, size_t size) {
  itempropsjson_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proto.steam.CInventory_AddItem_Request.itempropsjson)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CInventory_AddItem_Request::itempropsjson() const {
  // @@protoc_insertion_point(field_list:proto.steam.CInventory_AddItem_Request.itempropsjson)
  return itempropsjson_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CInventory_AddItem_Request::mutable_itempropsjson() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CInventory_AddItem_Request.itempropsjson)
  return &itempropsjson_;
}

// optional uint64 steamid = 4;
inline bool CInventory_AddItem_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_AddItem_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CInventory_AddItem_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CInventory_AddItem_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CInventory_AddItem_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_AddItem_Request.steamid)
  return steamid_;
}
inline void CInventory_AddItem_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.steamid)
}

// optional bool notify = 5 [(.proto.steam.description) = "Should notify the user that the item was added to their Steam Inventory."];
inline bool CInventory_AddItem_Request::has_notify() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_AddItem_Request::set_has_notify() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CInventory_AddItem_Request::clear_has_notify() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CInventory_AddItem_Request::clear_notify() {
  notify_ = false;
  clear_has_notify();
}
inline bool CInventory_AddItem_Request::notify() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_AddItem_Request.notify)
  return notify_;
}
inline void CInventory_AddItem_Request::set_notify(bool value) {
  set_has_notify();
  notify_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.notify)
}

// optional uint64 requestid = 6;
inline bool CInventory_AddItem_Request::has_requestid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CInventory_AddItem_Request::set_has_requestid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CInventory_AddItem_Request::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CInventory_AddItem_Request::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::uint64 CInventory_AddItem_Request::requestid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_AddItem_Request.requestid)
  return requestid_;
}
inline void CInventory_AddItem_Request::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_AddItem_Request.requestid)
}

// -------------------------------------------------------------------

// CInventory_SafeModifyItem_Request

// optional uint32 appid = 1;
inline bool CInventory_SafeModifyItem_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CInventory_SafeModifyItem_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CInventory_SafeModifyItem_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CInventory_SafeModifyItem_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CInventory_SafeModifyItem_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_SafeModifyItem_Request.appid)
  return appid_;
}
inline void CInventory_SafeModifyItem_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_SafeModifyItem_Request.appid)
}

// optional uint64 acctid = 2;
inline bool CInventory_SafeModifyItem_Request::has_acctid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_SafeModifyItem_Request::set_has_acctid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CInventory_SafeModifyItem_Request::clear_has_acctid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CInventory_SafeModifyItem_Request::clear_acctid() {
  acctid_ = GOOGLE_ULONGLONG(0);
  clear_has_acctid();
}
inline ::google::protobuf::uint64 CInventory_SafeModifyItem_Request::acctid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_SafeModifyItem_Request.acctid)
  return acctid_;
}
inline void CInventory_SafeModifyItem_Request::set_acctid(::google::protobuf::uint64 value) {
  set_has_acctid();
  acctid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_SafeModifyItem_Request.acctid)
}

// optional uint64 itemid = 3;
inline bool CInventory_SafeModifyItem_Request::has_itemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_SafeModifyItem_Request::set_has_itemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CInventory_SafeModifyItem_Request::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CInventory_SafeModifyItem_Request::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 CInventory_SafeModifyItem_Request::itemid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_SafeModifyItem_Request.itemid)
  return itemid_;
}
inline void CInventory_SafeModifyItem_Request::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_SafeModifyItem_Request.itemid)
}

// optional string itempropsjson = 4;
inline bool CInventory_SafeModifyItem_Request::has_itempropsjson() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_SafeModifyItem_Request::set_has_itempropsjson() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CInventory_SafeModifyItem_Request::clear_has_itempropsjson() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CInventory_SafeModifyItem_Request::clear_itempropsjson() {
  itempropsjson_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_itempropsjson();
}
inline const ::std::string& CInventory_SafeModifyItem_Request::itempropsjson() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_SafeModifyItem_Request.itempropsjson)
  return itempropsjson_.GetNoArena();
}
inline void CInventory_SafeModifyItem_Request::set_itempropsjson(const ::std::string& value) {
  set_has_itempropsjson();
  itempropsjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_SafeModifyItem_Request.itempropsjson)
}
#if LANG_CXX11
inline void CInventory_SafeModifyItem_Request::set_itempropsjson(::std::string&& value) {
  set_has_itempropsjson();
  itempropsjson_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_SafeModifyItem_Request.itempropsjson)
}
#endif
inline void CInventory_SafeModifyItem_Request::set_itempropsjson(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_itempropsjson();
  itempropsjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_SafeModifyItem_Request.itempropsjson)
}
inline void CInventory_SafeModifyItem_Request::set_itempropsjson(const char* value, size_t size) {
  set_has_itempropsjson();
  itempropsjson_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_SafeModifyItem_Request.itempropsjson)
}
inline ::std::string* CInventory_SafeModifyItem_Request::mutable_itempropsjson() {
  set_has_itempropsjson();
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_SafeModifyItem_Request.itempropsjson)
  return itempropsjson_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_SafeModifyItem_Request::release_itempropsjson() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_SafeModifyItem_Request.itempropsjson)
  clear_has_itempropsjson();
  return itempropsjson_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_SafeModifyItem_Request::set_allocated_itempropsjson(::std::string* itempropsjson) {
  if (itempropsjson != NULL) {
    set_has_itempropsjson();
  } else {
    clear_has_itempropsjson();
  }
  itempropsjson_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), itempropsjson);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_SafeModifyItem_Request.itempropsjson)
}

// -------------------------------------------------------------------

// CInventory_ConsumePlaytime_Request

// optional uint32 appid = 1;
inline bool CInventory_ConsumePlaytime_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_ConsumePlaytime_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CInventory_ConsumePlaytime_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CInventory_ConsumePlaytime_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CInventory_ConsumePlaytime_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumePlaytime_Request.appid)
  return appid_;
}
inline void CInventory_ConsumePlaytime_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumePlaytime_Request.appid)
}

// optional uint64 itemdefid = 2;
inline bool CInventory_ConsumePlaytime_Request::has_itemdefid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_ConsumePlaytime_Request::set_has_itemdefid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CInventory_ConsumePlaytime_Request::clear_has_itemdefid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CInventory_ConsumePlaytime_Request::clear_itemdefid() {
  itemdefid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemdefid();
}
inline ::google::protobuf::uint64 CInventory_ConsumePlaytime_Request::itemdefid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumePlaytime_Request.itemdefid)
  return itemdefid_;
}
inline void CInventory_ConsumePlaytime_Request::set_itemdefid(::google::protobuf::uint64 value) {
  set_has_itemdefid();
  itemdefid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumePlaytime_Request.itemdefid)
}

// -------------------------------------------------------------------

// CInventory_ConsumeItem_Request

// optional uint32 appid = 1;
inline bool CInventory_ConsumeItem_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_ConsumeItem_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CInventory_ConsumeItem_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CInventory_ConsumeItem_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CInventory_ConsumeItem_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumeItem_Request.appid)
  return appid_;
}
inline void CInventory_ConsumeItem_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumeItem_Request.appid)
}

// optional uint64 itemid = 2;
inline bool CInventory_ConsumeItem_Request::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_ConsumeItem_Request::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CInventory_ConsumeItem_Request::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CInventory_ConsumeItem_Request::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 CInventory_ConsumeItem_Request::itemid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumeItem_Request.itemid)
  return itemid_;
}
inline void CInventory_ConsumeItem_Request::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumeItem_Request.itemid)
}

// optional uint32 quantity = 3;
inline bool CInventory_ConsumeItem_Request::has_quantity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CInventory_ConsumeItem_Request::set_has_quantity() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CInventory_ConsumeItem_Request::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CInventory_ConsumeItem_Request::clear_quantity() {
  quantity_ = 0u;
  clear_has_quantity();
}
inline ::google::protobuf::uint32 CInventory_ConsumeItem_Request::quantity() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumeItem_Request.quantity)
  return quantity_;
}
inline void CInventory_ConsumeItem_Request::set_quantity(::google::protobuf::uint32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumeItem_Request.quantity)
}

// optional string timestamp = 4;
inline bool CInventory_ConsumeItem_Request::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_ConsumeItem_Request::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CInventory_ConsumeItem_Request::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CInventory_ConsumeItem_Request::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timestamp();
}
inline const ::std::string& CInventory_ConsumeItem_Request::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumeItem_Request.timestamp)
  return timestamp_.GetNoArena();
}
inline void CInventory_ConsumeItem_Request::set_timestamp(const ::std::string& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumeItem_Request.timestamp)
}
#if LANG_CXX11
inline void CInventory_ConsumeItem_Request::set_timestamp(::std::string&& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_ConsumeItem_Request.timestamp)
}
#endif
inline void CInventory_ConsumeItem_Request::set_timestamp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_ConsumeItem_Request.timestamp)
}
inline void CInventory_ConsumeItem_Request::set_timestamp(const char* value, size_t size) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_ConsumeItem_Request.timestamp)
}
inline ::std::string* CInventory_ConsumeItem_Request::mutable_timestamp() {
  set_has_timestamp();
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_ConsumeItem_Request.timestamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_ConsumeItem_Request::release_timestamp() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_ConsumeItem_Request.timestamp)
  clear_has_timestamp();
  return timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_ConsumeItem_Request::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_ConsumeItem_Request.timestamp)
}

// optional uint64 steamid = 5;
inline bool CInventory_ConsumeItem_Request::has_steamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CInventory_ConsumeItem_Request::set_has_steamid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CInventory_ConsumeItem_Request::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CInventory_ConsumeItem_Request::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CInventory_ConsumeItem_Request::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumeItem_Request.steamid)
  return steamid_;
}
inline void CInventory_ConsumeItem_Request::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumeItem_Request.steamid)
}

// optional uint64 requestid = 6;
inline bool CInventory_ConsumeItem_Request::has_requestid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CInventory_ConsumeItem_Request::set_has_requestid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CInventory_ConsumeItem_Request::clear_has_requestid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CInventory_ConsumeItem_Request::clear_requestid() {
  requestid_ = GOOGLE_ULONGLONG(0);
  clear_has_requestid();
}
inline ::google::protobuf::uint64 CInventory_ConsumeItem_Request::requestid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_ConsumeItem_Request.requestid)
  return requestid_;
}
inline void CInventory_ConsumeItem_Request::set_requestid(::google::protobuf::uint64 value) {
  set_has_requestid();
  requestid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_ConsumeItem_Request.requestid)
}

// -------------------------------------------------------------------

// CInventory_DevSetNextDrop_Request

// optional uint32 appid = 1;
inline bool CInventory_DevSetNextDrop_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_DevSetNextDrop_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CInventory_DevSetNextDrop_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CInventory_DevSetNextDrop_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CInventory_DevSetNextDrop_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_DevSetNextDrop_Request.appid)
  return appid_;
}
inline void CInventory_DevSetNextDrop_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_DevSetNextDrop_Request.appid)
}

// optional uint64 itemdefid = 2;
inline bool CInventory_DevSetNextDrop_Request::has_itemdefid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_DevSetNextDrop_Request::set_has_itemdefid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CInventory_DevSetNextDrop_Request::clear_has_itemdefid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CInventory_DevSetNextDrop_Request::clear_itemdefid() {
  itemdefid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemdefid();
}
inline ::google::protobuf::uint64 CInventory_DevSetNextDrop_Request::itemdefid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_DevSetNextDrop_Request.itemdefid)
  return itemdefid_;
}
inline void CInventory_DevSetNextDrop_Request::set_itemdefid(::google::protobuf::uint64 value) {
  set_has_itemdefid();
  itemdefid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_DevSetNextDrop_Request.itemdefid)
}

// optional string droptime = 3;
inline bool CInventory_DevSetNextDrop_Request::has_droptime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_DevSetNextDrop_Request::set_has_droptime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CInventory_DevSetNextDrop_Request::clear_has_droptime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CInventory_DevSetNextDrop_Request::clear_droptime() {
  droptime_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_droptime();
}
inline const ::std::string& CInventory_DevSetNextDrop_Request::droptime() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
  return droptime_.GetNoArena();
}
inline void CInventory_DevSetNextDrop_Request::set_droptime(const ::std::string& value) {
  set_has_droptime();
  droptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
}
#if LANG_CXX11
inline void CInventory_DevSetNextDrop_Request::set_droptime(::std::string&& value) {
  set_has_droptime();
  droptime_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
}
#endif
inline void CInventory_DevSetNextDrop_Request::set_droptime(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_droptime();
  droptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
}
inline void CInventory_DevSetNextDrop_Request::set_droptime(const char* value, size_t size) {
  set_has_droptime();
  droptime_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
}
inline ::std::string* CInventory_DevSetNextDrop_Request::mutable_droptime() {
  set_has_droptime();
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
  return droptime_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_DevSetNextDrop_Request::release_droptime() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
  clear_has_droptime();
  return droptime_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_DevSetNextDrop_Request::set_allocated_droptime(::std::string* droptime) {
  if (droptime != NULL) {
    set_has_droptime();
  } else {
    clear_has_droptime();
  }
  droptime_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), droptime);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_DevSetNextDrop_Request.droptime)
}

// -------------------------------------------------------------------

// CInventory_SplitItemStack_Request

// optional uint32 appid = 1;
inline bool CInventory_SplitItemStack_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_SplitItemStack_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CInventory_SplitItemStack_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CInventory_SplitItemStack_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CInventory_SplitItemStack_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_SplitItemStack_Request.appid)
  return appid_;
}
inline void CInventory_SplitItemStack_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_SplitItemStack_Request.appid)
}

// optional uint64 itemid = 2;
inline bool CInventory_SplitItemStack_Request::has_itemid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_SplitItemStack_Request::set_has_itemid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CInventory_SplitItemStack_Request::clear_has_itemid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CInventory_SplitItemStack_Request::clear_itemid() {
  itemid_ = GOOGLE_ULONGLONG(0);
  clear_has_itemid();
}
inline ::google::protobuf::uint64 CInventory_SplitItemStack_Request::itemid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_SplitItemStack_Request.itemid)
  return itemid_;
}
inline void CInventory_SplitItemStack_Request::set_itemid(::google::protobuf::uint64 value) {
  set_has_itemid();
  itemid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_SplitItemStack_Request.itemid)
}

// optional uint32 quantity = 3;
inline bool CInventory_SplitItemStack_Request::has_quantity() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CInventory_SplitItemStack_Request::set_has_quantity() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CInventory_SplitItemStack_Request::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CInventory_SplitItemStack_Request::clear_quantity() {
  quantity_ = 0u;
  clear_has_quantity();
}
inline ::google::protobuf::uint32 CInventory_SplitItemStack_Request::quantity() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_SplitItemStack_Request.quantity)
  return quantity_;
}
inline void CInventory_SplitItemStack_Request::set_quantity(::google::protobuf::uint32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_SplitItemStack_Request.quantity)
}

// optional string timestamp = 4;
inline bool CInventory_SplitItemStack_Request::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_SplitItemStack_Request::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CInventory_SplitItemStack_Request::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CInventory_SplitItemStack_Request::clear_timestamp() {
  timestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_timestamp();
}
inline const ::std::string& CInventory_SplitItemStack_Request::timestamp() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_SplitItemStack_Request.timestamp)
  return timestamp_.GetNoArena();
}
inline void CInventory_SplitItemStack_Request::set_timestamp(const ::std::string& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_SplitItemStack_Request.timestamp)
}
#if LANG_CXX11
inline void CInventory_SplitItemStack_Request::set_timestamp(::std::string&& value) {
  set_has_timestamp();
  timestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_SplitItemStack_Request.timestamp)
}
#endif
inline void CInventory_SplitItemStack_Request::set_timestamp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_SplitItemStack_Request.timestamp)
}
inline void CInventory_SplitItemStack_Request::set_timestamp(const char* value, size_t size) {
  set_has_timestamp();
  timestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_SplitItemStack_Request.timestamp)
}
inline ::std::string* CInventory_SplitItemStack_Request::mutable_timestamp() {
  set_has_timestamp();
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_SplitItemStack_Request.timestamp)
  return timestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_SplitItemStack_Request::release_timestamp() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_SplitItemStack_Request.timestamp)
  clear_has_timestamp();
  return timestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_SplitItemStack_Request::set_allocated_timestamp(::std::string* timestamp) {
  if (timestamp != NULL) {
    set_has_timestamp();
  } else {
    clear_has_timestamp();
  }
  timestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), timestamp);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_SplitItemStack_Request.timestamp)
}

// -------------------------------------------------------------------

// CInventory_CombineItemStacks_Request

// optional uint32 appid = 1;
inline bool CInventory_CombineItemStacks_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CInventory_CombineItemStacks_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CInventory_CombineItemStacks_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CInventory_CombineItemStacks_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CInventory_CombineItemStacks_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_CombineItemStacks_Request.appid)
  return appid_;
}
inline void CInventory_CombineItemStacks_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_CombineItemStacks_Request.appid)
}

// optional uint64 fromitemid = 2;
inline bool CInventory_CombineItemStacks_Request::has_fromitemid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CInventory_CombineItemStacks_Request::set_has_fromitemid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CInventory_CombineItemStacks_Request::clear_has_fromitemid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CInventory_CombineItemStacks_Request::clear_fromitemid() {
  fromitemid_ = GOOGLE_ULONGLONG(0);
  clear_has_fromitemid();
}
inline ::google::protobuf::uint64 CInventory_CombineItemStacks_Request::fromitemid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_CombineItemStacks_Request.fromitemid)
  return fromitemid_;
}
inline void CInventory_CombineItemStacks_Request::set_fromitemid(::google::protobuf::uint64 value) {
  set_has_fromitemid();
  fromitemid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_CombineItemStacks_Request.fromitemid)
}

// optional uint64 destitemid = 3;
inline bool CInventory_CombineItemStacks_Request::has_destitemid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CInventory_CombineItemStacks_Request::set_has_destitemid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CInventory_CombineItemStacks_Request::clear_has_destitemid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CInventory_CombineItemStacks_Request::clear_destitemid() {
  destitemid_ = GOOGLE_ULONGLONG(0);
  clear_has_destitemid();
}
inline ::google::protobuf::uint64 CInventory_CombineItemStacks_Request::destitemid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_CombineItemStacks_Request.destitemid)
  return destitemid_;
}
inline void CInventory_CombineItemStacks_Request::set_destitemid(::google::protobuf::uint64 value) {
  set_has_destitemid();
  destitemid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_CombineItemStacks_Request.destitemid)
}

// optional uint32 quantity = 4;
inline bool CInventory_CombineItemStacks_Request::has_quantity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CInventory_CombineItemStacks_Request::set_has_quantity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CInventory_CombineItemStacks_Request::clear_has_quantity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CInventory_CombineItemStacks_Request::clear_quantity() {
  quantity_ = 0u;
  clear_has_quantity();
}
inline ::google::protobuf::uint32 CInventory_CombineItemStacks_Request::quantity() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_CombineItemStacks_Request.quantity)
  return quantity_;
}
inline void CInventory_CombineItemStacks_Request::set_quantity(::google::protobuf::uint32 value) {
  set_has_quantity();
  quantity_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_CombineItemStacks_Request.quantity)
}

// optional string fromtimestamp = 5;
inline bool CInventory_CombineItemStacks_Request::has_fromtimestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_CombineItemStacks_Request::set_has_fromtimestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CInventory_CombineItemStacks_Request::clear_has_fromtimestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CInventory_CombineItemStacks_Request::clear_fromtimestamp() {
  fromtimestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_fromtimestamp();
}
inline const ::std::string& CInventory_CombineItemStacks_Request::fromtimestamp() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_CombineItemStacks_Request.fromtimestamp)
  return fromtimestamp_.GetNoArena();
}
inline void CInventory_CombineItemStacks_Request::set_fromtimestamp(const ::std::string& value) {
  set_has_fromtimestamp();
  fromtimestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_CombineItemStacks_Request.fromtimestamp)
}
#if LANG_CXX11
inline void CInventory_CombineItemStacks_Request::set_fromtimestamp(::std::string&& value) {
  set_has_fromtimestamp();
  fromtimestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_CombineItemStacks_Request.fromtimestamp)
}
#endif
inline void CInventory_CombineItemStacks_Request::set_fromtimestamp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_fromtimestamp();
  fromtimestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_CombineItemStacks_Request.fromtimestamp)
}
inline void CInventory_CombineItemStacks_Request::set_fromtimestamp(const char* value, size_t size) {
  set_has_fromtimestamp();
  fromtimestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_CombineItemStacks_Request.fromtimestamp)
}
inline ::std::string* CInventory_CombineItemStacks_Request::mutable_fromtimestamp() {
  set_has_fromtimestamp();
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_CombineItemStacks_Request.fromtimestamp)
  return fromtimestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_CombineItemStacks_Request::release_fromtimestamp() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_CombineItemStacks_Request.fromtimestamp)
  clear_has_fromtimestamp();
  return fromtimestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_CombineItemStacks_Request::set_allocated_fromtimestamp(::std::string* fromtimestamp) {
  if (fromtimestamp != NULL) {
    set_has_fromtimestamp();
  } else {
    clear_has_fromtimestamp();
  }
  fromtimestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), fromtimestamp);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_CombineItemStacks_Request.fromtimestamp)
}

// optional string desttimestamp = 6;
inline bool CInventory_CombineItemStacks_Request::has_desttimestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_CombineItemStacks_Request::set_has_desttimestamp() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CInventory_CombineItemStacks_Request::clear_has_desttimestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CInventory_CombineItemStacks_Request::clear_desttimestamp() {
  desttimestamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_desttimestamp();
}
inline const ::std::string& CInventory_CombineItemStacks_Request::desttimestamp() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_CombineItemStacks_Request.desttimestamp)
  return desttimestamp_.GetNoArena();
}
inline void CInventory_CombineItemStacks_Request::set_desttimestamp(const ::std::string& value) {
  set_has_desttimestamp();
  desttimestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_CombineItemStacks_Request.desttimestamp)
}
#if LANG_CXX11
inline void CInventory_CombineItemStacks_Request::set_desttimestamp(::std::string&& value) {
  set_has_desttimestamp();
  desttimestamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_CombineItemStacks_Request.desttimestamp)
}
#endif
inline void CInventory_CombineItemStacks_Request::set_desttimestamp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_desttimestamp();
  desttimestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_CombineItemStacks_Request.desttimestamp)
}
inline void CInventory_CombineItemStacks_Request::set_desttimestamp(const char* value, size_t size) {
  set_has_desttimestamp();
  desttimestamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_CombineItemStacks_Request.desttimestamp)
}
inline ::std::string* CInventory_CombineItemStacks_Request::mutable_desttimestamp() {
  set_has_desttimestamp();
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_CombineItemStacks_Request.desttimestamp)
  return desttimestamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_CombineItemStacks_Request::release_desttimestamp() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_CombineItemStacks_Request.desttimestamp)
  clear_has_desttimestamp();
  return desttimestamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_CombineItemStacks_Request::set_allocated_desttimestamp(::std::string* desttimestamp) {
  if (desttimestamp != NULL) {
    set_has_desttimestamp();
  } else {
    clear_has_desttimestamp();
  }
  desttimestamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), desttimestamp);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_CombineItemStacks_Request.desttimestamp)
}

// -------------------------------------------------------------------

// CInventory_GetItemDefMeta_Request

// optional uint32 appid = 1;
inline bool CInventory_GetItemDefMeta_Request::has_appid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_GetItemDefMeta_Request::set_has_appid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CInventory_GetItemDefMeta_Request::clear_has_appid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CInventory_GetItemDefMeta_Request::clear_appid() {
  appid_ = 0u;
  clear_has_appid();
}
inline ::google::protobuf::uint32 CInventory_GetItemDefMeta_Request::appid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetItemDefMeta_Request.appid)
  return appid_;
}
inline void CInventory_GetItemDefMeta_Request::set_appid(::google::protobuf::uint32 value) {
  set_has_appid();
  appid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetItemDefMeta_Request.appid)
}

// -------------------------------------------------------------------

// CInventory_GetItemDefMeta_Response

// optional uint32 modified = 1;
inline bool CInventory_GetItemDefMeta_Response::has_modified() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CInventory_GetItemDefMeta_Response::set_has_modified() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CInventory_GetItemDefMeta_Response::clear_has_modified() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CInventory_GetItemDefMeta_Response::clear_modified() {
  modified_ = 0u;
  clear_has_modified();
}
inline ::google::protobuf::uint32 CInventory_GetItemDefMeta_Response::modified() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetItemDefMeta_Response.modified)
  return modified_;
}
inline void CInventory_GetItemDefMeta_Response::set_modified(::google::protobuf::uint32 value) {
  set_has_modified();
  modified_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetItemDefMeta_Response.modified)
}

// optional string digest = 2;
inline bool CInventory_GetItemDefMeta_Response::has_digest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CInventory_GetItemDefMeta_Response::set_has_digest() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CInventory_GetItemDefMeta_Response::clear_has_digest() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CInventory_GetItemDefMeta_Response::clear_digest() {
  digest_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_digest();
}
inline const ::std::string& CInventory_GetItemDefMeta_Response::digest() const {
  // @@protoc_insertion_point(field_get:proto.steam.CInventory_GetItemDefMeta_Response.digest)
  return digest_.GetNoArena();
}
inline void CInventory_GetItemDefMeta_Response::set_digest(const ::std::string& value) {
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CInventory_GetItemDefMeta_Response.digest)
}
#if LANG_CXX11
inline void CInventory_GetItemDefMeta_Response::set_digest(::std::string&& value) {
  set_has_digest();
  digest_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CInventory_GetItemDefMeta_Response.digest)
}
#endif
inline void CInventory_GetItemDefMeta_Response::set_digest(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CInventory_GetItemDefMeta_Response.digest)
}
inline void CInventory_GetItemDefMeta_Response::set_digest(const char* value, size_t size) {
  set_has_digest();
  digest_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CInventory_GetItemDefMeta_Response.digest)
}
inline ::std::string* CInventory_GetItemDefMeta_Response::mutable_digest() {
  set_has_digest();
  // @@protoc_insertion_point(field_mutable:proto.steam.CInventory_GetItemDefMeta_Response.digest)
  return digest_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CInventory_GetItemDefMeta_Response::release_digest() {
  // @@protoc_insertion_point(field_release:proto.steam.CInventory_GetItemDefMeta_Response.digest)
  clear_has_digest();
  return digest_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CInventory_GetItemDefMeta_Response::set_allocated_digest(::std::string* digest) {
  if (digest != NULL) {
    set_has_digest();
  } else {
    clear_has_digest();
  }
  digest_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), digest);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CInventory_GetItemDefMeta_Response.digest)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_steammessages_5finventory_2esteamclient_2eproto__INCLUDED
