// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: encrypted_app_ticket.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "encrypted_app_ticket.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace proto {
namespace steam {
class EncryptedAppTicketDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EncryptedAppTicket> {
} _EncryptedAppTicket_default_instance_;

namespace protobuf_encrypted_5fapp_5fticket_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncryptedAppTicket, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncryptedAppTicket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncryptedAppTicket, ticket_version_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncryptedAppTicket, crc_encryptedticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncryptedAppTicket, cb_encrypteduserdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncryptedAppTicket, cb_encrypted_appownershipticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EncryptedAppTicket, encrypted_ticket_),
  1,
  2,
  3,
  4,
  0,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 10, sizeof(EncryptedAppTicket)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_EncryptedAppTicket_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "encrypted_app_ticket.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace

void TableStruct::Shutdown() {
  _EncryptedAppTicket_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _EncryptedAppTicket_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\032encrypted_app_ticket.proto\022\013proto.stea"
      "m\"\255\001\n\022EncryptedAppTicket\022\031\n\021ticket_versi"
      "on_no\030\001 \001(\r\022\033\n\023crc_encryptedticket\030\002 \001(\r"
      "\022\034\n\024cb_encrypteduserdata\030\003 \001(\r\022\'\n\037cb_enc"
      "rypted_appownershipticket\030\004 \001(\r\022\030\n\020encry"
      "pted_ticket\030\005 \001(\014B\005H\001\200\001\000"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 224);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "encrypted_app_ticket.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_encrypted_5fapp_5fticket_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EncryptedAppTicket::kTicketVersionNoFieldNumber;
const int EncryptedAppTicket::kCrcEncryptedticketFieldNumber;
const int EncryptedAppTicket::kCbEncrypteduserdataFieldNumber;
const int EncryptedAppTicket::kCbEncryptedAppownershipticketFieldNumber;
const int EncryptedAppTicket::kEncryptedTicketFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EncryptedAppTicket::EncryptedAppTicket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_encrypted_5fapp_5fticket_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:proto.steam.EncryptedAppTicket)
}
EncryptedAppTicket::EncryptedAppTicket(const EncryptedAppTicket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  encrypted_ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_encrypted_ticket()) {
    encrypted_ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypted_ticket_);
  }
  ::memcpy(&ticket_version_no_, &from.ticket_version_no_,
    reinterpret_cast<char*>(&cb_encrypted_appownershipticket_) -
    reinterpret_cast<char*>(&ticket_version_no_) + sizeof(cb_encrypted_appownershipticket_));
  // @@protoc_insertion_point(copy_constructor:proto.steam.EncryptedAppTicket)
}

void EncryptedAppTicket::SharedCtor() {
  _cached_size_ = 0;
  encrypted_ticket_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ticket_version_no_, 0, reinterpret_cast<char*>(&cb_encrypted_appownershipticket_) -
    reinterpret_cast<char*>(&ticket_version_no_) + sizeof(cb_encrypted_appownershipticket_));
}

EncryptedAppTicket::~EncryptedAppTicket() {
  // @@protoc_insertion_point(destructor:proto.steam.EncryptedAppTicket)
  SharedDtor();
}

void EncryptedAppTicket::SharedDtor() {
  encrypted_ticket_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EncryptedAppTicket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EncryptedAppTicket::descriptor() {
  protobuf_encrypted_5fapp_5fticket_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_encrypted_5fapp_5fticket_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EncryptedAppTicket& EncryptedAppTicket::default_instance() {
  protobuf_encrypted_5fapp_5fticket_2eproto::InitDefaults();
  return *internal_default_instance();
}

EncryptedAppTicket* EncryptedAppTicket::New(::google::protobuf::Arena* arena) const {
  EncryptedAppTicket* n = new EncryptedAppTicket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EncryptedAppTicket::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.steam.EncryptedAppTicket)
  if (has_encrypted_ticket()) {
    GOOGLE_DCHECK(!encrypted_ticket_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*encrypted_ticket_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 30u) {
    ::memset(&ticket_version_no_, 0, reinterpret_cast<char*>(&cb_encrypted_appownershipticket_) -
      reinterpret_cast<char*>(&ticket_version_no_) + sizeof(cb_encrypted_appownershipticket_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EncryptedAppTicket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:proto.steam.EncryptedAppTicket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ticket_version_no = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_ticket_version_no();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ticket_version_no_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 crc_encryptedticket = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_crc_encryptedticket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &crc_encryptedticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cb_encrypteduserdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_cb_encrypteduserdata();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cb_encrypteduserdata_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 cb_encrypted_appownershipticket = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_cb_encrypted_appownershipticket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cb_encrypted_appownershipticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bytes encrypted_ticket = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_encrypted_ticket()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:proto.steam.EncryptedAppTicket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:proto.steam.EncryptedAppTicket)
  return false;
#undef DO_
}

void EncryptedAppTicket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:proto.steam.EncryptedAppTicket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ticket_version_no = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ticket_version_no(), output);
  }

  // optional uint32 crc_encryptedticket = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->crc_encryptedticket(), output);
  }

  // optional uint32 cb_encrypteduserdata = 3;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cb_encrypteduserdata(), output);
  }

  // optional uint32 cb_encrypted_appownershipticket = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->cb_encrypted_appownershipticket(), output);
  }

  // optional bytes encrypted_ticket = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->encrypted_ticket(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:proto.steam.EncryptedAppTicket)
}

::google::protobuf::uint8* EncryptedAppTicket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.steam.EncryptedAppTicket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional uint32 ticket_version_no = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ticket_version_no(), target);
  }

  // optional uint32 crc_encryptedticket = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->crc_encryptedticket(), target);
  }

  // optional uint32 cb_encrypteduserdata = 3;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cb_encrypteduserdata(), target);
  }

  // optional uint32 cb_encrypted_appownershipticket = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->cb_encrypted_appownershipticket(), target);
  }

  // optional bytes encrypted_ticket = 5;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->encrypted_ticket(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.steam.EncryptedAppTicket)
  return target;
}

size_t EncryptedAppTicket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.steam.EncryptedAppTicket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional bytes encrypted_ticket = 5;
    if (has_encrypted_ticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->encrypted_ticket());
    }

    // optional uint32 ticket_version_no = 1;
    if (has_ticket_version_no()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ticket_version_no());
    }

    // optional uint32 crc_encryptedticket = 2;
    if (has_crc_encryptedticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->crc_encryptedticket());
    }

    // optional uint32 cb_encrypteduserdata = 3;
    if (has_cb_encrypteduserdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cb_encrypteduserdata());
    }

    // optional uint32 cb_encrypted_appownershipticket = 4;
    if (has_cb_encrypted_appownershipticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cb_encrypted_appownershipticket());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EncryptedAppTicket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:proto.steam.EncryptedAppTicket)
  GOOGLE_DCHECK_NE(&from, this);
  const EncryptedAppTicket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EncryptedAppTicket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:proto.steam.EncryptedAppTicket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:proto.steam.EncryptedAppTicket)
    MergeFrom(*source);
  }
}

void EncryptedAppTicket::MergeFrom(const EncryptedAppTicket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:proto.steam.EncryptedAppTicket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_encrypted_ticket();
      encrypted_ticket_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.encrypted_ticket_);
    }
    if (cached_has_bits & 0x00000002u) {
      ticket_version_no_ = from.ticket_version_no_;
    }
    if (cached_has_bits & 0x00000004u) {
      crc_encryptedticket_ = from.crc_encryptedticket_;
    }
    if (cached_has_bits & 0x00000008u) {
      cb_encrypteduserdata_ = from.cb_encrypteduserdata_;
    }
    if (cached_has_bits & 0x00000010u) {
      cb_encrypted_appownershipticket_ = from.cb_encrypted_appownershipticket_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void EncryptedAppTicket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:proto.steam.EncryptedAppTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EncryptedAppTicket::CopyFrom(const EncryptedAppTicket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.steam.EncryptedAppTicket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EncryptedAppTicket::IsInitialized() const {
  return true;
}

void EncryptedAppTicket::Swap(EncryptedAppTicket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EncryptedAppTicket::InternalSwap(EncryptedAppTicket* other) {
  encrypted_ticket_.Swap(&other->encrypted_ticket_);
  std::swap(ticket_version_no_, other->ticket_version_no_);
  std::swap(crc_encryptedticket_, other->crc_encryptedticket_);
  std::swap(cb_encrypteduserdata_, other->cb_encrypteduserdata_);
  std::swap(cb_encrypted_appownershipticket_, other->cb_encrypted_appownershipticket_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EncryptedAppTicket::GetMetadata() const {
  protobuf_encrypted_5fapp_5fticket_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_encrypted_5fapp_5fticket_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EncryptedAppTicket

// optional uint32 ticket_version_no = 1;
bool EncryptedAppTicket::has_ticket_version_no() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EncryptedAppTicket::set_has_ticket_version_no() {
  _has_bits_[0] |= 0x00000002u;
}
void EncryptedAppTicket::clear_has_ticket_version_no() {
  _has_bits_[0] &= ~0x00000002u;
}
void EncryptedAppTicket::clear_ticket_version_no() {
  ticket_version_no_ = 0u;
  clear_has_ticket_version_no();
}
::google::protobuf::uint32 EncryptedAppTicket::ticket_version_no() const {
  // @@protoc_insertion_point(field_get:proto.steam.EncryptedAppTicket.ticket_version_no)
  return ticket_version_no_;
}
void EncryptedAppTicket::set_ticket_version_no(::google::protobuf::uint32 value) {
  set_has_ticket_version_no();
  ticket_version_no_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.EncryptedAppTicket.ticket_version_no)
}

// optional uint32 crc_encryptedticket = 2;
bool EncryptedAppTicket::has_crc_encryptedticket() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void EncryptedAppTicket::set_has_crc_encryptedticket() {
  _has_bits_[0] |= 0x00000004u;
}
void EncryptedAppTicket::clear_has_crc_encryptedticket() {
  _has_bits_[0] &= ~0x00000004u;
}
void EncryptedAppTicket::clear_crc_encryptedticket() {
  crc_encryptedticket_ = 0u;
  clear_has_crc_encryptedticket();
}
::google::protobuf::uint32 EncryptedAppTicket::crc_encryptedticket() const {
  // @@protoc_insertion_point(field_get:proto.steam.EncryptedAppTicket.crc_encryptedticket)
  return crc_encryptedticket_;
}
void EncryptedAppTicket::set_crc_encryptedticket(::google::protobuf::uint32 value) {
  set_has_crc_encryptedticket();
  crc_encryptedticket_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.EncryptedAppTicket.crc_encryptedticket)
}

// optional uint32 cb_encrypteduserdata = 3;
bool EncryptedAppTicket::has_cb_encrypteduserdata() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void EncryptedAppTicket::set_has_cb_encrypteduserdata() {
  _has_bits_[0] |= 0x00000008u;
}
void EncryptedAppTicket::clear_has_cb_encrypteduserdata() {
  _has_bits_[0] &= ~0x00000008u;
}
void EncryptedAppTicket::clear_cb_encrypteduserdata() {
  cb_encrypteduserdata_ = 0u;
  clear_has_cb_encrypteduserdata();
}
::google::protobuf::uint32 EncryptedAppTicket::cb_encrypteduserdata() const {
  // @@protoc_insertion_point(field_get:proto.steam.EncryptedAppTicket.cb_encrypteduserdata)
  return cb_encrypteduserdata_;
}
void EncryptedAppTicket::set_cb_encrypteduserdata(::google::protobuf::uint32 value) {
  set_has_cb_encrypteduserdata();
  cb_encrypteduserdata_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.EncryptedAppTicket.cb_encrypteduserdata)
}

// optional uint32 cb_encrypted_appownershipticket = 4;
bool EncryptedAppTicket::has_cb_encrypted_appownershipticket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void EncryptedAppTicket::set_has_cb_encrypted_appownershipticket() {
  _has_bits_[0] |= 0x00000010u;
}
void EncryptedAppTicket::clear_has_cb_encrypted_appownershipticket() {
  _has_bits_[0] &= ~0x00000010u;
}
void EncryptedAppTicket::clear_cb_encrypted_appownershipticket() {
  cb_encrypted_appownershipticket_ = 0u;
  clear_has_cb_encrypted_appownershipticket();
}
::google::protobuf::uint32 EncryptedAppTicket::cb_encrypted_appownershipticket() const {
  // @@protoc_insertion_point(field_get:proto.steam.EncryptedAppTicket.cb_encrypted_appownershipticket)
  return cb_encrypted_appownershipticket_;
}
void EncryptedAppTicket::set_cb_encrypted_appownershipticket(::google::protobuf::uint32 value) {
  set_has_cb_encrypted_appownershipticket();
  cb_encrypted_appownershipticket_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.EncryptedAppTicket.cb_encrypted_appownershipticket)
}

// optional bytes encrypted_ticket = 5;
bool EncryptedAppTicket::has_encrypted_ticket() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EncryptedAppTicket::set_has_encrypted_ticket() {
  _has_bits_[0] |= 0x00000001u;
}
void EncryptedAppTicket::clear_has_encrypted_ticket() {
  _has_bits_[0] &= ~0x00000001u;
}
void EncryptedAppTicket::clear_encrypted_ticket() {
  encrypted_ticket_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_encrypted_ticket();
}
const ::std::string& EncryptedAppTicket::encrypted_ticket() const {
  // @@protoc_insertion_point(field_get:proto.steam.EncryptedAppTicket.encrypted_ticket)
  return encrypted_ticket_.GetNoArena();
}
void EncryptedAppTicket::set_encrypted_ticket(const ::std::string& value) {
  set_has_encrypted_ticket();
  encrypted_ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.EncryptedAppTicket.encrypted_ticket)
}
#if LANG_CXX11
void EncryptedAppTicket::set_encrypted_ticket(::std::string&& value) {
  set_has_encrypted_ticket();
  encrypted_ticket_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.EncryptedAppTicket.encrypted_ticket)
}
#endif
void EncryptedAppTicket::set_encrypted_ticket(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_encrypted_ticket();
  encrypted_ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.EncryptedAppTicket.encrypted_ticket)
}
void EncryptedAppTicket::set_encrypted_ticket(const void* value, size_t size) {
  set_has_encrypted_ticket();
  encrypted_ticket_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.EncryptedAppTicket.encrypted_ticket)
}
::std::string* EncryptedAppTicket::mutable_encrypted_ticket() {
  set_has_encrypted_ticket();
  // @@protoc_insertion_point(field_mutable:proto.steam.EncryptedAppTicket.encrypted_ticket)
  return encrypted_ticket_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EncryptedAppTicket::release_encrypted_ticket() {
  // @@protoc_insertion_point(field_release:proto.steam.EncryptedAppTicket.encrypted_ticket)
  clear_has_encrypted_ticket();
  return encrypted_ticket_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EncryptedAppTicket::set_allocated_encrypted_ticket(::std::string* encrypted_ticket) {
  if (encrypted_ticket != NULL) {
    set_has_encrypted_ticket();
  } else {
    clear_has_encrypted_ticket();
  }
  encrypted_ticket_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), encrypted_ticket);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.EncryptedAppTicket.encrypted_ticket)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)
