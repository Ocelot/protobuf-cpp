// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: steammessages_clientserver_friends.proto

#ifndef PROTOBUF_steammessages_5fclientserver_5ffriends_2eproto__INCLUDED
#define PROTOBUF_steammessages_5fclientserver_5ffriends_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "steammessages_base.pb.h"
// @@protoc_insertion_point(includes)
namespace proto {
namespace steam {
class CCDDBAppDetailCommon;
class CCDDBAppDetailCommonDefaultTypeInternal;
extern CCDDBAppDetailCommonDefaultTypeInternal _CCDDBAppDetailCommon_default_instance_;
class CMsgAppRights;
class CMsgAppRightsDefaultTypeInternal;
extern CMsgAppRightsDefaultTypeInternal _CMsgAppRights_default_instance_;
class CMsgAuthTicket;
class CMsgAuthTicketDefaultTypeInternal;
extern CMsgAuthTicketDefaultTypeInternal _CMsgAuthTicket_default_instance_;
class CMsgClientAddFriend;
class CMsgClientAddFriendDefaultTypeInternal;
extern CMsgClientAddFriendDefaultTypeInternal _CMsgClientAddFriend_default_instance_;
class CMsgClientAddFriendResponse;
class CMsgClientAddFriendResponseDefaultTypeInternal;
extern CMsgClientAddFriendResponseDefaultTypeInternal _CMsgClientAddFriendResponse_default_instance_;
class CMsgClientAddFriendToGroup;
class CMsgClientAddFriendToGroupDefaultTypeInternal;
extern CMsgClientAddFriendToGroupDefaultTypeInternal _CMsgClientAddFriendToGroup_default_instance_;
class CMsgClientAddFriendToGroupResponse;
class CMsgClientAddFriendToGroupResponseDefaultTypeInternal;
extern CMsgClientAddFriendToGroupResponseDefaultTypeInternal _CMsgClientAddFriendToGroupResponse_default_instance_;
class CMsgClientChangeStatus;
class CMsgClientChangeStatusDefaultTypeInternal;
extern CMsgClientChangeStatusDefaultTypeInternal _CMsgClientChangeStatus_default_instance_;
class CMsgClientCreateFriendsGroup;
class CMsgClientCreateFriendsGroupDefaultTypeInternal;
extern CMsgClientCreateFriendsGroupDefaultTypeInternal _CMsgClientCreateFriendsGroup_default_instance_;
class CMsgClientCreateFriendsGroupResponse;
class CMsgClientCreateFriendsGroupResponseDefaultTypeInternal;
extern CMsgClientCreateFriendsGroupResponseDefaultTypeInternal _CMsgClientCreateFriendsGroupResponse_default_instance_;
class CMsgClientDeleteFriendsGroup;
class CMsgClientDeleteFriendsGroupDefaultTypeInternal;
extern CMsgClientDeleteFriendsGroupDefaultTypeInternal _CMsgClientDeleteFriendsGroup_default_instance_;
class CMsgClientDeleteFriendsGroupResponse;
class CMsgClientDeleteFriendsGroupResponseDefaultTypeInternal;
extern CMsgClientDeleteFriendsGroupResponseDefaultTypeInternal _CMsgClientDeleteFriendsGroupResponse_default_instance_;
class CMsgClientEmoticonList;
class CMsgClientEmoticonListDefaultTypeInternal;
extern CMsgClientEmoticonListDefaultTypeInternal _CMsgClientEmoticonList_default_instance_;
class CMsgClientEmoticonList_Emoticon;
class CMsgClientEmoticonList_EmoticonDefaultTypeInternal;
extern CMsgClientEmoticonList_EmoticonDefaultTypeInternal _CMsgClientEmoticonList_Emoticon_default_instance_;
class CMsgClientFriendMsg;
class CMsgClientFriendMsgDefaultTypeInternal;
extern CMsgClientFriendMsgDefaultTypeInternal _CMsgClientFriendMsg_default_instance_;
class CMsgClientFriendMsgIncoming;
class CMsgClientFriendMsgIncomingDefaultTypeInternal;
extern CMsgClientFriendMsgIncomingDefaultTypeInternal _CMsgClientFriendMsgIncoming_default_instance_;
class CMsgClientFriendProfileInfo;
class CMsgClientFriendProfileInfoDefaultTypeInternal;
extern CMsgClientFriendProfileInfoDefaultTypeInternal _CMsgClientFriendProfileInfo_default_instance_;
class CMsgClientFriendProfileInfoResponse;
class CMsgClientFriendProfileInfoResponseDefaultTypeInternal;
extern CMsgClientFriendProfileInfoResponseDefaultTypeInternal _CMsgClientFriendProfileInfoResponse_default_instance_;
class CMsgClientFriendsGroupsList;
class CMsgClientFriendsGroupsListDefaultTypeInternal;
extern CMsgClientFriendsGroupsListDefaultTypeInternal _CMsgClientFriendsGroupsList_default_instance_;
class CMsgClientFriendsGroupsList_FriendGroup;
class CMsgClientFriendsGroupsList_FriendGroupDefaultTypeInternal;
extern CMsgClientFriendsGroupsList_FriendGroupDefaultTypeInternal _CMsgClientFriendsGroupsList_FriendGroup_default_instance_;
class CMsgClientFriendsGroupsList_FriendGroupsMembership;
class CMsgClientFriendsGroupsList_FriendGroupsMembershipDefaultTypeInternal;
extern CMsgClientFriendsGroupsList_FriendGroupsMembershipDefaultTypeInternal _CMsgClientFriendsGroupsList_FriendGroupsMembership_default_instance_;
class CMsgClientFriendsList;
class CMsgClientFriendsListDefaultTypeInternal;
extern CMsgClientFriendsListDefaultTypeInternal _CMsgClientFriendsList_default_instance_;
class CMsgClientFriendsList_Friend;
class CMsgClientFriendsList_FriendDefaultTypeInternal;
extern CMsgClientFriendsList_FriendDefaultTypeInternal _CMsgClientFriendsList_Friend_default_instance_;
class CMsgClientGetEmoticonList;
class CMsgClientGetEmoticonListDefaultTypeInternal;
extern CMsgClientGetEmoticonListDefaultTypeInternal _CMsgClientGetEmoticonList_default_instance_;
class CMsgClientHideFriend;
class CMsgClientHideFriendDefaultTypeInternal;
extern CMsgClientHideFriendDefaultTypeInternal _CMsgClientHideFriend_default_instance_;
class CMsgClientPersonaState;
class CMsgClientPersonaStateDefaultTypeInternal;
extern CMsgClientPersonaStateDefaultTypeInternal _CMsgClientPersonaState_default_instance_;
class CMsgClientPersonaState_Friend;
class CMsgClientPersonaState_FriendDefaultTypeInternal;
extern CMsgClientPersonaState_FriendDefaultTypeInternal _CMsgClientPersonaState_Friend_default_instance_;
class CMsgClientPlayerNicknameList;
class CMsgClientPlayerNicknameListDefaultTypeInternal;
extern CMsgClientPlayerNicknameListDefaultTypeInternal _CMsgClientPlayerNicknameList_default_instance_;
class CMsgClientPlayerNicknameList_PlayerNickname;
class CMsgClientPlayerNicknameList_PlayerNicknameDefaultTypeInternal;
extern CMsgClientPlayerNicknameList_PlayerNicknameDefaultTypeInternal _CMsgClientPlayerNicknameList_PlayerNickname_default_instance_;
class CMsgClientRemoveFriend;
class CMsgClientRemoveFriendDefaultTypeInternal;
extern CMsgClientRemoveFriendDefaultTypeInternal _CMsgClientRemoveFriend_default_instance_;
class CMsgClientRemoveFriendFromGroup;
class CMsgClientRemoveFriendFromGroupDefaultTypeInternal;
extern CMsgClientRemoveFriendFromGroupDefaultTypeInternal _CMsgClientRemoveFriendFromGroup_default_instance_;
class CMsgClientRemoveFriendFromGroupResponse;
class CMsgClientRemoveFriendFromGroupResponseDefaultTypeInternal;
extern CMsgClientRemoveFriendFromGroupResponseDefaultTypeInternal _CMsgClientRemoveFriendFromGroupResponse_default_instance_;
class CMsgClientRenameFriendsGroup;
class CMsgClientRenameFriendsGroupDefaultTypeInternal;
extern CMsgClientRenameFriendsGroupDefaultTypeInternal _CMsgClientRenameFriendsGroup_default_instance_;
class CMsgClientRenameFriendsGroupResponse;
class CMsgClientRenameFriendsGroupResponseDefaultTypeInternal;
extern CMsgClientRenameFriendsGroupResponseDefaultTypeInternal _CMsgClientRenameFriendsGroupResponse_default_instance_;
class CMsgClientRequestFriendData;
class CMsgClientRequestFriendDataDefaultTypeInternal;
extern CMsgClientRequestFriendDataDefaultTypeInternal _CMsgClientRequestFriendData_default_instance_;
class CMsgClientSetPlayerNickname;
class CMsgClientSetPlayerNicknameDefaultTypeInternal;
extern CMsgClientSetPlayerNicknameDefaultTypeInternal _CMsgClientSetPlayerNickname_default_instance_;
class CMsgClientSetPlayerNicknameResponse;
class CMsgClientSetPlayerNicknameResponseDefaultTypeInternal;
extern CMsgClientSetPlayerNicknameResponseDefaultTypeInternal _CMsgClientSetPlayerNicknameResponse_default_instance_;
class CMsgMulti;
class CMsgMultiDefaultTypeInternal;
extern CMsgMultiDefaultTypeInternal _CMsgMulti_default_instance_;
class CMsgPersonaChangeResponse;
class CMsgPersonaChangeResponseDefaultTypeInternal;
extern CMsgPersonaChangeResponseDefaultTypeInternal _CMsgPersonaChangeResponse_default_instance_;
class CMsgProtoBufHeader;
class CMsgProtoBufHeaderDefaultTypeInternal;
extern CMsgProtoBufHeaderDefaultTypeInternal _CMsgProtoBufHeader_default_instance_;
class CMsgProtobufWrapped;
class CMsgProtobufWrappedDefaultTypeInternal;
extern CMsgProtobufWrappedDefaultTypeInternal _CMsgProtobufWrapped_default_instance_;
}  // namespace steam
}  // namespace proto

namespace proto {
namespace steam {

namespace protobuf_steammessages_5fclientserver_5ffriends_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_steammessages_5fclientserver_5ffriends_2eproto

// ===================================================================

class CMsgClientFriendMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientFriendMsg) */ {
 public:
  CMsgClientFriendMsg();
  virtual ~CMsgClientFriendMsg();

  CMsgClientFriendMsg(const CMsgClientFriendMsg& from);

  inline CMsgClientFriendMsg& operator=(const CMsgClientFriendMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientFriendMsg& default_instance();

  static inline const CMsgClientFriendMsg* internal_default_instance() {
    return reinterpret_cast<const CMsgClientFriendMsg*>(
               &_CMsgClientFriendMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CMsgClientFriendMsg* other);

  // implements Message ----------------------------------------------

  inline CMsgClientFriendMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientFriendMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientFriendMsg& from);
  void MergeFrom(const CMsgClientFriendMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientFriendMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes message = 3;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional int32 chat_entry_type = 2;
  bool has_chat_entry_type() const;
  void clear_chat_entry_type();
  static const int kChatEntryTypeFieldNumber = 2;
  ::google::protobuf::int32 chat_entry_type() const;
  void set_chat_entry_type(::google::protobuf::int32 value);

  // optional fixed32 rtime32_server_timestamp = 4;
  bool has_rtime32_server_timestamp() const;
  void clear_rtime32_server_timestamp();
  static const int kRtime32ServerTimestampFieldNumber = 4;
  ::google::protobuf::uint32 rtime32_server_timestamp() const;
  void set_rtime32_server_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientFriendMsg)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_chat_entry_type();
  void clear_has_chat_entry_type();
  void set_has_message();
  void clear_has_message();
  void set_has_rtime32_server_timestamp();
  void clear_has_rtime32_server_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::int32 chat_entry_type_;
  ::google::protobuf::uint32 rtime32_server_timestamp_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientFriendMsgIncoming : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientFriendMsgIncoming) */ {
 public:
  CMsgClientFriendMsgIncoming();
  virtual ~CMsgClientFriendMsgIncoming();

  CMsgClientFriendMsgIncoming(const CMsgClientFriendMsgIncoming& from);

  inline CMsgClientFriendMsgIncoming& operator=(const CMsgClientFriendMsgIncoming& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientFriendMsgIncoming& default_instance();

  static inline const CMsgClientFriendMsgIncoming* internal_default_instance() {
    return reinterpret_cast<const CMsgClientFriendMsgIncoming*>(
               &_CMsgClientFriendMsgIncoming_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(CMsgClientFriendMsgIncoming* other);

  // implements Message ----------------------------------------------

  inline CMsgClientFriendMsgIncoming* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientFriendMsgIncoming* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientFriendMsgIncoming& from);
  void MergeFrom(const CMsgClientFriendMsgIncoming& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientFriendMsgIncoming* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bytes message = 4;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // optional fixed64 steamid_from = 1;
  bool has_steamid_from() const;
  void clear_steamid_from();
  static const int kSteamidFromFieldNumber = 1;
  ::google::protobuf::uint64 steamid_from() const;
  void set_steamid_from(::google::protobuf::uint64 value);

  // optional int32 chat_entry_type = 2;
  bool has_chat_entry_type() const;
  void clear_chat_entry_type();
  static const int kChatEntryTypeFieldNumber = 2;
  ::google::protobuf::int32 chat_entry_type() const;
  void set_chat_entry_type(::google::protobuf::int32 value);

  // optional bool from_limited_account = 3;
  bool has_from_limited_account() const;
  void clear_from_limited_account();
  static const int kFromLimitedAccountFieldNumber = 3;
  bool from_limited_account() const;
  void set_from_limited_account(bool value);

  // optional fixed32 rtime32_server_timestamp = 5;
  bool has_rtime32_server_timestamp() const;
  void clear_rtime32_server_timestamp();
  static const int kRtime32ServerTimestampFieldNumber = 5;
  ::google::protobuf::uint32 rtime32_server_timestamp() const;
  void set_rtime32_server_timestamp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientFriendMsgIncoming)
 private:
  void set_has_steamid_from();
  void clear_has_steamid_from();
  void set_has_chat_entry_type();
  void clear_has_chat_entry_type();
  void set_has_from_limited_account();
  void clear_has_from_limited_account();
  void set_has_message();
  void clear_has_message();
  void set_has_rtime32_server_timestamp();
  void clear_has_rtime32_server_timestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint64 steamid_from_;
  ::google::protobuf::int32 chat_entry_type_;
  bool from_limited_account_;
  ::google::protobuf::uint32 rtime32_server_timestamp_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientAddFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientAddFriend) */ {
 public:
  CMsgClientAddFriend();
  virtual ~CMsgClientAddFriend();

  CMsgClientAddFriend(const CMsgClientAddFriend& from);

  inline CMsgClientAddFriend& operator=(const CMsgClientAddFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientAddFriend& default_instance();

  static inline const CMsgClientAddFriend* internal_default_instance() {
    return reinterpret_cast<const CMsgClientAddFriend*>(
               &_CMsgClientAddFriend_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(CMsgClientAddFriend* other);

  // implements Message ----------------------------------------------

  inline CMsgClientAddFriend* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientAddFriend* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientAddFriend& from);
  void MergeFrom(const CMsgClientAddFriend& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientAddFriend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string accountname_or_email_to_add = 2;
  bool has_accountname_or_email_to_add() const;
  void clear_accountname_or_email_to_add();
  static const int kAccountnameOrEmailToAddFieldNumber = 2;
  const ::std::string& accountname_or_email_to_add() const;
  void set_accountname_or_email_to_add(const ::std::string& value);
  #if LANG_CXX11
  void set_accountname_or_email_to_add(::std::string&& value);
  #endif
  void set_accountname_or_email_to_add(const char* value);
  void set_accountname_or_email_to_add(const char* value, size_t size);
  ::std::string* mutable_accountname_or_email_to_add();
  ::std::string* release_accountname_or_email_to_add();
  void set_allocated_accountname_or_email_to_add(::std::string* accountname_or_email_to_add);

  // optional fixed64 steamid_to_add = 1;
  bool has_steamid_to_add() const;
  void clear_steamid_to_add();
  static const int kSteamidToAddFieldNumber = 1;
  ::google::protobuf::uint64 steamid_to_add() const;
  void set_steamid_to_add(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientAddFriend)
 private:
  void set_has_steamid_to_add();
  void clear_has_steamid_to_add();
  void set_has_accountname_or_email_to_add();
  void clear_has_accountname_or_email_to_add();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr accountname_or_email_to_add_;
  ::google::protobuf::uint64 steamid_to_add_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientAddFriendResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientAddFriendResponse) */ {
 public:
  CMsgClientAddFriendResponse();
  virtual ~CMsgClientAddFriendResponse();

  CMsgClientAddFriendResponse(const CMsgClientAddFriendResponse& from);

  inline CMsgClientAddFriendResponse& operator=(const CMsgClientAddFriendResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientAddFriendResponse& default_instance();

  static inline const CMsgClientAddFriendResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientAddFriendResponse*>(
               &_CMsgClientAddFriendResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(CMsgClientAddFriendResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientAddFriendResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientAddFriendResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientAddFriendResponse& from);
  void MergeFrom(const CMsgClientAddFriendResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientAddFriendResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string persona_name_added = 3;
  bool has_persona_name_added() const;
  void clear_persona_name_added();
  static const int kPersonaNameAddedFieldNumber = 3;
  const ::std::string& persona_name_added() const;
  void set_persona_name_added(const ::std::string& value);
  #if LANG_CXX11
  void set_persona_name_added(::std::string&& value);
  #endif
  void set_persona_name_added(const char* value);
  void set_persona_name_added(const char* value, size_t size);
  ::std::string* mutable_persona_name_added();
  ::std::string* release_persona_name_added();
  void set_allocated_persona_name_added(::std::string* persona_name_added);

  // optional fixed64 steam_id_added = 2;
  bool has_steam_id_added() const;
  void clear_steam_id_added();
  static const int kSteamIdAddedFieldNumber = 2;
  ::google::protobuf::uint64 steam_id_added() const;
  void set_steam_id_added(::google::protobuf::uint64 value);

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::int32 eresult() const;
  void set_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientAddFriendResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();
  void set_has_steam_id_added();
  void clear_has_steam_id_added();
  void set_has_persona_name_added();
  void clear_has_persona_name_added();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr persona_name_added_;
  ::google::protobuf::uint64 steam_id_added_;
  ::google::protobuf::int32 eresult_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientRemoveFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientRemoveFriend) */ {
 public:
  CMsgClientRemoveFriend();
  virtual ~CMsgClientRemoveFriend();

  CMsgClientRemoveFriend(const CMsgClientRemoveFriend& from);

  inline CMsgClientRemoveFriend& operator=(const CMsgClientRemoveFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRemoveFriend& default_instance();

  static inline const CMsgClientRemoveFriend* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRemoveFriend*>(
               &_CMsgClientRemoveFriend_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(CMsgClientRemoveFriend* other);

  // implements Message ----------------------------------------------

  inline CMsgClientRemoveFriend* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientRemoveFriend* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientRemoveFriend& from);
  void MergeFrom(const CMsgClientRemoveFriend& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientRemoveFriend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 friendid = 1;
  bool has_friendid() const;
  void clear_friendid();
  static const int kFriendidFieldNumber = 1;
  ::google::protobuf::uint64 friendid() const;
  void set_friendid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientRemoveFriend)
 private:
  void set_has_friendid();
  void clear_has_friendid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 friendid_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientHideFriend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientHideFriend) */ {
 public:
  CMsgClientHideFriend();
  virtual ~CMsgClientHideFriend();

  CMsgClientHideFriend(const CMsgClientHideFriend& from);

  inline CMsgClientHideFriend& operator=(const CMsgClientHideFriend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientHideFriend& default_instance();

  static inline const CMsgClientHideFriend* internal_default_instance() {
    return reinterpret_cast<const CMsgClientHideFriend*>(
               &_CMsgClientHideFriend_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(CMsgClientHideFriend* other);

  // implements Message ----------------------------------------------

  inline CMsgClientHideFriend* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientHideFriend* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientHideFriend& from);
  void MergeFrom(const CMsgClientHideFriend& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientHideFriend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 friendid = 1;
  bool has_friendid() const;
  void clear_friendid();
  static const int kFriendidFieldNumber = 1;
  ::google::protobuf::uint64 friendid() const;
  void set_friendid(::google::protobuf::uint64 value);

  // optional bool hide = 2;
  bool has_hide() const;
  void clear_hide();
  static const int kHideFieldNumber = 2;
  bool hide() const;
  void set_hide(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientHideFriend)
 private:
  void set_has_friendid();
  void clear_has_friendid();
  void set_has_hide();
  void clear_has_hide();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 friendid_;
  bool hide_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientFriendsList_Friend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientFriendsList.Friend) */ {
 public:
  CMsgClientFriendsList_Friend();
  virtual ~CMsgClientFriendsList_Friend();

  CMsgClientFriendsList_Friend(const CMsgClientFriendsList_Friend& from);

  inline CMsgClientFriendsList_Friend& operator=(const CMsgClientFriendsList_Friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientFriendsList_Friend& default_instance();

  static inline const CMsgClientFriendsList_Friend* internal_default_instance() {
    return reinterpret_cast<const CMsgClientFriendsList_Friend*>(
               &_CMsgClientFriendsList_Friend_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(CMsgClientFriendsList_Friend* other);

  // implements Message ----------------------------------------------

  inline CMsgClientFriendsList_Friend* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientFriendsList_Friend* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientFriendsList_Friend& from);
  void MergeFrom(const CMsgClientFriendsList_Friend& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientFriendsList_Friend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 ulfriendid = 1;
  bool has_ulfriendid() const;
  void clear_ulfriendid();
  static const int kUlfriendidFieldNumber = 1;
  ::google::protobuf::uint64 ulfriendid() const;
  void set_ulfriendid(::google::protobuf::uint64 value);

  // optional uint32 efriendrelationship = 2;
  bool has_efriendrelationship() const;
  void clear_efriendrelationship();
  static const int kEfriendrelationshipFieldNumber = 2;
  ::google::protobuf::uint32 efriendrelationship() const;
  void set_efriendrelationship(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientFriendsList.Friend)
 private:
  void set_has_ulfriendid();
  void clear_has_ulfriendid();
  void set_has_efriendrelationship();
  void clear_has_efriendrelationship();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 ulfriendid_;
  ::google::protobuf::uint32 efriendrelationship_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientFriendsList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientFriendsList) */ {
 public:
  CMsgClientFriendsList();
  virtual ~CMsgClientFriendsList();

  CMsgClientFriendsList(const CMsgClientFriendsList& from);

  inline CMsgClientFriendsList& operator=(const CMsgClientFriendsList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientFriendsList& default_instance();

  static inline const CMsgClientFriendsList* internal_default_instance() {
    return reinterpret_cast<const CMsgClientFriendsList*>(
               &_CMsgClientFriendsList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(CMsgClientFriendsList* other);

  // implements Message ----------------------------------------------

  inline CMsgClientFriendsList* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientFriendsList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientFriendsList& from);
  void MergeFrom(const CMsgClientFriendsList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientFriendsList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientFriendsList_Friend Friend;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CMsgClientFriendsList.Friend friends = 2;
  int friends_size() const;
  void clear_friends();
  static const int kFriendsFieldNumber = 2;
  const ::proto::steam::CMsgClientFriendsList_Friend& friends(int index) const;
  ::proto::steam::CMsgClientFriendsList_Friend* mutable_friends(int index);
  ::proto::steam::CMsgClientFriendsList_Friend* add_friends();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsList_Friend >*
      mutable_friends();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsList_Friend >&
      friends() const;

  // optional uint32 max_friend_count = 3;
  bool has_max_friend_count() const;
  void clear_max_friend_count();
  static const int kMaxFriendCountFieldNumber = 3;
  ::google::protobuf::uint32 max_friend_count() const;
  void set_max_friend_count(::google::protobuf::uint32 value);

  // optional bool bincremental = 1;
  bool has_bincremental() const;
  void clear_bincremental();
  static const int kBincrementalFieldNumber = 1;
  bool bincremental() const;
  void set_bincremental(bool value);

  // optional bool friends_limit_hit = 5;
  bool has_friends_limit_hit() const;
  void clear_friends_limit_hit();
  static const int kFriendsLimitHitFieldNumber = 5;
  bool friends_limit_hit() const;
  void set_friends_limit_hit(bool value);

  // optional uint32 active_friend_count = 4;
  bool has_active_friend_count() const;
  void clear_active_friend_count();
  static const int kActiveFriendCountFieldNumber = 4;
  ::google::protobuf::uint32 active_friend_count() const;
  void set_active_friend_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientFriendsList)
 private:
  void set_has_bincremental();
  void clear_has_bincremental();
  void set_has_max_friend_count();
  void clear_has_max_friend_count();
  void set_has_active_friend_count();
  void clear_has_active_friend_count();
  void set_has_friends_limit_hit();
  void clear_has_friends_limit_hit();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsList_Friend > friends_;
  ::google::protobuf::uint32 max_friend_count_;
  bool bincremental_;
  bool friends_limit_hit_;
  ::google::protobuf::uint32 active_friend_count_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientFriendsGroupsList_FriendGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientFriendsGroupsList.FriendGroup) */ {
 public:
  CMsgClientFriendsGroupsList_FriendGroup();
  virtual ~CMsgClientFriendsGroupsList_FriendGroup();

  CMsgClientFriendsGroupsList_FriendGroup(const CMsgClientFriendsGroupsList_FriendGroup& from);

  inline CMsgClientFriendsGroupsList_FriendGroup& operator=(const CMsgClientFriendsGroupsList_FriendGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientFriendsGroupsList_FriendGroup& default_instance();

  static inline const CMsgClientFriendsGroupsList_FriendGroup* internal_default_instance() {
    return reinterpret_cast<const CMsgClientFriendsGroupsList_FriendGroup*>(
               &_CMsgClientFriendsGroupsList_FriendGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(CMsgClientFriendsGroupsList_FriendGroup* other);

  // implements Message ----------------------------------------------

  inline CMsgClientFriendsGroupsList_FriendGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientFriendsGroupsList_FriendGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientFriendsGroupsList_FriendGroup& from);
  void MergeFrom(const CMsgClientFriendsGroupsList_FriendGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientFriendsGroupsList_FriendGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string strGroupName = 2;
  bool has_strgroupname() const;
  void clear_strgroupname();
  static const int kStrGroupNameFieldNumber = 2;
  const ::std::string& strgroupname() const;
  void set_strgroupname(const ::std::string& value);
  #if LANG_CXX11
  void set_strgroupname(::std::string&& value);
  #endif
  void set_strgroupname(const char* value);
  void set_strgroupname(const char* value, size_t size);
  ::std::string* mutable_strgroupname();
  ::std::string* release_strgroupname();
  void set_allocated_strgroupname(::std::string* strgroupname);

  // optional int32 nGroupID = 1;
  bool has_ngroupid() const;
  void clear_ngroupid();
  static const int kNGroupIDFieldNumber = 1;
  ::google::protobuf::int32 ngroupid() const;
  void set_ngroupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientFriendsGroupsList.FriendGroup)
 private:
  void set_has_ngroupid();
  void clear_has_ngroupid();
  void set_has_strgroupname();
  void clear_has_strgroupname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr strgroupname_;
  ::google::protobuf::int32 ngroupid_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientFriendsGroupsList_FriendGroupsMembership : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientFriendsGroupsList.FriendGroupsMembership) */ {
 public:
  CMsgClientFriendsGroupsList_FriendGroupsMembership();
  virtual ~CMsgClientFriendsGroupsList_FriendGroupsMembership();

  CMsgClientFriendsGroupsList_FriendGroupsMembership(const CMsgClientFriendsGroupsList_FriendGroupsMembership& from);

  inline CMsgClientFriendsGroupsList_FriendGroupsMembership& operator=(const CMsgClientFriendsGroupsList_FriendGroupsMembership& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientFriendsGroupsList_FriendGroupsMembership& default_instance();

  static inline const CMsgClientFriendsGroupsList_FriendGroupsMembership* internal_default_instance() {
    return reinterpret_cast<const CMsgClientFriendsGroupsList_FriendGroupsMembership*>(
               &_CMsgClientFriendsGroupsList_FriendGroupsMembership_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(CMsgClientFriendsGroupsList_FriendGroupsMembership* other);

  // implements Message ----------------------------------------------

  inline CMsgClientFriendsGroupsList_FriendGroupsMembership* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientFriendsGroupsList_FriendGroupsMembership* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientFriendsGroupsList_FriendGroupsMembership& from);
  void MergeFrom(const CMsgClientFriendsGroupsList_FriendGroupsMembership& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientFriendsGroupsList_FriendGroupsMembership* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 ulSteamID = 1;
  bool has_ulsteamid() const;
  void clear_ulsteamid();
  static const int kUlSteamIDFieldNumber = 1;
  ::google::protobuf::uint64 ulsteamid() const;
  void set_ulsteamid(::google::protobuf::uint64 value);

  // optional int32 nGroupID = 2;
  bool has_ngroupid() const;
  void clear_ngroupid();
  static const int kNGroupIDFieldNumber = 2;
  ::google::protobuf::int32 ngroupid() const;
  void set_ngroupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientFriendsGroupsList.FriendGroupsMembership)
 private:
  void set_has_ulsteamid();
  void clear_has_ulsteamid();
  void set_has_ngroupid();
  void clear_has_ngroupid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 ulsteamid_;
  ::google::protobuf::int32 ngroupid_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientFriendsGroupsList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientFriendsGroupsList) */ {
 public:
  CMsgClientFriendsGroupsList();
  virtual ~CMsgClientFriendsGroupsList();

  CMsgClientFriendsGroupsList(const CMsgClientFriendsGroupsList& from);

  inline CMsgClientFriendsGroupsList& operator=(const CMsgClientFriendsGroupsList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientFriendsGroupsList& default_instance();

  static inline const CMsgClientFriendsGroupsList* internal_default_instance() {
    return reinterpret_cast<const CMsgClientFriendsGroupsList*>(
               &_CMsgClientFriendsGroupsList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CMsgClientFriendsGroupsList* other);

  // implements Message ----------------------------------------------

  inline CMsgClientFriendsGroupsList* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientFriendsGroupsList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientFriendsGroupsList& from);
  void MergeFrom(const CMsgClientFriendsGroupsList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientFriendsGroupsList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientFriendsGroupsList_FriendGroup FriendGroup;
  typedef CMsgClientFriendsGroupsList_FriendGroupsMembership FriendGroupsMembership;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CMsgClientFriendsGroupsList.FriendGroup friendGroups = 3;
  int friendgroups_size() const;
  void clear_friendgroups();
  static const int kFriendGroupsFieldNumber = 3;
  const ::proto::steam::CMsgClientFriendsGroupsList_FriendGroup& friendgroups(int index) const;
  ::proto::steam::CMsgClientFriendsGroupsList_FriendGroup* mutable_friendgroups(int index);
  ::proto::steam::CMsgClientFriendsGroupsList_FriendGroup* add_friendgroups();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsGroupsList_FriendGroup >*
      mutable_friendgroups();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsGroupsList_FriendGroup >&
      friendgroups() const;

  // repeated .proto.steam.CMsgClientFriendsGroupsList.FriendGroupsMembership memberships = 4;
  int memberships_size() const;
  void clear_memberships();
  static const int kMembershipsFieldNumber = 4;
  const ::proto::steam::CMsgClientFriendsGroupsList_FriendGroupsMembership& memberships(int index) const;
  ::proto::steam::CMsgClientFriendsGroupsList_FriendGroupsMembership* mutable_memberships(int index);
  ::proto::steam::CMsgClientFriendsGroupsList_FriendGroupsMembership* add_memberships();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsGroupsList_FriendGroupsMembership >*
      mutable_memberships();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsGroupsList_FriendGroupsMembership >&
      memberships() const;

  // optional bool bremoval = 1;
  bool has_bremoval() const;
  void clear_bremoval();
  static const int kBremovalFieldNumber = 1;
  bool bremoval() const;
  void set_bremoval(bool value);

  // optional bool bincremental = 2;
  bool has_bincremental() const;
  void clear_bincremental();
  static const int kBincrementalFieldNumber = 2;
  bool bincremental() const;
  void set_bincremental(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientFriendsGroupsList)
 private:
  void set_has_bremoval();
  void clear_has_bremoval();
  void set_has_bincremental();
  void clear_has_bincremental();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsGroupsList_FriendGroup > friendgroups_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsGroupsList_FriendGroupsMembership > memberships_;
  bool bremoval_;
  bool bincremental_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientPlayerNicknameList_PlayerNickname : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientPlayerNicknameList.PlayerNickname) */ {
 public:
  CMsgClientPlayerNicknameList_PlayerNickname();
  virtual ~CMsgClientPlayerNicknameList_PlayerNickname();

  CMsgClientPlayerNicknameList_PlayerNickname(const CMsgClientPlayerNicknameList_PlayerNickname& from);

  inline CMsgClientPlayerNicknameList_PlayerNickname& operator=(const CMsgClientPlayerNicknameList_PlayerNickname& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientPlayerNicknameList_PlayerNickname& default_instance();

  static inline const CMsgClientPlayerNicknameList_PlayerNickname* internal_default_instance() {
    return reinterpret_cast<const CMsgClientPlayerNicknameList_PlayerNickname*>(
               &_CMsgClientPlayerNicknameList_PlayerNickname_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CMsgClientPlayerNicknameList_PlayerNickname* other);

  // implements Message ----------------------------------------------

  inline CMsgClientPlayerNicknameList_PlayerNickname* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientPlayerNicknameList_PlayerNickname* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientPlayerNicknameList_PlayerNickname& from);
  void MergeFrom(const CMsgClientPlayerNicknameList_PlayerNickname& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientPlayerNicknameList_PlayerNickname* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 3;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientPlayerNicknameList.PlayerNickname)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_nickname();
  void clear_has_nickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::uint64 steamid_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientPlayerNicknameList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientPlayerNicknameList) */ {
 public:
  CMsgClientPlayerNicknameList();
  virtual ~CMsgClientPlayerNicknameList();

  CMsgClientPlayerNicknameList(const CMsgClientPlayerNicknameList& from);

  inline CMsgClientPlayerNicknameList& operator=(const CMsgClientPlayerNicknameList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientPlayerNicknameList& default_instance();

  static inline const CMsgClientPlayerNicknameList* internal_default_instance() {
    return reinterpret_cast<const CMsgClientPlayerNicknameList*>(
               &_CMsgClientPlayerNicknameList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CMsgClientPlayerNicknameList* other);

  // implements Message ----------------------------------------------

  inline CMsgClientPlayerNicknameList* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientPlayerNicknameList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientPlayerNicknameList& from);
  void MergeFrom(const CMsgClientPlayerNicknameList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientPlayerNicknameList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientPlayerNicknameList_PlayerNickname PlayerNickname;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CMsgClientPlayerNicknameList.PlayerNickname nicknames = 3;
  int nicknames_size() const;
  void clear_nicknames();
  static const int kNicknamesFieldNumber = 3;
  const ::proto::steam::CMsgClientPlayerNicknameList_PlayerNickname& nicknames(int index) const;
  ::proto::steam::CMsgClientPlayerNicknameList_PlayerNickname* mutable_nicknames(int index);
  ::proto::steam::CMsgClientPlayerNicknameList_PlayerNickname* add_nicknames();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientPlayerNicknameList_PlayerNickname >*
      mutable_nicknames();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientPlayerNicknameList_PlayerNickname >&
      nicknames() const;

  // optional bool removal = 1;
  bool has_removal() const;
  void clear_removal();
  static const int kRemovalFieldNumber = 1;
  bool removal() const;
  void set_removal(bool value);

  // optional bool incremental = 2;
  bool has_incremental() const;
  void clear_incremental();
  static const int kIncrementalFieldNumber = 2;
  bool incremental() const;
  void set_incremental(bool value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientPlayerNicknameList)
 private:
  void set_has_removal();
  void clear_has_removal();
  void set_has_incremental();
  void clear_has_incremental();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientPlayerNicknameList_PlayerNickname > nicknames_;
  bool removal_;
  bool incremental_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientSetPlayerNickname : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientSetPlayerNickname) */ {
 public:
  CMsgClientSetPlayerNickname();
  virtual ~CMsgClientSetPlayerNickname();

  CMsgClientSetPlayerNickname(const CMsgClientSetPlayerNickname& from);

  inline CMsgClientSetPlayerNickname& operator=(const CMsgClientSetPlayerNickname& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientSetPlayerNickname& default_instance();

  static inline const CMsgClientSetPlayerNickname* internal_default_instance() {
    return reinterpret_cast<const CMsgClientSetPlayerNickname*>(
               &_CMsgClientSetPlayerNickname_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CMsgClientSetPlayerNickname* other);

  // implements Message ----------------------------------------------

  inline CMsgClientSetPlayerNickname* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientSetPlayerNickname* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientSetPlayerNickname& from);
  void MergeFrom(const CMsgClientSetPlayerNickname& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientSetPlayerNickname* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientSetPlayerNickname)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_nickname();
  void clear_has_nickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::uint64 steamid_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientSetPlayerNicknameResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientSetPlayerNicknameResponse) */ {
 public:
  CMsgClientSetPlayerNicknameResponse();
  virtual ~CMsgClientSetPlayerNicknameResponse();

  CMsgClientSetPlayerNicknameResponse(const CMsgClientSetPlayerNicknameResponse& from);

  inline CMsgClientSetPlayerNicknameResponse& operator=(const CMsgClientSetPlayerNicknameResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientSetPlayerNicknameResponse& default_instance();

  static inline const CMsgClientSetPlayerNicknameResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientSetPlayerNicknameResponse*>(
               &_CMsgClientSetPlayerNicknameResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(CMsgClientSetPlayerNicknameResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientSetPlayerNicknameResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientSetPlayerNicknameResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientSetPlayerNicknameResponse& from);
  void MergeFrom(const CMsgClientSetPlayerNicknameResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientSetPlayerNicknameResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1;
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientSetPlayerNicknameResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientRequestFriendData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientRequestFriendData) */ {
 public:
  CMsgClientRequestFriendData();
  virtual ~CMsgClientRequestFriendData();

  CMsgClientRequestFriendData(const CMsgClientRequestFriendData& from);

  inline CMsgClientRequestFriendData& operator=(const CMsgClientRequestFriendData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRequestFriendData& default_instance();

  static inline const CMsgClientRequestFriendData* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRequestFriendData*>(
               &_CMsgClientRequestFriendData_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(CMsgClientRequestFriendData* other);

  // implements Message ----------------------------------------------

  inline CMsgClientRequestFriendData* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientRequestFriendData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientRequestFriendData& from);
  void MergeFrom(const CMsgClientRequestFriendData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientRequestFriendData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated fixed64 friends = 2;
  int friends_size() const;
  void clear_friends();
  static const int kFriendsFieldNumber = 2;
  ::google::protobuf::uint64 friends(int index) const;
  void set_friends(int index, ::google::protobuf::uint64 value);
  void add_friends(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      friends() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_friends();

  // optional uint32 persona_state_requested = 1;
  bool has_persona_state_requested() const;
  void clear_persona_state_requested();
  static const int kPersonaStateRequestedFieldNumber = 1;
  ::google::protobuf::uint32 persona_state_requested() const;
  void set_persona_state_requested(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientRequestFriendData)
 private:
  void set_has_persona_state_requested();
  void clear_has_persona_state_requested();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > friends_;
  ::google::protobuf::uint32 persona_state_requested_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientChangeStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientChangeStatus) */ {
 public:
  CMsgClientChangeStatus();
  virtual ~CMsgClientChangeStatus();

  CMsgClientChangeStatus(const CMsgClientChangeStatus& from);

  inline CMsgClientChangeStatus& operator=(const CMsgClientChangeStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientChangeStatus& default_instance();

  static inline const CMsgClientChangeStatus* internal_default_instance() {
    return reinterpret_cast<const CMsgClientChangeStatus*>(
               &_CMsgClientChangeStatus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(CMsgClientChangeStatus* other);

  // implements Message ----------------------------------------------

  inline CMsgClientChangeStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientChangeStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientChangeStatus& from);
  void MergeFrom(const CMsgClientChangeStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientChangeStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string player_name = 2;
  bool has_player_name() const;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // optional uint32 persona_state = 1;
  bool has_persona_state() const;
  void clear_persona_state();
  static const int kPersonaStateFieldNumber = 1;
  ::google::protobuf::uint32 persona_state() const;
  void set_persona_state(::google::protobuf::uint32 value);

  // optional bool is_auto_generated_name = 3;
  bool has_is_auto_generated_name() const;
  void clear_is_auto_generated_name();
  static const int kIsAutoGeneratedNameFieldNumber = 3;
  bool is_auto_generated_name() const;
  void set_is_auto_generated_name(bool value);

  // optional bool high_priority = 4;
  bool has_high_priority() const;
  void clear_high_priority();
  static const int kHighPriorityFieldNumber = 4;
  bool high_priority() const;
  void set_high_priority(bool value);

  // optional bool persona_set_by_user = 5;
  bool has_persona_set_by_user() const;
  void clear_persona_set_by_user();
  static const int kPersonaSetByUserFieldNumber = 5;
  bool persona_set_by_user() const;
  void set_persona_set_by_user(bool value);

  // optional uint32 persona_state_flags = 6 [default = 0];
  bool has_persona_state_flags() const;
  void clear_persona_state_flags();
  static const int kPersonaStateFlagsFieldNumber = 6;
  ::google::protobuf::uint32 persona_state_flags() const;
  void set_persona_state_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientChangeStatus)
 private:
  void set_has_persona_state();
  void clear_has_persona_state();
  void set_has_player_name();
  void clear_has_player_name();
  void set_has_is_auto_generated_name();
  void clear_has_is_auto_generated_name();
  void set_has_high_priority();
  void clear_has_high_priority();
  void set_has_persona_set_by_user();
  void clear_has_persona_set_by_user();
  void set_has_persona_state_flags();
  void clear_has_persona_state_flags();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::uint32 persona_state_;
  bool is_auto_generated_name_;
  bool high_priority_;
  bool persona_set_by_user_;
  ::google::protobuf::uint32 persona_state_flags_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgPersonaChangeResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgPersonaChangeResponse) */ {
 public:
  CMsgPersonaChangeResponse();
  virtual ~CMsgPersonaChangeResponse();

  CMsgPersonaChangeResponse(const CMsgPersonaChangeResponse& from);

  inline CMsgPersonaChangeResponse& operator=(const CMsgPersonaChangeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgPersonaChangeResponse& default_instance();

  static inline const CMsgPersonaChangeResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgPersonaChangeResponse*>(
               &_CMsgPersonaChangeResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(CMsgPersonaChangeResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgPersonaChangeResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgPersonaChangeResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgPersonaChangeResponse& from);
  void MergeFrom(const CMsgPersonaChangeResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgPersonaChangeResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string player_name = 2;
  bool has_player_name() const;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 2;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgPersonaChangeResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_player_name();
  void clear_has_player_name();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::uint32 result_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientPersonaState_Friend : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientPersonaState.Friend) */ {
 public:
  CMsgClientPersonaState_Friend();
  virtual ~CMsgClientPersonaState_Friend();

  CMsgClientPersonaState_Friend(const CMsgClientPersonaState_Friend& from);

  inline CMsgClientPersonaState_Friend& operator=(const CMsgClientPersonaState_Friend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientPersonaState_Friend& default_instance();

  static inline const CMsgClientPersonaState_Friend* internal_default_instance() {
    return reinterpret_cast<const CMsgClientPersonaState_Friend*>(
               &_CMsgClientPersonaState_Friend_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(CMsgClientPersonaState_Friend* other);

  // implements Message ----------------------------------------------

  inline CMsgClientPersonaState_Friend* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientPersonaState_Friend* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientPersonaState_Friend& from);
  void MergeFrom(const CMsgClientPersonaState_Friend& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientPersonaState_Friend* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string player_name = 15;
  bool has_player_name() const;
  void clear_player_name();
  static const int kPlayerNameFieldNumber = 15;
  const ::std::string& player_name() const;
  void set_player_name(const ::std::string& value);
  #if LANG_CXX11
  void set_player_name(::std::string&& value);
  #endif
  void set_player_name(const char* value);
  void set_player_name(const char* value, size_t size);
  ::std::string* mutable_player_name();
  ::std::string* release_player_name();
  void set_allocated_player_name(::std::string* player_name);

  // optional bytes avatar_hash = 31;
  bool has_avatar_hash() const;
  void clear_avatar_hash();
  static const int kAvatarHashFieldNumber = 31;
  const ::std::string& avatar_hash() const;
  void set_avatar_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_avatar_hash(::std::string&& value);
  #endif
  void set_avatar_hash(const char* value);
  void set_avatar_hash(const void* value, size_t size);
  ::std::string* mutable_avatar_hash();
  ::std::string* release_avatar_hash();
  void set_allocated_avatar_hash(::std::string* avatar_hash);

  // optional string game_name = 55;
  bool has_game_name() const;
  void clear_game_name();
  static const int kGameNameFieldNumber = 55;
  const ::std::string& game_name() const;
  void set_game_name(const ::std::string& value);
  #if LANG_CXX11
  void set_game_name(::std::string&& value);
  #endif
  void set_game_name(const char* value);
  void set_game_name(const char* value, size_t size);
  ::std::string* mutable_game_name();
  ::std::string* release_game_name();
  void set_allocated_game_name(::std::string* game_name);

  // optional bytes game_data_blob = 60;
  bool has_game_data_blob() const;
  void clear_game_data_blob();
  static const int kGameDataBlobFieldNumber = 60;
  const ::std::string& game_data_blob() const;
  void set_game_data_blob(const ::std::string& value);
  #if LANG_CXX11
  void set_game_data_blob(::std::string&& value);
  #endif
  void set_game_data_blob(const char* value);
  void set_game_data_blob(const void* value, size_t size);
  ::std::string* mutable_game_data_blob();
  ::std::string* release_game_data_blob();
  void set_allocated_game_data_blob(::std::string* game_data_blob);

  // optional string clan_tag = 65;
  bool has_clan_tag() const;
  void clear_clan_tag();
  static const int kClanTagFieldNumber = 65;
  const ::std::string& clan_tag() const;
  void set_clan_tag(const ::std::string& value);
  #if LANG_CXX11
  void set_clan_tag(::std::string&& value);
  #endif
  void set_clan_tag(const char* value);
  void set_clan_tag(const char* value, size_t size);
  ::std::string* mutable_clan_tag();
  ::std::string* release_clan_tag();
  void set_allocated_clan_tag(::std::string* clan_tag);

  // optional string facebook_name = 66;
  bool has_facebook_name() const;
  void clear_facebook_name();
  static const int kFacebookNameFieldNumber = 66;
  const ::std::string& facebook_name() const;
  void set_facebook_name(const ::std::string& value);
  #if LANG_CXX11
  void set_facebook_name(::std::string&& value);
  #endif
  void set_facebook_name(const char* value);
  void set_facebook_name(const char* value, size_t size);
  ::std::string* mutable_facebook_name();
  ::std::string* release_facebook_name();
  void set_allocated_facebook_name(::std::string* facebook_name);

  // optional fixed64 friendid = 1;
  bool has_friendid() const;
  void clear_friendid();
  static const int kFriendidFieldNumber = 1;
  ::google::protobuf::uint64 friendid() const;
  void set_friendid(::google::protobuf::uint64 value);

  // optional uint32 persona_state = 2;
  bool has_persona_state() const;
  void clear_persona_state();
  static const int kPersonaStateFieldNumber = 2;
  ::google::protobuf::uint32 persona_state() const;
  void set_persona_state(::google::protobuf::uint32 value);

  // optional uint32 game_played_app_id = 3;
  bool has_game_played_app_id() const;
  void clear_game_played_app_id();
  static const int kGamePlayedAppIdFieldNumber = 3;
  ::google::protobuf::uint32 game_played_app_id() const;
  void set_game_played_app_id(::google::protobuf::uint32 value);

  // optional uint32 game_server_ip = 4;
  bool has_game_server_ip() const;
  void clear_game_server_ip();
  static const int kGameServerIpFieldNumber = 4;
  ::google::protobuf::uint32 game_server_ip() const;
  void set_game_server_ip(::google::protobuf::uint32 value);

  // optional uint32 game_server_port = 5;
  bool has_game_server_port() const;
  void clear_game_server_port();
  static const int kGameServerPortFieldNumber = 5;
  ::google::protobuf::uint32 game_server_port() const;
  void set_game_server_port(::google::protobuf::uint32 value);

  // optional uint32 persona_state_flags = 6;
  bool has_persona_state_flags() const;
  void clear_persona_state_flags();
  static const int kPersonaStateFlagsFieldNumber = 6;
  ::google::protobuf::uint32 persona_state_flags() const;
  void set_persona_state_flags(::google::protobuf::uint32 value);

  // optional uint32 online_session_instances = 7;
  bool has_online_session_instances() const;
  void clear_online_session_instances();
  static const int kOnlineSessionInstancesFieldNumber = 7;
  ::google::protobuf::uint32 online_session_instances() const;
  void set_online_session_instances(::google::protobuf::uint32 value);

  // optional uint32 published_instance_id = 8;
  bool has_published_instance_id() const;
  void clear_published_instance_id();
  static const int kPublishedInstanceIdFieldNumber = 8;
  ::google::protobuf::uint32 published_instance_id() const;
  void set_published_instance_id(::google::protobuf::uint32 value);

  // optional bool persona_set_by_user = 10;
  bool has_persona_set_by_user() const;
  void clear_persona_set_by_user();
  static const int kPersonaSetByUserFieldNumber = 10;
  bool persona_set_by_user() const;
  void set_persona_set_by_user(bool value);

  // optional fixed64 steamid_source = 25;
  bool has_steamid_source() const;
  void clear_steamid_source();
  static const int kSteamidSourceFieldNumber = 25;
  ::google::protobuf::uint64 steamid_source() const;
  void set_steamid_source(::google::protobuf::uint64 value);

  // optional uint32 query_port = 20;
  bool has_query_port() const;
  void clear_query_port();
  static const int kQueryPortFieldNumber = 20;
  ::google::protobuf::uint32 query_port() const;
  void set_query_port(::google::protobuf::uint32 value);

  // optional uint32 last_logoff = 45;
  bool has_last_logoff() const;
  void clear_last_logoff();
  static const int kLastLogoffFieldNumber = 45;
  ::google::protobuf::uint32 last_logoff() const;
  void set_last_logoff(::google::protobuf::uint32 value);

  // optional uint32 last_logon = 46;
  bool has_last_logon() const;
  void clear_last_logon();
  static const int kLastLogonFieldNumber = 46;
  ::google::protobuf::uint32 last_logon() const;
  void set_last_logon(::google::protobuf::uint32 value);

  // optional uint32 clan_rank = 50;
  bool has_clan_rank() const;
  void clear_clan_rank();
  static const int kClanRankFieldNumber = 50;
  ::google::protobuf::uint32 clan_rank() const;
  void set_clan_rank(::google::protobuf::uint32 value);

  // optional fixed64 gameid = 56;
  bool has_gameid() const;
  void clear_gameid();
  static const int kGameidFieldNumber = 56;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // optional uint64 facebook_id = 67;
  bool has_facebook_id() const;
  void clear_facebook_id();
  static const int kFacebookIdFieldNumber = 67;
  ::google::protobuf::uint64 facebook_id() const;
  void set_facebook_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientPersonaState.Friend)
 private:
  void set_has_friendid();
  void clear_has_friendid();
  void set_has_persona_state();
  void clear_has_persona_state();
  void set_has_game_played_app_id();
  void clear_has_game_played_app_id();
  void set_has_game_server_ip();
  void clear_has_game_server_ip();
  void set_has_game_server_port();
  void clear_has_game_server_port();
  void set_has_persona_state_flags();
  void clear_has_persona_state_flags();
  void set_has_online_session_instances();
  void clear_has_online_session_instances();
  void set_has_published_instance_id();
  void clear_has_published_instance_id();
  void set_has_persona_set_by_user();
  void clear_has_persona_set_by_user();
  void set_has_player_name();
  void clear_has_player_name();
  void set_has_query_port();
  void clear_has_query_port();
  void set_has_steamid_source();
  void clear_has_steamid_source();
  void set_has_avatar_hash();
  void clear_has_avatar_hash();
  void set_has_last_logoff();
  void clear_has_last_logoff();
  void set_has_last_logon();
  void clear_has_last_logon();
  void set_has_clan_rank();
  void clear_has_clan_rank();
  void set_has_game_name();
  void clear_has_game_name();
  void set_has_gameid();
  void clear_has_gameid();
  void set_has_game_data_blob();
  void clear_has_game_data_blob();
  void set_has_clan_tag();
  void clear_has_clan_tag();
  void set_has_facebook_name();
  void clear_has_facebook_name();
  void set_has_facebook_id();
  void clear_has_facebook_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr player_name_;
  ::google::protobuf::internal::ArenaStringPtr avatar_hash_;
  ::google::protobuf::internal::ArenaStringPtr game_name_;
  ::google::protobuf::internal::ArenaStringPtr game_data_blob_;
  ::google::protobuf::internal::ArenaStringPtr clan_tag_;
  ::google::protobuf::internal::ArenaStringPtr facebook_name_;
  ::google::protobuf::uint64 friendid_;
  ::google::protobuf::uint32 persona_state_;
  ::google::protobuf::uint32 game_played_app_id_;
  ::google::protobuf::uint32 game_server_ip_;
  ::google::protobuf::uint32 game_server_port_;
  ::google::protobuf::uint32 persona_state_flags_;
  ::google::protobuf::uint32 online_session_instances_;
  ::google::protobuf::uint32 published_instance_id_;
  bool persona_set_by_user_;
  ::google::protobuf::uint64 steamid_source_;
  ::google::protobuf::uint32 query_port_;
  ::google::protobuf::uint32 last_logoff_;
  ::google::protobuf::uint32 last_logon_;
  ::google::protobuf::uint32 clan_rank_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint64 facebook_id_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientPersonaState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientPersonaState) */ {
 public:
  CMsgClientPersonaState();
  virtual ~CMsgClientPersonaState();

  CMsgClientPersonaState(const CMsgClientPersonaState& from);

  inline CMsgClientPersonaState& operator=(const CMsgClientPersonaState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientPersonaState& default_instance();

  static inline const CMsgClientPersonaState* internal_default_instance() {
    return reinterpret_cast<const CMsgClientPersonaState*>(
               &_CMsgClientPersonaState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(CMsgClientPersonaState* other);

  // implements Message ----------------------------------------------

  inline CMsgClientPersonaState* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientPersonaState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientPersonaState& from);
  void MergeFrom(const CMsgClientPersonaState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientPersonaState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientPersonaState_Friend Friend;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CMsgClientPersonaState.Friend friends = 2;
  int friends_size() const;
  void clear_friends();
  static const int kFriendsFieldNumber = 2;
  const ::proto::steam::CMsgClientPersonaState_Friend& friends(int index) const;
  ::proto::steam::CMsgClientPersonaState_Friend* mutable_friends(int index);
  ::proto::steam::CMsgClientPersonaState_Friend* add_friends();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientPersonaState_Friend >*
      mutable_friends();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientPersonaState_Friend >&
      friends() const;

  // optional uint32 status_flags = 1;
  bool has_status_flags() const;
  void clear_status_flags();
  static const int kStatusFlagsFieldNumber = 1;
  ::google::protobuf::uint32 status_flags() const;
  void set_status_flags(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientPersonaState)
 private:
  void set_has_status_flags();
  void clear_has_status_flags();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientPersonaState_Friend > friends_;
  ::google::protobuf::uint32 status_flags_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientFriendProfileInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientFriendProfileInfo) */ {
 public:
  CMsgClientFriendProfileInfo();
  virtual ~CMsgClientFriendProfileInfo();

  CMsgClientFriendProfileInfo(const CMsgClientFriendProfileInfo& from);

  inline CMsgClientFriendProfileInfo& operator=(const CMsgClientFriendProfileInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientFriendProfileInfo& default_instance();

  static inline const CMsgClientFriendProfileInfo* internal_default_instance() {
    return reinterpret_cast<const CMsgClientFriendProfileInfo*>(
               &_CMsgClientFriendProfileInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(CMsgClientFriendProfileInfo* other);

  // implements Message ----------------------------------------------

  inline CMsgClientFriendProfileInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientFriendProfileInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientFriendProfileInfo& from);
  void MergeFrom(const CMsgClientFriendProfileInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientFriendProfileInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid_friend = 1;
  bool has_steamid_friend() const;
  void clear_steamid_friend();
  static const int kSteamidFriendFieldNumber = 1;
  ::google::protobuf::uint64 steamid_friend() const;
  void set_steamid_friend(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientFriendProfileInfo)
 private:
  void set_has_steamid_friend();
  void clear_has_steamid_friend();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_friend_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientFriendProfileInfoResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientFriendProfileInfoResponse) */ {
 public:
  CMsgClientFriendProfileInfoResponse();
  virtual ~CMsgClientFriendProfileInfoResponse();

  CMsgClientFriendProfileInfoResponse(const CMsgClientFriendProfileInfoResponse& from);

  inline CMsgClientFriendProfileInfoResponse& operator=(const CMsgClientFriendProfileInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientFriendProfileInfoResponse& default_instance();

  static inline const CMsgClientFriendProfileInfoResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientFriendProfileInfoResponse*>(
               &_CMsgClientFriendProfileInfoResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(CMsgClientFriendProfileInfoResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientFriendProfileInfoResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientFriendProfileInfoResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientFriendProfileInfoResponse& from);
  void MergeFrom(const CMsgClientFriendProfileInfoResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientFriendProfileInfoResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string real_name = 4;
  bool has_real_name() const;
  void clear_real_name();
  static const int kRealNameFieldNumber = 4;
  const ::std::string& real_name() const;
  void set_real_name(const ::std::string& value);
  #if LANG_CXX11
  void set_real_name(::std::string&& value);
  #endif
  void set_real_name(const char* value);
  void set_real_name(const char* value, size_t size);
  ::std::string* mutable_real_name();
  ::std::string* release_real_name();
  void set_allocated_real_name(::std::string* real_name);

  // optional string city_name = 5;
  bool has_city_name() const;
  void clear_city_name();
  static const int kCityNameFieldNumber = 5;
  const ::std::string& city_name() const;
  void set_city_name(const ::std::string& value);
  #if LANG_CXX11
  void set_city_name(::std::string&& value);
  #endif
  void set_city_name(const char* value);
  void set_city_name(const char* value, size_t size);
  ::std::string* mutable_city_name();
  ::std::string* release_city_name();
  void set_allocated_city_name(::std::string* city_name);

  // optional string state_name = 6;
  bool has_state_name() const;
  void clear_state_name();
  static const int kStateNameFieldNumber = 6;
  const ::std::string& state_name() const;
  void set_state_name(const ::std::string& value);
  #if LANG_CXX11
  void set_state_name(::std::string&& value);
  #endif
  void set_state_name(const char* value);
  void set_state_name(const char* value, size_t size);
  ::std::string* mutable_state_name();
  ::std::string* release_state_name();
  void set_allocated_state_name(::std::string* state_name);

  // optional string country_name = 7;
  bool has_country_name() const;
  void clear_country_name();
  static const int kCountryNameFieldNumber = 7;
  const ::std::string& country_name() const;
  void set_country_name(const ::std::string& value);
  #if LANG_CXX11
  void set_country_name(::std::string&& value);
  #endif
  void set_country_name(const char* value);
  void set_country_name(const char* value, size_t size);
  ::std::string* mutable_country_name();
  ::std::string* release_country_name();
  void set_allocated_country_name(::std::string* country_name);

  // optional string headline = 8;
  bool has_headline() const;
  void clear_headline();
  static const int kHeadlineFieldNumber = 8;
  const ::std::string& headline() const;
  void set_headline(const ::std::string& value);
  #if LANG_CXX11
  void set_headline(::std::string&& value);
  #endif
  void set_headline(const char* value);
  void set_headline(const char* value, size_t size);
  ::std::string* mutable_headline();
  ::std::string* release_headline();
  void set_allocated_headline(::std::string* headline);

  // optional string summary = 9;
  bool has_summary() const;
  void clear_summary();
  static const int kSummaryFieldNumber = 9;
  const ::std::string& summary() const;
  void set_summary(const ::std::string& value);
  #if LANG_CXX11
  void set_summary(::std::string&& value);
  #endif
  void set_summary(const char* value);
  void set_summary(const char* value, size_t size);
  ::std::string* mutable_summary();
  ::std::string* release_summary();
  void set_allocated_summary(::std::string* summary);

  // optional fixed64 steamid_friend = 2;
  bool has_steamid_friend() const;
  void clear_steamid_friend();
  static const int kSteamidFriendFieldNumber = 2;
  ::google::protobuf::uint64 steamid_friend() const;
  void set_steamid_friend(::google::protobuf::uint64 value);

  // optional uint32 time_created = 3;
  bool has_time_created() const;
  void clear_time_created();
  static const int kTimeCreatedFieldNumber = 3;
  ::google::protobuf::uint32 time_created() const;
  void set_time_created(::google::protobuf::uint32 value);

  // optional int32 eresult = 1 [default = 2];
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::int32 eresult() const;
  void set_eresult(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientFriendProfileInfoResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();
  void set_has_steamid_friend();
  void clear_has_steamid_friend();
  void set_has_time_created();
  void clear_has_time_created();
  void set_has_real_name();
  void clear_has_real_name();
  void set_has_city_name();
  void clear_has_city_name();
  void set_has_state_name();
  void clear_has_state_name();
  void set_has_country_name();
  void clear_has_country_name();
  void set_has_headline();
  void clear_has_headline();
  void set_has_summary();
  void clear_has_summary();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr real_name_;
  ::google::protobuf::internal::ArenaStringPtr city_name_;
  ::google::protobuf::internal::ArenaStringPtr state_name_;
  ::google::protobuf::internal::ArenaStringPtr country_name_;
  ::google::protobuf::internal::ArenaStringPtr headline_;
  ::google::protobuf::internal::ArenaStringPtr summary_;
  ::google::protobuf::uint64 steamid_friend_;
  ::google::protobuf::uint32 time_created_;
  ::google::protobuf::int32 eresult_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientCreateFriendsGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientCreateFriendsGroup) */ {
 public:
  CMsgClientCreateFriendsGroup();
  virtual ~CMsgClientCreateFriendsGroup();

  CMsgClientCreateFriendsGroup(const CMsgClientCreateFriendsGroup& from);

  inline CMsgClientCreateFriendsGroup& operator=(const CMsgClientCreateFriendsGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientCreateFriendsGroup& default_instance();

  static inline const CMsgClientCreateFriendsGroup* internal_default_instance() {
    return reinterpret_cast<const CMsgClientCreateFriendsGroup*>(
               &_CMsgClientCreateFriendsGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(CMsgClientCreateFriendsGroup* other);

  // implements Message ----------------------------------------------

  inline CMsgClientCreateFriendsGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientCreateFriendsGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientCreateFriendsGroup& from);
  void MergeFrom(const CMsgClientCreateFriendsGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientCreateFriendsGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string groupname = 2;
  bool has_groupname() const;
  void clear_groupname();
  static const int kGroupnameFieldNumber = 2;
  const ::std::string& groupname() const;
  void set_groupname(const ::std::string& value);
  #if LANG_CXX11
  void set_groupname(::std::string&& value);
  #endif
  void set_groupname(const char* value);
  void set_groupname(const char* value, size_t size);
  ::std::string* mutable_groupname();
  ::std::string* release_groupname();
  void set_allocated_groupname(::std::string* groupname);

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientCreateFriendsGroup)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_groupname();
  void clear_has_groupname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr groupname_;
  ::google::protobuf::uint64 steamid_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientCreateFriendsGroupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientCreateFriendsGroupResponse) */ {
 public:
  CMsgClientCreateFriendsGroupResponse();
  virtual ~CMsgClientCreateFriendsGroupResponse();

  CMsgClientCreateFriendsGroupResponse(const CMsgClientCreateFriendsGroupResponse& from);

  inline CMsgClientCreateFriendsGroupResponse& operator=(const CMsgClientCreateFriendsGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientCreateFriendsGroupResponse& default_instance();

  static inline const CMsgClientCreateFriendsGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientCreateFriendsGroupResponse*>(
               &_CMsgClientCreateFriendsGroupResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(CMsgClientCreateFriendsGroupResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientCreateFriendsGroupResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientCreateFriendsGroupResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientCreateFriendsGroupResponse& from);
  void MergeFrom(const CMsgClientCreateFriendsGroupResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientCreateFriendsGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1;
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // optional int32 groupid = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupidFieldNumber = 2;
  ::google::protobuf::int32 groupid() const;
  void set_groupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientCreateFriendsGroupResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();
  void set_has_groupid();
  void clear_has_groupid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  ::google::protobuf::int32 groupid_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientDeleteFriendsGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientDeleteFriendsGroup) */ {
 public:
  CMsgClientDeleteFriendsGroup();
  virtual ~CMsgClientDeleteFriendsGroup();

  CMsgClientDeleteFriendsGroup(const CMsgClientDeleteFriendsGroup& from);

  inline CMsgClientDeleteFriendsGroup& operator=(const CMsgClientDeleteFriendsGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientDeleteFriendsGroup& default_instance();

  static inline const CMsgClientDeleteFriendsGroup* internal_default_instance() {
    return reinterpret_cast<const CMsgClientDeleteFriendsGroup*>(
               &_CMsgClientDeleteFriendsGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(CMsgClientDeleteFriendsGroup* other);

  // implements Message ----------------------------------------------

  inline CMsgClientDeleteFriendsGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientDeleteFriendsGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientDeleteFriendsGroup& from);
  void MergeFrom(const CMsgClientDeleteFriendsGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientDeleteFriendsGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamid = 1;
  bool has_steamid() const;
  void clear_steamid();
  static const int kSteamidFieldNumber = 1;
  ::google::protobuf::uint64 steamid() const;
  void set_steamid(::google::protobuf::uint64 value);

  // optional int32 groupid = 2;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupidFieldNumber = 2;
  ::google::protobuf::int32 groupid() const;
  void set_groupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientDeleteFriendsGroup)
 private:
  void set_has_steamid();
  void clear_has_steamid();
  void set_has_groupid();
  void clear_has_groupid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamid_;
  ::google::protobuf::int32 groupid_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientDeleteFriendsGroupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientDeleteFriendsGroupResponse) */ {
 public:
  CMsgClientDeleteFriendsGroupResponse();
  virtual ~CMsgClientDeleteFriendsGroupResponse();

  CMsgClientDeleteFriendsGroupResponse(const CMsgClientDeleteFriendsGroupResponse& from);

  inline CMsgClientDeleteFriendsGroupResponse& operator=(const CMsgClientDeleteFriendsGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientDeleteFriendsGroupResponse& default_instance();

  static inline const CMsgClientDeleteFriendsGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientDeleteFriendsGroupResponse*>(
               &_CMsgClientDeleteFriendsGroupResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(CMsgClientDeleteFriendsGroupResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientDeleteFriendsGroupResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientDeleteFriendsGroupResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientDeleteFriendsGroupResponse& from);
  void MergeFrom(const CMsgClientDeleteFriendsGroupResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientDeleteFriendsGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1;
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientDeleteFriendsGroupResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientRenameFriendsGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientRenameFriendsGroup) */ {
 public:
  CMsgClientRenameFriendsGroup();
  virtual ~CMsgClientRenameFriendsGroup();

  CMsgClientRenameFriendsGroup(const CMsgClientRenameFriendsGroup& from);

  inline CMsgClientRenameFriendsGroup& operator=(const CMsgClientRenameFriendsGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRenameFriendsGroup& default_instance();

  static inline const CMsgClientRenameFriendsGroup* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRenameFriendsGroup*>(
               &_CMsgClientRenameFriendsGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(CMsgClientRenameFriendsGroup* other);

  // implements Message ----------------------------------------------

  inline CMsgClientRenameFriendsGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientRenameFriendsGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientRenameFriendsGroup& from);
  void MergeFrom(const CMsgClientRenameFriendsGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientRenameFriendsGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string groupname = 2;
  bool has_groupname() const;
  void clear_groupname();
  static const int kGroupnameFieldNumber = 2;
  const ::std::string& groupname() const;
  void set_groupname(const ::std::string& value);
  #if LANG_CXX11
  void set_groupname(::std::string&& value);
  #endif
  void set_groupname(const char* value);
  void set_groupname(const char* value, size_t size);
  ::std::string* mutable_groupname();
  ::std::string* release_groupname();
  void set_allocated_groupname(::std::string* groupname);

  // optional int32 groupid = 1;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::int32 groupid() const;
  void set_groupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientRenameFriendsGroup)
 private:
  void set_has_groupid();
  void clear_has_groupid();
  void set_has_groupname();
  void clear_has_groupname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr groupname_;
  ::google::protobuf::int32 groupid_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientRenameFriendsGroupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientRenameFriendsGroupResponse) */ {
 public:
  CMsgClientRenameFriendsGroupResponse();
  virtual ~CMsgClientRenameFriendsGroupResponse();

  CMsgClientRenameFriendsGroupResponse(const CMsgClientRenameFriendsGroupResponse& from);

  inline CMsgClientRenameFriendsGroupResponse& operator=(const CMsgClientRenameFriendsGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRenameFriendsGroupResponse& default_instance();

  static inline const CMsgClientRenameFriendsGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRenameFriendsGroupResponse*>(
               &_CMsgClientRenameFriendsGroupResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(CMsgClientRenameFriendsGroupResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientRenameFriendsGroupResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientRenameFriendsGroupResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientRenameFriendsGroupResponse& from);
  void MergeFrom(const CMsgClientRenameFriendsGroupResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientRenameFriendsGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1;
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientRenameFriendsGroupResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientAddFriendToGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientAddFriendToGroup) */ {
 public:
  CMsgClientAddFriendToGroup();
  virtual ~CMsgClientAddFriendToGroup();

  CMsgClientAddFriendToGroup(const CMsgClientAddFriendToGroup& from);

  inline CMsgClientAddFriendToGroup& operator=(const CMsgClientAddFriendToGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientAddFriendToGroup& default_instance();

  static inline const CMsgClientAddFriendToGroup* internal_default_instance() {
    return reinterpret_cast<const CMsgClientAddFriendToGroup*>(
               &_CMsgClientAddFriendToGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(CMsgClientAddFriendToGroup* other);

  // implements Message ----------------------------------------------

  inline CMsgClientAddFriendToGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientAddFriendToGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientAddFriendToGroup& from);
  void MergeFrom(const CMsgClientAddFriendToGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientAddFriendToGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamiduser = 2;
  bool has_steamiduser() const;
  void clear_steamiduser();
  static const int kSteamiduserFieldNumber = 2;
  ::google::protobuf::uint64 steamiduser() const;
  void set_steamiduser(::google::protobuf::uint64 value);

  // optional int32 groupid = 1;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::int32 groupid() const;
  void set_groupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientAddFriendToGroup)
 private:
  void set_has_groupid();
  void clear_has_groupid();
  void set_has_steamiduser();
  void clear_has_steamiduser();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamiduser_;
  ::google::protobuf::int32 groupid_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientAddFriendToGroupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientAddFriendToGroupResponse) */ {
 public:
  CMsgClientAddFriendToGroupResponse();
  virtual ~CMsgClientAddFriendToGroupResponse();

  CMsgClientAddFriendToGroupResponse(const CMsgClientAddFriendToGroupResponse& from);

  inline CMsgClientAddFriendToGroupResponse& operator=(const CMsgClientAddFriendToGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientAddFriendToGroupResponse& default_instance();

  static inline const CMsgClientAddFriendToGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientAddFriendToGroupResponse*>(
               &_CMsgClientAddFriendToGroupResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(CMsgClientAddFriendToGroupResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientAddFriendToGroupResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientAddFriendToGroupResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientAddFriendToGroupResponse& from);
  void MergeFrom(const CMsgClientAddFriendToGroupResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientAddFriendToGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1;
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientAddFriendToGroupResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientRemoveFriendFromGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientRemoveFriendFromGroup) */ {
 public:
  CMsgClientRemoveFriendFromGroup();
  virtual ~CMsgClientRemoveFriendFromGroup();

  CMsgClientRemoveFriendFromGroup(const CMsgClientRemoveFriendFromGroup& from);

  inline CMsgClientRemoveFriendFromGroup& operator=(const CMsgClientRemoveFriendFromGroup& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRemoveFriendFromGroup& default_instance();

  static inline const CMsgClientRemoveFriendFromGroup* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRemoveFriendFromGroup*>(
               &_CMsgClientRemoveFriendFromGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(CMsgClientRemoveFriendFromGroup* other);

  // implements Message ----------------------------------------------

  inline CMsgClientRemoveFriendFromGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientRemoveFriendFromGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientRemoveFriendFromGroup& from);
  void MergeFrom(const CMsgClientRemoveFriendFromGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientRemoveFriendFromGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional fixed64 steamiduser = 2;
  bool has_steamiduser() const;
  void clear_steamiduser();
  static const int kSteamiduserFieldNumber = 2;
  ::google::protobuf::uint64 steamiduser() const;
  void set_steamiduser(::google::protobuf::uint64 value);

  // optional int32 groupid = 1;
  bool has_groupid() const;
  void clear_groupid();
  static const int kGroupidFieldNumber = 1;
  ::google::protobuf::int32 groupid() const;
  void set_groupid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientRemoveFriendFromGroup)
 private:
  void set_has_groupid();
  void clear_has_groupid();
  void set_has_steamiduser();
  void clear_has_steamiduser();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint64 steamiduser_;
  ::google::protobuf::int32 groupid_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientRemoveFriendFromGroupResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientRemoveFriendFromGroupResponse) */ {
 public:
  CMsgClientRemoveFriendFromGroupResponse();
  virtual ~CMsgClientRemoveFriendFromGroupResponse();

  CMsgClientRemoveFriendFromGroupResponse(const CMsgClientRemoveFriendFromGroupResponse& from);

  inline CMsgClientRemoveFriendFromGroupResponse& operator=(const CMsgClientRemoveFriendFromGroupResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientRemoveFriendFromGroupResponse& default_instance();

  static inline const CMsgClientRemoveFriendFromGroupResponse* internal_default_instance() {
    return reinterpret_cast<const CMsgClientRemoveFriendFromGroupResponse*>(
               &_CMsgClientRemoveFriendFromGroupResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(CMsgClientRemoveFriendFromGroupResponse* other);

  // implements Message ----------------------------------------------

  inline CMsgClientRemoveFriendFromGroupResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientRemoveFriendFromGroupResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientRemoveFriendFromGroupResponse& from);
  void MergeFrom(const CMsgClientRemoveFriendFromGroupResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientRemoveFriendFromGroupResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 eresult = 1;
  bool has_eresult() const;
  void clear_eresult();
  static const int kEresultFieldNumber = 1;
  ::google::protobuf::uint32 eresult() const;
  void set_eresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientRemoveFriendFromGroupResponse)
 private:
  void set_has_eresult();
  void clear_has_eresult();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 eresult_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientGetEmoticonList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientGetEmoticonList) */ {
 public:
  CMsgClientGetEmoticonList();
  virtual ~CMsgClientGetEmoticonList();

  CMsgClientGetEmoticonList(const CMsgClientGetEmoticonList& from);

  inline CMsgClientGetEmoticonList& operator=(const CMsgClientGetEmoticonList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientGetEmoticonList& default_instance();

  static inline const CMsgClientGetEmoticonList* internal_default_instance() {
    return reinterpret_cast<const CMsgClientGetEmoticonList*>(
               &_CMsgClientGetEmoticonList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(CMsgClientGetEmoticonList* other);

  // implements Message ----------------------------------------------

  inline CMsgClientGetEmoticonList* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientGetEmoticonList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientGetEmoticonList& from);
  void MergeFrom(const CMsgClientGetEmoticonList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientGetEmoticonList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientGetEmoticonList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientEmoticonList_Emoticon : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientEmoticonList.Emoticon) */ {
 public:
  CMsgClientEmoticonList_Emoticon();
  virtual ~CMsgClientEmoticonList_Emoticon();

  CMsgClientEmoticonList_Emoticon(const CMsgClientEmoticonList_Emoticon& from);

  inline CMsgClientEmoticonList_Emoticon& operator=(const CMsgClientEmoticonList_Emoticon& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientEmoticonList_Emoticon& default_instance();

  static inline const CMsgClientEmoticonList_Emoticon* internal_default_instance() {
    return reinterpret_cast<const CMsgClientEmoticonList_Emoticon*>(
               &_CMsgClientEmoticonList_Emoticon_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(CMsgClientEmoticonList_Emoticon* other);

  // implements Message ----------------------------------------------

  inline CMsgClientEmoticonList_Emoticon* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientEmoticonList_Emoticon* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientEmoticonList_Emoticon& from);
  void MergeFrom(const CMsgClientEmoticonList_Emoticon& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientEmoticonList_Emoticon* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional int32 count = 2;
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientEmoticonList.Emoticon)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_count();
  void clear_has_count();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 count_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CMsgClientEmoticonList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proto.steam.CMsgClientEmoticonList) */ {
 public:
  CMsgClientEmoticonList();
  virtual ~CMsgClientEmoticonList();

  CMsgClientEmoticonList(const CMsgClientEmoticonList& from);

  inline CMsgClientEmoticonList& operator=(const CMsgClientEmoticonList& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CMsgClientEmoticonList& default_instance();

  static inline const CMsgClientEmoticonList* internal_default_instance() {
    return reinterpret_cast<const CMsgClientEmoticonList*>(
               &_CMsgClientEmoticonList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(CMsgClientEmoticonList* other);

  // implements Message ----------------------------------------------

  inline CMsgClientEmoticonList* New() const PROTOBUF_FINAL { return New(NULL); }

  CMsgClientEmoticonList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CMsgClientEmoticonList& from);
  void MergeFrom(const CMsgClientEmoticonList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CMsgClientEmoticonList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef CMsgClientEmoticonList_Emoticon Emoticon;

  // accessors -------------------------------------------------------

  // repeated .proto.steam.CMsgClientEmoticonList.Emoticon emoticons = 1;
  int emoticons_size() const;
  void clear_emoticons();
  static const int kEmoticonsFieldNumber = 1;
  const ::proto::steam::CMsgClientEmoticonList_Emoticon& emoticons(int index) const;
  ::proto::steam::CMsgClientEmoticonList_Emoticon* mutable_emoticons(int index);
  ::proto::steam::CMsgClientEmoticonList_Emoticon* add_emoticons();
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientEmoticonList_Emoticon >*
      mutable_emoticons();
  const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientEmoticonList_Emoticon >&
      emoticons() const;

  // @@protoc_insertion_point(class_scope:proto.steam.CMsgClientEmoticonList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientEmoticonList_Emoticon > emoticons_;
  friend struct protobuf_steammessages_5fclientserver_5ffriends_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CMsgClientFriendMsg

// optional fixed64 steamid = 1;
inline bool CMsgClientFriendMsg::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientFriendMsg::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientFriendMsg::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientFriendMsg::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgClientFriendMsg::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendMsg.steamid)
  return steamid_;
}
inline void CMsgClientFriendMsg::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendMsg.steamid)
}

// optional int32 chat_entry_type = 2;
inline bool CMsgClientFriendMsg::has_chat_entry_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientFriendMsg::set_has_chat_entry_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientFriendMsg::clear_has_chat_entry_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientFriendMsg::clear_chat_entry_type() {
  chat_entry_type_ = 0;
  clear_has_chat_entry_type();
}
inline ::google::protobuf::int32 CMsgClientFriendMsg::chat_entry_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendMsg.chat_entry_type)
  return chat_entry_type_;
}
inline void CMsgClientFriendMsg::set_chat_entry_type(::google::protobuf::int32 value) {
  set_has_chat_entry_type();
  chat_entry_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendMsg.chat_entry_type)
}

// optional bytes message = 3;
inline bool CMsgClientFriendMsg::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientFriendMsg::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientFriendMsg::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientFriendMsg::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CMsgClientFriendMsg::message() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendMsg.message)
  return message_.GetNoArena();
}
inline void CMsgClientFriendMsg::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendMsg.message)
}
#if LANG_CXX11
inline void CMsgClientFriendMsg::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientFriendMsg.message)
}
#endif
inline void CMsgClientFriendMsg::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientFriendMsg.message)
}
inline void CMsgClientFriendMsg::set_message(const void* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientFriendMsg.message)
}
inline ::std::string* CMsgClientFriendMsg::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientFriendMsg.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientFriendMsg::release_message() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientFriendMsg.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientFriendMsg::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientFriendMsg.message)
}

// optional fixed32 rtime32_server_timestamp = 4;
inline bool CMsgClientFriendMsg::has_rtime32_server_timestamp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientFriendMsg::set_has_rtime32_server_timestamp() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientFriendMsg::clear_has_rtime32_server_timestamp() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientFriendMsg::clear_rtime32_server_timestamp() {
  rtime32_server_timestamp_ = 0u;
  clear_has_rtime32_server_timestamp();
}
inline ::google::protobuf::uint32 CMsgClientFriendMsg::rtime32_server_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendMsg.rtime32_server_timestamp)
  return rtime32_server_timestamp_;
}
inline void CMsgClientFriendMsg::set_rtime32_server_timestamp(::google::protobuf::uint32 value) {
  set_has_rtime32_server_timestamp();
  rtime32_server_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendMsg.rtime32_server_timestamp)
}

// -------------------------------------------------------------------

// CMsgClientFriendMsgIncoming

// optional fixed64 steamid_from = 1;
inline bool CMsgClientFriendMsgIncoming::has_steamid_from() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientFriendMsgIncoming::set_has_steamid_from() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientFriendMsgIncoming::clear_has_steamid_from() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientFriendMsgIncoming::clear_steamid_from() {
  steamid_from_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_from();
}
inline ::google::protobuf::uint64 CMsgClientFriendMsgIncoming::steamid_from() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendMsgIncoming.steamid_from)
  return steamid_from_;
}
inline void CMsgClientFriendMsgIncoming::set_steamid_from(::google::protobuf::uint64 value) {
  set_has_steamid_from();
  steamid_from_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendMsgIncoming.steamid_from)
}

// optional int32 chat_entry_type = 2;
inline bool CMsgClientFriendMsgIncoming::has_chat_entry_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientFriendMsgIncoming::set_has_chat_entry_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientFriendMsgIncoming::clear_has_chat_entry_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientFriendMsgIncoming::clear_chat_entry_type() {
  chat_entry_type_ = 0;
  clear_has_chat_entry_type();
}
inline ::google::protobuf::int32 CMsgClientFriendMsgIncoming::chat_entry_type() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendMsgIncoming.chat_entry_type)
  return chat_entry_type_;
}
inline void CMsgClientFriendMsgIncoming::set_chat_entry_type(::google::protobuf::int32 value) {
  set_has_chat_entry_type();
  chat_entry_type_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendMsgIncoming.chat_entry_type)
}

// optional bool from_limited_account = 3;
inline bool CMsgClientFriendMsgIncoming::has_from_limited_account() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientFriendMsgIncoming::set_has_from_limited_account() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientFriendMsgIncoming::clear_has_from_limited_account() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientFriendMsgIncoming::clear_from_limited_account() {
  from_limited_account_ = false;
  clear_has_from_limited_account();
}
inline bool CMsgClientFriendMsgIncoming::from_limited_account() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendMsgIncoming.from_limited_account)
  return from_limited_account_;
}
inline void CMsgClientFriendMsgIncoming::set_from_limited_account(bool value) {
  set_has_from_limited_account();
  from_limited_account_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendMsgIncoming.from_limited_account)
}

// optional bytes message = 4;
inline bool CMsgClientFriendMsgIncoming::has_message() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientFriendMsgIncoming::set_has_message() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientFriendMsgIncoming::clear_has_message() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientFriendMsgIncoming::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& CMsgClientFriendMsgIncoming::message() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendMsgIncoming.message)
  return message_.GetNoArena();
}
inline void CMsgClientFriendMsgIncoming::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendMsgIncoming.message)
}
#if LANG_CXX11
inline void CMsgClientFriendMsgIncoming::set_message(::std::string&& value) {
  set_has_message();
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientFriendMsgIncoming.message)
}
#endif
inline void CMsgClientFriendMsgIncoming::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientFriendMsgIncoming.message)
}
inline void CMsgClientFriendMsgIncoming::set_message(const void* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientFriendMsgIncoming.message)
}
inline ::std::string* CMsgClientFriendMsgIncoming::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientFriendMsgIncoming.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientFriendMsgIncoming::release_message() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientFriendMsgIncoming.message)
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientFriendMsgIncoming::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientFriendMsgIncoming.message)
}

// optional fixed32 rtime32_server_timestamp = 5;
inline bool CMsgClientFriendMsgIncoming::has_rtime32_server_timestamp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientFriendMsgIncoming::set_has_rtime32_server_timestamp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientFriendMsgIncoming::clear_has_rtime32_server_timestamp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientFriendMsgIncoming::clear_rtime32_server_timestamp() {
  rtime32_server_timestamp_ = 0u;
  clear_has_rtime32_server_timestamp();
}
inline ::google::protobuf::uint32 CMsgClientFriendMsgIncoming::rtime32_server_timestamp() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendMsgIncoming.rtime32_server_timestamp)
  return rtime32_server_timestamp_;
}
inline void CMsgClientFriendMsgIncoming::set_rtime32_server_timestamp(::google::protobuf::uint32 value) {
  set_has_rtime32_server_timestamp();
  rtime32_server_timestamp_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendMsgIncoming.rtime32_server_timestamp)
}

// -------------------------------------------------------------------

// CMsgClientAddFriend

// optional fixed64 steamid_to_add = 1;
inline bool CMsgClientAddFriend::has_steamid_to_add() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientAddFriend::set_has_steamid_to_add() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientAddFriend::clear_has_steamid_to_add() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientAddFriend::clear_steamid_to_add() {
  steamid_to_add_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_to_add();
}
inline ::google::protobuf::uint64 CMsgClientAddFriend::steamid_to_add() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAddFriend.steamid_to_add)
  return steamid_to_add_;
}
inline void CMsgClientAddFriend::set_steamid_to_add(::google::protobuf::uint64 value) {
  set_has_steamid_to_add();
  steamid_to_add_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAddFriend.steamid_to_add)
}

// optional string accountname_or_email_to_add = 2;
inline bool CMsgClientAddFriend::has_accountname_or_email_to_add() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientAddFriend::set_has_accountname_or_email_to_add() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientAddFriend::clear_has_accountname_or_email_to_add() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientAddFriend::clear_accountname_or_email_to_add() {
  accountname_or_email_to_add_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_accountname_or_email_to_add();
}
inline const ::std::string& CMsgClientAddFriend::accountname_or_email_to_add() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAddFriend.accountname_or_email_to_add)
  return accountname_or_email_to_add_.GetNoArena();
}
inline void CMsgClientAddFriend::set_accountname_or_email_to_add(const ::std::string& value) {
  set_has_accountname_or_email_to_add();
  accountname_or_email_to_add_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAddFriend.accountname_or_email_to_add)
}
#if LANG_CXX11
inline void CMsgClientAddFriend::set_accountname_or_email_to_add(::std::string&& value) {
  set_has_accountname_or_email_to_add();
  accountname_or_email_to_add_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientAddFriend.accountname_or_email_to_add)
}
#endif
inline void CMsgClientAddFriend::set_accountname_or_email_to_add(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_accountname_or_email_to_add();
  accountname_or_email_to_add_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientAddFriend.accountname_or_email_to_add)
}
inline void CMsgClientAddFriend::set_accountname_or_email_to_add(const char* value, size_t size) {
  set_has_accountname_or_email_to_add();
  accountname_or_email_to_add_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientAddFriend.accountname_or_email_to_add)
}
inline ::std::string* CMsgClientAddFriend::mutable_accountname_or_email_to_add() {
  set_has_accountname_or_email_to_add();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientAddFriend.accountname_or_email_to_add)
  return accountname_or_email_to_add_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientAddFriend::release_accountname_or_email_to_add() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientAddFriend.accountname_or_email_to_add)
  clear_has_accountname_or_email_to_add();
  return accountname_or_email_to_add_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientAddFriend::set_allocated_accountname_or_email_to_add(::std::string* accountname_or_email_to_add) {
  if (accountname_or_email_to_add != NULL) {
    set_has_accountname_or_email_to_add();
  } else {
    clear_has_accountname_or_email_to_add();
  }
  accountname_or_email_to_add_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accountname_or_email_to_add);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientAddFriend.accountname_or_email_to_add)
}

// -------------------------------------------------------------------

// CMsgClientAddFriendResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientAddFriendResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientAddFriendResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientAddFriendResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientAddFriendResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgClientAddFriendResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAddFriendResponse.eresult)
  return eresult_;
}
inline void CMsgClientAddFriendResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAddFriendResponse.eresult)
}

// optional fixed64 steam_id_added = 2;
inline bool CMsgClientAddFriendResponse::has_steam_id_added() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientAddFriendResponse::set_has_steam_id_added() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientAddFriendResponse::clear_has_steam_id_added() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientAddFriendResponse::clear_steam_id_added() {
  steam_id_added_ = GOOGLE_ULONGLONG(0);
  clear_has_steam_id_added();
}
inline ::google::protobuf::uint64 CMsgClientAddFriendResponse::steam_id_added() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAddFriendResponse.steam_id_added)
  return steam_id_added_;
}
inline void CMsgClientAddFriendResponse::set_steam_id_added(::google::protobuf::uint64 value) {
  set_has_steam_id_added();
  steam_id_added_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAddFriendResponse.steam_id_added)
}

// optional string persona_name_added = 3;
inline bool CMsgClientAddFriendResponse::has_persona_name_added() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientAddFriendResponse::set_has_persona_name_added() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientAddFriendResponse::clear_has_persona_name_added() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientAddFriendResponse::clear_persona_name_added() {
  persona_name_added_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_persona_name_added();
}
inline const ::std::string& CMsgClientAddFriendResponse::persona_name_added() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAddFriendResponse.persona_name_added)
  return persona_name_added_.GetNoArena();
}
inline void CMsgClientAddFriendResponse::set_persona_name_added(const ::std::string& value) {
  set_has_persona_name_added();
  persona_name_added_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAddFriendResponse.persona_name_added)
}
#if LANG_CXX11
inline void CMsgClientAddFriendResponse::set_persona_name_added(::std::string&& value) {
  set_has_persona_name_added();
  persona_name_added_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientAddFriendResponse.persona_name_added)
}
#endif
inline void CMsgClientAddFriendResponse::set_persona_name_added(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_persona_name_added();
  persona_name_added_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientAddFriendResponse.persona_name_added)
}
inline void CMsgClientAddFriendResponse::set_persona_name_added(const char* value, size_t size) {
  set_has_persona_name_added();
  persona_name_added_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientAddFriendResponse.persona_name_added)
}
inline ::std::string* CMsgClientAddFriendResponse::mutable_persona_name_added() {
  set_has_persona_name_added();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientAddFriendResponse.persona_name_added)
  return persona_name_added_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientAddFriendResponse::release_persona_name_added() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientAddFriendResponse.persona_name_added)
  clear_has_persona_name_added();
  return persona_name_added_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientAddFriendResponse::set_allocated_persona_name_added(::std::string* persona_name_added) {
  if (persona_name_added != NULL) {
    set_has_persona_name_added();
  } else {
    clear_has_persona_name_added();
  }
  persona_name_added_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), persona_name_added);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientAddFriendResponse.persona_name_added)
}

// -------------------------------------------------------------------

// CMsgClientRemoveFriend

// optional fixed64 friendid = 1;
inline bool CMsgClientRemoveFriend::has_friendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRemoveFriend::set_has_friendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRemoveFriend::clear_has_friendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRemoveFriend::clear_friendid() {
  friendid_ = GOOGLE_ULONGLONG(0);
  clear_has_friendid();
}
inline ::google::protobuf::uint64 CMsgClientRemoveFriend::friendid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRemoveFriend.friendid)
  return friendid_;
}
inline void CMsgClientRemoveFriend::set_friendid(::google::protobuf::uint64 value) {
  set_has_friendid();
  friendid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRemoveFriend.friendid)
}

// -------------------------------------------------------------------

// CMsgClientHideFriend

// optional fixed64 friendid = 1;
inline bool CMsgClientHideFriend::has_friendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientHideFriend::set_has_friendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientHideFriend::clear_has_friendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientHideFriend::clear_friendid() {
  friendid_ = GOOGLE_ULONGLONG(0);
  clear_has_friendid();
}
inline ::google::protobuf::uint64 CMsgClientHideFriend::friendid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientHideFriend.friendid)
  return friendid_;
}
inline void CMsgClientHideFriend::set_friendid(::google::protobuf::uint64 value) {
  set_has_friendid();
  friendid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientHideFriend.friendid)
}

// optional bool hide = 2;
inline bool CMsgClientHideFriend::has_hide() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientHideFriend::set_has_hide() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientHideFriend::clear_has_hide() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientHideFriend::clear_hide() {
  hide_ = false;
  clear_has_hide();
}
inline bool CMsgClientHideFriend::hide() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientHideFriend.hide)
  return hide_;
}
inline void CMsgClientHideFriend::set_hide(bool value) {
  set_has_hide();
  hide_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientHideFriend.hide)
}

// -------------------------------------------------------------------

// CMsgClientFriendsList_Friend

// optional fixed64 ulfriendid = 1;
inline bool CMsgClientFriendsList_Friend::has_ulfriendid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientFriendsList_Friend::set_has_ulfriendid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientFriendsList_Friend::clear_has_ulfriendid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientFriendsList_Friend::clear_ulfriendid() {
  ulfriendid_ = GOOGLE_ULONGLONG(0);
  clear_has_ulfriendid();
}
inline ::google::protobuf::uint64 CMsgClientFriendsList_Friend::ulfriendid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsList.Friend.ulfriendid)
  return ulfriendid_;
}
inline void CMsgClientFriendsList_Friend::set_ulfriendid(::google::protobuf::uint64 value) {
  set_has_ulfriendid();
  ulfriendid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendsList.Friend.ulfriendid)
}

// optional uint32 efriendrelationship = 2;
inline bool CMsgClientFriendsList_Friend::has_efriendrelationship() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientFriendsList_Friend::set_has_efriendrelationship() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientFriendsList_Friend::clear_has_efriendrelationship() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientFriendsList_Friend::clear_efriendrelationship() {
  efriendrelationship_ = 0u;
  clear_has_efriendrelationship();
}
inline ::google::protobuf::uint32 CMsgClientFriendsList_Friend::efriendrelationship() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsList.Friend.efriendrelationship)
  return efriendrelationship_;
}
inline void CMsgClientFriendsList_Friend::set_efriendrelationship(::google::protobuf::uint32 value) {
  set_has_efriendrelationship();
  efriendrelationship_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendsList.Friend.efriendrelationship)
}

// -------------------------------------------------------------------

// CMsgClientFriendsList

// optional bool bincremental = 1;
inline bool CMsgClientFriendsList::has_bincremental() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientFriendsList::set_has_bincremental() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientFriendsList::clear_has_bincremental() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientFriendsList::clear_bincremental() {
  bincremental_ = false;
  clear_has_bincremental();
}
inline bool CMsgClientFriendsList::bincremental() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsList.bincremental)
  return bincremental_;
}
inline void CMsgClientFriendsList::set_bincremental(bool value) {
  set_has_bincremental();
  bincremental_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendsList.bincremental)
}

// repeated .proto.steam.CMsgClientFriendsList.Friend friends = 2;
inline int CMsgClientFriendsList::friends_size() const {
  return friends_.size();
}
inline void CMsgClientFriendsList::clear_friends() {
  friends_.Clear();
}
inline const ::proto::steam::CMsgClientFriendsList_Friend& CMsgClientFriendsList::friends(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsList.friends)
  return friends_.Get(index);
}
inline ::proto::steam::CMsgClientFriendsList_Friend* CMsgClientFriendsList::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientFriendsList.friends)
  return friends_.Mutable(index);
}
inline ::proto::steam::CMsgClientFriendsList_Friend* CMsgClientFriendsList::add_friends() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientFriendsList.friends)
  return friends_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsList_Friend >*
CMsgClientFriendsList::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientFriendsList.friends)
  return &friends_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsList_Friend >&
CMsgClientFriendsList::friends() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientFriendsList.friends)
  return friends_;
}

// optional uint32 max_friend_count = 3;
inline bool CMsgClientFriendsList::has_max_friend_count() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientFriendsList::set_has_max_friend_count() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientFriendsList::clear_has_max_friend_count() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientFriendsList::clear_max_friend_count() {
  max_friend_count_ = 0u;
  clear_has_max_friend_count();
}
inline ::google::protobuf::uint32 CMsgClientFriendsList::max_friend_count() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsList.max_friend_count)
  return max_friend_count_;
}
inline void CMsgClientFriendsList::set_max_friend_count(::google::protobuf::uint32 value) {
  set_has_max_friend_count();
  max_friend_count_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendsList.max_friend_count)
}

// optional uint32 active_friend_count = 4;
inline bool CMsgClientFriendsList::has_active_friend_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientFriendsList::set_has_active_friend_count() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientFriendsList::clear_has_active_friend_count() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientFriendsList::clear_active_friend_count() {
  active_friend_count_ = 0u;
  clear_has_active_friend_count();
}
inline ::google::protobuf::uint32 CMsgClientFriendsList::active_friend_count() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsList.active_friend_count)
  return active_friend_count_;
}
inline void CMsgClientFriendsList::set_active_friend_count(::google::protobuf::uint32 value) {
  set_has_active_friend_count();
  active_friend_count_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendsList.active_friend_count)
}

// optional bool friends_limit_hit = 5;
inline bool CMsgClientFriendsList::has_friends_limit_hit() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientFriendsList::set_has_friends_limit_hit() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientFriendsList::clear_has_friends_limit_hit() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientFriendsList::clear_friends_limit_hit() {
  friends_limit_hit_ = false;
  clear_has_friends_limit_hit();
}
inline bool CMsgClientFriendsList::friends_limit_hit() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsList.friends_limit_hit)
  return friends_limit_hit_;
}
inline void CMsgClientFriendsList::set_friends_limit_hit(bool value) {
  set_has_friends_limit_hit();
  friends_limit_hit_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendsList.friends_limit_hit)
}

// -------------------------------------------------------------------

// CMsgClientFriendsGroupsList_FriendGroup

// optional int32 nGroupID = 1;
inline bool CMsgClientFriendsGroupsList_FriendGroup::has_ngroupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientFriendsGroupsList_FriendGroup::set_has_ngroupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientFriendsGroupsList_FriendGroup::clear_has_ngroupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientFriendsGroupsList_FriendGroup::clear_ngroupid() {
  ngroupid_ = 0;
  clear_has_ngroupid();
}
inline ::google::protobuf::int32 CMsgClientFriendsGroupsList_FriendGroup::ngroupid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsGroupsList.FriendGroup.nGroupID)
  return ngroupid_;
}
inline void CMsgClientFriendsGroupsList_FriendGroup::set_ngroupid(::google::protobuf::int32 value) {
  set_has_ngroupid();
  ngroupid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendsGroupsList.FriendGroup.nGroupID)
}

// optional string strGroupName = 2;
inline bool CMsgClientFriendsGroupsList_FriendGroup::has_strgroupname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientFriendsGroupsList_FriendGroup::set_has_strgroupname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientFriendsGroupsList_FriendGroup::clear_has_strgroupname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientFriendsGroupsList_FriendGroup::clear_strgroupname() {
  strgroupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_strgroupname();
}
inline const ::std::string& CMsgClientFriendsGroupsList_FriendGroup::strgroupname() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsGroupsList.FriendGroup.strGroupName)
  return strgroupname_.GetNoArena();
}
inline void CMsgClientFriendsGroupsList_FriendGroup::set_strgroupname(const ::std::string& value) {
  set_has_strgroupname();
  strgroupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendsGroupsList.FriendGroup.strGroupName)
}
#if LANG_CXX11
inline void CMsgClientFriendsGroupsList_FriendGroup::set_strgroupname(::std::string&& value) {
  set_has_strgroupname();
  strgroupname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientFriendsGroupsList.FriendGroup.strGroupName)
}
#endif
inline void CMsgClientFriendsGroupsList_FriendGroup::set_strgroupname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_strgroupname();
  strgroupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientFriendsGroupsList.FriendGroup.strGroupName)
}
inline void CMsgClientFriendsGroupsList_FriendGroup::set_strgroupname(const char* value, size_t size) {
  set_has_strgroupname();
  strgroupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientFriendsGroupsList.FriendGroup.strGroupName)
}
inline ::std::string* CMsgClientFriendsGroupsList_FriendGroup::mutable_strgroupname() {
  set_has_strgroupname();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientFriendsGroupsList.FriendGroup.strGroupName)
  return strgroupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientFriendsGroupsList_FriendGroup::release_strgroupname() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientFriendsGroupsList.FriendGroup.strGroupName)
  clear_has_strgroupname();
  return strgroupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientFriendsGroupsList_FriendGroup::set_allocated_strgroupname(::std::string* strgroupname) {
  if (strgroupname != NULL) {
    set_has_strgroupname();
  } else {
    clear_has_strgroupname();
  }
  strgroupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), strgroupname);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientFriendsGroupsList.FriendGroup.strGroupName)
}

// -------------------------------------------------------------------

// CMsgClientFriendsGroupsList_FriendGroupsMembership

// optional fixed64 ulSteamID = 1;
inline bool CMsgClientFriendsGroupsList_FriendGroupsMembership::has_ulsteamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientFriendsGroupsList_FriendGroupsMembership::set_has_ulsteamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientFriendsGroupsList_FriendGroupsMembership::clear_has_ulsteamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientFriendsGroupsList_FriendGroupsMembership::clear_ulsteamid() {
  ulsteamid_ = GOOGLE_ULONGLONG(0);
  clear_has_ulsteamid();
}
inline ::google::protobuf::uint64 CMsgClientFriendsGroupsList_FriendGroupsMembership::ulsteamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsGroupsList.FriendGroupsMembership.ulSteamID)
  return ulsteamid_;
}
inline void CMsgClientFriendsGroupsList_FriendGroupsMembership::set_ulsteamid(::google::protobuf::uint64 value) {
  set_has_ulsteamid();
  ulsteamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendsGroupsList.FriendGroupsMembership.ulSteamID)
}

// optional int32 nGroupID = 2;
inline bool CMsgClientFriendsGroupsList_FriendGroupsMembership::has_ngroupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientFriendsGroupsList_FriendGroupsMembership::set_has_ngroupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientFriendsGroupsList_FriendGroupsMembership::clear_has_ngroupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientFriendsGroupsList_FriendGroupsMembership::clear_ngroupid() {
  ngroupid_ = 0;
  clear_has_ngroupid();
}
inline ::google::protobuf::int32 CMsgClientFriendsGroupsList_FriendGroupsMembership::ngroupid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsGroupsList.FriendGroupsMembership.nGroupID)
  return ngroupid_;
}
inline void CMsgClientFriendsGroupsList_FriendGroupsMembership::set_ngroupid(::google::protobuf::int32 value) {
  set_has_ngroupid();
  ngroupid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendsGroupsList.FriendGroupsMembership.nGroupID)
}

// -------------------------------------------------------------------

// CMsgClientFriendsGroupsList

// optional bool bremoval = 1;
inline bool CMsgClientFriendsGroupsList::has_bremoval() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientFriendsGroupsList::set_has_bremoval() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientFriendsGroupsList::clear_has_bremoval() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientFriendsGroupsList::clear_bremoval() {
  bremoval_ = false;
  clear_has_bremoval();
}
inline bool CMsgClientFriendsGroupsList::bremoval() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsGroupsList.bremoval)
  return bremoval_;
}
inline void CMsgClientFriendsGroupsList::set_bremoval(bool value) {
  set_has_bremoval();
  bremoval_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendsGroupsList.bremoval)
}

// optional bool bincremental = 2;
inline bool CMsgClientFriendsGroupsList::has_bincremental() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientFriendsGroupsList::set_has_bincremental() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientFriendsGroupsList::clear_has_bincremental() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientFriendsGroupsList::clear_bincremental() {
  bincremental_ = false;
  clear_has_bincremental();
}
inline bool CMsgClientFriendsGroupsList::bincremental() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsGroupsList.bincremental)
  return bincremental_;
}
inline void CMsgClientFriendsGroupsList::set_bincremental(bool value) {
  set_has_bincremental();
  bincremental_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendsGroupsList.bincremental)
}

// repeated .proto.steam.CMsgClientFriendsGroupsList.FriendGroup friendGroups = 3;
inline int CMsgClientFriendsGroupsList::friendgroups_size() const {
  return friendgroups_.size();
}
inline void CMsgClientFriendsGroupsList::clear_friendgroups() {
  friendgroups_.Clear();
}
inline const ::proto::steam::CMsgClientFriendsGroupsList_FriendGroup& CMsgClientFriendsGroupsList::friendgroups(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsGroupsList.friendGroups)
  return friendgroups_.Get(index);
}
inline ::proto::steam::CMsgClientFriendsGroupsList_FriendGroup* CMsgClientFriendsGroupsList::mutable_friendgroups(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientFriendsGroupsList.friendGroups)
  return friendgroups_.Mutable(index);
}
inline ::proto::steam::CMsgClientFriendsGroupsList_FriendGroup* CMsgClientFriendsGroupsList::add_friendgroups() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientFriendsGroupsList.friendGroups)
  return friendgroups_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsGroupsList_FriendGroup >*
CMsgClientFriendsGroupsList::mutable_friendgroups() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientFriendsGroupsList.friendGroups)
  return &friendgroups_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsGroupsList_FriendGroup >&
CMsgClientFriendsGroupsList::friendgroups() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientFriendsGroupsList.friendGroups)
  return friendgroups_;
}

// repeated .proto.steam.CMsgClientFriendsGroupsList.FriendGroupsMembership memberships = 4;
inline int CMsgClientFriendsGroupsList::memberships_size() const {
  return memberships_.size();
}
inline void CMsgClientFriendsGroupsList::clear_memberships() {
  memberships_.Clear();
}
inline const ::proto::steam::CMsgClientFriendsGroupsList_FriendGroupsMembership& CMsgClientFriendsGroupsList::memberships(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendsGroupsList.memberships)
  return memberships_.Get(index);
}
inline ::proto::steam::CMsgClientFriendsGroupsList_FriendGroupsMembership* CMsgClientFriendsGroupsList::mutable_memberships(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientFriendsGroupsList.memberships)
  return memberships_.Mutable(index);
}
inline ::proto::steam::CMsgClientFriendsGroupsList_FriendGroupsMembership* CMsgClientFriendsGroupsList::add_memberships() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientFriendsGroupsList.memberships)
  return memberships_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsGroupsList_FriendGroupsMembership >*
CMsgClientFriendsGroupsList::mutable_memberships() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientFriendsGroupsList.memberships)
  return &memberships_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientFriendsGroupsList_FriendGroupsMembership >&
CMsgClientFriendsGroupsList::memberships() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientFriendsGroupsList.memberships)
  return memberships_;
}

// -------------------------------------------------------------------

// CMsgClientPlayerNicknameList_PlayerNickname

// optional fixed64 steamid = 1;
inline bool CMsgClientPlayerNicknameList_PlayerNickname::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientPlayerNicknameList_PlayerNickname::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientPlayerNicknameList_PlayerNickname::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientPlayerNicknameList_PlayerNickname::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgClientPlayerNicknameList_PlayerNickname::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPlayerNicknameList.PlayerNickname.steamid)
  return steamid_;
}
inline void CMsgClientPlayerNicknameList_PlayerNickname::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPlayerNicknameList.PlayerNickname.steamid)
}

// optional string nickname = 3;
inline bool CMsgClientPlayerNicknameList_PlayerNickname::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientPlayerNicknameList_PlayerNickname::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientPlayerNicknameList_PlayerNickname::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientPlayerNicknameList_PlayerNickname::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& CMsgClientPlayerNicknameList_PlayerNickname::nickname() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPlayerNicknameList.PlayerNickname.nickname)
  return nickname_.GetNoArena();
}
inline void CMsgClientPlayerNicknameList_PlayerNickname::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPlayerNicknameList.PlayerNickname.nickname)
}
#if LANG_CXX11
inline void CMsgClientPlayerNicknameList_PlayerNickname::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientPlayerNicknameList.PlayerNickname.nickname)
}
#endif
inline void CMsgClientPlayerNicknameList_PlayerNickname::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientPlayerNicknameList.PlayerNickname.nickname)
}
inline void CMsgClientPlayerNicknameList_PlayerNickname::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientPlayerNicknameList.PlayerNickname.nickname)
}
inline ::std::string* CMsgClientPlayerNicknameList_PlayerNickname::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientPlayerNicknameList.PlayerNickname.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientPlayerNicknameList_PlayerNickname::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientPlayerNicknameList.PlayerNickname.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientPlayerNicknameList_PlayerNickname::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientPlayerNicknameList.PlayerNickname.nickname)
}

// -------------------------------------------------------------------

// CMsgClientPlayerNicknameList

// optional bool removal = 1;
inline bool CMsgClientPlayerNicknameList::has_removal() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientPlayerNicknameList::set_has_removal() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientPlayerNicknameList::clear_has_removal() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientPlayerNicknameList::clear_removal() {
  removal_ = false;
  clear_has_removal();
}
inline bool CMsgClientPlayerNicknameList::removal() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPlayerNicknameList.removal)
  return removal_;
}
inline void CMsgClientPlayerNicknameList::set_removal(bool value) {
  set_has_removal();
  removal_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPlayerNicknameList.removal)
}

// optional bool incremental = 2;
inline bool CMsgClientPlayerNicknameList::has_incremental() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientPlayerNicknameList::set_has_incremental() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientPlayerNicknameList::clear_has_incremental() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientPlayerNicknameList::clear_incremental() {
  incremental_ = false;
  clear_has_incremental();
}
inline bool CMsgClientPlayerNicknameList::incremental() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPlayerNicknameList.incremental)
  return incremental_;
}
inline void CMsgClientPlayerNicknameList::set_incremental(bool value) {
  set_has_incremental();
  incremental_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPlayerNicknameList.incremental)
}

// repeated .proto.steam.CMsgClientPlayerNicknameList.PlayerNickname nicknames = 3;
inline int CMsgClientPlayerNicknameList::nicknames_size() const {
  return nicknames_.size();
}
inline void CMsgClientPlayerNicknameList::clear_nicknames() {
  nicknames_.Clear();
}
inline const ::proto::steam::CMsgClientPlayerNicknameList_PlayerNickname& CMsgClientPlayerNicknameList::nicknames(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPlayerNicknameList.nicknames)
  return nicknames_.Get(index);
}
inline ::proto::steam::CMsgClientPlayerNicknameList_PlayerNickname* CMsgClientPlayerNicknameList::mutable_nicknames(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientPlayerNicknameList.nicknames)
  return nicknames_.Mutable(index);
}
inline ::proto::steam::CMsgClientPlayerNicknameList_PlayerNickname* CMsgClientPlayerNicknameList::add_nicknames() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientPlayerNicknameList.nicknames)
  return nicknames_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientPlayerNicknameList_PlayerNickname >*
CMsgClientPlayerNicknameList::mutable_nicknames() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientPlayerNicknameList.nicknames)
  return &nicknames_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientPlayerNicknameList_PlayerNickname >&
CMsgClientPlayerNicknameList::nicknames() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientPlayerNicknameList.nicknames)
  return nicknames_;
}

// -------------------------------------------------------------------

// CMsgClientSetPlayerNickname

// optional fixed64 steamid = 1;
inline bool CMsgClientSetPlayerNickname::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientSetPlayerNickname::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientSetPlayerNickname::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientSetPlayerNickname::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgClientSetPlayerNickname::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientSetPlayerNickname.steamid)
  return steamid_;
}
inline void CMsgClientSetPlayerNickname::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientSetPlayerNickname.steamid)
}

// optional string nickname = 2;
inline bool CMsgClientSetPlayerNickname::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientSetPlayerNickname::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientSetPlayerNickname::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientSetPlayerNickname::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& CMsgClientSetPlayerNickname::nickname() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientSetPlayerNickname.nickname)
  return nickname_.GetNoArena();
}
inline void CMsgClientSetPlayerNickname::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientSetPlayerNickname.nickname)
}
#if LANG_CXX11
inline void CMsgClientSetPlayerNickname::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientSetPlayerNickname.nickname)
}
#endif
inline void CMsgClientSetPlayerNickname::set_nickname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientSetPlayerNickname.nickname)
}
inline void CMsgClientSetPlayerNickname::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientSetPlayerNickname.nickname)
}
inline ::std::string* CMsgClientSetPlayerNickname::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientSetPlayerNickname.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientSetPlayerNickname::release_nickname() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientSetPlayerNickname.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientSetPlayerNickname::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientSetPlayerNickname.nickname)
}

// -------------------------------------------------------------------

// CMsgClientSetPlayerNicknameResponse

// optional uint32 eresult = 1;
inline bool CMsgClientSetPlayerNicknameResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientSetPlayerNicknameResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientSetPlayerNicknameResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientSetPlayerNicknameResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientSetPlayerNicknameResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientSetPlayerNicknameResponse.eresult)
  return eresult_;
}
inline void CMsgClientSetPlayerNicknameResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientSetPlayerNicknameResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgClientRequestFriendData

// optional uint32 persona_state_requested = 1;
inline bool CMsgClientRequestFriendData::has_persona_state_requested() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRequestFriendData::set_has_persona_state_requested() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRequestFriendData::clear_has_persona_state_requested() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRequestFriendData::clear_persona_state_requested() {
  persona_state_requested_ = 0u;
  clear_has_persona_state_requested();
}
inline ::google::protobuf::uint32 CMsgClientRequestFriendData::persona_state_requested() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestFriendData.persona_state_requested)
  return persona_state_requested_;
}
inline void CMsgClientRequestFriendData::set_persona_state_requested(::google::protobuf::uint32 value) {
  set_has_persona_state_requested();
  persona_state_requested_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestFriendData.persona_state_requested)
}

// repeated fixed64 friends = 2;
inline int CMsgClientRequestFriendData::friends_size() const {
  return friends_.size();
}
inline void CMsgClientRequestFriendData::clear_friends() {
  friends_.Clear();
}
inline ::google::protobuf::uint64 CMsgClientRequestFriendData::friends(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRequestFriendData.friends)
  return friends_.Get(index);
}
inline void CMsgClientRequestFriendData::set_friends(int index, ::google::protobuf::uint64 value) {
  friends_.Set(index, value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRequestFriendData.friends)
}
inline void CMsgClientRequestFriendData::add_friends(::google::protobuf::uint64 value) {
  friends_.Add(value);
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientRequestFriendData.friends)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
CMsgClientRequestFriendData::friends() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientRequestFriendData.friends)
  return friends_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
CMsgClientRequestFriendData::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientRequestFriendData.friends)
  return &friends_;
}

// -------------------------------------------------------------------

// CMsgClientChangeStatus

// optional uint32 persona_state = 1;
inline bool CMsgClientChangeStatus::has_persona_state() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientChangeStatus::set_has_persona_state() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientChangeStatus::clear_has_persona_state() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientChangeStatus::clear_persona_state() {
  persona_state_ = 0u;
  clear_has_persona_state();
}
inline ::google::protobuf::uint32 CMsgClientChangeStatus::persona_state() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientChangeStatus.persona_state)
  return persona_state_;
}
inline void CMsgClientChangeStatus::set_persona_state(::google::protobuf::uint32 value) {
  set_has_persona_state();
  persona_state_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientChangeStatus.persona_state)
}

// optional string player_name = 2;
inline bool CMsgClientChangeStatus::has_player_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientChangeStatus::set_has_player_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientChangeStatus::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientChangeStatus::clear_player_name() {
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_player_name();
}
inline const ::std::string& CMsgClientChangeStatus::player_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientChangeStatus.player_name)
  return player_name_.GetNoArena();
}
inline void CMsgClientChangeStatus::set_player_name(const ::std::string& value) {
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientChangeStatus.player_name)
}
#if LANG_CXX11
inline void CMsgClientChangeStatus::set_player_name(::std::string&& value) {
  set_has_player_name();
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientChangeStatus.player_name)
}
#endif
inline void CMsgClientChangeStatus::set_player_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientChangeStatus.player_name)
}
inline void CMsgClientChangeStatus::set_player_name(const char* value, size_t size) {
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientChangeStatus.player_name)
}
inline ::std::string* CMsgClientChangeStatus::mutable_player_name() {
  set_has_player_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientChangeStatus.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientChangeStatus::release_player_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientChangeStatus.player_name)
  clear_has_player_name();
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientChangeStatus::set_allocated_player_name(::std::string* player_name) {
  if (player_name != NULL) {
    set_has_player_name();
  } else {
    clear_has_player_name();
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientChangeStatus.player_name)
}

// optional bool is_auto_generated_name = 3;
inline bool CMsgClientChangeStatus::has_is_auto_generated_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientChangeStatus::set_has_is_auto_generated_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientChangeStatus::clear_has_is_auto_generated_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientChangeStatus::clear_is_auto_generated_name() {
  is_auto_generated_name_ = false;
  clear_has_is_auto_generated_name();
}
inline bool CMsgClientChangeStatus::is_auto_generated_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientChangeStatus.is_auto_generated_name)
  return is_auto_generated_name_;
}
inline void CMsgClientChangeStatus::set_is_auto_generated_name(bool value) {
  set_has_is_auto_generated_name();
  is_auto_generated_name_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientChangeStatus.is_auto_generated_name)
}

// optional bool high_priority = 4;
inline bool CMsgClientChangeStatus::has_high_priority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientChangeStatus::set_has_high_priority() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientChangeStatus::clear_has_high_priority() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientChangeStatus::clear_high_priority() {
  high_priority_ = false;
  clear_has_high_priority();
}
inline bool CMsgClientChangeStatus::high_priority() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientChangeStatus.high_priority)
  return high_priority_;
}
inline void CMsgClientChangeStatus::set_high_priority(bool value) {
  set_has_high_priority();
  high_priority_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientChangeStatus.high_priority)
}

// optional bool persona_set_by_user = 5;
inline bool CMsgClientChangeStatus::has_persona_set_by_user() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientChangeStatus::set_has_persona_set_by_user() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientChangeStatus::clear_has_persona_set_by_user() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientChangeStatus::clear_persona_set_by_user() {
  persona_set_by_user_ = false;
  clear_has_persona_set_by_user();
}
inline bool CMsgClientChangeStatus::persona_set_by_user() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientChangeStatus.persona_set_by_user)
  return persona_set_by_user_;
}
inline void CMsgClientChangeStatus::set_persona_set_by_user(bool value) {
  set_has_persona_set_by_user();
  persona_set_by_user_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientChangeStatus.persona_set_by_user)
}

// optional uint32 persona_state_flags = 6 [default = 0];
inline bool CMsgClientChangeStatus::has_persona_state_flags() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientChangeStatus::set_has_persona_state_flags() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientChangeStatus::clear_has_persona_state_flags() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientChangeStatus::clear_persona_state_flags() {
  persona_state_flags_ = 0u;
  clear_has_persona_state_flags();
}
inline ::google::protobuf::uint32 CMsgClientChangeStatus::persona_state_flags() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientChangeStatus.persona_state_flags)
  return persona_state_flags_;
}
inline void CMsgClientChangeStatus::set_persona_state_flags(::google::protobuf::uint32 value) {
  set_has_persona_state_flags();
  persona_state_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientChangeStatus.persona_state_flags)
}

// -------------------------------------------------------------------

// CMsgPersonaChangeResponse

// optional uint32 result = 1;
inline bool CMsgPersonaChangeResponse::has_result() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgPersonaChangeResponse::set_has_result() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgPersonaChangeResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgPersonaChangeResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 CMsgPersonaChangeResponse::result() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPersonaChangeResponse.result)
  return result_;
}
inline void CMsgPersonaChangeResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPersonaChangeResponse.result)
}

// optional string player_name = 2;
inline bool CMsgPersonaChangeResponse::has_player_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgPersonaChangeResponse::set_has_player_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgPersonaChangeResponse::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgPersonaChangeResponse::clear_player_name() {
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_player_name();
}
inline const ::std::string& CMsgPersonaChangeResponse::player_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgPersonaChangeResponse.player_name)
  return player_name_.GetNoArena();
}
inline void CMsgPersonaChangeResponse::set_player_name(const ::std::string& value) {
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgPersonaChangeResponse.player_name)
}
#if LANG_CXX11
inline void CMsgPersonaChangeResponse::set_player_name(::std::string&& value) {
  set_has_player_name();
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgPersonaChangeResponse.player_name)
}
#endif
inline void CMsgPersonaChangeResponse::set_player_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgPersonaChangeResponse.player_name)
}
inline void CMsgPersonaChangeResponse::set_player_name(const char* value, size_t size) {
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgPersonaChangeResponse.player_name)
}
inline ::std::string* CMsgPersonaChangeResponse::mutable_player_name() {
  set_has_player_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgPersonaChangeResponse.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgPersonaChangeResponse::release_player_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgPersonaChangeResponse.player_name)
  clear_has_player_name();
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgPersonaChangeResponse::set_allocated_player_name(::std::string* player_name) {
  if (player_name != NULL) {
    set_has_player_name();
  } else {
    clear_has_player_name();
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgPersonaChangeResponse.player_name)
}

// -------------------------------------------------------------------

// CMsgClientPersonaState_Friend

// optional fixed64 friendid = 1;
inline bool CMsgClientPersonaState_Friend::has_friendid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_friendid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientPersonaState_Friend::clear_has_friendid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientPersonaState_Friend::clear_friendid() {
  friendid_ = GOOGLE_ULONGLONG(0);
  clear_has_friendid();
}
inline ::google::protobuf::uint64 CMsgClientPersonaState_Friend::friendid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.friendid)
  return friendid_;
}
inline void CMsgClientPersonaState_Friend::set_friendid(::google::protobuf::uint64 value) {
  set_has_friendid();
  friendid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.friendid)
}

// optional uint32 persona_state = 2;
inline bool CMsgClientPersonaState_Friend::has_persona_state() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_persona_state() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientPersonaState_Friend::clear_has_persona_state() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientPersonaState_Friend::clear_persona_state() {
  persona_state_ = 0u;
  clear_has_persona_state();
}
inline ::google::protobuf::uint32 CMsgClientPersonaState_Friend::persona_state() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.persona_state)
  return persona_state_;
}
inline void CMsgClientPersonaState_Friend::set_persona_state(::google::protobuf::uint32 value) {
  set_has_persona_state();
  persona_state_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.persona_state)
}

// optional uint32 game_played_app_id = 3;
inline bool CMsgClientPersonaState_Friend::has_game_played_app_id() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_game_played_app_id() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientPersonaState_Friend::clear_has_game_played_app_id() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientPersonaState_Friend::clear_game_played_app_id() {
  game_played_app_id_ = 0u;
  clear_has_game_played_app_id();
}
inline ::google::protobuf::uint32 CMsgClientPersonaState_Friend::game_played_app_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.game_played_app_id)
  return game_played_app_id_;
}
inline void CMsgClientPersonaState_Friend::set_game_played_app_id(::google::protobuf::uint32 value) {
  set_has_game_played_app_id();
  game_played_app_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.game_played_app_id)
}

// optional uint32 game_server_ip = 4;
inline bool CMsgClientPersonaState_Friend::has_game_server_ip() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_game_server_ip() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CMsgClientPersonaState_Friend::clear_has_game_server_ip() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CMsgClientPersonaState_Friend::clear_game_server_ip() {
  game_server_ip_ = 0u;
  clear_has_game_server_ip();
}
inline ::google::protobuf::uint32 CMsgClientPersonaState_Friend::game_server_ip() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.game_server_ip)
  return game_server_ip_;
}
inline void CMsgClientPersonaState_Friend::set_game_server_ip(::google::protobuf::uint32 value) {
  set_has_game_server_ip();
  game_server_ip_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.game_server_ip)
}

// optional uint32 game_server_port = 5;
inline bool CMsgClientPersonaState_Friend::has_game_server_port() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_game_server_port() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CMsgClientPersonaState_Friend::clear_has_game_server_port() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CMsgClientPersonaState_Friend::clear_game_server_port() {
  game_server_port_ = 0u;
  clear_has_game_server_port();
}
inline ::google::protobuf::uint32 CMsgClientPersonaState_Friend::game_server_port() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.game_server_port)
  return game_server_port_;
}
inline void CMsgClientPersonaState_Friend::set_game_server_port(::google::protobuf::uint32 value) {
  set_has_game_server_port();
  game_server_port_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.game_server_port)
}

// optional uint32 persona_state_flags = 6;
inline bool CMsgClientPersonaState_Friend::has_persona_state_flags() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_persona_state_flags() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CMsgClientPersonaState_Friend::clear_has_persona_state_flags() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CMsgClientPersonaState_Friend::clear_persona_state_flags() {
  persona_state_flags_ = 0u;
  clear_has_persona_state_flags();
}
inline ::google::protobuf::uint32 CMsgClientPersonaState_Friend::persona_state_flags() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.persona_state_flags)
  return persona_state_flags_;
}
inline void CMsgClientPersonaState_Friend::set_persona_state_flags(::google::protobuf::uint32 value) {
  set_has_persona_state_flags();
  persona_state_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.persona_state_flags)
}

// optional uint32 online_session_instances = 7;
inline bool CMsgClientPersonaState_Friend::has_online_session_instances() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_online_session_instances() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CMsgClientPersonaState_Friend::clear_has_online_session_instances() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CMsgClientPersonaState_Friend::clear_online_session_instances() {
  online_session_instances_ = 0u;
  clear_has_online_session_instances();
}
inline ::google::protobuf::uint32 CMsgClientPersonaState_Friend::online_session_instances() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.online_session_instances)
  return online_session_instances_;
}
inline void CMsgClientPersonaState_Friend::set_online_session_instances(::google::protobuf::uint32 value) {
  set_has_online_session_instances();
  online_session_instances_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.online_session_instances)
}

// optional uint32 published_instance_id = 8;
inline bool CMsgClientPersonaState_Friend::has_published_instance_id() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_published_instance_id() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CMsgClientPersonaState_Friend::clear_has_published_instance_id() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CMsgClientPersonaState_Friend::clear_published_instance_id() {
  published_instance_id_ = 0u;
  clear_has_published_instance_id();
}
inline ::google::protobuf::uint32 CMsgClientPersonaState_Friend::published_instance_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.published_instance_id)
  return published_instance_id_;
}
inline void CMsgClientPersonaState_Friend::set_published_instance_id(::google::protobuf::uint32 value) {
  set_has_published_instance_id();
  published_instance_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.published_instance_id)
}

// optional bool persona_set_by_user = 10;
inline bool CMsgClientPersonaState_Friend::has_persona_set_by_user() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_persona_set_by_user() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CMsgClientPersonaState_Friend::clear_has_persona_set_by_user() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CMsgClientPersonaState_Friend::clear_persona_set_by_user() {
  persona_set_by_user_ = false;
  clear_has_persona_set_by_user();
}
inline bool CMsgClientPersonaState_Friend::persona_set_by_user() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.persona_set_by_user)
  return persona_set_by_user_;
}
inline void CMsgClientPersonaState_Friend::set_persona_set_by_user(bool value) {
  set_has_persona_set_by_user();
  persona_set_by_user_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.persona_set_by_user)
}

// optional string player_name = 15;
inline bool CMsgClientPersonaState_Friend::has_player_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_player_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientPersonaState_Friend::clear_has_player_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientPersonaState_Friend::clear_player_name() {
  player_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_player_name();
}
inline const ::std::string& CMsgClientPersonaState_Friend::player_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.player_name)
  return player_name_.GetNoArena();
}
inline void CMsgClientPersonaState_Friend::set_player_name(const ::std::string& value) {
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.player_name)
}
#if LANG_CXX11
inline void CMsgClientPersonaState_Friend::set_player_name(::std::string&& value) {
  set_has_player_name();
  player_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientPersonaState.Friend.player_name)
}
#endif
inline void CMsgClientPersonaState_Friend::set_player_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientPersonaState.Friend.player_name)
}
inline void CMsgClientPersonaState_Friend::set_player_name(const char* value, size_t size) {
  set_has_player_name();
  player_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientPersonaState.Friend.player_name)
}
inline ::std::string* CMsgClientPersonaState_Friend::mutable_player_name() {
  set_has_player_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientPersonaState.Friend.player_name)
  return player_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientPersonaState_Friend::release_player_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientPersonaState.Friend.player_name)
  clear_has_player_name();
  return player_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientPersonaState_Friend::set_allocated_player_name(::std::string* player_name) {
  if (player_name != NULL) {
    set_has_player_name();
  } else {
    clear_has_player_name();
  }
  player_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), player_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientPersonaState.Friend.player_name)
}

// optional uint32 query_port = 20;
inline bool CMsgClientPersonaState_Friend::has_query_port() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_query_port() {
  _has_bits_[0] |= 0x00010000u;
}
inline void CMsgClientPersonaState_Friend::clear_has_query_port() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void CMsgClientPersonaState_Friend::clear_query_port() {
  query_port_ = 0u;
  clear_has_query_port();
}
inline ::google::protobuf::uint32 CMsgClientPersonaState_Friend::query_port() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.query_port)
  return query_port_;
}
inline void CMsgClientPersonaState_Friend::set_query_port(::google::protobuf::uint32 value) {
  set_has_query_port();
  query_port_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.query_port)
}

// optional fixed64 steamid_source = 25;
inline bool CMsgClientPersonaState_Friend::has_steamid_source() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_steamid_source() {
  _has_bits_[0] |= 0x00008000u;
}
inline void CMsgClientPersonaState_Friend::clear_has_steamid_source() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void CMsgClientPersonaState_Friend::clear_steamid_source() {
  steamid_source_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_source();
}
inline ::google::protobuf::uint64 CMsgClientPersonaState_Friend::steamid_source() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.steamid_source)
  return steamid_source_;
}
inline void CMsgClientPersonaState_Friend::set_steamid_source(::google::protobuf::uint64 value) {
  set_has_steamid_source();
  steamid_source_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.steamid_source)
}

// optional bytes avatar_hash = 31;
inline bool CMsgClientPersonaState_Friend::has_avatar_hash() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_avatar_hash() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientPersonaState_Friend::clear_has_avatar_hash() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientPersonaState_Friend::clear_avatar_hash() {
  avatar_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_avatar_hash();
}
inline const ::std::string& CMsgClientPersonaState_Friend::avatar_hash() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.avatar_hash)
  return avatar_hash_.GetNoArena();
}
inline void CMsgClientPersonaState_Friend::set_avatar_hash(const ::std::string& value) {
  set_has_avatar_hash();
  avatar_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.avatar_hash)
}
#if LANG_CXX11
inline void CMsgClientPersonaState_Friend::set_avatar_hash(::std::string&& value) {
  set_has_avatar_hash();
  avatar_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientPersonaState.Friend.avatar_hash)
}
#endif
inline void CMsgClientPersonaState_Friend::set_avatar_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_avatar_hash();
  avatar_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientPersonaState.Friend.avatar_hash)
}
inline void CMsgClientPersonaState_Friend::set_avatar_hash(const void* value, size_t size) {
  set_has_avatar_hash();
  avatar_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientPersonaState.Friend.avatar_hash)
}
inline ::std::string* CMsgClientPersonaState_Friend::mutable_avatar_hash() {
  set_has_avatar_hash();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientPersonaState.Friend.avatar_hash)
  return avatar_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientPersonaState_Friend::release_avatar_hash() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientPersonaState.Friend.avatar_hash)
  clear_has_avatar_hash();
  return avatar_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientPersonaState_Friend::set_allocated_avatar_hash(::std::string* avatar_hash) {
  if (avatar_hash != NULL) {
    set_has_avatar_hash();
  } else {
    clear_has_avatar_hash();
  }
  avatar_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), avatar_hash);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientPersonaState.Friend.avatar_hash)
}

// optional uint32 last_logoff = 45;
inline bool CMsgClientPersonaState_Friend::has_last_logoff() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_last_logoff() {
  _has_bits_[0] |= 0x00020000u;
}
inline void CMsgClientPersonaState_Friend::clear_has_last_logoff() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void CMsgClientPersonaState_Friend::clear_last_logoff() {
  last_logoff_ = 0u;
  clear_has_last_logoff();
}
inline ::google::protobuf::uint32 CMsgClientPersonaState_Friend::last_logoff() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.last_logoff)
  return last_logoff_;
}
inline void CMsgClientPersonaState_Friend::set_last_logoff(::google::protobuf::uint32 value) {
  set_has_last_logoff();
  last_logoff_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.last_logoff)
}

// optional uint32 last_logon = 46;
inline bool CMsgClientPersonaState_Friend::has_last_logon() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_last_logon() {
  _has_bits_[0] |= 0x00040000u;
}
inline void CMsgClientPersonaState_Friend::clear_has_last_logon() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void CMsgClientPersonaState_Friend::clear_last_logon() {
  last_logon_ = 0u;
  clear_has_last_logon();
}
inline ::google::protobuf::uint32 CMsgClientPersonaState_Friend::last_logon() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.last_logon)
  return last_logon_;
}
inline void CMsgClientPersonaState_Friend::set_last_logon(::google::protobuf::uint32 value) {
  set_has_last_logon();
  last_logon_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.last_logon)
}

// optional uint32 clan_rank = 50;
inline bool CMsgClientPersonaState_Friend::has_clan_rank() const {
  return (_has_bits_[0] & 0x00080000u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_clan_rank() {
  _has_bits_[0] |= 0x00080000u;
}
inline void CMsgClientPersonaState_Friend::clear_has_clan_rank() {
  _has_bits_[0] &= ~0x00080000u;
}
inline void CMsgClientPersonaState_Friend::clear_clan_rank() {
  clan_rank_ = 0u;
  clear_has_clan_rank();
}
inline ::google::protobuf::uint32 CMsgClientPersonaState_Friend::clan_rank() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.clan_rank)
  return clan_rank_;
}
inline void CMsgClientPersonaState_Friend::set_clan_rank(::google::protobuf::uint32 value) {
  set_has_clan_rank();
  clan_rank_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.clan_rank)
}

// optional string game_name = 55;
inline bool CMsgClientPersonaState_Friend::has_game_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_game_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientPersonaState_Friend::clear_has_game_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientPersonaState_Friend::clear_game_name() {
  game_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_name();
}
inline const ::std::string& CMsgClientPersonaState_Friend::game_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.game_name)
  return game_name_.GetNoArena();
}
inline void CMsgClientPersonaState_Friend::set_game_name(const ::std::string& value) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.game_name)
}
#if LANG_CXX11
inline void CMsgClientPersonaState_Friend::set_game_name(::std::string&& value) {
  set_has_game_name();
  game_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientPersonaState.Friend.game_name)
}
#endif
inline void CMsgClientPersonaState_Friend::set_game_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientPersonaState.Friend.game_name)
}
inline void CMsgClientPersonaState_Friend::set_game_name(const char* value, size_t size) {
  set_has_game_name();
  game_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientPersonaState.Friend.game_name)
}
inline ::std::string* CMsgClientPersonaState_Friend::mutable_game_name() {
  set_has_game_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientPersonaState.Friend.game_name)
  return game_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientPersonaState_Friend::release_game_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientPersonaState.Friend.game_name)
  clear_has_game_name();
  return game_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientPersonaState_Friend::set_allocated_game_name(::std::string* game_name) {
  if (game_name != NULL) {
    set_has_game_name();
  } else {
    clear_has_game_name();
  }
  game_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientPersonaState.Friend.game_name)
}

// optional fixed64 gameid = 56;
inline bool CMsgClientPersonaState_Friend::has_gameid() const {
  return (_has_bits_[0] & 0x00100000u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_gameid() {
  _has_bits_[0] |= 0x00100000u;
}
inline void CMsgClientPersonaState_Friend::clear_has_gameid() {
  _has_bits_[0] &= ~0x00100000u;
}
inline void CMsgClientPersonaState_Friend::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
  clear_has_gameid();
}
inline ::google::protobuf::uint64 CMsgClientPersonaState_Friend::gameid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.gameid)
  return gameid_;
}
inline void CMsgClientPersonaState_Friend::set_gameid(::google::protobuf::uint64 value) {
  set_has_gameid();
  gameid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.gameid)
}

// optional bytes game_data_blob = 60;
inline bool CMsgClientPersonaState_Friend::has_game_data_blob() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_game_data_blob() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientPersonaState_Friend::clear_has_game_data_blob() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientPersonaState_Friend::clear_game_data_blob() {
  game_data_blob_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_game_data_blob();
}
inline const ::std::string& CMsgClientPersonaState_Friend::game_data_blob() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.game_data_blob)
  return game_data_blob_.GetNoArena();
}
inline void CMsgClientPersonaState_Friend::set_game_data_blob(const ::std::string& value) {
  set_has_game_data_blob();
  game_data_blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.game_data_blob)
}
#if LANG_CXX11
inline void CMsgClientPersonaState_Friend::set_game_data_blob(::std::string&& value) {
  set_has_game_data_blob();
  game_data_blob_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientPersonaState.Friend.game_data_blob)
}
#endif
inline void CMsgClientPersonaState_Friend::set_game_data_blob(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_game_data_blob();
  game_data_blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientPersonaState.Friend.game_data_blob)
}
inline void CMsgClientPersonaState_Friend::set_game_data_blob(const void* value, size_t size) {
  set_has_game_data_blob();
  game_data_blob_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientPersonaState.Friend.game_data_blob)
}
inline ::std::string* CMsgClientPersonaState_Friend::mutable_game_data_blob() {
  set_has_game_data_blob();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientPersonaState.Friend.game_data_blob)
  return game_data_blob_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientPersonaState_Friend::release_game_data_blob() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientPersonaState.Friend.game_data_blob)
  clear_has_game_data_blob();
  return game_data_blob_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientPersonaState_Friend::set_allocated_game_data_blob(::std::string* game_data_blob) {
  if (game_data_blob != NULL) {
    set_has_game_data_blob();
  } else {
    clear_has_game_data_blob();
  }
  game_data_blob_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), game_data_blob);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientPersonaState.Friend.game_data_blob)
}

// optional string clan_tag = 65;
inline bool CMsgClientPersonaState_Friend::has_clan_tag() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_clan_tag() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientPersonaState_Friend::clear_has_clan_tag() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientPersonaState_Friend::clear_clan_tag() {
  clan_tag_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_clan_tag();
}
inline const ::std::string& CMsgClientPersonaState_Friend::clan_tag() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.clan_tag)
  return clan_tag_.GetNoArena();
}
inline void CMsgClientPersonaState_Friend::set_clan_tag(const ::std::string& value) {
  set_has_clan_tag();
  clan_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.clan_tag)
}
#if LANG_CXX11
inline void CMsgClientPersonaState_Friend::set_clan_tag(::std::string&& value) {
  set_has_clan_tag();
  clan_tag_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientPersonaState.Friend.clan_tag)
}
#endif
inline void CMsgClientPersonaState_Friend::set_clan_tag(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_clan_tag();
  clan_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientPersonaState.Friend.clan_tag)
}
inline void CMsgClientPersonaState_Friend::set_clan_tag(const char* value, size_t size) {
  set_has_clan_tag();
  clan_tag_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientPersonaState.Friend.clan_tag)
}
inline ::std::string* CMsgClientPersonaState_Friend::mutable_clan_tag() {
  set_has_clan_tag();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientPersonaState.Friend.clan_tag)
  return clan_tag_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientPersonaState_Friend::release_clan_tag() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientPersonaState.Friend.clan_tag)
  clear_has_clan_tag();
  return clan_tag_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientPersonaState_Friend::set_allocated_clan_tag(::std::string* clan_tag) {
  if (clan_tag != NULL) {
    set_has_clan_tag();
  } else {
    clear_has_clan_tag();
  }
  clan_tag_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), clan_tag);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientPersonaState.Friend.clan_tag)
}

// optional string facebook_name = 66;
inline bool CMsgClientPersonaState_Friend::has_facebook_name() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_facebook_name() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientPersonaState_Friend::clear_has_facebook_name() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientPersonaState_Friend::clear_facebook_name() {
  facebook_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_facebook_name();
}
inline const ::std::string& CMsgClientPersonaState_Friend::facebook_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.facebook_name)
  return facebook_name_.GetNoArena();
}
inline void CMsgClientPersonaState_Friend::set_facebook_name(const ::std::string& value) {
  set_has_facebook_name();
  facebook_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.facebook_name)
}
#if LANG_CXX11
inline void CMsgClientPersonaState_Friend::set_facebook_name(::std::string&& value) {
  set_has_facebook_name();
  facebook_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientPersonaState.Friend.facebook_name)
}
#endif
inline void CMsgClientPersonaState_Friend::set_facebook_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_facebook_name();
  facebook_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientPersonaState.Friend.facebook_name)
}
inline void CMsgClientPersonaState_Friend::set_facebook_name(const char* value, size_t size) {
  set_has_facebook_name();
  facebook_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientPersonaState.Friend.facebook_name)
}
inline ::std::string* CMsgClientPersonaState_Friend::mutable_facebook_name() {
  set_has_facebook_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientPersonaState.Friend.facebook_name)
  return facebook_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientPersonaState_Friend::release_facebook_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientPersonaState.Friend.facebook_name)
  clear_has_facebook_name();
  return facebook_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientPersonaState_Friend::set_allocated_facebook_name(::std::string* facebook_name) {
  if (facebook_name != NULL) {
    set_has_facebook_name();
  } else {
    clear_has_facebook_name();
  }
  facebook_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), facebook_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientPersonaState.Friend.facebook_name)
}

// optional uint64 facebook_id = 67;
inline bool CMsgClientPersonaState_Friend::has_facebook_id() const {
  return (_has_bits_[0] & 0x00200000u) != 0;
}
inline void CMsgClientPersonaState_Friend::set_has_facebook_id() {
  _has_bits_[0] |= 0x00200000u;
}
inline void CMsgClientPersonaState_Friend::clear_has_facebook_id() {
  _has_bits_[0] &= ~0x00200000u;
}
inline void CMsgClientPersonaState_Friend::clear_facebook_id() {
  facebook_id_ = GOOGLE_ULONGLONG(0);
  clear_has_facebook_id();
}
inline ::google::protobuf::uint64 CMsgClientPersonaState_Friend::facebook_id() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.Friend.facebook_id)
  return facebook_id_;
}
inline void CMsgClientPersonaState_Friend::set_facebook_id(::google::protobuf::uint64 value) {
  set_has_facebook_id();
  facebook_id_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.Friend.facebook_id)
}

// -------------------------------------------------------------------

// CMsgClientPersonaState

// optional uint32 status_flags = 1;
inline bool CMsgClientPersonaState::has_status_flags() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientPersonaState::set_has_status_flags() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientPersonaState::clear_has_status_flags() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientPersonaState::clear_status_flags() {
  status_flags_ = 0u;
  clear_has_status_flags();
}
inline ::google::protobuf::uint32 CMsgClientPersonaState::status_flags() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.status_flags)
  return status_flags_;
}
inline void CMsgClientPersonaState::set_status_flags(::google::protobuf::uint32 value) {
  set_has_status_flags();
  status_flags_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientPersonaState.status_flags)
}

// repeated .proto.steam.CMsgClientPersonaState.Friend friends = 2;
inline int CMsgClientPersonaState::friends_size() const {
  return friends_.size();
}
inline void CMsgClientPersonaState::clear_friends() {
  friends_.Clear();
}
inline const ::proto::steam::CMsgClientPersonaState_Friend& CMsgClientPersonaState::friends(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientPersonaState.friends)
  return friends_.Get(index);
}
inline ::proto::steam::CMsgClientPersonaState_Friend* CMsgClientPersonaState::mutable_friends(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientPersonaState.friends)
  return friends_.Mutable(index);
}
inline ::proto::steam::CMsgClientPersonaState_Friend* CMsgClientPersonaState::add_friends() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientPersonaState.friends)
  return friends_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientPersonaState_Friend >*
CMsgClientPersonaState::mutable_friends() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientPersonaState.friends)
  return &friends_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientPersonaState_Friend >&
CMsgClientPersonaState::friends() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientPersonaState.friends)
  return friends_;
}

// -------------------------------------------------------------------

// CMsgClientFriendProfileInfo

// optional fixed64 steamid_friend = 1;
inline bool CMsgClientFriendProfileInfo::has_steamid_friend() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientFriendProfileInfo::set_has_steamid_friend() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientFriendProfileInfo::clear_has_steamid_friend() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientFriendProfileInfo::clear_steamid_friend() {
  steamid_friend_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_friend();
}
inline ::google::protobuf::uint64 CMsgClientFriendProfileInfo::steamid_friend() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendProfileInfo.steamid_friend)
  return steamid_friend_;
}
inline void CMsgClientFriendProfileInfo::set_steamid_friend(::google::protobuf::uint64 value) {
  set_has_steamid_friend();
  steamid_friend_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendProfileInfo.steamid_friend)
}

// -------------------------------------------------------------------

// CMsgClientFriendProfileInfoResponse

// optional int32 eresult = 1 [default = 2];
inline bool CMsgClientFriendProfileInfoResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CMsgClientFriendProfileInfoResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_eresult() {
  eresult_ = 2;
  clear_has_eresult();
}
inline ::google::protobuf::int32 CMsgClientFriendProfileInfoResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendProfileInfoResponse.eresult)
  return eresult_;
}
inline void CMsgClientFriendProfileInfoResponse::set_eresult(::google::protobuf::int32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendProfileInfoResponse.eresult)
}

// optional fixed64 steamid_friend = 2;
inline bool CMsgClientFriendProfileInfoResponse::has_steamid_friend() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CMsgClientFriendProfileInfoResponse::set_has_steamid_friend() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_has_steamid_friend() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_steamid_friend() {
  steamid_friend_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid_friend();
}
inline ::google::protobuf::uint64 CMsgClientFriendProfileInfoResponse::steamid_friend() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendProfileInfoResponse.steamid_friend)
  return steamid_friend_;
}
inline void CMsgClientFriendProfileInfoResponse::set_steamid_friend(::google::protobuf::uint64 value) {
  set_has_steamid_friend();
  steamid_friend_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendProfileInfoResponse.steamid_friend)
}

// optional uint32 time_created = 3;
inline bool CMsgClientFriendProfileInfoResponse::has_time_created() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CMsgClientFriendProfileInfoResponse::set_has_time_created() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_has_time_created() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_time_created() {
  time_created_ = 0u;
  clear_has_time_created();
}
inline ::google::protobuf::uint32 CMsgClientFriendProfileInfoResponse::time_created() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendProfileInfoResponse.time_created)
  return time_created_;
}
inline void CMsgClientFriendProfileInfoResponse::set_time_created(::google::protobuf::uint32 value) {
  set_has_time_created();
  time_created_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendProfileInfoResponse.time_created)
}

// optional string real_name = 4;
inline bool CMsgClientFriendProfileInfoResponse::has_real_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientFriendProfileInfoResponse::set_has_real_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_has_real_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_real_name() {
  real_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_real_name();
}
inline const ::std::string& CMsgClientFriendProfileInfoResponse::real_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendProfileInfoResponse.real_name)
  return real_name_.GetNoArena();
}
inline void CMsgClientFriendProfileInfoResponse::set_real_name(const ::std::string& value) {
  set_has_real_name();
  real_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendProfileInfoResponse.real_name)
}
#if LANG_CXX11
inline void CMsgClientFriendProfileInfoResponse::set_real_name(::std::string&& value) {
  set_has_real_name();
  real_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientFriendProfileInfoResponse.real_name)
}
#endif
inline void CMsgClientFriendProfileInfoResponse::set_real_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_real_name();
  real_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientFriendProfileInfoResponse.real_name)
}
inline void CMsgClientFriendProfileInfoResponse::set_real_name(const char* value, size_t size) {
  set_has_real_name();
  real_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientFriendProfileInfoResponse.real_name)
}
inline ::std::string* CMsgClientFriendProfileInfoResponse::mutable_real_name() {
  set_has_real_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientFriendProfileInfoResponse.real_name)
  return real_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientFriendProfileInfoResponse::release_real_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientFriendProfileInfoResponse.real_name)
  clear_has_real_name();
  return real_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientFriendProfileInfoResponse::set_allocated_real_name(::std::string* real_name) {
  if (real_name != NULL) {
    set_has_real_name();
  } else {
    clear_has_real_name();
  }
  real_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), real_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientFriendProfileInfoResponse.real_name)
}

// optional string city_name = 5;
inline bool CMsgClientFriendProfileInfoResponse::has_city_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientFriendProfileInfoResponse::set_has_city_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_has_city_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_city_name() {
  city_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_city_name();
}
inline const ::std::string& CMsgClientFriendProfileInfoResponse::city_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendProfileInfoResponse.city_name)
  return city_name_.GetNoArena();
}
inline void CMsgClientFriendProfileInfoResponse::set_city_name(const ::std::string& value) {
  set_has_city_name();
  city_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendProfileInfoResponse.city_name)
}
#if LANG_CXX11
inline void CMsgClientFriendProfileInfoResponse::set_city_name(::std::string&& value) {
  set_has_city_name();
  city_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientFriendProfileInfoResponse.city_name)
}
#endif
inline void CMsgClientFriendProfileInfoResponse::set_city_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_city_name();
  city_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientFriendProfileInfoResponse.city_name)
}
inline void CMsgClientFriendProfileInfoResponse::set_city_name(const char* value, size_t size) {
  set_has_city_name();
  city_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientFriendProfileInfoResponse.city_name)
}
inline ::std::string* CMsgClientFriendProfileInfoResponse::mutable_city_name() {
  set_has_city_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientFriendProfileInfoResponse.city_name)
  return city_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientFriendProfileInfoResponse::release_city_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientFriendProfileInfoResponse.city_name)
  clear_has_city_name();
  return city_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientFriendProfileInfoResponse::set_allocated_city_name(::std::string* city_name) {
  if (city_name != NULL) {
    set_has_city_name();
  } else {
    clear_has_city_name();
  }
  city_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), city_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientFriendProfileInfoResponse.city_name)
}

// optional string state_name = 6;
inline bool CMsgClientFriendProfileInfoResponse::has_state_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CMsgClientFriendProfileInfoResponse::set_has_state_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_has_state_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_state_name() {
  state_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_state_name();
}
inline const ::std::string& CMsgClientFriendProfileInfoResponse::state_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendProfileInfoResponse.state_name)
  return state_name_.GetNoArena();
}
inline void CMsgClientFriendProfileInfoResponse::set_state_name(const ::std::string& value) {
  set_has_state_name();
  state_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendProfileInfoResponse.state_name)
}
#if LANG_CXX11
inline void CMsgClientFriendProfileInfoResponse::set_state_name(::std::string&& value) {
  set_has_state_name();
  state_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientFriendProfileInfoResponse.state_name)
}
#endif
inline void CMsgClientFriendProfileInfoResponse::set_state_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_state_name();
  state_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientFriendProfileInfoResponse.state_name)
}
inline void CMsgClientFriendProfileInfoResponse::set_state_name(const char* value, size_t size) {
  set_has_state_name();
  state_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientFriendProfileInfoResponse.state_name)
}
inline ::std::string* CMsgClientFriendProfileInfoResponse::mutable_state_name() {
  set_has_state_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientFriendProfileInfoResponse.state_name)
  return state_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientFriendProfileInfoResponse::release_state_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientFriendProfileInfoResponse.state_name)
  clear_has_state_name();
  return state_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientFriendProfileInfoResponse::set_allocated_state_name(::std::string* state_name) {
  if (state_name != NULL) {
    set_has_state_name();
  } else {
    clear_has_state_name();
  }
  state_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientFriendProfileInfoResponse.state_name)
}

// optional string country_name = 7;
inline bool CMsgClientFriendProfileInfoResponse::has_country_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CMsgClientFriendProfileInfoResponse::set_has_country_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_has_country_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_country_name() {
  country_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country_name();
}
inline const ::std::string& CMsgClientFriendProfileInfoResponse::country_name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendProfileInfoResponse.country_name)
  return country_name_.GetNoArena();
}
inline void CMsgClientFriendProfileInfoResponse::set_country_name(const ::std::string& value) {
  set_has_country_name();
  country_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendProfileInfoResponse.country_name)
}
#if LANG_CXX11
inline void CMsgClientFriendProfileInfoResponse::set_country_name(::std::string&& value) {
  set_has_country_name();
  country_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientFriendProfileInfoResponse.country_name)
}
#endif
inline void CMsgClientFriendProfileInfoResponse::set_country_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country_name();
  country_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientFriendProfileInfoResponse.country_name)
}
inline void CMsgClientFriendProfileInfoResponse::set_country_name(const char* value, size_t size) {
  set_has_country_name();
  country_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientFriendProfileInfoResponse.country_name)
}
inline ::std::string* CMsgClientFriendProfileInfoResponse::mutable_country_name() {
  set_has_country_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientFriendProfileInfoResponse.country_name)
  return country_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientFriendProfileInfoResponse::release_country_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientFriendProfileInfoResponse.country_name)
  clear_has_country_name();
  return country_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientFriendProfileInfoResponse::set_allocated_country_name(::std::string* country_name) {
  if (country_name != NULL) {
    set_has_country_name();
  } else {
    clear_has_country_name();
  }
  country_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country_name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientFriendProfileInfoResponse.country_name)
}

// optional string headline = 8;
inline bool CMsgClientFriendProfileInfoResponse::has_headline() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CMsgClientFriendProfileInfoResponse::set_has_headline() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_has_headline() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_headline() {
  headline_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_headline();
}
inline const ::std::string& CMsgClientFriendProfileInfoResponse::headline() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendProfileInfoResponse.headline)
  return headline_.GetNoArena();
}
inline void CMsgClientFriendProfileInfoResponse::set_headline(const ::std::string& value) {
  set_has_headline();
  headline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendProfileInfoResponse.headline)
}
#if LANG_CXX11
inline void CMsgClientFriendProfileInfoResponse::set_headline(::std::string&& value) {
  set_has_headline();
  headline_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientFriendProfileInfoResponse.headline)
}
#endif
inline void CMsgClientFriendProfileInfoResponse::set_headline(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_headline();
  headline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientFriendProfileInfoResponse.headline)
}
inline void CMsgClientFriendProfileInfoResponse::set_headline(const char* value, size_t size) {
  set_has_headline();
  headline_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientFriendProfileInfoResponse.headline)
}
inline ::std::string* CMsgClientFriendProfileInfoResponse::mutable_headline() {
  set_has_headline();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientFriendProfileInfoResponse.headline)
  return headline_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientFriendProfileInfoResponse::release_headline() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientFriendProfileInfoResponse.headline)
  clear_has_headline();
  return headline_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientFriendProfileInfoResponse::set_allocated_headline(::std::string* headline) {
  if (headline != NULL) {
    set_has_headline();
  } else {
    clear_has_headline();
  }
  headline_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), headline);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientFriendProfileInfoResponse.headline)
}

// optional string summary = 9;
inline bool CMsgClientFriendProfileInfoResponse::has_summary() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CMsgClientFriendProfileInfoResponse::set_has_summary() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_has_summary() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CMsgClientFriendProfileInfoResponse::clear_summary() {
  summary_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_summary();
}
inline const ::std::string& CMsgClientFriendProfileInfoResponse::summary() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientFriendProfileInfoResponse.summary)
  return summary_.GetNoArena();
}
inline void CMsgClientFriendProfileInfoResponse::set_summary(const ::std::string& value) {
  set_has_summary();
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientFriendProfileInfoResponse.summary)
}
#if LANG_CXX11
inline void CMsgClientFriendProfileInfoResponse::set_summary(::std::string&& value) {
  set_has_summary();
  summary_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientFriendProfileInfoResponse.summary)
}
#endif
inline void CMsgClientFriendProfileInfoResponse::set_summary(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_summary();
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientFriendProfileInfoResponse.summary)
}
inline void CMsgClientFriendProfileInfoResponse::set_summary(const char* value, size_t size) {
  set_has_summary();
  summary_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientFriendProfileInfoResponse.summary)
}
inline ::std::string* CMsgClientFriendProfileInfoResponse::mutable_summary() {
  set_has_summary();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientFriendProfileInfoResponse.summary)
  return summary_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientFriendProfileInfoResponse::release_summary() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientFriendProfileInfoResponse.summary)
  clear_has_summary();
  return summary_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientFriendProfileInfoResponse::set_allocated_summary(::std::string* summary) {
  if (summary != NULL) {
    set_has_summary();
  } else {
    clear_has_summary();
  }
  summary_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), summary);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientFriendProfileInfoResponse.summary)
}

// -------------------------------------------------------------------

// CMsgClientCreateFriendsGroup

// optional fixed64 steamid = 1;
inline bool CMsgClientCreateFriendsGroup::has_steamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientCreateFriendsGroup::set_has_steamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientCreateFriendsGroup::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientCreateFriendsGroup::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgClientCreateFriendsGroup::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCreateFriendsGroup.steamid)
  return steamid_;
}
inline void CMsgClientCreateFriendsGroup::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCreateFriendsGroup.steamid)
}

// optional string groupname = 2;
inline bool CMsgClientCreateFriendsGroup::has_groupname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientCreateFriendsGroup::set_has_groupname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientCreateFriendsGroup::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientCreateFriendsGroup::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupname();
}
inline const ::std::string& CMsgClientCreateFriendsGroup::groupname() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCreateFriendsGroup.groupname)
  return groupname_.GetNoArena();
}
inline void CMsgClientCreateFriendsGroup::set_groupname(const ::std::string& value) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCreateFriendsGroup.groupname)
}
#if LANG_CXX11
inline void CMsgClientCreateFriendsGroup::set_groupname(::std::string&& value) {
  set_has_groupname();
  groupname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientCreateFriendsGroup.groupname)
}
#endif
inline void CMsgClientCreateFriendsGroup::set_groupname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientCreateFriendsGroup.groupname)
}
inline void CMsgClientCreateFriendsGroup::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientCreateFriendsGroup.groupname)
}
inline ::std::string* CMsgClientCreateFriendsGroup::mutable_groupname() {
  set_has_groupname();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientCreateFriendsGroup.groupname)
  return groupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientCreateFriendsGroup::release_groupname() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientCreateFriendsGroup.groupname)
  clear_has_groupname();
  return groupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientCreateFriendsGroup::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    set_has_groupname();
  } else {
    clear_has_groupname();
  }
  groupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientCreateFriendsGroup.groupname)
}

// -------------------------------------------------------------------

// CMsgClientCreateFriendsGroupResponse

// optional uint32 eresult = 1;
inline bool CMsgClientCreateFriendsGroupResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientCreateFriendsGroupResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientCreateFriendsGroupResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientCreateFriendsGroupResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientCreateFriendsGroupResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCreateFriendsGroupResponse.eresult)
  return eresult_;
}
inline void CMsgClientCreateFriendsGroupResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCreateFriendsGroupResponse.eresult)
}

// optional int32 groupid = 2;
inline bool CMsgClientCreateFriendsGroupResponse::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientCreateFriendsGroupResponse::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientCreateFriendsGroupResponse::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientCreateFriendsGroupResponse::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 CMsgClientCreateFriendsGroupResponse::groupid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientCreateFriendsGroupResponse.groupid)
  return groupid_;
}
inline void CMsgClientCreateFriendsGroupResponse::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientCreateFriendsGroupResponse.groupid)
}

// -------------------------------------------------------------------

// CMsgClientDeleteFriendsGroup

// optional fixed64 steamid = 1;
inline bool CMsgClientDeleteFriendsGroup::has_steamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientDeleteFriendsGroup::set_has_steamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientDeleteFriendsGroup::clear_has_steamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientDeleteFriendsGroup::clear_steamid() {
  steamid_ = GOOGLE_ULONGLONG(0);
  clear_has_steamid();
}
inline ::google::protobuf::uint64 CMsgClientDeleteFriendsGroup::steamid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDeleteFriendsGroup.steamid)
  return steamid_;
}
inline void CMsgClientDeleteFriendsGroup::set_steamid(::google::protobuf::uint64 value) {
  set_has_steamid();
  steamid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDeleteFriendsGroup.steamid)
}

// optional int32 groupid = 2;
inline bool CMsgClientDeleteFriendsGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientDeleteFriendsGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientDeleteFriendsGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientDeleteFriendsGroup::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 CMsgClientDeleteFriendsGroup::groupid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDeleteFriendsGroup.groupid)
  return groupid_;
}
inline void CMsgClientDeleteFriendsGroup::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDeleteFriendsGroup.groupid)
}

// -------------------------------------------------------------------

// CMsgClientDeleteFriendsGroupResponse

// optional uint32 eresult = 1;
inline bool CMsgClientDeleteFriendsGroupResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientDeleteFriendsGroupResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientDeleteFriendsGroupResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientDeleteFriendsGroupResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientDeleteFriendsGroupResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientDeleteFriendsGroupResponse.eresult)
  return eresult_;
}
inline void CMsgClientDeleteFriendsGroupResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientDeleteFriendsGroupResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgClientRenameFriendsGroup

// optional int32 groupid = 1;
inline bool CMsgClientRenameFriendsGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientRenameFriendsGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientRenameFriendsGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientRenameFriendsGroup::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 CMsgClientRenameFriendsGroup::groupid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRenameFriendsGroup.groupid)
  return groupid_;
}
inline void CMsgClientRenameFriendsGroup::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRenameFriendsGroup.groupid)
}

// optional string groupname = 2;
inline bool CMsgClientRenameFriendsGroup::has_groupname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRenameFriendsGroup::set_has_groupname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRenameFriendsGroup::clear_has_groupname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRenameFriendsGroup::clear_groupname() {
  groupname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_groupname();
}
inline const ::std::string& CMsgClientRenameFriendsGroup::groupname() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRenameFriendsGroup.groupname)
  return groupname_.GetNoArena();
}
inline void CMsgClientRenameFriendsGroup::set_groupname(const ::std::string& value) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRenameFriendsGroup.groupname)
}
#if LANG_CXX11
inline void CMsgClientRenameFriendsGroup::set_groupname(::std::string&& value) {
  set_has_groupname();
  groupname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientRenameFriendsGroup.groupname)
}
#endif
inline void CMsgClientRenameFriendsGroup::set_groupname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientRenameFriendsGroup.groupname)
}
inline void CMsgClientRenameFriendsGroup::set_groupname(const char* value, size_t size) {
  set_has_groupname();
  groupname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientRenameFriendsGroup.groupname)
}
inline ::std::string* CMsgClientRenameFriendsGroup::mutable_groupname() {
  set_has_groupname();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientRenameFriendsGroup.groupname)
  return groupname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientRenameFriendsGroup::release_groupname() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientRenameFriendsGroup.groupname)
  clear_has_groupname();
  return groupname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientRenameFriendsGroup::set_allocated_groupname(::std::string* groupname) {
  if (groupname != NULL) {
    set_has_groupname();
  } else {
    clear_has_groupname();
  }
  groupname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), groupname);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientRenameFriendsGroup.groupname)
}

// -------------------------------------------------------------------

// CMsgClientRenameFriendsGroupResponse

// optional uint32 eresult = 1;
inline bool CMsgClientRenameFriendsGroupResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRenameFriendsGroupResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRenameFriendsGroupResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRenameFriendsGroupResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientRenameFriendsGroupResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRenameFriendsGroupResponse.eresult)
  return eresult_;
}
inline void CMsgClientRenameFriendsGroupResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRenameFriendsGroupResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgClientAddFriendToGroup

// optional int32 groupid = 1;
inline bool CMsgClientAddFriendToGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientAddFriendToGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientAddFriendToGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientAddFriendToGroup::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 CMsgClientAddFriendToGroup::groupid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAddFriendToGroup.groupid)
  return groupid_;
}
inline void CMsgClientAddFriendToGroup::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAddFriendToGroup.groupid)
}

// optional fixed64 steamiduser = 2;
inline bool CMsgClientAddFriendToGroup::has_steamiduser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientAddFriendToGroup::set_has_steamiduser() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientAddFriendToGroup::clear_has_steamiduser() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientAddFriendToGroup::clear_steamiduser() {
  steamiduser_ = GOOGLE_ULONGLONG(0);
  clear_has_steamiduser();
}
inline ::google::protobuf::uint64 CMsgClientAddFriendToGroup::steamiduser() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAddFriendToGroup.steamiduser)
  return steamiduser_;
}
inline void CMsgClientAddFriendToGroup::set_steamiduser(::google::protobuf::uint64 value) {
  set_has_steamiduser();
  steamiduser_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAddFriendToGroup.steamiduser)
}

// -------------------------------------------------------------------

// CMsgClientAddFriendToGroupResponse

// optional uint32 eresult = 1;
inline bool CMsgClientAddFriendToGroupResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientAddFriendToGroupResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientAddFriendToGroupResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientAddFriendToGroupResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientAddFriendToGroupResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientAddFriendToGroupResponse.eresult)
  return eresult_;
}
inline void CMsgClientAddFriendToGroupResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientAddFriendToGroupResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgClientRemoveFriendFromGroup

// optional int32 groupid = 1;
inline bool CMsgClientRemoveFriendFromGroup::has_groupid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientRemoveFriendFromGroup::set_has_groupid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientRemoveFriendFromGroup::clear_has_groupid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientRemoveFriendFromGroup::clear_groupid() {
  groupid_ = 0;
  clear_has_groupid();
}
inline ::google::protobuf::int32 CMsgClientRemoveFriendFromGroup::groupid() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRemoveFriendFromGroup.groupid)
  return groupid_;
}
inline void CMsgClientRemoveFriendFromGroup::set_groupid(::google::protobuf::int32 value) {
  set_has_groupid();
  groupid_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRemoveFriendFromGroup.groupid)
}

// optional fixed64 steamiduser = 2;
inline bool CMsgClientRemoveFriendFromGroup::has_steamiduser() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRemoveFriendFromGroup::set_has_steamiduser() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRemoveFriendFromGroup::clear_has_steamiduser() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRemoveFriendFromGroup::clear_steamiduser() {
  steamiduser_ = GOOGLE_ULONGLONG(0);
  clear_has_steamiduser();
}
inline ::google::protobuf::uint64 CMsgClientRemoveFriendFromGroup::steamiduser() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRemoveFriendFromGroup.steamiduser)
  return steamiduser_;
}
inline void CMsgClientRemoveFriendFromGroup::set_steamiduser(::google::protobuf::uint64 value) {
  set_has_steamiduser();
  steamiduser_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRemoveFriendFromGroup.steamiduser)
}

// -------------------------------------------------------------------

// CMsgClientRemoveFriendFromGroupResponse

// optional uint32 eresult = 1;
inline bool CMsgClientRemoveFriendFromGroupResponse::has_eresult() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientRemoveFriendFromGroupResponse::set_has_eresult() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientRemoveFriendFromGroupResponse::clear_has_eresult() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientRemoveFriendFromGroupResponse::clear_eresult() {
  eresult_ = 0u;
  clear_has_eresult();
}
inline ::google::protobuf::uint32 CMsgClientRemoveFriendFromGroupResponse::eresult() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientRemoveFriendFromGroupResponse.eresult)
  return eresult_;
}
inline void CMsgClientRemoveFriendFromGroupResponse::set_eresult(::google::protobuf::uint32 value) {
  set_has_eresult();
  eresult_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientRemoveFriendFromGroupResponse.eresult)
}

// -------------------------------------------------------------------

// CMsgClientGetEmoticonList

// -------------------------------------------------------------------

// CMsgClientEmoticonList_Emoticon

// optional string name = 1;
inline bool CMsgClientEmoticonList_Emoticon::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CMsgClientEmoticonList_Emoticon::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CMsgClientEmoticonList_Emoticon::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CMsgClientEmoticonList_Emoticon::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CMsgClientEmoticonList_Emoticon::name() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmoticonList.Emoticon.name)
  return name_.GetNoArena();
}
inline void CMsgClientEmoticonList_Emoticon::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmoticonList.Emoticon.name)
}
#if LANG_CXX11
inline void CMsgClientEmoticonList_Emoticon::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proto.steam.CMsgClientEmoticonList.Emoticon.name)
}
#endif
inline void CMsgClientEmoticonList_Emoticon::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proto.steam.CMsgClientEmoticonList.Emoticon.name)
}
inline void CMsgClientEmoticonList_Emoticon::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proto.steam.CMsgClientEmoticonList.Emoticon.name)
}
inline ::std::string* CMsgClientEmoticonList_Emoticon::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientEmoticonList.Emoticon.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CMsgClientEmoticonList_Emoticon::release_name() {
  // @@protoc_insertion_point(field_release:proto.steam.CMsgClientEmoticonList.Emoticon.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CMsgClientEmoticonList_Emoticon::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proto.steam.CMsgClientEmoticonList.Emoticon.name)
}

// optional int32 count = 2;
inline bool CMsgClientEmoticonList_Emoticon::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CMsgClientEmoticonList_Emoticon::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CMsgClientEmoticonList_Emoticon::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CMsgClientEmoticonList_Emoticon::clear_count() {
  count_ = 0;
  clear_has_count();
}
inline ::google::protobuf::int32 CMsgClientEmoticonList_Emoticon::count() const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmoticonList.Emoticon.count)
  return count_;
}
inline void CMsgClientEmoticonList_Emoticon::set_count(::google::protobuf::int32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:proto.steam.CMsgClientEmoticonList.Emoticon.count)
}

// -------------------------------------------------------------------

// CMsgClientEmoticonList

// repeated .proto.steam.CMsgClientEmoticonList.Emoticon emoticons = 1;
inline int CMsgClientEmoticonList::emoticons_size() const {
  return emoticons_.size();
}
inline void CMsgClientEmoticonList::clear_emoticons() {
  emoticons_.Clear();
}
inline const ::proto::steam::CMsgClientEmoticonList_Emoticon& CMsgClientEmoticonList::emoticons(int index) const {
  // @@protoc_insertion_point(field_get:proto.steam.CMsgClientEmoticonList.emoticons)
  return emoticons_.Get(index);
}
inline ::proto::steam::CMsgClientEmoticonList_Emoticon* CMsgClientEmoticonList::mutable_emoticons(int index) {
  // @@protoc_insertion_point(field_mutable:proto.steam.CMsgClientEmoticonList.emoticons)
  return emoticons_.Mutable(index);
}
inline ::proto::steam::CMsgClientEmoticonList_Emoticon* CMsgClientEmoticonList::add_emoticons() {
  // @@protoc_insertion_point(field_add:proto.steam.CMsgClientEmoticonList.emoticons)
  return emoticons_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientEmoticonList_Emoticon >*
CMsgClientEmoticonList::mutable_emoticons() {
  // @@protoc_insertion_point(field_mutable_list:proto.steam.CMsgClientEmoticonList.emoticons)
  return &emoticons_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proto::steam::CMsgClientEmoticonList_Emoticon >&
CMsgClientEmoticonList::emoticons() const {
  // @@protoc_insertion_point(field_list:proto.steam.CMsgClientEmoticonList.emoticons)
  return emoticons_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace steam
}  // namespace proto

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_steammessages_5fclientserver_5ffriends_2eproto__INCLUDED
